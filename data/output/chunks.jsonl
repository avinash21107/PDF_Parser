{"section_path": "1.1 Overview", "start_heading": "1.1 Overview", "content": "USB has evolved from a data interface capable of supplying limited power to a primary provider of power with a data interface. Today many devices charge or get their power from USB Ports contained in laptops, cars, aircraft or even wall sockets. USB has become a ubiquitous power socket for many small devices such as cell phones and other hand-held devices. Users need USB to fulfill their requirements not only in terms of data but also to provide power to, or charge, their devices simply, often without the need to load a driver, in order to carry out “traditional” USB functions. There are, however, still many devices which either require an additional power connection to the wall, or exceed the USB default current in order to operate. Increasingly, international regulations require better energy management due to ecological and practical concerns relating to the availability of power. Regulations limit the amount of powe[rU aSvBaBilaCb 1le.2 f]rom[ tUhSeB w Tayllp we-hCic 2h. 4h]as led to a pressing need to optimize power usage. The USB Power Delivery Specification has the potential to minimize waste as it becomes a standard for charging devices that are not satisfied by or. Wider usage of wireless solutions is an attempt to remove data cabling but the need for “tethered” charging remains. In addition, industrial design requirements drive wired connectivity to do much more over the same connector. USB Power Delivery is designed to enable the maximum functional[iUtyS BofB UCS 1B.2 b]y providing more flexible power delivery along with data over a single cable. Its aim is to operate with and build on the existing USB ecosystem; increasing power levels from existing USB standards, for example, enabling new higher power use cases such as USB powered Hard Disk Drives (HDDs), laptops and monitors. With USB Power Delivery the power direction is no longer fixed. This enables the product with the power (USB Host or Peripheral) to provide the power. For example, a display with a supply from the wall can power, or charge, a laptop. Alternatively, USB Chargers are able to supply power to laptops and other Battery powered devices through their, traditional power providing, USB Ports. USB Power Delivery enables Hubs (including Hubs embedded in other devices such as doOcpksti oorn amlloynitors) to become the means to optimize power management across multiple peripherals by allowing each device to take only the power it requires, and to get more power when required for a given application. the Hubs can communicate with the PC to enable even more intelligent and flexible management of power either automatically or with some level of user intervention. USB Power Delivery allows low power cases such as headsets to Negotiate for only the power they require. This provides a simple solution that enables USB devices to operate at their optimal power levels. The Power Delivery Specification, in addition to providing mechanisms to Negotiate power also can be used as a side-band channel for standard and vendor defined messaging. The specification enables discovery of cable Capabilities such as supported speeds and current levels. Power Delivery enables alternative modes of operation ® by providing the mechanisms to discover, enter and exit Modes such as EPR Mode, USB4 Mode or Alternate M1o.1des. Overview [USB 2.0] [TUhSisB s 3p.e2c]if[icUaStBio4n] d[eUfSinBe Ts yhpoew-C U 2S.B4 ]D ®evi[cUeSsB cBaCn 1N.e2g]otiate for more current and/or higher or lower voltages over the USB cable (using the USB Type-C CC wire as the communications channel) than are defined in the, BUS,, or specifications. It allows Devices with greater power requirements than can be met with today's specification to get the power they require to operate from V and Negotiate with external power sources (e.g., Chargers). In addition, it allows a Source and Sink to swap Power Roles such that a USB Device could supply power to the USB Host. For example, a display could supply power to a laptop to operate or charge its Battery. This specification also CONN adds a mechanism to swap the Data Roles such that the upstream facing Port becomes the downstream facing Port and vice versa. It also enables a swap of the end supplying V to a powered cable. The- USB Power Delivery Specification is guided by the following principles: Works seamlessly with legacy USB Devices.", "tables": [], "figures": [], "page_range": [34, 34]}
{"section_path": "1.2 Purpose", "start_heading": "1.2 Purpose", "content": "- - Compatible with existing spec-compliant USB cables. - Minimizes potential damage from non-compliant cables (e.g., ‘Y’ cables etc.). Optimized for low-cost implementations. This specification defines mechanisms to discover, enter and exit Alternate Modes defined either by a standard or by a particular vendor. These Alternate Modes can be supported either by the Port Partner or by a cable connecting the two Port Partners. The specification defines mechanisms to discover the Capabilities of cables which can communicate using Power Delivery. To facilitate optimum charging, the specification defines two mechanisms a USB Charger can Advertise for the device to use: 1) A list of Fixed Supply voltages each with a maximum current. The device selects a voltage and current from the list. This is the traditional model used by devices that use internal electronics to manage the charging of their Battery including modifying the voltage and current actually supplied to the Battery. The side-effect of this model is that the charging circuitry generates heat that can be problematic for small form factor devices. 2) A list of programmable voltage ranges, in SPR PPS Mode, each with a maximum current. The device requests a voltage (in 20mV increments) that is within the Advertised range and a maximum current. The USB PPS Charger delivers the requested voltage until the maximum current is reached at which time the USB PPS Charger reduces its output voltage so as not to supply more than the requested maximum current. During the high current portion of the charge cycle, the USB PPS Charger can be directly connected (through an appropriate safety device) to the Battery. This model is used by devices that want to minimize the thermal impact of their internal charging circuitry. 3) A list of adjustable voltage ranges, in SPR AVS Mode or EPR AVS Mode, each with a maximum current. The device requests a voltage (in 100mV increments) that is within the Advertised range and a maxi The USB Power Delivery specification defines a power delivery system covering all elements of a USB system including USB Hosts, USB Devices, Hubs, Chargers and cable assemblies. This specification describes the architecture, protocols, power supply behavior, connectors and cabling necessary for managing power delivery over USB at up to 100W in SPR Mode and 240W in EPR Mode. This specification is intended to be fully compatible with and extend the existing USB infrastructure. It is intended that this specification will allow system OEMs, power supply and Peripheral developers adequate flexibility for product versatility and market differentiation without losing backwards compatibility. USB Power Delivery is designed to operate independently of the existing USB bus defined mechanisms used to Neg- otiat[eU pSBow 2e.0r ]w[hUiSchB a3r.e2:] - [USBBC 1,. 2] in band requests for high power interfaces. - [USB Type-C m2.e4c]hanisms for supplying higher power (not mandated by this specification). mechanisms for supplying higher power. [USB 2.0] [USB 3.2] [USB Type-C 2.4] [USBBC 1.2] Initial operating conditions remain the USB Default Operation as defined in,, or -. vSafe5V BUS - The DFP sources over V BUS. The UFP consumes power from V.", "tables": [], "figures": [], "page_range": [35, 35]}
{"section_path": "1.2.1 Scope", "start_heading": "1.2.1 Scope", "content": "[USB 2.0] [USB 3.2] [USB Type-C 2.4] [USBBC 1.2] This specification is intended as an extens[iUoSnB t o2.t0h]e [eUxSisBti 3ng.2 ] [USB Ty, pe-C 2.4], [USBBC 1.2] and specifications. It addresses only the elements required to implement USB Power Delivery. It is targeted at power supply vendors, manufacturers of,, and platforms, dNeovrimceast aivned cable assemblies. Informative information is provided to allow interoperability of components designed to this specification. This specification contains the following sTeactbiolens1:.1 Section Overview Section Description Section 1, \"Introduction\" Introduction, conventions used in the document, list of terms and abbreviations, PD Section 2, \"Overview\" references, and details of parameter usage. Overview of the document including a description of the operation of and the Section 3, \"USB Type-A and USB Type- PD architecture. B Cable Assemblies and Connectors\" Deprecated [USBPD 2.0] PD Mechanical and electrical characteristics of the cables and connectors used by. Section 4, \"Electrical Requirements\" Dead Battery Section.See for legacy connector specification. Section 5, \"Physical Layer\" PDPHY Layer Electrical requirements for operation and cable detection. Protocol Layer Message Section 6, \"Protocol Layer\" Details of the requirements requirements including the s, timers, counters, and state Section 7, \"Power Supply\" Provider Consumer operation. Device Policy Manager Section 8, \"Device Policy\" Power supply requirements for both s and s. Policy EngineAtomic Message Sequence AMS requirements. Section 9, \"States and Status PDUSB Device ( ) diagV raB mUS s and state diagrams Reporting\" System Policy Manager requirements including mapping of to USB states. Section 10, \"Power Rules\" PDP Rating PD requirements including descriptors, events, and requests. Section A, \"CRC calculation\" CRC definitions for. Section B, \"Message Sequence Example calculatiDonevsi.ce Policy Manager Deprecated Examples (Deprecated)\" Section C, \"VDM Command Examples\" Scenarios illuSsttrruacttiunrge d VDM D oepperreactaiotend. Section D, \"BMC Receiver Design EBxMaCmples of usage.Section. Examples\" Section E, \"FRS System Level Example\" FRS Receiver Design Examples. System Level Example.", "tables": [], "figures": [], "page_range": [36, 36]}
{"section_path": "1.3 Section Overview", "start_heading": "1.3 Section Overview", "content": "[USB 2.0] [USB 3.2] [USB Type-C 2.4] [USBBC 1.2] This specification is intended as an extens[iUoSnB t o2.t0h]e [eUxSisBti 3ng.2 ] [USB Ty, pe-C 2.4], [USBBC 1.2] and specifications. It addresses only the elements required to implement USB Power Delivery. It is targeted at power supply vendors, manufacturers of,, and platforms, dNeovrimceast aivned cable assemblies. Informative information is provided to allow interoperability of components designed to this specification. This specification contains the following sTeactbiolens1:.1 Section Overview Section Description Section 1, \"Introduction\" Introduction, conventions used in the document, list of terms and abbreviations, PD Section 2, \"Overview\" references, and details of parameter usage. Overview of the document including a description of the operation of and the Section 3, \"USB Type-A and USB Type- PD architecture. B Cable Assemblies and Connectors\" Deprecated [USBPD 2.0] PD Mechanical and electrical characteristics of the cables and connectors used by. Section 4, \"Electrical Requirements\" Dead Battery Section.See for legacy connector specification. Section 5, \"Physical Layer\" PDPHY Layer Electrical requirements for operation and cable detection. Protocol Layer Message Section 6, \"Protocol Layer\" Details of the requirements requirements including the s, timers, counters, and state Section 7, \"Power Supply\" Provider Consumer operation. Device Policy Manager Section 8, \"Device Policy\" Power supply requirements for both s and s. Policy EngineAtomic Message Sequence AMS requirements. Section 9, \"States and Status PDUSB Device ( ) diagV raB mUS s and state diagrams Reporting\" System Policy Manager requirements including mapping of to USB states. Section 10, \"Power Rules\" PDP Rating PD requirements including descriptors, events, and requests. Section A, \"CRC calculation\" CRC definitions for. Section B, \"Message Sequence Example calculatiDonevsi.ce Policy Manager Deprecated Examples (Deprecated)\" Section C, \"VDM Command Examples\" Scenarios illuSsttrruacttiunrge d VDM D oepperreactaiotend. Section D, \"BMC Receiver Design EBxMaCmples of usage.Section. Examples\" Section E, \"FRS System Level Example\" FRS Receiver Design Examples. System Level Example.", "tables": [], "figures": [], "page_range": [36, 36]}
{"section_path": "1.4 Conventions", "start_heading": "1.4 Conventions", "content": "Shall If there is a conflict between text, figures, and tables, the precedence be tables, figures, and then text. Shall In there is a conflict between a generic statement and a more specific statement, the more specific statement 1ap.p4ly..2 Keywords The following keywords differentiate betweenT tahbel ele1v.e2ls Koef yrewqourirdesments and options. Keyword Definition Conditional Normative Conditional Normative is a keyword used to indicate a feature that is mandatory when another related feature has been implemented. Designers are mandated to implement all such requirements, when the dependent features have been Deprecated Deprecated implemented, to ensure interoperability with other compliant devices. is a keyword used to indicate a feature, supported in previous Discard Discarded releases of the specification, which is no longer supported. Discard Discards Discarded See. Packet Shall PHY Layer Discarded Proto, col Layer and areG oeoqduCivRaCleMnte ksseaygweoSrhdasl lindicating that a P wachkeent received be thrown away by the and not passed to the for processing. No be sent in response Discards Discarded to the. Ignore Ignored See. Ignore Ignores Ignored Message See. Message Shall Ignored, Igno arnedd Message aSrhea elqluivalent keywords indicatGinogo dCRCMess soarg e fields wMhiecshs,a wgehen receiveMd,e ssage result in Ingon sopreecdial actiSohna blly the receiver. An only result in returninIgg na ored to acknowledge receipt. A with an field be Ignores Ignored processed normally except for any actions relating to the field. Informative Informative See. is a keyword indicating text with no specific requirements, Invalid Packet Packet provided only to improve understanding. Invalid is a keyword wEhxepnli cuist eCdo innt rraeclattion to a indicates that the ’s Invalid uEsxapgliec iot rC foinetldras cftall outside of the defined specification usagSeo. uWrcheen Inv iasl id used in relation to an K-code it inKdi-ccaotdees that a previously established Signalin wghich can no longer be maintained by the. When is used in relation to individual s or sequences indicates that the May May received falls outside of the defined specification. May Not May May Not is a keyword that indicates a choice with no implied preference. is a keyword that is the inverse of. Indicates a choice to not N/A N/A implement a given feature with no implied preference. Shall Not is a keyword that indicates that a field or value is not applicable and has no Normative Shall defined value and be checked or used by the recipient. Optional Optionally Optional Normative See. Optional Optional, and Shall are equivalent keywords that describe features not mandated by this specification. However, if an feature is implemented, the feature be implemented as defined by this Optional Normative Optional specification. Optionally Optional See. See.", "tables": [], "figures": [], "page_range": [37, 37]}
{"section_path": "1.4.1 Precedence", "start_heading": "1.4.1 Precedence", "content": "Shall If there is a conflict between text, figures, and tables, the precedence be tables, figures, and then text. Shall In there is a conflict between a generic statement and a more specific statement, the more specific statement 1ap.p4ly..2 Keywords The following keywords differentiate betweenT tahbel ele1v.e2ls Koef yrewqourirdesments and options. Keyword Definition Conditional Normative Conditional Normative is a keyword used to indicate a feature that is mandatory when another related feature has been implemented. Designers are mandated to implement all such requirements, when the dependent features have been Deprecated Deprecated implemented, to ensure interoperability with other compliant devices. is a keyword used to indicate a feature, supported in previous Discard Discarded releases of the specification, which is no longer supported. Discard Discards Discarded See. Packet Shall PHY Layer Discarded Proto, col Layer and areG oeoqduCivRaCleMnte ksseaygweoSrhdasl lindicating that a P wachkeent received be thrown away by the and not passed to the for processing. No be sent in response Discards Discarded to the. Ignore Ignored See. Ignore Ignores Ignored Message See. Message Shall Ignored, Igno arnedd Message aSrhea elqluivalent keywords indicatGinogo dCRCMess soarg e fields wMhiecshs,a wgehen receiveMd,e ssage result in Ingon sopreecdial actiSohna blly the receiver. An only result in returninIgg na ored to acknowledge receipt. A with an field be Ignores Ignored processed normally except for any actions relating to the field. Informative Informative See. is a keyword indicating text with no specific requirements, Invalid Packet Packet provided only to improve understanding. Invalid is a keyword wEhxepnli cuist eCdo innt rraeclattion to a indicates that the ’s Invalid uEsxapgliec iot rC foinetldras cftall outside of the defined specification usagSeo. uWrcheen Inv iasl id used in relation to an K-code it inKdi-ccaotdees that a previously established Signalin wghich can no longer be maintained by the. When is used in relation to individual s or sequences indicates that the May May received falls outside of the defined specification. May Not May May Not is a keyword that indicates a choice with no implied preference. is a keyword that is the inverse of. Indicates a choice to not N/A N/A implement a given feature with no implied preference. Shall Not is a keyword that indicates that a field or value is not applicable and has no Normative Shall defined value and be checked or used by the recipient. Optional Optionally Optional Normative See. Optional Optional, and Shall are equivalent keywords that describe features not mandated by this specification. However, if an feature is implemented, the feature be implemented as defined by this Optional Normative Optional specification. Optionally Optional See. See.", "tables": [], "figures": [], "page_range": [37, 37]}
{"section_path": "1.4.2 Keywords", "start_heading": "1.4.2 Keywords", "content": "Shall If there is a conflict between text, figures, and tables, the precedence be tables, figures, and then text. Shall In there is a conflict between a generic statement and a more specific statement, the more specific statement 1ap.p4ly..2 Keywords The following keywords differentiate betweenT tahbel ele1v.e2ls Koef yrewqourirdesments and options. Keyword Definition Conditional Normative Conditional Normative is a keyword used to indicate a feature that is mandatory when another related feature has been implemented. Designers are mandated to implement all such requirements, when the dependent features have been Deprecated Deprecated implemented, to ensure interoperability with other compliant devices. is a keyword used to indicate a feature, supported in previous Discard Discarded releases of the specification, which is no longer supported. Discard Discards Discarded See. Packet Shall PHY Layer Discarded Proto, col Layer and areG oeoqduCivRaCleMnte ksseaygweoSrhdasl lindicating that a P wachkeent received be thrown away by the and not passed to the for processing. No be sent in response Discards Discarded to the. Ignore Ignored See. Ignore Ignores Ignored Message See. Message Shall Ignored, Igno arnedd Message aSrhea elqluivalent keywords indicatGinogo dCRCMess soarg e fields wMhiecshs,a wgehen receiveMd,e ssage result in Ingon sopreecdial actiSohna blly the receiver. An only result in returninIgg na ored to acknowledge receipt. A with an field be Ignores Ignored processed normally except for any actions relating to the field. Informative Informative See. is a keyword indicating text with no specific requirements, Invalid Packet Packet provided only to improve understanding. Invalid is a keyword wEhxepnli cuist eCdo innt rraeclattion to a indicates that the ’s Invalid uEsxapgliec iot rC foinetldras cftall outside of the defined specification usagSeo. uWrcheen Inv iasl id used in relation to an K-code it inKdi-ccaotdees that a previously established Signalin wghich can no longer be maintained by the. When is used in relation to individual s or sequences indicates that the May May received falls outside of the defined specification. May Not May May Not is a keyword that indicates a choice with no implied preference. is a keyword that is the inverse of. Indicates a choice to not N/A N/A implement a given feature with no implied preference. Shall Not is a keyword that indicates that a field or value is not applicable and has no Normative Shall defined value and be checked or used by the recipient. Optional Optionally Optional Normative See. Optional Optional, and Shall are equivalent keywords that describe features not mandated by this specification. However, if an feature is implemented, the feature be implemented as defined by this Optional Normative Optional specification. Optionally Optional See. See.", "tables": [], "figures": [], "page_range": [37, 37]}
{"section_path": "1.4.3 Numbering", "start_heading": "1.4.3 Numbering", "content": "Table1.2 Keywords (Continued) Keyword Definition Reserved May is a keyword indicating bits, bytes, words, fieSldhsa, laln Ndo ctode values that Reserved are set-aside for future standardizationR.e Tsherevire udse and interpretation Sh ablel specified by future extensionsS thoa tlhlis sIpgencoifriceadtion and R ebsee urvtielidzed or adaptedSh bayl lv Nenodtor implementation. A Shall bit, Ibgynteo,r wedord, or field be set to zero by the sender and be by the receiver. field Shall Normative values be sent by the sender and be by the receiver. Shall and are equivalent keywords indicating a mandatory requirement. Designers are mandated to implement all such requirements to Shall Not Shall Shall Not ensure interoperability with other compliant devices. is a keyword that is the inverse of indicating non-compliant Should Should operation. is a keyword indicating flexibility of choice with a preferred alternative; Should Not Should Should Not equivalent to the phrase “it is recommended that…”. is a keyword is the inverse of ; equivalent to the phrase “it is Static Static recommended that implementations do not…”. Valid Invalid is a keyword indicating that a field that never changes. Valid Signaling Explicit Contract is a keyword thaSto iusr tchee inverse of indicating either a Packet or that fall within the defined specification or an that can be maintained by the. Numbers that are immediately followed by a lowercase “b” (e.g., 01b) are binary values. Numbers that are immediately followed by an uppercase “B” are byte values. Numbers that are immediately followed by a lowercase “h” (e.g., 3Ah) or are preceded by “0x” (e.g., 0xFF00) are hexadecimal values. Numbers not immediately followed by either a “b”, “B”, or “h” are decimal values.", "tables": ["Table 1.2"], "figures": [], "page_range": [38, 38]}
{"section_path": "1.5 Related Documents", "start_heading": "1.5 Related Documents", "content": "Table1.3, \"Document References\" Document references listed in are inclusive of all approved and published ECNs and Errata. Table1.3 Document References Bookmark Reference Title [DPTC2.1] USB Type-C www.vesa.org TM [IEC 60950-1] DisplayPort Alt Mode on Standard. www.iec.ch IEC 60950-1:2005 Information technology equipment – Safety – Part 1: General [IEC 60958-1] www.iec.ch requirements: Amendment 1:2009, Amendment 2:2013.. [IEC 62368-1] IEC 60958-1:2021 Digital Audio Interface Part:1 General.. www.iec.ch IEC 62368-1:2018 Audio/Video, information, and communication technology equipment – Part 1: Safety requirements.. [IEC 62368-3] IEC 62368w-3w:2w0.i1e7c.cAhudio/video, information, and communication technology equipment - Part 3: Safety aspects for DC power transfer through communication cables [IEC 63002] and ports. www.iec.ch IEC 63002:2021 Interoperability specifications and communication method for external [ISO 3166] power supplies used with computing and consumer electronics devices. http://www.iso.org/iso/home/standards/country_codes.htm ISO 3166 international Standard for country codes and codes for their subdivisions. [TBT3]. USB Type-C TM https:// [UCSI] see [USB4] Chapter 13 for Thunderbolt 3 device operation. www.usb.org/documents Connector System Software Interface (UCSI) Specification [USB 2.0] https://www.usb.org/documents. [USB 3.2] https://www.usb.org/documents Universal Serial Bus 2.0 Specification,. https://www.usb.org/ [USB Type-C 2.4] Universal Serial Bus 3.2 Specification. documents Universal Serial Bus Type-C Cable and Connector Specification, [USB4] https://www.usb.org/documents. ® [USBBC 1.2] Universal Serial Bus 4 Specification (USB4 ),. https://www.usb.org/documents Universal Serial Bus Battery Charging Specification plus Errata (referred to in this [USBPD 2.0] https://www.usb.org/documents document as the Battery Charging specification).. [USBPDCompliance] https://www.usb.org/documents https:// [USBPDFirmwareUpdate 1.0] USB Power Delivery Compliance Test Specification,. www.usb.org/documents Universal Serial Bus Power Delivery Firmware Update Specification, https://www.usb.org/ [USBTypeCAuthentication 1.0]. documents Universal Serial Bus Type-C Authentication Specification, [USBTypeCBridge 1.1] https://www.usb.org/documents. Universal Serial Bus Type-C Bridge Specification,.", "tables": ["Table 1.3"], "figures": [], "page_range": [39, 39]}
{"section_path": "1.6 Terms and Abbreviations", "start_heading": "1.6 Terms and Abbreviations", "content": "[USB 2.0] [USB 3.2] [USB Type-C 2.4] [USBBC 1.2] This section defines terms used throughout this document. For additional terms that pertain to the Universal Serial Bus, see Chapter 2, “Terms and AbbreTvaiabtlieon1s.,4” i Tn erms and, Abbreviat, ions and. Term Description (A)PDO PDO APDO AC Supply Refers to both the and collectively. AC Supplied Active Cable Refers to the mUaSinB ATCyp peo-Cwer source typically provided to the wall AKA “mains”. Discover IdentityCommand A cable with a plug on each end that incorpCoormamteas nddata bus signal conditioning circu[UitSsB. T Thyep cea-bCl e2.s4u]pports the Structured VDM to expose its characteristics in addition to other Structured VDM s (Electronically Marked Cable Active Cable VDO see ). Active Mode Mode Mode Entry Mode Exit VDO defining the Capabilities of an Active Cable. Adjustable Voltage Supply A which has been through the process but not the process. Capabilities Adjustable Voltage Supply AVS APDO A powSeecrt isounp 6p.l4y. 1w.2h.4o,s \"eA ouugtmpuent tveodl tPaogwe ecra nD abtea a Odbjujesctet d(A tPoD aOn) o\"perating voltage within its Advertised range. These are exposed by the ( ) Note: SPR PPS SPR AVS EPR AVS (see ). Advertise Source Source_Capabilities EPR_Source_CapabilitiesMessage Unlike the, the and do not support current limit. APDO PDO An offer made by a in the / (e.g., Alternate Mode SVID an or ). Alternate Mode OpeAraltteironna dtee fMinoedde by a VendMoor doer ESntatrnydard’Ms oordgea Enxizitation, which is associated[ UwSitBh T ay pe-C. 2T.h4e] definition of s is outside the scope of USB-IF specifications. Entry to and exit from Alternate Mode Adapter PDUSB Device Alternate Mode [USB Type-C 2.4] the uses the and processes. As defined in. Note: AMA PDUSB Device UFP SOP A which supports s as defined in. Packet Since an is a, it has a single that is only addressable by Alternate Mode Controller DFP AMA [USB Type-C 2.4] DFP AMC s. PDUSB Host A that supports connection to s as defined in. A that is an AMA Alternate Mode Adapter can also be a. AMC Alternate Mode Controller See. AMS Atomic Message Sequence See. APDO Augmented Power Data Object See. Assured Capacity Charger [USB Type-C 2.4] Charger Guaranteed Capability See. Port As defined in. This maps to a with one or more Assured Capacity Group [USB Type-C 2.4] Guaranteed Capability Port s. Atomic Message Sequence Message Section 8.3.2, \"Atomic Message Sequence Diagrams\" As defined in. This maps to a group of s. PE_SRC_Ready PE_SNK_Ready APE fi_xCeBdL s_Reqeuaednyce ofA MS Nosn a-sin dteefrirnuepdt iibnl e typically starting and ending in one of the following states:, or Attach Port Pair. An is. Attached Port Mechanical joining of the by a cable. Attachment Attach USB Power Delivery s which are mechanically joined with USB cable. Augmented Power Data Data Object Source Port Sink Port Capabilities See. Object Source_Capabilities EPR_Source_Capabilities Sink_Capabilities EPR_Sink_Capabilities Message used to exposSeP aR PPSData Ob'sje ocrt SPR AVS'Ds aptoaw Oebrj ect EPR AaVs SpDaratt ao fO ab ject / or / respectively. An, and are AVS Adjustable Voltage Supply defined. AVS Mode AVS AVS Mode See. Battery Port Source Sink A power supply, currently operating as an, is said to be operating in. A power storage device residing behind a that can either be a or of power. Table1.4 Terms and Abbreviations (Continued) Term Description Battery Slot Hot Swappable Battery Battery Slot Hot Swappable Battery Battery Slot A physical location where a can be installed. A might or Battery Supply Battery VBUS might not have a present in a at any given time. Battery SupplyPDO Section 6.4.1.2.3, \"Battery Supply Power Data Object\" A power supply that directly applies the output of a to. This is exposed by the BDO BIST Data Object (see ). BFSK Binary Frequency Shift Keying See. Bi-phase Mark Coding See. [IEC 60958-1] Modification of Manchester coding where each zero has one transition and a one has two Binary Frequency Shift Signaling Scheme Deprecated BFSK transitions (see ). Keying VBUS [USBPD 2.0] A now in this specification. used a pair of discrete frequencies to transmit binary (0s and 1s) information over. See for further BIST PHY Layer details. BIST Data Object Data Object BISTMessage Built-In Self-Test - Power Delivery testing mechanism for the. BIST Mode BIST BISTMessage used by s. BIST Carrier Mode BIST Mode PHY Layer BMC A receiver or transmitter test mode enabled by a. A in which the sends out a encoded continuous string of BIST Test Data Mode BIST Mode PHY Layer GoodCRCMessage alternating \"1\"s and \"0\"s. Message GoodCRCMessage MA essage in which the sends out a and then enters a test mode where it sends no further s, except s, in response to received BIST Shared Capacity Test BIST Mode Shared Capacity Group Port Source s. Mode Capabilities Port A applicable only to a of s where the maximum are always offered on every, regardless of the availability of shared power i.e., BMC Bi-phase Mark Coding all shared power management is disabled. Cable Capabilities Capabilities Cable Plug See. Cable Discovered Port Message GoodCRCMessage offered by a. Cable Plug VPD Port UCaSbBl eP oPwluegr Delivery s thaPtD h Caavep aebxlcehanged a Revisio annd a response with a or a using the USB Power Delivery protocol so that both the and the Cable Discovery Cable Discovered know that each is and which they each support. Cable Plug PD Capable Multi-Drop SOP’ Packet See. SOP’’ Packet Cable Plug USB Type-C Term used to describe a element in a system addressed by s/ s. Logically the is associated with a plug at one end of the Cable Reset Cable ResetSignaling DFP Cable Plug cable. In a practical implementation, the electronics might reside anywhere in the cable. PD This is initiated by Port Partner from the. It Vr Ce Ost No Nres theA ttachments to their default, power up condition and resets the communications engine in the cable to its default Cable VDO VDO Cable Plug Cable Capabilities state. It does not reset the s but does restore to its state. Capabilities returned by the containing. Battery [USB4] Features supported by a product. These can include, for example, power levels supplied/ Capabilities Mismatch Sink Source Advertise Capabilities Sink needed, cable type, support or support. CC Configuration Channel Indication from the that the ’s d don’t match the ’s needs. Cert Stat VDO Cert Stat VDO See. The contains the XID assigned by USB-IF to the product before certification in Charge Through VCONN Powered USB Device VPD CC binary format. Port A mechanism for a ( ) to pass power and communication from Charge Through Port USB Type-C USB Device Source one to the other without any interference or re-regulation. USB Device Attached The PortUSB r eHcoespttacle on a USB Dev ticheat is designed to allow a to be connected through the to charge a system to which it is. Most common use is to allow Charger Provider Consumer Consumer a single to support a while being charged. Battery whose primary purpose is to supply power to a or s in order to Chunk MaxExtendedMsgChunkLen Data Block Data Block charge their. Message Chunk A (26 byte) or less portion of a. s can be sent either as a single or as a series of s. Table1.4 Terms and Abbreviations (Continued) Term Description Chunked Chunking Chunked Extended Message Extended Message Chunk See. Chunking Data Block MaxExtendedMsgLegacyLen which has been broken up into s. Chunk The process of breaking up a larger than (26-bytes) Chunking Layer Protocol Layer Chunking into two or more s. CL Current Limit Part of the responsible for. Cold Socket Port vSafe5V VBUS Sink Attached See. Collision Avoidance Source Sink Cable Plug CC A that does not apply on until a is. Command Structured Vendor Defined Message Section Mechanisms to prevent simultaneous communication by the, and on. 6.4.4.2, \"Structured VDM\" Request and response pair defined as part of a (see Configuration Channel BMCPHY LayerSignaling Scheme [USB Type-C 2.4] ). Connect Connected Single wire used by the (see ). Connected Message GoodCRCMessage See. Port Partner PD Capable USB Power Delivery ports that have exchanged a and a response Constant Voltage SPR PPSSource SPR PPSSource using the USB Power Delivery protocol so that both s know that each is. Current Limit A constant voltage feature of an. The output voltage remains Consumer PDPort Device UFP constant as the load changes up to its. VBUS USB Type-CPort R CC The capability of a (typically a 's ) to sink power from the power conductor Consumer/Provider Consumer Provider Dual (e.g., ). This corresponds to a with d asserted on its wire. Role Power Port R CC A with the additional capability to function as a. This corresponds to a Continuous BIST Mode BIST Mode Port Cable Plug with d asserted on its wire. Contract Port Pair Contract The where the or being tested sends a continuous stream of test data. Negotiated Port Pair An agreement oSnta bteoth power level and direction is reached between a. A Ecoxuplldic ibte C eoxnptrliaccittly Implicit Co bnettrwaceten the Co onrt rcaocutld be an implicit power level defined bNye gthoeti actuirornenRte -nego. tWiahtiiolen oPpoewraetrin Rgo ilne SPwowaper FDaeslti vReorlye mSwoadpe tHhaerrde Rweislle atlwEraryosr bRee ceoitvheerry an Sou rocre in place. The can only be altered in the case of a /,,,, or Control Message Control Message Message Number of Data Objects Message failure of the. Header Control Message Message Header CRC A is defined as a with the field in the CRC CRC is set to zero. The consists only of a and a. stands for Cyclic Redundancy Check. It is an error-detecting code used to determine if a CT-VPD VCONN Powered USB Charge Through Device block of data has been corrupted. Current Limit SPR PPSSource Sink SPR PPS See. Source Current Limit SAo cuurrcreent limiting feature of an. When a operating in mode attempts to draw more current from the than the requested value, the reduces its output voltage so the current it supplies remains at or below the requested Note: Current Limit SPR AVS EPR AVSSource value. CV Constant Voltage is not supported by and s. Data Block Extended MessagePayload Data Block See. MaxExtendedMsgLen Data Object AnD ata Message data unit. The size of each type of is specified as a series of bytes up to bytes in length. This is distinct from a used by Data Message Data Message Message Header Data Object Data a which is always a 32-bit object. Message Number of Data Objects Message AH eader consists of a followed by one or more s. s are easily identifiable because the field in the Data Object Data MessagePayload is always a non-zero value. Data Message BIST Data Object A data unit. This 32-bit object contains information specific to different Data Reset types of. For example Power, Request,, and Vendor s are defined. Data Role Port Partner Data Role DFP USB Host UFP USB Device Process which resets USB Communication. Data Role Swap Data Role Port Partner A will be in one of two s; either ( ) or ( ). Dead Battery Dead Battery Battery Process of exchanging the s between s. A device has a when the in a device is unable to power its functions. Table1.4 Terms and Abbreviations (Continued) Term Description Default Contract Port Pair USB Type-C [USB Type-C 2.4] An agreement on current at 5V is reached between a based on current Detach Port Pair ( ). Detached Port Mechanical unjoining of the by removal of the cable. Detaches Detach USB Power Delivery s which are no longer mechanically joined with USB cable. Device USB Device USB Host See. USB Device Peripheral Hub When lower cased (device), it refers to any USB product, either or. When Device Policy Port Source Sink in upper case refers to a ( or ). Device Policy Manager Source Sink Device Policy Port Local Policy applied across multiple s in a or. Policy Policy Engine Module running in a or that applies to each in the device, as DFP Downstream Facing Port, via the. DFP VDO VDO DFP Capabilities See. Differential Non-Linearity LSB LSB returned by the containing. Source PPS AVS DNL DNL The difference between an ideal step, LanSBd the real observable step when the Power is operating in either or mode. A of 0 indicates that the step is ideal. If is positive the step is larger than the ideal, and if it is negative then the step is smaller than Discovery Process Command Structured Vendor Defined Message ideal. Port Partner Cable Plug SVID Alternate Mode sequence using s resulting in identification of the DNL Differential Non-Linearity and, and their supported s and s. Downstream Facing Port Port USB Host See. Port Hub Port [USB Type-C 2.4] Port Indicates the S'osu procseition in thUe SUBS BH otostpology wUhSiBch C toympimcaulnlyic caotriornesponds to a root or downstream as defined in. At connection, the defaults to DPM Device Policy Manager operation as the and as a (when is supported). DRD Dual-Role Data See. DRP Dual-Role Power See. Dual-Role Data DFP UFP See. Dual-Role Data Port Port DRD Capability of operating as either a or. Dual-Role Power Source Sink A capable of operating as. Dual-Role Power Device Dual-Role Power Port Source Capability of operating as either a or. Sink A product containing one or more s that can operate as either a or Dual-Role Power Port Port DRP a. EM Extended Message A capable of operating as a. End of Packet K-code Packet See. EOP End of Packet marker used to delineate the end of a. EPR Extended Power Range See. EPR AVS EPR Mode See. Advertise SPR PPS AVS CAa ppoawbielirt iseuspply operating in Adjustab wleh Vooselt aoguetp Suutp vpolyltAagPeD cOan be Saedcjtuisotne d6.t4o.1 a.2n. 4o,p erating \"vAoultgamgee nwtietdh iPno iwtse r Data Obdje rcat n(AgeP.D UOn)l\"ike it does not support current limit. The are exposed by the (see EPR AVS Mode EPR Source EPR AVSContract EPR AVS ). Mode A, currently operating in an, is said to be operating in EPR Cable SPR Mode EPR Mode. EPR Capabilities EPR CapabilitiesMessage EPR_Source_Capabilities EPR_Sink_Capabilities A cable which is rated to operate in both and. Extended Message SPR (A)PDO TheS PR CapabilitiesM essage s S(ource_Capabilities Si nakn_dC apabilities ) are EPR (A)PDO s with the first seven positions filled with the same s returned by the s ( and ) followed by the EPR Capable EPR Mode s starting in the eighth position. A product which has the ability to operate in. Table1.4 Terms and Abbreviations (Continued) Term Description EPR Mode Sink [IEC 62368-1] Source Source A Power Delivery mode of opera[tIiEoCn 6 w2h3e6r8e- 1m]aximum allowable voltagSei nisk 48V. The comp[lIiEesC t6o2 t3h6e8 r-e1q]uirements of EPR Mode for operation wEPitRh Sao PuSr3ce Atta. cThheed E PR Scoinmkplies to thEeP rRe CqaubirleementsE oPfR Source for operationE wPRit Mh ao dPeS3. The cable complies with Sink. Entry into the Attache rdequiresE tPhRa tS iannk EP Ris C apable to an with an. The will only enter the when requested to do so EPR_Source_Capabilities EPR_RequestMessage NegotiateEPR by the and it has determined it is to an with an cable. Explicit Contract SPR ModeMessage Source_Capabilities Request Only the EPR Mode and the s are allowed to s. The s ( and ) are not allowed EPR (A)PDO Fixed SupplyPDO to be used while in. Adjustable Voltage Supply AVS APDO Fixed SupplyPDO that offers either 28V, 36V or 48V. EPR_Source_CapabilitiesMessage ( ) whose Maximum voltage is the highest EPR Sink Sink SPR Mode EPR Mode voltage in the and no more than 240W. EPR Sink Port Port EPR Sink A that supports both and. EPR Source Source SPR Mode EPR Mode A exposed on an. EPR Source Port Port EPR Source A that supports both and. Error Recovery Port ErrorRecoveryState [USB Type-C 2.4] A exposed on an. Explicit Contract Port Pair Negotiation enters the as defined in. Explicit Contract Source Accept AMne sasgargeeement reached beRtweqeueens at Message as a resuSlitn okf the Power DePlivSe_RryD YMessage procSeosusr. cAen is established (or continued) when a sendPs Ea_nS RC_Rea dy State in SroeusprcoenPseo ltiocy a E ngine PE _sSeNnKt b_Ry eaa dyS ftoaltleowed bSyo uar cePolicy Engine sent by tEhxep licit Con ttor aincdticate that the power supplyR ise -rneeagdoyt.i aTthioisn corresponds to the for a and the for a. The Extended Capabilities Extended Message Capabilities can be altered through the process. Extended Control Message Extended Message An containing information. Extended Message Message Data Block Extended Message Extended An containing control information only. Message Header Extended Message Header A conMtaeisnsiangge Header s. The is defined by the field in the being set to one and contains an immediately Extended Message Header Extended Message Extended Message Header following the. Message Header Data Block Chunking Every contains a 16-bit immediately following the Extended Power Range SPR EPR containing information about the and any being applied. EPR Mode EPR Message EPR_Source_CapabilitiesMessage Extends EthPeR p_Roewqeure rsatnMgee sfsraogme a maximum oNf e1g0o0tiWat e(Exp)l itcoit a C monatxriamcutm of 240W ( ). When operating in the, only specific s (the External Supply and the ) are used to s. Power supply external to the device. This could be powered from the wall or from any other Fast Role Swap Source SinkPower Role Port Partner power source. Process of exchanging the and s between s rapidly due to the Fast Role Swap Request Initial Source Initial Sink Fast Role Swap Fast disconnection of an external power supply. Role Swap Request CC AMne sisnadgiecatioSnig fnroamlin agn to the that a is needed. The is indicated by driving the line to ground for a short period; it is not a First Explicit Contract Explicit Contract Attach Hard Reset Power Role Swap or. Fast Role Swap The that immediately follows an, power on, Fixed Battery orB attery event. Fixed Batteries A that is not easily removed or replaced by an end user e.g., requires a special tool to Fixed Supply access or is soldered in. Fixed SupplyPDO Section 6.4.1.2.1, \"Fixed Supply Power Data Object\" A well-regulated fixed voltage power supply. This is exposed by the (see Frame PD Packet Test ) Frame Signaling Generic term referring to an atomic communication transmitted by such as a, FRS Fast Role Swap or. See. Table1.4 Terms and Abbreviations (Continued) Term Description Guaranteed Capability Port Guaranteed Capability Port Port Maximum PDP Port Present PDP Port Maximum PDP A C aisp aalbwilaityiess capable ofS dtealtiivcering its and indicates this by setting its to be the same as its except Hard Reset Hard ResetSignaling Port Partner VBUS USB Default when limited by the cable’s. This is a capability. Operation PD State Port Partner This is initiateAdt btayc hedCable P lug from eitherP ort Partner. It restores D toa ta Role anVd C Or Ne Nse Stos uthrcee comSmouurnciecaPtoiortns eDngRiPneS otou rictse dPeofratult in bothS ource s as well as in any Source s. It restores both s to their default s and returns the to the. A operating as a will Host USB Host continue to operate as a. Hot Swappable Battery Battery Battery See. Hub USB Device A that is easily accessible for a user to remove or change for another. ID Header VDO VDO Discover IdentityCommand VDM Header ID A that provides additional connections to the USB. Header VDO The in a immediately following the. The Idle CC Section contains information corresponding to the Power Delivery Product. 5.8.6.1, \"Definition of Idle\" Condition on where there are no signal transitions within a given time window. See Implicit Contract Port Pair. Negotiation Power Role Swap Fast Role Swap Implicit AConn atgrarecetment on power levels betPwoeret nP aa ir which occurs, not bNeceaguosteia otef the EPxopwliceirt DCoenlitvrearcyt Pow perro cReoslse, Sbwuat pbecauIsmep olifc ait ContractShall or USB Ty. pe-C [USBs aTryep ter-aCn 2si.t4o]ry since the is required to immediately an after the. An be limited to current Initial Sink Sink Power Role Swap Fast Role Swap New (see ). Source at the start of a or which transitions to being the Initial Source Source Power Role Swap Fast Role Swap New. Sink at the start of a or which transitions to being the Initiator Command. Invariant PDOs Source Port Invariant PDOs PDO The initial sender of a request in the form of a query. A that offers will always Advertise the same s except when IoC Negotiated [IEC 63002] limited by the cable. IR Drop Source Sink The current value as defined in. [USB Type-C 2.4] The voltage drop across the cable and connectors between the and the as defined in. It is a function of the resistance of the ground and power wire in the cable plus K-code K-code Hard Reset the contact resistance in the connectors times the current flowing over the path. Cable Reset Packet Special symbols provided by the 4b5b coding scheme. s are used to signal and Local Policy PD Capable Policy Local Policy Policy and delineate boundaries. Engine Local Policy Every device has its own, called the that is executed by its to coUnStBro Hl oitsst power delivery behavior. The Local P oalti caynOy pgtiivoenna tlilmye might be the defauSlyts pteomlic Pyo, lhicayr dM caondaegde ror modified by changes in operating parameters or one provided by the system or some combination of these. The can be changed LPS [IEC 62368-1] by a. LSB Limited Power Supply as defined in. Managed Capability Port Managed Capability Port Port Present PDP Port An abbreviation for Least Significant Bit. Maximum PDP Port Present PDP A can have its set to a different value than its. Its value can be dynamic and change during normal Message PacketPayload Message Header Control Message Message Header operation. Data Message Extended Message Section 6.2, \"Messages\" The consisting of a for s and a Message Header Message Message Header and data for s and s as defined in. Message PDPort Capabilities Every starts with a 16-bit containing basic information about the Messaging Message Section 6, \"Protocol Layer\" and the ’s. Modal Operation Active Mode Modal Operation Communication in the form of s as defined in. Active Mode Operation where there are one or more s. ends when there are no Mode Mode longer any s. Alternate Mode EPR Mode SPR Mode is a general term used to describe a particular type of operation of a given device. Examples of modes are:,,. Table1.4 Terms and Abbreviations (Continued) Term Description Mode Entry Mode Mode Exit Mode Process to start operation in a particular. Multi-Drop Multi-Drop Port Process to end operation in a particular. Partner PD is a system sharing the Power Delivery communication channel between the Negotiate Negotiation s and the cable. Negotiated Negotiation See. Negotiation See. SourceAdvertise Capabilities This is the PD process whereby: Sink Advertise Capabilities 1) The s its. Source 2) The requests one of the d. Sink 3) The acknowledges the request, alters its output to satisfy the request and informs Negotiation Contract Port the. Pair The result of the is a for power delivery/consumption between the New Sink Sink Power Role Swap Fast Role Swap Initial. Source at the end of a or which has transition from being the New Source Source Power Role Swap Fast Role Swap. Initial Sink at the end of a or which has transition from being the Non-interruptible Message AMS Non-interruptible. AMS Message AMS GoodCRCMessage There cannot be any unexpecMteedss age s Sdeucrtiinogn a8n.3.2.1.3;,i t\" Aist othmeirce Mfoerses age Sequences\". An starts when the first in the has been sent (i.e., a has been OCP received acknowledging the ). See. OTP Over-Current Protection. OVP Over-Temperature Protection. Packet Preamble SOP* Payload CRC EOP Over-Voltage Protection. Section 5.6, \"Packet Format\" One entire unit of PD communication including a,,, and as Passive Cable Cable Plug SOP’ defined in. Structured VDMDiscover ICdaebnleti wtyith a USB plug on each end at least one of which is a supp[oUrtSiBn gT ype- tCh 2a.t4 d]oes not incorporate data bus signal conditioning circuits. Supports the Note: Passive Cable to determine its characteristics (Electronically Marked Cable see ). Passive Cable VDO This specification does not discuss s that are not Electronically Marked. Payload Packet Protocol Layer VDO defining the Capabilities of a Passive Cable. PD Data content of a, provided to/from the. PD Capable Port USB Power Delivery PD Connection Connected A that supports USB Power Delivery. PD Power Source Fixed See. SupplyPDO Section 10, \"Power Rules\" The output power, in Watts, of a, as specified by the manufacturer and expressed in PD SID USB-IF PD SID s as defined in. PDO Power Data Object See. PDP PD Power See. PDP Rating PDP Rating PDP Source Port See. PDP Rating The is the saPmDeP aRsa tthineg ManufSaeccttuiorner 6 d.4e.c1l1a.r2e, d\"P ort M foarx aim um PDP Fie eldx\"cept where there is a fractional value, in which case the corresponds to the integer part of the PDUSB USB DevicePort USB HostPort PD Capable USB Communication Manufacturer declared (see ). PDUSB Host PDUSB Device PDUSB Hub or that is both and capable of. See PDUSB Device USB Device PD CapableUFP PDUSB Device SOP Packet also, and. PDUSB Host USB Host PD Capable DFP PDUSB Host A with a. A is only addressed by s. SOP Packet A which is on at least one of its s. A is only addressed by s. Table1.4 Terms and Abbreviations (Continued) Term Description PDUSB Hub USB Device UFP DFP PD Capable Port PDUSB Hub SOP Packet A port expander with a and one or more s which is on at least PDUSB Hub USB Type-C Multi-Port Charger one of its s. A is only addressed by s. PDUSB Peripheral USB Device PD CapableUFP PDUSB Hub PDUSB Peripheral A self-powered is treated as a. SOP Packet A with a which is not a. A is only PE Policy Engine addressed by s. Peripheral Attached USB Device See. PHY Layer Message USB Type-CCC A physical entity that is to a USB cable and is currently operating as a. Port Pair The Physical Layer responsible for sending and receiving s across the Policy Policy PD Capable Capabilities wire between a. Advertise Negotiate defines the behavior of parts of the system and defines the it Policy Engine Policy Engine Device Policy Manager Policy s, requests made to (re) power and the responses made to requests received. Port Protocol Layer Message The interprets the ’s input to implement for a given Port and directs the to send appropriate s. Port Pair An interface typically exposed through a receptacle, or via a plug on the end of a hard-wired Port Pair AttachedPD CapablePort captive cable. USB Power Delivery defines the interaction between a. Port Partner Contract Negotiated Port Pair Two s. Port Partner A is between a connected by a USB cable. These ports are known Power Conductor Source Sink VBUS as s. Power Consumer Consumer The wire that delivers power from the to. For example, USB’s. Power Data Object Data Object Source Port Sink Port Capabilities See. Source_Capabilities EPR_Source_Capabilities Sink_Capabilities EPR_Sink_Capabilities Message used to exFpioxseed aS upply Varia’bs loe rS upply ’sB paotwteerry SupplyPowe ars D paatrat Oofb aje ct SPR Mode / EPR Mode or Fixed Suppl y/ AVSPDO respectively., and s are Power Delivery Mode Contract Port Pair Mode defined; uses all four while uses only and s. Power Delivery Mode Power Delivery OMpoedreation after a hDaest aincihtially beePno retstablished beHtwarede nR eas et. ThSiosu rce persists during normal Power DelIinvietriayl o Spoeurracteion, including after a VBUS Pow. er Role Swap can only be exited by ing the s, applying a or by the removing power (except when the removes power from during the Power Provider Provider procedure). Power Role Port Partner Power Role Source Sink See. Power Role Swap Source SinkPower Role Port Partner A will be in one of two s; either or. Power Rules Source Process of exchanging the and s between s. Sink Section 10, \"Power RDuelfeins\"e voltages and current ranges that are offered by compliant USB Power Delivery s and used by a USB Power Delivery for a given value of PDP Rating. See PPS Programmable Power Supply. PPS Mode SPR Source PPS PPS Mode See. Preamble An, currently operating as an, is said to be operating in. Preamble Start of a transmission which is used to enable the receiver to lock onto the carrier. The consists of a 64-bit sequence of alternating 0s and 1s starting with a \"0\" and ending Product Type Discover IdentityCommand with a \"1\" which is not 4b5b encoded. Product Type VDO VDO Product Type ID Header VDO Discover IdentityCommand Product categorization returned as part of the. Product VDO Product VDO identifying a certain in the of a. Programmable Power SPR Mode The contains identity information relating to the product. Supply Advertise A power supplSyP, oRp AerVaSting inE PR AVS, whose outpCuat pvaobltialigteie csan be programmaticaSlPlyR adjusted Pinr osmgraalml imncarbelme ePnotwse orv Seurp itpsl yAPDO d raSnegctei oann d6.h4a.1s. 2a. 4p,r \"oAgurgammemnatebdle P oouwtperu tD cautrar Oenbtje fcotl d back ((nAoPtDeO t)h\"at the and does not).The are exposed by the (see Protocol Error Message Atomic Message Sequence Protocol Error AMS ). Soft Reset Hard Reset An unexpected during an. A during an will result in either a or a. Table1.4 Terms and Abbreviations (Continued) Term Description Protocol Layer Message Port Partner Provider PDPort USB Host Hub ChargerDFP The entity that forms the s used to communicate information between s. VBUS USB Type-CPort R CC A (typically a,, or ) that can source power over the power Provider/Consumer Provider Consumer Dual-Role conductor (e.g., ). This corresponds to a with p asserted on its wire. Power Port R CC A with the additional capability to act as a. This corresponds to a PS1 with p asserted on its wire. PS2 [IEC 62368-1] PS3 Classification of electrical power as defined in. PSD Sink Alternate Mode which draws power but has no other USB or communication function e.g., a R VCONN R VCONN power bank. R USB Type-CCC Port Sink [USB a Prior to application of, a powered cable applies a pull-down resistor a on its pin. Type-C 2.4] d Pull-down resistor on the wire used to indicate that the is a (see RDO Request Data Object ). Re-attach Attach Port Pair Detach See. Re-negotiate Re-negotiation of the by a cable after a previous. Re-negotiated Re-negotiation See. Re-negotiation Port Partner NegotiatedContract See. Request Message Sink Port Negotiate Contract Request EPR_Request A process wherein one of the s wants to alter the. Message used by a to a ; refers to either a / Request Data Object Data Object Sink Port Negotiate Contract Request EPR_Request. Message used by a to a as a part of a / Responder Command Initiator Command. Revision Revision Version The receiver of a request sent by an that replies with a response. Major release of the USB Power Delivery specification. Each will have various s Revision 1.0 Deprecated Revision associated with it. Revision 2.0 Revision [USBPD 2.0] major of the USB Power Delivery Specification. Superseded major of the USB Power Delivery Specification as defined in, Revision 3.x Revision with which this specification is compatible. R USB Type-CCC Port Source [USB Current major s of the USB Power Delivery Specification. Type-C 2.4] p Pull-up resistor on the wire used to indicate that the is a (see Safe Operation Source vSafe5V Port Partner ). Shared Capacity Charger [USB Type-C 2.4] Charger Managed Capability Port s must have the ability to tolerate applied by both s. Shared Capacity Group [USB Type-C 2.4] Managed Capability Port As defined in. This maps to a with multiple s. SID Standard ID As defined in. This maps to a group with s. Signaling K-code See. Hard Reset Section 5.4, \"Ordered Sets\" A Preamble followed by an ordered set of four s used to indicate a particular line symbol Signaling Scheme BMCSignaling Scheme e.g., as defined in. Physical mechanism used to transmit bits. Only the is defined in this Note: BFSKSignaling Scheme Revision 1.0 specification. Deprecated The supported in of this specification has been Single-Role Port Port Source Sink. DRP A that is only capable of operating either as a or, but not both. E.g., the port is Sink Port VBUS USB Device not a. Sink Capabilities Capabilities Sink The consuming power from ; most commonly a. Sink Directed Charge Sink Source Battery wanted by a. SPR PPSCurrent Limit Source A charging scheme whereby the connects the to its through safety and other circuitry. When the feature is activated, the automatically controls its output current by adjusting its output voltage. Table1.4 Terms and Abbreviations (Continued) Term Description Sink Port Port Sink Sink Standby Sink Standby iSnkStdby operating as a. Soft Reset PD During the Sink reduces its current draw to SOP K-code Port Partner Start of Packet A process that resets the communications engine to its default state. SOP Communication SOP Packet AMS marker used for communication between s. See also. SOP Packet Packet SOP Communication using s also implies that an is being followed. SOP’ Communication Cable Plug SOP’ Packet AMS Any Power Delivery which starts with an. SOP’ Packet Packet SOP’ Cable Plug Communication with a using s, also implies that an is being followed. SOP’’ Communication Cable Plug SOP’’ Packet AMS Any Power Delivery which starts with an used to communicate with a. SOP’’ Packet Packet SOP’’ Cable Plug Communication with a using s, also implies that an is being followed. SOP’ Packet Cable Plug Any Power Delivery which starts with an used to communicate with a SOP’ wK-hceond e s are being used to communicateP woritth the oCthaebrle Plug. Start of Packet SOP’’ SOP* marker used for comKm-ucondiceation betwSeOenP aS OP’ andS aO P’’. SeSeta arlts oof Packet. SOP* Communication SOP* Packet AMS Used to generically refer to markers:, and. See also. SOP* Packet Packet SOP SOP’ SOP’’ Communication using s, also implies an is being followed. Source Power Role Port VBUS USB Host A term referring to any Power Delivery starting with either,, or. Hub The a is operating in to supply power over ; most commonly a or Source Capabilities Capabilities Source downstream port. Source Port Port Source offered by a. Specification Revision Revision operating as a. SPM System Policy Manager See. SPR Standard Power Range See. SPR AVS SPR Source See. Advertise SPR PPS SPR AVSCapabilities An wShPoRs AeV oSuAtpPuDtO voltagSee ccatnio bne 6 a.4d.1ju.2s.t4e.d2,t \"oS aPnR oApdejurasttainbgle v Vooltlatagge ew Siuthpipnl yit As PDO\" d range. Unlike, it does not support current limit. The are SPR AVS Mode SPR Source SPR AVSContract SPR AVS exposed by the (see ). Mode A, currently operating in an, is said to be operating in SPR Capabilities SPR CapabilitiesMessage Source_CapabilitiesMessage Sink_CapabilitiesMessage. Power Data Object vSafe5V Power Data Object An ( or ) has at SPR Contract Explicit ContractNegotiate SPR Mode SPR (A)PDO least one for followed by up to 6 additional s. SPR Mode Explicit Contract Negotiated SPR (A)PDO d, in, based on s. SPR (A)PDO Fixed SupplyPDO The classic mode of PD operation where s are using s. Variable SupplyPDO that offers up to 20V and no more than 100W. Battery SupplyPDO whose Maximum voltage offers up to 21V and no more than 100W. Adjustable Voltage Supply AVS APDO whose Maximum voltage offers up to 21V and no more than 100W. ( ) whose Maximum voltage is up to 20V and no more than Programmable Power Supply PPS APDO 100W. ( ) whose Maximum voltage is up to 21V and no more SPR PPS than 100W. Advertise SPR AVS EPR AAV pSower sCuapppalbyi lwithieosse output voltage anPdr oougtrpaumt mcuarbrleen Pto cwaner b Seu pprpolygrAaPmDmOaticallyS eacdtjiuosnt ed in 6sm.4.a1l.l2 i.n4c, r\"eAmugemntesn otevde rP iotws er Data Odb jreacnt g(eA.P IDt sOu)p\"ports current limit unlike and. The are exposed by the s (see SPR PPS Mode SPR PPSContract SPR PPS ). Mode A power supply, currently operating in an, is said to be operating in SPR Sink Sink SPR Mode EPR Mode. SPR Sink Port Port SPR Sink A which only supports and does not support. SPR Source Source SPR Mode EPR Mode A exposed on an. A which only supports and does not support. Table1.4 Terms and Abbreviations (Continued) Term Description SPR Source Port Port SPR Source Standard ID A exposed on an. 16-bit unsigned value assigned by the USB-IF to a given industry standards organization’s Standard or Vendor ID VID SID SVID specification. Generic term referring to either a or a. is used in place of the phrase “Standard or Standard Power Range Source_Capabilities RequestMessage NegotiateSPRExplicit Vendor ID.” Contract EPRMessage EPR_Source_CapabilitiesMessage EPR_Request OMnelsys athgee and the SP R Modes are allowed to s. The s (the and the Start of Packet K-code Packet ) are not allowed to be used while in. State PD Section 6.12, \"State behavior\" Section 8.3.3, \"State marker used to delineate the start of a. Diagrams\" state machine state as defined in and Structured VDM Structured Vendor Defined Message state machines. Structured VDM Header VDM Header Structured Vendor Defined Message See. Structured Vendor Defined Vendor Defined Message VDM Header The for a. Message A where the contents and usage of bits 14 0 of the are SVDM Structured Vendor Defined Message defined by this specification. SVID Standard or Vendor ID See. Swap Standby Swap Standby Source VBUS See. iSnkSwapStdby During the does not drive and the Sink's current draw does not System Policy Policy Port exceed. Pair System Policy Overall system gPeonleicrya tEendg binye the system, broken up into the policies required by each to affect the. It is programmatically fed to the individual devices for System Policy Manager USB Host System Policy PD consumption by their s. CapableConsumer Provider USB Host Module running on the. It applies the through communication with Test Frame Frame Preamble SOP* Section 5.9, \"Built in Self-Test s and s that are also connected to the via USB. (BIST)\" consisting of a,, followed by test data (See Test Pattern Section 5.9, \"Built in Self-Test (BIST)\" ). Tester Tester BIST Continuous stream of test data in a given sequence (See ). PDUUT The is assumed to be a piece of test equipment that manages the testing process of UFP Upstream Facing Port a. UFP VDO VDO UFP Capabilities See. UI Unit Interval returned by the containing. Unchunked Unchunked Extended Message See. Unchunked Extended SEexete nded Message. Chunking Message Unexpected Message Message Por tthat has been transmitted whole without using State. Unit Interval that a supports but has been received in an incorrect. Unit Under Test PD Tester BIST The time to transmit a single data bit on the wire. The device that is being tested by the and responds to the initiation of a particular Unrecognized Message Message Port Message ReservedMessage test sequence. Message Revision Revision Port Unstruct uthreadt aV endo rd oDeesfi nnoedt uMnedsesarsgteand e.g., a VID using a type, a defined by a higher specification than the this supports, or an Unstructured VDM Unstructured Vendor Defined Message for which the is not recognized. Unstructured VDM Header VDM Header Unstructured Vendor Defined Message See. Unstructured Vendor ThVee ndor Defined fMore sasna ge. VDM Header Defined Message Unsupported Message AM essage Port where the contents of bits 14 0 of tMhee ssage are undefined. Port that a recognizes but does not support. This is a defined by the specification, but which is not supported by this. Table1.4 Terms and Abbreviations (Continued) Term Description Upstream Facing Port Port Port Device [USB Type-C 2.4] Port USB Device USB ICnodmicmatuensi ctahtei on ’s position in the SUinSkB topology typically a on a as defined in. At connection, the defaults to operation as a (when USB Attached State [USB 2.0] [USB 3.2] Attached is supported) and. USB Communication Packet [USB 2.0] [USB 3.2] Synonymous with the and definition of the state USB Default Operation Port Attach Hard Reset DFPSource vSafe5V VBUS Transfer of USB data s as defined in and. UFPSink vSafe5V [USB 2.0] [USB 3.2] [USB Type-C 2.4] O[UpSeBraBtCio 1n. 2o]f a at or after a where the applies on and the is operating at as defined in,, or USB Device Hub Peripheral [USB 2.0] [USB 3.2] [USB4]. USB Host USB Host [USB 2.0] [USB Either a or a device as defined in, and. 3.2] [USB4] The computer system where the controller is installed as defined in, USB Hub Hub and. USB Powered State [USB 2.0] [USB 3.2] See. USB Safe State USB Type-C [USB Type-C 2.4] Synonymous with the and definition of the powered state. Port Partner State of the connector when there are pins to be re-purposed (see ) USB Type-A so they are not damaged by and do not cause damage to their. USB TTyeprme- Aused tUoS rBe fTeyrp teo- Bany A plug or receptacle including USB Micro-A plugs and USB Standard A plugs and receptacles. USB Micro-AB receptacles are assumed to be a combination of USB Type-B and. Terms used to refer to any B-plugU SoBr rTeycpeep-tAacle inUcSluBd Tinypg eU-BSB Micro-B plugs and USB Standard B plugs and receptacles, including the PD and non-PD versions. USB Micro-AB receptacles are USB Type-C USB Type-C [USB Type-C assumed to be a combination of and. 2.4] Term used to refer to the connector plug, or receptacle as defined in USB Type-C Multi-Port USB Type-CSourcePort. Charger USB Device [USB Type-C 2.4] A product that exposes multiple s for the purpose of charging multiple USB-C Port Control PD Capable Attach Detach R connected s as defined in. ® Module in a device which controls / and either detects or sets the p USB-IF PD SID value. USB4 Mode Mode [USB4] Standard ID allocated to this specification by the USB Implementer’s Forum. U®UT Unit Under Test Device is operating in a as defined in. Variable Supply Battery Variable SupplyPDO See. Section 6.4.2, \"Request Message\"). A poorly regulated power supply that is not a. This is exposed by the VBUS VBUS Source Sink (see VCONN USB Host CC The wire delivers power from a to a. CC Once thVe C c Oo Nn Nnection between Cab laen Pdlu dgevVic Ce O Nis N ePsotawbelrieshde Adc,c tehses ory pinV ( CC OC N1 N o Pro CwCe2r)e din U tShBe rDeecveipcetacle t[hUaSt Bis Tnyopt ec-oCn 2n.e4c]ted via the wire through the standard cable is re-purposed to source to power circuits in a, or VCONN Powered Accessory VCONN Alternate Mode [USB Type-C (see ). 2.4] An accessory that is powered from to operate in an (see VCONN Powered USB Charge CT-VPD VPD Source Charger ). Through Device [USB Type-C 2.4] A is a with an additional port for connecting a (e.g., a ) as defined in Charger CT-VPD VPD. Charger PD CT-VPD CC When no is connected, a behaves as a. Charger Charger When a is connected, no communication to the itself is possible as is connected to the port. Hence all PD communication then is with the and the cable with which it is connected.", "tables": ["Table 1.4", "Table 1.4", "Table 1.4", "Table 1.4", "Table 1.4", "Table 1.4", "Table 1.4", "Table 1.4", "Table 1.4", "Table 1.4", "Table 1.4"], "figures": [], "page_range": [40, 51]}
{"section_path": "1.7 Parameter Values", "start_heading": "1.7 Parameter Values", "content": "Table1.4 Terms and Abbreviations (Continued) Term Description VCONN Powered USB Device USB Device VCONN VBUS [USB Type C 2.4] A captive cable that can be powered by either or as defined in VPD USB Device VCONN VBUS. SOP’ Communication Section 6.12, \"State behavior\") A is a captiveM ceasbslaeg e thaStp ceacnif ibcea tpioonw Rereevdis iboyn either Re voirs ion 3. xand VoPnDly responds to Alternate Mod aes defined in the Tables in. It only responds to s sent with a of at least. A is not VPD VPD CT-VPD Charger allowed to support s. VCONN Source USB Type-CPort VCONN The term refers to either a or a with no connected. VCONN Swap VCONN Source Port Partner The responsible for sourcing. VDEM Vendor Defined Extended Message Process of exchanging the between s. VDM Vendor Defined Message See. VDM Header Data Object Message Header Vendor Defined Message VDM See. Header SVID VDM TheC foirmstm and followingS ttrhuec tured VDM S ienc ati on 6.4.4, \"Vendor Defined. TMhees sage\") contains the relating to the being sent and provides information relating to VDO Vendor Data Object the in the case of a (see. Vendor Data Object Data Object Message See. Vendor Defined Extended PDExtended Message VDEM used to send Vendor specific information as part of a. Message Message defined for vendor/standards usage. A does not define any Vendor Defined Message PDData Message structure and s can be created in any manner that the vendor chooses. Structured Vendor Defined Message Command Uns tructured Ven ddoerf iDneefdin foedr vMeensdsaogr/estandards usage. These are further partitSioencteido nin 6t.o4.4, \"Vendor Defined Message\") s, where s are defined in this specification, and s which are entirely vendor defined (see Vendor ID. Version Revision 16-bit unsigned value assigned by the USB-IF to a given Vendor. Version VDM A minor release of the USB Power Delivery specification associated with a particular. VI numbers are also defined in s. VID Vendor ID Same as power (i.e., voltage * current = power) VPD VCONN Powered USB Device See. See. [USBPDCompliance] The parameters in this specification are expressed in terms of absolute values. For details of how each parameter i1s m.8easured in Ccohmaplinangcee psle fasreo seme Revision 3.0. E1x.t9ended Pow eCr Roamngep (EaPtRi)b iniclluidtiyng w Adijutshta bRlee Vvolitasgieo Snup p2ly. 0(AVS) has been added. [USBPD 2.0] [USB Type-C 2.4] This Revision of the USB Power Delivery specification is designed to be fully inter-operable with systems using BMC Signaling over the connector and to be compatible with Revision 2.0 hardware.Section 2.3, \"USB Power Delivery Capable Devices\" Please see for more details of the mechanisms defined to enable compatibility.", "tables": ["Table 1.4"], "figures": [], "page_range": [52, 52]}
{"section_path": "1.8 Changes from Revision 3.0", "start_heading": "1.8 Changes from Revision 3.0", "content": "Table1.4 Terms and Abbreviations (Continued) Term Description VCONN Powered USB Device USB Device VCONN VBUS [USB Type C 2.4] A captive cable that can be powered by either or as defined in VPD USB Device VCONN VBUS. SOP’ Communication Section 6.12, \"State behavior\") A is a captiveM ceasbslaeg e thaStp ceacnif ibcea tpioonw Rereevdis iboyn either Re voirs ion 3. xand VoPnDly responds to Alternate Mod aes defined in the Tables in. It only responds to s sent with a of at least. A is not VPD VPD CT-VPD Charger allowed to support s. VCONN Source USB Type-CPort VCONN The term refers to either a or a with no connected. VCONN Swap VCONN Source Port Partner The responsible for sourcing. VDEM Vendor Defined Extended Message Process of exchanging the between s. VDM Vendor Defined Message See. VDM Header Data Object Message Header Vendor Defined Message VDM See. Header SVID VDM TheC foirmstm and followingS ttrhuec tured VDM S ienc ati on 6.4.4, \"Vendor Defined. TMhees sage\") contains the relating to the being sent and provides information relating to VDO Vendor Data Object the in the case of a (see. Vendor Data Object Data Object Message See. Vendor Defined Extended PDExtended Message VDEM used to send Vendor specific information as part of a. Message Message defined for vendor/standards usage. A does not define any Vendor Defined Message PDData Message structure and s can be created in any manner that the vendor chooses. Structured Vendor Defined Message Command Uns tructured Ven ddoerf iDneefdin foedr vMeensdsaogr/estandards usage. These are further partitSioencteido nin 6t.o4.4, \"Vendor Defined Message\") s, where s are defined in this specification, and s which are entirely vendor defined (see Vendor ID. Version Revision 16-bit unsigned value assigned by the USB-IF to a given Vendor. Version VDM A minor release of the USB Power Delivery specification associated with a particular. VI numbers are also defined in s. VID Vendor ID Same as power (i.e., voltage * current = power) VPD VCONN Powered USB Device See. See. [USBPDCompliance] The parameters in this specification are expressed in terms of absolute values. For details of how each parameter i1s m.8easured in Ccohmaplinangcee psle fasreo seme Revision 3.0. E1x.t9ended Pow eCr Roamngep (EaPtRi)b iniclluidtiyng w Adijutshta bRlee Vvolitasgieo Snup p2ly. 0(AVS) has been added. [USBPD 2.0] [USB Type-C 2.4] This Revision of the USB Power Delivery specification is designed to be fully inter-operable with systems using BMC Signaling over the connector and to be compatible with Revision 2.0 hardware.Section 2.3, \"USB Power Delivery Capable Devices\" Please see for more details of the mechanisms defined to enable compatibility.", "tables": ["Table 1.4"], "figures": [], "page_range": [52, 52]}
{"section_path": "1.9 Compatibility with Revision 2.0", "start_heading": "1.9 Compatibility with Revision 2.0", "content": "Table1.4 Terms and Abbreviations (Continued) Term Description VCONN Powered USB Device USB Device VCONN VBUS [USB Type C 2.4] A captive cable that can be powered by either or as defined in VPD USB Device VCONN VBUS. SOP’ Communication Section 6.12, \"State behavior\") A is a captiveM ceasbslaeg e thaStp ceacnif ibcea tpioonw Rereevdis iboyn either Re voirs ion 3. xand VoPnDly responds to Alternate Mod aes defined in the Tables in. It only responds to s sent with a of at least. A is not VPD VPD CT-VPD Charger allowed to support s. VCONN Source USB Type-CPort VCONN The term refers to either a or a with no connected. VCONN Swap VCONN Source Port Partner The responsible for sourcing. VDEM Vendor Defined Extended Message Process of exchanging the between s. VDM Vendor Defined Message See. VDM Header Data Object Message Header Vendor Defined Message VDM See. Header SVID VDM TheC foirmstm and followingS ttrhuec tured VDM S ienc ati on 6.4.4, \"Vendor Defined. TMhees sage\") contains the relating to the being sent and provides information relating to VDO Vendor Data Object the in the case of a (see. Vendor Data Object Data Object Message See. Vendor Defined Extended PDExtended Message VDEM used to send Vendor specific information as part of a. Message Message defined for vendor/standards usage. A does not define any Vendor Defined Message PDData Message structure and s can be created in any manner that the vendor chooses. Structured Vendor Defined Message Command Uns tructured Ven ddoerf iDneefdin foedr vMeensdsaogr/estandards usage. These are further partitSioencteido nin 6t.o4.4, \"Vendor Defined Message\") s, where s are defined in this specification, and s which are entirely vendor defined (see Vendor ID. Version Revision 16-bit unsigned value assigned by the USB-IF to a given Vendor. Version VDM A minor release of the USB Power Delivery specification associated with a particular. VI numbers are also defined in s. VID Vendor ID Same as power (i.e., voltage * current = power) VPD VCONN Powered USB Device See. See. [USBPDCompliance] The parameters in this specification are expressed in terms of absolute values. For details of how each parameter i1s m.8easured in Ccohmaplinangcee psle fasreo seme Revision 3.0. E1x.t9ended Pow eCr Roamngep (EaPtRi)b iniclluidtiyng w Adijutshta bRlee Vvolitasgieo Snup p2ly. 0(AVS) has been added. [USBPD 2.0] [USB Type-C 2.4] This Revision of the USB Power Delivery specification is designed to be fully inter-operable with systems using BMC Signaling over the connector and to be compatible with Revision 2.0 hardware.Section 2.3, \"USB Power Delivery Capable Devices\" Please see for more details of the mechanisms defined to enable compatibility.", "tables": ["Table 1.4"], "figures": [], "page_range": [52, 52]}
{"section_path": "2.1 Introduction", "start_heading": "2.1 Introduction", "content": "Normative T2h.i1s section c o nItnaitnrs nood uction requirements. PD AttachedPort Port Partner Port Pair Negotiate UUSSBB TPyopwee-Cr Delivery ( ) CdCefines the mechanisms for pairs of directly PD s (also referred to as s or ® s) to voltage, cu[rUrSeBnt 2 a.n0d]/[oUrS dBi r3e.c2t]io[nU oSfB pBoCw 1e.r2 f]low o[vUeSrB t hTey UpeSB-C c 2a.b4l]e. It uses the connector's wire as the communications channel. The mechanisms operate independently of and supersede other USB methods defined in,, and USB Typ.e-C Structured Vendor Defined Message Structured VDM PD USB Power Delivery also defines sSidtreubcatunrde md VecDhManisms used for configuration manAagcteimvee Mnto odfe devices and cUabSlBe4s. U Msiondge USB Type-CAlternate Mode Alst e(rnate Mode s), facilitates dStisacnodvaerrdy o orf Vdeenvdicoer aIDnd cSaVbIlDes feat ®ures and performance. s areA altlseorn uasteed M too deneter/exit some s, either USB-based (e.g., ) or s. s are associated with s 2(.1.s1) and can b eP eoithwere srta nDdaerdli (ve.eg.r, Dyis SploayuPorrct e Operatio) onr aprlo Cproientartyr (ae.cg.t, sIntel Thunderbolt™ 3). PDSource Contract A - Defa wulitl lC boen tirna ocnte of three s: Connect Source Advertise R [USB Type-C 2.4] Source Defau lwt hCiocnht rita cetnters immediately fCoollnotwrainctg a Si wnkherDee tthaec hed proSvoiudrecse 5V anSdin k Negotiates the amount oEfx cpulricrietn Cto int tcraanc tdeliver using the p value as defined in. A in a will remain in this until the is or the and - Implicit Co anntrda ecntter an. Power Role Swap Fast Role Swap PDSource Advertise R [USB Type-C 2.w4]hichS oimurmceediatelIym fpollilcoiwt Cso an tract or Negotiate and is tSrainnksitory. The Explicit p Croonvtirdaecst 5V and s the amount of current it can deliver using the p value as defined in. A in an will immediately with the and enter - Eanxp licit Contract. Source PD Negotiation Source Source_CapabilitiesMessage Sink RequestMessage Source is the state of the Accep atfMteers saangye power Source consistinPgS o_Rf DthYe Messag e sending a Source, the responding with a, the PD SaockunrcoewledgiEnxgp tlhicei tr Ceoqnutersatc wtith an Expli caitn Cdo fnintraallcyt the sends a Re-negot iation wCohnetnra tchte is ready tEox dpelilcivite Cro tnhter raecqtuested power. This is the normal operational state for. A in an will remain in an during and after a of its  and will exit the Sink when: Default Contract Sink  DisconnecteHd afrrodm R etsheet where it will restart in a Detached whAettna rcehceodnnectedS itnok the.  Following a Power Role wSwhearpe it Fwaisllt rReosltea rStw aasp if it were thenI mplicit Co tnot rtahcet.  Following Ua SB Type-CError R oecro very where it wilDl eetnatcehr aRne -attach. R Following which is an electrical / (remove and assert Contract Negotiate [USB 2.0] [USB 3.2] [USBBC 1.2] [USB Type-C 2.4] s Power Dde ulisvienrgy tMhoed UeSB Power DelivCeorny tSrpaectcification superseEdxpe laicniyt Caonndt raallc ptrevImiopulsi cpiot Cwoenrt craocnttracts established whether from standard,, or Port Pair mechanPisomwse.r W Dheliilvee ry Mopoedreating in Port Pair Detach tehdere will be aH ard Rese tin plaUcSeB ( eTiytphee-rC Error Recovery or Source ) that determines the power level Paovwaielarb Rleo laen Sdw tahpe dirFeacstti oRno loef Sthwaatp power. The will remain in until the is, there is a, or, or the removes pNoowtee:r exc[eUpSt Ba4s ]part of the or procePsDses. Contract Attached [USB4] [USB 3.2]Mode USB Default Operation does not define a default power, rather relies on a power. When first the Explicit Contra dctevicNee ogpoetiraattees in whSiochur icse its Capabilit.ies Sink Source An is d by the process of the sending a set of, from which the is required to request a particular capability and then the accepting this request.", "tables": [], "figures": [], "page_range": [53, 53]}
{"section_path": "2.1.1 Power Delivery Source Operational Contracts", "start_heading": "2.1.1 Power Delivery Source Operational Contracts", "content": "Normative T2h.i1s section c o nItnaitnrs nood uction requirements. PD AttachedPort Port Partner Port Pair Negotiate UUSSBB TPyopwee-Cr Delivery ( ) CdCefines the mechanisms for pairs of directly PD s (also referred to as s or ® s) to voltage, cu[rUrSeBnt 2 a.n0d]/[oUrS dBi r3e.c2t]io[nU oSfB pBoCw 1e.r2 f]low o[vUeSrB t hTey UpeSB-C c 2a.b4l]e. It uses the connector's wire as the communications channel. The mechanisms operate independently of and supersede other USB methods defined in,, and USB Typ.e-C Structured Vendor Defined Message Structured VDM PD USB Power Delivery also defines sSidtreubcatunrde md VecDhManisms used for configuration manAagcteimvee Mnto odfe devices and cUabSlBe4s. U Msiondge USB Type-CAlternate Mode Alst e(rnate Mode s), facilitates dStisacnodvaerrdy o orf Vdeenvdicoer aIDnd cSaVbIlDes feat ®ures and performance. s areA altlseorn uasteed M too deneter/exit some s, either USB-based (e.g., ) or s. s are associated with s 2(.1.s1) and can b eP eoithwere srta nDdaerdli (ve.eg.r, Dyis SploayuPorrct e Operatio) onr aprlo Cproientartyr (ae.cg.t, sIntel Thunderbolt™ 3). PDSource Contract A - Defa wulitl lC boen tirna ocnte of three s: Connect Source Advertise R [USB Type-C 2.4] Source Defau lwt hCiocnht rita cetnters immediately fCoollnotwrainctg a Si wnkherDee tthaec hed proSvoiudrecse 5V anSdin k Negotiates the amount oEfx cpulricrietn Cto int tcraanc tdeliver using the p value as defined in. A in a will remain in this until the is or the and - Implicit Co anntrda ecntter an. Power Role Swap Fast Role Swap PDSource Advertise R [USB Type-C 2.w4]hichS oimurmceediatelIym fpollilcoiwt Cso an tract or Negotiate and is tSrainnksitory. The Explicit p Croonvtirdaecst 5V and s the amount of current it can deliver using the p value as defined in. A in an will immediately with the and enter - Eanxp licit Contract. Source PD Negotiation Source Source_CapabilitiesMessage Sink RequestMessage Source is the state of the Accep atfMteers saangye power Source consistinPgS o_Rf DthYe Messag e sending a Source, the responding with a, the PD SaockunrcoewledgiEnxgp tlhicei tr Ceoqnutersatc wtith an Expli caitn Cdo fnintraallcyt the sends a Re-negot iation wCohnetnra tchte is ready tEox dpelilcivite Cro tnhter raecqtuested power. This is the normal operational state for. A in an will remain in an during and after a of its  and will exit the Sink when: Default Contract Sink  DisconnecteHd afrrodm R etsheet where it will restart in a Detached whAettna rcehceodnnectedS itnok the.  Following a Power Role wSwhearpe it Fwaisllt rReosltea rStw aasp if it were thenI mplicit Co tnot rtahcet.  Following Ua SB Type-CError R oecro very where it wilDl eetnatcehr aRne -attach. R Following which is an electrical / (remove and assert Contract Negotiate [USB 2.0] [USB 3.2] [USBBC 1.2] [USB Type-C 2.4] s Power Dde ulisvienrgy tMhoed UeSB Power DelivCeorny tSrpaectcification superseEdxpe laicniyt Caonndt raallc ptrevImiopulsi cpiot Cwoenrt craocnttracts established whether from standard,, or Port Pair mechanPisomwse.r W Dheliilvee ry Mopoedreating in Port Pair Detach tehdere will be aH ard Rese tin plaUcSeB ( eTiytphee-rC Error Recovery or Source ) that determines the power level Paovwaielarb Rleo laen Sdw tahpe dirFeacstti oRno loef Sthwaatp power. The will remain in until the is, there is a, or, or the removes pNoowtee:r exc[eUpSt Ba4s ]part of the or procePsDses. Contract Attached [USB4] [USB 3.2]Mode USB Default Operation does not define a default power, rather relies on a power. When first the Explicit Contra dctevicNee ogpoetiraattees in whSiochur icse its Capabilit.ies Sink Source An is d by the process of the sending a set of, from which the is required to request a particular capability and then the accepting this request.", "tables": [], "figures": [], "page_range": [53, 53]}
{"section_path": "2.1.2 Power Delivery Contract Negotiation", "start_heading": "2.1.2 Power Delivery Contract Negotiation", "content": "Normative T2h.i1s section c o nItnaitnrs nood uction requirements. PD AttachedPort Port Partner Port Pair Negotiate UUSSBB TPyopwee-Cr Delivery ( ) CdCefines the mechanisms for pairs of directly PD s (also referred to as s or ® s) to voltage, cu[rUrSeBnt 2 a.n0d]/[oUrS dBi r3e.c2t]io[nU oSfB pBoCw 1e.r2 f]low o[vUeSrB t hTey UpeSB-C c 2a.b4l]e. It uses the connector's wire as the communications channel. The mechanisms operate independently of and supersede other USB methods defined in,, and USB Typ.e-C Structured Vendor Defined Message Structured VDM PD USB Power Delivery also defines sSidtreubcatunrde md VecDhManisms used for configuration manAagcteimvee Mnto odfe devices and cUabSlBe4s. U Msiondge USB Type-CAlternate Mode Alst e(rnate Mode s), facilitates dStisacnodvaerrdy o orf Vdeenvdicoer aIDnd cSaVbIlDes feat ®ures and performance. s areA altlseorn uasteed M too deneter/exit some s, either USB-based (e.g., ) or s. s are associated with s 2(.1.s1) and can b eP eoithwere srta nDdaerdli (ve.eg.r, Dyis SploayuPorrct e Operatio) onr aprlo Cproientartyr (ae.cg.t, sIntel Thunderbolt™ 3). PDSource Contract A - Defa wulitl lC boen tirna ocnte of three s: Connect Source Advertise R [USB Type-C 2.4] Source Defau lwt hCiocnht rita cetnters immediately fCoollnotwrainctg a Si wnkherDee tthaec hed proSvoiudrecse 5V anSdin k Negotiates the amount oEfx cpulricrietn Cto int tcraanc tdeliver using the p value as defined in. A in a will remain in this until the is or the and - Implicit Co anntrda ecntter an. Power Role Swap Fast Role Swap PDSource Advertise R [USB Type-C 2.w4]hichS oimurmceediatelIym fpollilcoiwt Cso an tract or Negotiate and is tSrainnksitory. The Explicit p Croonvtirdaecst 5V and s the amount of current it can deliver using the p value as defined in. A in an will immediately with the and enter - Eanxp licit Contract. Source PD Negotiation Source Source_CapabilitiesMessage Sink RequestMessage Source is the state of the Accep atfMteers saangye power Source consistinPgS o_Rf DthYe Messag e sending a Source, the responding with a, the PD SaockunrcoewledgiEnxgp tlhicei tr Ceoqnutersatc wtith an Expli caitn Cdo fnintraallcyt the sends a Re-negot iation wCohnetnra tchte is ready tEox dpelilcivite Cro tnhter raecqtuested power. This is the normal operational state for. A in an will remain in an during and after a of its  and will exit the Sink when: Default Contract Sink  DisconnecteHd afrrodm R etsheet where it will restart in a Detached whAettna rcehceodnnectedS itnok the.  Following a Power Role wSwhearpe it Fwaisllt rReosltea rStw aasp if it were thenI mplicit Co tnot rtahcet.  Following Ua SB Type-CError R oecro very where it wilDl eetnatcehr aRne -attach. R Following which is an electrical / (remove and assert Contract Negotiate [USB 2.0] [USB 3.2] [USBBC 1.2] [USB Type-C 2.4] s Power Dde ulisvienrgy tMhoed UeSB Power DelivCeorny tSrpaectcification superseEdxpe laicniyt Caonndt raallc ptrevImiopulsi cpiot Cwoenrt craocnttracts established whether from standard,, or Port Pair mechanPisomwse.r W Dheliilvee ry Mopoedreating in Port Pair Detach tehdere will be aH ard Rese tin plaUcSeB ( eTiytphee-rC Error Recovery or Source ) that determines the power level Paovwaielarb Rleo laen Sdw tahpe dirFeacstti oRno loef Sthwaatp power. The will remain in until the is, there is a, or, or the removes pNoowtee:r exc[eUpSt Ba4s ]part of the or procePsDses. Contract Attached [USB4] [USB 3.2]Mode USB Default Operation does not define a default power, rather relies on a power. When first the Explicit Contra dctevicNee ogpoetiraattees in whSiochur icse its Capabilit.ies Sink Source An is d by the process of the sending a set of, from which the is required to request a particular capability and then the accepting this request.", "tables": [], "figures": [], "page_range": [53, 53]}
{"section_path": "2.1.3 Other Uses for Power Delivery", "start_heading": "2.1.3 Other Uses for Power Delivery", "content": "Implicit Contract Power Role Swap Fast Role Swap Implicit Contract Port Pair Negotiate AExnp licit Contract is the specified level of power allowed in particular states (i.e., during and after a or ). s are temporary; s are required to immediately an Provider. Local Policy Port Consumer Local Policy System Policy Local EPoaclihcy has a, governing power allocation to its s. s also have their own governing how they draw power. A can be enacted over USB that allows modification to this aPnDd C haepnacbel emanagementA otft aocvheerdall power allocationD inF Pthe sysUteFmP. USB Default Operation DFP vSafe5V UFP [USB 2.0] W[UhSeBn 3.2] [USB Ty dpeev-iCc e2s. 4a]re [USBBC t1o.2 e]ach other, the s and s initially Ndeegfaoutilat ttioo nstandard. The supplies and the draws current in accordance with the rules defined by,, or specifications. After Power Delivery has taken place, power can be supplied at higher, or lower, voltages and higher currents than defined in these specifications. It is also- possible Ptoow: er Role Swap Fast Role Swap Power Role DFP UFP Do a or to exchange the s such that the receives power - and tDhea ta Ro sleu pSwplaieps power. DFP UFP - Do a VCONN Swap such that tPhoer t becomeVs CtOhNeN and vice-versa. - Do a EPR M otod echange the supplying to the cable. - Enter into USB4 Mo.de ® - Enter into Alternate Mo.de - EnterV inentod or Defined Messsa.ge SendF irst Explicit Contract s. Source Port VCONN Source Attached EPR Prior to the only the, which is also the, can communicate with the cable assembly. This is important where 5A and capability are marked as well as other details of the cCaabbllee aDsissecomvbelryy such as the supported speed. Attachment Port Pair Explicit Contract Cable Discovery Power Role Swap Fast Ro,l de eStwerampining whether the cable canE cxopmlicmit uCnoinctartaec, tcan occur onU iFnPitial Source of a Implicit Cboenfotrrea catn Cable D hisacso bveeeryn established. It is also possiEblxep ltioc icta Crorny toruatc t after a or prior to re-establishing an, where the is the, and an is in place. can be carried out after an has been established, if the cable h2a.s1 n.o3t yet been d iOsctohveererd.Uses for Power Delivery Explicit Contract PD Port Once an is in place, can be used to manage the s and cables for non-power related fPuDnctionality. USB4 Mode Port ® VCONN Port Alte irsn uasteed M tood eenter the oPfD operation. s and cables can support functionality beCyaopnadb ipliotiweser. For Mexoadmeple, a cable can have active components that require power or a /cable can support a video display such as DisplayPort. defines an infrastructure to discover these additional and - s that include: Port Cable Plug Capabilities - Discovering a SV oIDr Port 'Csa ble Plug. - Discovery of the Modes a Port or Cable Plug supports. - Discovery ofM thoed e s a or Port suppCoarbtsl.e Plug - Entry inMtoo ad e supported by tPhoer t and/Coarb le Plug. Revision 3.x [USBPD 2.0] BMCSignaling [USB Type-C 2.4] Revision 2.0 of the USB Power Delivery specification is designed to be fully inter-operable with systems using over the connector and to be compatible with hardware.", "tables": [], "figures": [], "page_range": [54, 54]}
{"section_path": "2.2 Compatibility with Revision 2.0", "start_heading": "2.2 Compatibility with Revision 2.0", "content": "Implicit Contract Power Role Swap Fast Role Swap Implicit Contract Port Pair Negotiate AExnp licit Contract is the specified level of power allowed in particular states (i.e., during and after a or ). s are temporary; s are required to immediately an Provider. Local Policy Port Consumer Local Policy System Policy Local EPoaclihcy has a, governing power allocation to its s. s also have their own governing how they draw power. A can be enacted over USB that allows modification to this aPnDd C haepnacbel emanagementA otft aocvheerdall power allocationD inF Pthe sysUteFmP. USB Default Operation DFP vSafe5V UFP [USB 2.0] W[UhSeBn 3.2] [USB Ty dpeev-iCc e2s. 4a]re [USBBC t1o.2 e]ach other, the s and s initially Ndeegfaoutilat ttioo nstandard. The supplies and the draws current in accordance with the rules defined by,, or specifications. After Power Delivery has taken place, power can be supplied at higher, or lower, voltages and higher currents than defined in these specifications. It is also- possible Ptoow: er Role Swap Fast Role Swap Power Role DFP UFP Do a or to exchange the s such that the receives power - and tDhea ta Ro sleu pSwplaieps power. DFP UFP - Do a VCONN Swap such that tPhoer t becomeVs CtOhNeN and vice-versa. - Do a EPR M otod echange the supplying to the cable. - Enter into USB4 Mo.de ® - Enter into Alternate Mo.de - EnterV inentod or Defined Messsa.ge SendF irst Explicit Contract s. Source Port VCONN Source Attached EPR Prior to the only the, which is also the, can communicate with the cable assembly. This is important where 5A and capability are marked as well as other details of the cCaabbllee aDsissecomvbelryy such as the supported speed. Attachment Port Pair Explicit Contract Cable Discovery Power Role Swap Fast Ro,l de eStwerampining whether the cable canE cxopmlicmit uCnoinctartaec, tcan occur onU iFnPitial Source of a Implicit Cboenfotrrea catn Cable D hisacso bveeeryn established. It is also possiEblxep ltioc icta Crorny toruatc t after a or prior to re-establishing an, where the is the, and an is in place. can be carried out after an has been established, if the cable h2a.s1 n.o3t yet been d iOsctohveererd.Uses for Power Delivery Explicit Contract PD Port Once an is in place, can be used to manage the s and cables for non-power related fPuDnctionality. USB4 Mode Port ® VCONN Port Alte irsn uasteed M tood eenter the oPfD operation. s and cables can support functionality beCyaopnadb ipliotiweser. For Mexoadmeple, a cable can have active components that require power or a /cable can support a video display such as DisplayPort. defines an infrastructure to discover these additional and - s that include: Port Cable Plug Capabilities - Discovering a SV oIDr Port 'Csa ble Plug. - Discovery of the Modes a Port or Cable Plug supports. - Discovery ofM thoed e s a or Port suppCoarbtsl.e Plug - Entry inMtoo ad e supported by tPhoer t and/Coarb le Plug. Revision 3.x [USBPD 2.0] BMCSignaling [USB Type-C 2.4] Revision 2.0 of the USB Power Delivery specification is designed to be fully inter-operable with systems using over the connector and to be compatible with hardware.", "tables": [], "figures": [], "page_range": [54, 54]}
{"section_path": "2.3 USB Power Delivery Capable Devices", "start_heading": "2.3 USB Power Delivery Capable Devices", "content": "Revision 3.x Revision 2.0 Revision Port Partner Cable Plug This specificationR emviasniodnates that all Section 6. 2sy.1s.1te.5m, s\"S fpuellcyi fsicuaptpioonr tR evision\" operation. They must discover the supported used by their and any connected s and revert to operation using the lowest common nEuxmtebnedre (ds Meee ssage ). Section 6.2.1.2, \"Extended Message Header\" Message Revision 2.0 This specificationC hduenfikniensg s containing data Mofe usspa gtoe 260 bytes (see Revision 2.0 ). These s can be larger tMhaens seaxgpeected by existing PHY HW. To accommodate based systems a mechanism is mandated such that s are limited to sizes unless it is discovered that both systems support the Vloenngdeorr Data Ob jleecntgthVsD. O Alternate Mode Adapter AMA Section 6.4.4.2, \"Structured VDM\" This specification VinDcOludes changes to the Structured Vensd (or De)f iunseedd M ine stshaeg deisScVoDveMry Voef rpsaiosnsive/active marked cables and Version s ( ) (see VDO ). To enable systems to determine which format is being used the ( ) number has been incremented to 2.x. numbers have also been incorporated into the s themselves to facilitate 2fut.u3re change s Uif tSheBse Pbeocowmee nre cDessealryiv. ery Capable Devices Figure 2.1, \"Logical Structure of USB Power Delivery Capable Devices\" USB Host USB Device Hub Charger Some examples of USB Power Delivery capable devices can be seen in (a, a, a, and a ). These are given for reference only and are not intended to liFmigitu trhee 2 p.1os Lsoibgliec caol nSftirguucrtautiroen os fo Uf SpBro Pdouwctes rt hDaet lciavne rbye C baupilat bulsei nDge tvhiicse sspecification. USB Host USB Device USB Hub USB Charger External UFP External UFP External External power power power power Power Power Power Power Storage Storage Storage Storage DFP DFP DFP Legend Multiple Power Multiple Power inputs/outputs outputs Optional Optional Power input Power input Feature Port Provider Source Consumer Sink Each USB Power Delivery capable device is assumed to be made up of at least one. s are assumed to hav- e a UFP and s a. Each device contains one, or more, of the following components:  s that:  Sink Power. SOP Packet  COopmtiomnuanlilcyate using sS.OP’ Packet SOP’’ Packet  Optionally Communicate usiDnuga l-Role Powesr/ Device s.  Optionally source power (a ).  Optionally communAicltaetren vaitae U MSoBd.e - DFP support s. s that:   Source Power SOP Packet  COopmtiomnuanlilcyate using sS.OP* Packet  Optionally Communicate uDsuianlg-R ole Power Dse.vice  Optionally Sink power (a ).  Optionally communAicltaetren vaitae U MSoBd.e - Source support s. A that can be:  An externally powerBeda tstoeuryrce (e.g., AC powered).  Power Storage (e.g., Port /Power Bank). Hub - SiDnekrived from another (e.g., bus-powered ). A that can be: Battery  Power Storage (e.g., a /Power Bank).  Used to power internal Afuttnaccthioends. Hub - VCUOsNeNd Stoo uprocweer devices to other devices (e.g., a bus-powered ). A thPaotr:t Partner DFP UFP Source Sink  Can be eitheCra ble Plug, either the / or /.  Powers tVhPeD VCONN P(osw).ered USB Device  Powers Pso r(t Cablse).Plug Is the only allowed to talk to the (s) at any given time.", "tables": [], "figures": ["Figure 2.1"], "page_range": [55, 56]}
{"section_path": "2.4 SOP* Communication", "start_heading": "2.4 SOP* Communication", "content": "Start of Packet SOP Port Partner SOP Communication Cable Plug SOP’ Communication SOP’’ TCohme munication SO (PorS OP’) is uSsOedP ’a’s an addressing scheme to ideSnOtiPfy* wheStOhPe*r Cthoem cmomunmicuantiiocnations were intended for oCnCe of the Cable Plsu (g SOP’ Commun)i coar toionne oSfO tPh’e’ C ommunicast i(on / ). / and are collectPivDely referred to as. All s take place over a single wire ( ). The term in the / case is used to represent a logical entity in the cable which is capable of Communication, and which might or might not be physically lNoocatete:d in the plug. SOP There are there are other s defined for special operation suchP aosr tdebuPgo rwthich Paroer tnot Cdaisbclue sPsleudg here. The following sections describe how this addressing scheme operates for -to- and to c2o.m4m.2unication. SOP* Collision Avoidance SOP* Source Sink Explicit Contract Source For all the R co-ordinates communicSaintikon to avoid bus collisioAntosm biyc aMlleoswsaingge Stheqe uence toA inMiStiate AMS messaging when it does not needSo tuor ccoemmunicate itself. OCnacbel ea nP lug is iSno purlaccee, the maAnMipSulates its p value (3A) Rto indicate to the that it can initiaStein akn Source ( ). This Scainnk bSeO cPo*m Cmomunmiucantiicoanti wonith the or with one of the AMS s. As soon as the Port itself needsA tMo Sinitiate an CC, it wiIldl lmeanipulate its p valuMee (s1sa.5gAe) to CinCdicate this to the. The then waits for any outstanding to complete before initiating an itself. In all cases, the initiating an waits f2or.4.3 to be b eSfoOreP pu Cttoinmg thme unica otni on. SOP Communication Port Port Source Sink SOP Communication Port Partner Cable Plug SOP Communication SOP* Commun iicsa utisoend for -to- communication between the and the. is recognized by both s but not by any intervening s. takes priority over o2th.4er. 4 SOP'/sS sOincPe 'i't iCs corimticmal tou cnomicpalettei oponw ewr rietlahte Cd oapberlaeti oPnsl uasg ssoon as possible. SOP’ Communication Cable Plug [USB Type-C 2.4] SOP’’ Communication SOP’ Communication SOP’ SOP’’ is recognized by electronics in one (see ). can also be supported when is also supported. and assignment in the cable aSsOsPe mCobmlym isu nfiixceadti oannd does not chaPnogrte Pdayrntanmerically. Cable Plug Figure 2.2, \"Example SOP' Communication between VCONN Source and Cable Plug(s)\" SOP* Communication VCONN Source DFP U bFePtween the Cable Plug s is not recognized by the. outlines the usage of s between a SOP* (Comm/unic)a atniodn the s. CC SOP* Communication SSOinPceS aOllP ’ SOP’’Packet s take place over a sinIdgllee wire ( ), the Packet periods must be coordinated to prevent importPaonrt tc Poamrmtnuenrication from being blocked. For a product which does not rCeacbolgen Pilzueg / or s, this will look lSiokfet aR ensoent- H acrhda nRneesel,t leading to missed s and retries. Communications between the s take precedence meaning that communications with the can be inDteefraruulpt tCeodn btruatc wtill nImotp lliecaitd C toon at ract or. Power Role Swap Fast Role Swap Source Port VCONN Packet Cable Plug SOP’ When a Packet or Cable Plug SOP ’is in placGe o(eo.dgC., RatC sMtaerstsuapg, eafter a oCr able Plug ) only the F tihgautr ies 2s.u2p, \"pElyxianmgp le SOP i's C aolmlomwuedni tcoa tsieonnd b etweens Vto CO a N N Source an (d Cab)l ae nPdlu igs (asl)l\"owed to respond to s from the C(able )P wluigth a in order to dVi Cs Oc No Nv eSro uthrece 's characteristics (see SOP Packet SOP’ Packet Sink Cabl)e. PDluurging Dthiissc pahrdasse, all ScOomP’ mPaucnkiectation with the is initiated and controlled by the which acts to prevent conflicts between s and s. The does not communicate with the and Eaxnpyl icit Contracts received. VCONN Source DFP UFP Cable Plug SOP’ Packet SOP’’ Packet Figure 2.2, \"Example SOP' Communication between VCONN WSohuercne a ann d Cable Plug(s)\" is in place, only the (either the C aobr lteh Pel ug ) can communicate with the VCONN S(so)u urcseing s/ s (see SOP* Packet VCONN Source ). During this phase, all communication with the is initiated and controlled by the which acts to prevent conflicts between s. The Port that is not the is not", "tables": [], "figures": [], "page_range": [57, 57]}
{"section_path": "2.4.1 Introduction", "start_heading": "2.4.1 Introduction", "content": "Start of Packet SOP Port Partner SOP Communication Cable Plug SOP’ Communication SOP’’ TCohme munication SO (PorS OP’) is uSsOedP ’a’s an addressing scheme to ideSnOtiPfy* wheStOhPe*r Cthoem cmomunmicuantiiocnations were intended for oCnCe of the Cable Plsu (g SOP’ Commun)i coar toionne oSfO tPh’e’ C ommunicast i(on / ). / and are collectPivDely referred to as. All s take place over a single wire ( ). The term in the / case is used to represent a logical entity in the cable which is capable of Communication, and which might or might not be physically lNoocatete:d in the plug. SOP There are there are other s defined for special operation suchP aosr tdebuPgo rwthich Paroer tnot Cdaisbclue sPsleudg here. The following sections describe how this addressing scheme operates for -to- and to c2o.m4m.2unication. SOP* Collision Avoidance SOP* Source Sink Explicit Contract Source For all the R co-ordinates communicSaintikon to avoid bus collisioAntosm biyc aMlleoswsaingge Stheqe uence toA inMiStiate AMS messaging when it does not needSo tuor ccoemmunicate itself. OCnacbel ea nP lug is iSno purlaccee, the maAnMipSulates its p value (3A) Rto indicate to the that it can initiaStein akn Source ( ). This Scainnk bSeO cPo*m Cmomunmiucantiicoanti wonith the or with one of the AMS s. As soon as the Port itself needsA tMo Sinitiate an CC, it wiIldl lmeanipulate its p valuMee (s1sa.5gAe) to CinCdicate this to the. The then waits for any outstanding to complete before initiating an itself. In all cases, the initiating an waits f2or.4.3 to be b eSfoOreP pu Cttoinmg thme unica otni on. SOP Communication Port Port Source Sink SOP Communication Port Partner Cable Plug SOP Communication SOP* Commun iicsa utisoend for -to- communication between the and the. is recognized by both s but not by any intervening s. takes priority over o2th.4er. 4 SOP'/sS sOincPe 'i't iCs corimticmal tou cnomicpalettei oponw ewr rietlahte Cd oapberlaeti oPnsl uasg ssoon as possible. SOP’ Communication Cable Plug [USB Type-C 2.4] SOP’’ Communication SOP’ Communication SOP’ SOP’’ is recognized by electronics in one (see ). can also be supported when is also supported. and assignment in the cable aSsOsPe mCobmlym isu nfiixceadti oannd does not chaPnogrte Pdayrntanmerically. Cable Plug Figure 2.2, \"Example SOP' Communication between VCONN Source and Cable Plug(s)\" SOP* Communication VCONN Source DFP U bFePtween the Cable Plug s is not recognized by the. outlines the usage of s between a SOP* (Comm/unic)a atniodn the s. CC SOP* Communication SSOinPceS aOllP ’ SOP’’Packet s take place over a sinIdgllee wire ( ), the Packet periods must be coordinated to prevent importPaonrt tc Poamrmtnuenrication from being blocked. For a product which does not rCeacbolgen Pilzueg / or s, this will look lSiokfet aR ensoent- H acrhda nRneesel,t leading to missed s and retries. Communications between the s take precedence meaning that communications with the can be inDteefraruulpt tCeodn btruatc wtill nImotp lliecaitd C toon at ract or. Power Role Swap Fast Role Swap Source Port VCONN Packet Cable Plug SOP’ When a Packet or Cable Plug SOP ’is in placGe o(eo.dgC., RatC sMtaerstsuapg, eafter a oCr able Plug ) only the F tihgautr ies 2s.u2p, \"pElyxianmgp le SOP i's C aolmlomwuedni tcoa tsieonnd b etweens Vto CO a N N Source an (d Cab)l ae nPdlu igs (asl)l\"owed to respond to s from the C(able )P wluigth a in order to dVi Cs Oc No Nv eSro uthrece 's characteristics (see SOP Packet SOP’ Packet Sink Cabl)e. PDluurging Dthiissc pahrdasse, all ScOomP’ mPaucnkiectation with the is initiated and controlled by the which acts to prevent conflicts between s and s. The does not communicate with the and Eaxnpyl icit Contracts received. VCONN Source DFP UFP Cable Plug SOP’ Packet SOP’’ Packet Figure 2.2, \"Example SOP' Communication between VCONN WSohuercne a ann d Cable Plug(s)\" is in place, only the (either the C aobr lteh Pel ug ) can communicate with the VCONN S(so)u urcseing s/ s (see SOP* Packet VCONN Source ). During this phase, all communication with the is initiated and controlled by the which acts to prevent conflicts between s. The Port that is not the is not", "tables": [], "figures": [], "page_range": [57, 57]}
{"section_path": "2.4.2 SOP* Collision Avoidance", "start_heading": "2.4.2 SOP* Collision Avoidance", "content": "Start of Packet SOP Port Partner SOP Communication Cable Plug SOP’ Communication SOP’’ TCohme munication SO (PorS OP’) is uSsOedP ’a’s an addressing scheme to ideSnOtiPfy* wheStOhPe*r Cthoem cmomunmicuantiiocnations were intended for oCnCe of the Cable Plsu (g SOP’ Commun)i coar toionne oSfO tPh’e’ C ommunicast i(on / ). / and are collectPivDely referred to as. All s take place over a single wire ( ). The term in the / case is used to represent a logical entity in the cable which is capable of Communication, and which might or might not be physically lNoocatete:d in the plug. SOP There are there are other s defined for special operation suchP aosr tdebuPgo rwthich Paroer tnot Cdaisbclue sPsleudg here. The following sections describe how this addressing scheme operates for -to- and to c2o.m4m.2unication. SOP* Collision Avoidance SOP* Source Sink Explicit Contract Source For all the R co-ordinates communicSaintikon to avoid bus collisioAntosm biyc aMlleoswsaingge Stheqe uence toA inMiStiate AMS messaging when it does not needSo tuor ccoemmunicate itself. OCnacbel ea nP lug is iSno purlaccee, the maAnMipSulates its p value (3A) Rto indicate to the that it can initiaStein akn Source ( ). This Scainnk bSeO cPo*m Cmomunmiucantiicoanti wonith the or with one of the AMS s. As soon as the Port itself needsA tMo Sinitiate an CC, it wiIldl lmeanipulate its p valuMee (s1sa.5gAe) to CinCdicate this to the. The then waits for any outstanding to complete before initiating an itself. In all cases, the initiating an waits f2or.4.3 to be b eSfoOreP pu Cttoinmg thme unica otni on. SOP Communication Port Port Source Sink SOP Communication Port Partner Cable Plug SOP Communication SOP* Commun iicsa utisoend for -to- communication between the and the. is recognized by both s but not by any intervening s. takes priority over o2th.4er. 4 SOP'/sS sOincPe 'i't iCs corimticmal tou cnomicpalettei oponw ewr rietlahte Cd oapberlaeti oPnsl uasg ssoon as possible. SOP’ Communication Cable Plug [USB Type-C 2.4] SOP’’ Communication SOP’ Communication SOP’ SOP’’ is recognized by electronics in one (see ). can also be supported when is also supported. and assignment in the cable aSsOsPe mCobmlym isu nfiixceadti oannd does not chaPnogrte Pdayrntanmerically. Cable Plug Figure 2.2, \"Example SOP' Communication between VCONN Source and Cable Plug(s)\" SOP* Communication VCONN Source DFP U bFePtween the Cable Plug s is not recognized by the. outlines the usage of s between a SOP* (Comm/unic)a atniodn the s. CC SOP* Communication SSOinPceS aOllP ’ SOP’’Packet s take place over a sinIdgllee wire ( ), the Packet periods must be coordinated to prevent importPaonrt tc Poamrmtnuenrication from being blocked. For a product which does not rCeacbolgen Pilzueg / or s, this will look lSiokfet aR ensoent- H acrhda nRneesel,t leading to missed s and retries. Communications between the s take precedence meaning that communications with the can be inDteefraruulpt tCeodn btruatc wtill nImotp lliecaitd C toon at ract or. Power Role Swap Fast Role Swap Source Port VCONN Packet Cable Plug SOP’ When a Packet or Cable Plug SOP ’is in placGe o(eo.dgC., RatC sMtaerstsuapg, eafter a oCr able Plug ) only the F tihgautr ies 2s.u2p, \"pElyxianmgp le SOP i's C aolmlomwuedni tcoa tsieonnd b etweens Vto CO a N N Source an (d Cab)l ae nPdlu igs (asl)l\"owed to respond to s from the C(able )P wluigth a in order to dVi Cs Oc No Nv eSro uthrece 's characteristics (see SOP Packet SOP’ Packet Sink Cabl)e. PDluurging Dthiissc pahrdasse, all ScOomP’ mPaucnkiectation with the is initiated and controlled by the which acts to prevent conflicts between s and s. The does not communicate with the and Eaxnpyl icit Contracts received. VCONN Source DFP UFP Cable Plug SOP’ Packet SOP’’ Packet Figure 2.2, \"Example SOP' Communication between VCONN WSohuercne a ann d Cable Plug(s)\" is in place, only the (either the C aobr lteh Pel ug ) can communicate with the VCONN S(so)u urcseing s/ s (see SOP* Packet VCONN Source ). During this phase, all communication with the is initiated and controlled by the which acts to prevent conflicts between s. The Port that is not the is not", "tables": [], "figures": [], "page_range": [57, 57]}
{"section_path": "2.4.3 SOP Communication", "start_heading": "2.4.3 SOP Communication", "content": "Start of Packet SOP Port Partner SOP Communication Cable Plug SOP’ Communication SOP’’ TCohme munication SO (PorS OP’) is uSsOedP ’a’s an addressing scheme to ideSnOtiPfy* wheStOhPe*r Cthoem cmomunmicuantiiocnations were intended for oCnCe of the Cable Plsu (g SOP’ Commun)i coar toionne oSfO tPh’e’ C ommunicast i(on / ). / and are collectPivDely referred to as. All s take place over a single wire ( ). The term in the / case is used to represent a logical entity in the cable which is capable of Communication, and which might or might not be physically lNoocatete:d in the plug. SOP There are there are other s defined for special operation suchP aosr tdebuPgo rwthich Paroer tnot Cdaisbclue sPsleudg here. The following sections describe how this addressing scheme operates for -to- and to c2o.m4m.2unication. SOP* Collision Avoidance SOP* Source Sink Explicit Contract Source For all the R co-ordinates communicSaintikon to avoid bus collisioAntosm biyc aMlleoswsaingge Stheqe uence toA inMiStiate AMS messaging when it does not needSo tuor ccoemmunicate itself. OCnacbel ea nP lug is iSno purlaccee, the maAnMipSulates its p value (3A) Rto indicate to the that it can initiaStein akn Source ( ). This Scainnk bSeO cPo*m Cmomunmiucantiicoanti wonith the or with one of the AMS s. As soon as the Port itself needsA tMo Sinitiate an CC, it wiIldl lmeanipulate its p valuMee (s1sa.5gAe) to CinCdicate this to the. The then waits for any outstanding to complete before initiating an itself. In all cases, the initiating an waits f2or.4.3 to be b eSfoOreP pu Cttoinmg thme unica otni on. SOP Communication Port Port Source Sink SOP Communication Port Partner Cable Plug SOP Communication SOP* Commun iicsa utisoend for -to- communication between the and the. is recognized by both s but not by any intervening s. takes priority over o2th.4er. 4 SOP'/sS sOincPe 'i't iCs corimticmal tou cnomicpalettei oponw ewr rietlahte Cd oapberlaeti oPnsl uasg ssoon as possible. SOP’ Communication Cable Plug [USB Type-C 2.4] SOP’’ Communication SOP’ Communication SOP’ SOP’’ is recognized by electronics in one (see ). can also be supported when is also supported. and assignment in the cable aSsOsPe mCobmlym isu nfiixceadti oannd does not chaPnogrte Pdayrntanmerically. Cable Plug Figure 2.2, \"Example SOP' Communication between VCONN Source and Cable Plug(s)\" SOP* Communication VCONN Source DFP U bFePtween the Cable Plug s is not recognized by the. outlines the usage of s between a SOP* (Comm/unic)a atniodn the s. CC SOP* Communication SSOinPceS aOllP ’ SOP’’Packet s take place over a sinIdgllee wire ( ), the Packet periods must be coordinated to prevent importPaonrt tc Poamrmtnuenrication from being blocked. For a product which does not rCeacbolgen Pilzueg / or s, this will look lSiokfet aR ensoent- H acrhda nRneesel,t leading to missed s and retries. Communications between the s take precedence meaning that communications with the can be inDteefraruulpt tCeodn btruatc wtill nImotp lliecaitd C toon at ract or. Power Role Swap Fast Role Swap Source Port VCONN Packet Cable Plug SOP’ When a Packet or Cable Plug SOP ’is in placGe o(eo.dgC., RatC sMtaerstsuapg, eafter a oCr able Plug ) only the F tihgautr ies 2s.u2p, \"pElyxianmgp le SOP i's C aolmlomwuedni tcoa tsieonnd b etweens Vto CO a N N Source an (d Cab)l ae nPdlu igs (asl)l\"owed to respond to s from the C(able )P wluigth a in order to dVi Cs Oc No Nv eSro uthrece 's characteristics (see SOP Packet SOP’ Packet Sink Cabl)e. PDluurging Dthiissc pahrdasse, all ScOomP’ mPaucnkiectation with the is initiated and controlled by the which acts to prevent conflicts between s and s. The does not communicate with the and Eaxnpyl icit Contracts received. VCONN Source DFP UFP Cable Plug SOP’ Packet SOP’’ Packet Figure 2.2, \"Example SOP' Communication between VCONN WSohuercne a ann d Cable Plug(s)\" is in place, only the (either the C aobr lteh Pel ug ) can communicate with the VCONN S(so)u urcseing s/ s (see SOP* Packet VCONN Source ). During this phase, all communication with the is initiated and controlled by the which acts to prevent conflicts between s. The Port that is not the is not", "tables": [], "figures": [], "page_range": [57, 57]}
{"section_path": "2.4.4 SOP'/SOP'' Communication with Cable Plugs", "start_heading": "2.4.4 SOP'/SOP'' Communication with Cable Plugs", "content": "Start of Packet SOP Port Partner SOP Communication Cable Plug SOP’ Communication SOP’’ TCohme munication SO (PorS OP’) is uSsOedP ’a’s an addressing scheme to ideSnOtiPfy* wheStOhPe*r Cthoem cmomunmicuantiiocnations were intended for oCnCe of the Cable Plsu (g SOP’ Commun)i coar toionne oSfO tPh’e’ C ommunicast i(on / ). / and are collectPivDely referred to as. All s take place over a single wire ( ). The term in the / case is used to represent a logical entity in the cable which is capable of Communication, and which might or might not be physically lNoocatete:d in the plug. SOP There are there are other s defined for special operation suchP aosr tdebuPgo rwthich Paroer tnot Cdaisbclue sPsleudg here. The following sections describe how this addressing scheme operates for -to- and to c2o.m4m.2unication. SOP* Collision Avoidance SOP* Source Sink Explicit Contract Source For all the R co-ordinates communicSaintikon to avoid bus collisioAntosm biyc aMlleoswsaingge Stheqe uence toA inMiStiate AMS messaging when it does not needSo tuor ccoemmunicate itself. OCnacbel ea nP lug is iSno purlaccee, the maAnMipSulates its p value (3A) Rto indicate to the that it can initiaStein akn Source ( ). This Scainnk bSeO cPo*m Cmomunmiucantiicoanti wonith the or with one of the AMS s. As soon as the Port itself needsA tMo Sinitiate an CC, it wiIldl lmeanipulate its p valuMee (s1sa.5gAe) to CinCdicate this to the. The then waits for any outstanding to complete before initiating an itself. In all cases, the initiating an waits f2or.4.3 to be b eSfoOreP pu Cttoinmg thme unica otni on. SOP Communication Port Port Source Sink SOP Communication Port Partner Cable Plug SOP Communication SOP* Commun iicsa utisoend for -to- communication between the and the. is recognized by both s but not by any intervening s. takes priority over o2th.4er. 4 SOP'/sS sOincPe 'i't iCs corimticmal tou cnomicpalettei oponw ewr rietlahte Cd oapberlaeti oPnsl uasg ssoon as possible. SOP’ Communication Cable Plug [USB Type-C 2.4] SOP’’ Communication SOP’ Communication SOP’ SOP’’ is recognized by electronics in one (see ). can also be supported when is also supported. and assignment in the cable aSsOsPe mCobmlym isu nfiixceadti oannd does not chaPnogrte Pdayrntanmerically. Cable Plug Figure 2.2, \"Example SOP' Communication between VCONN Source and Cable Plug(s)\" SOP* Communication VCONN Source DFP U bFePtween the Cable Plug s is not recognized by the. outlines the usage of s between a SOP* (Comm/unic)a atniodn the s. CC SOP* Communication SSOinPceS aOllP ’ SOP’’Packet s take place over a sinIdgllee wire ( ), the Packet periods must be coordinated to prevent importPaonrt tc Poamrmtnuenrication from being blocked. For a product which does not rCeacbolgen Pilzueg / or s, this will look lSiokfet aR ensoent- H acrhda nRneesel,t leading to missed s and retries. Communications between the s take precedence meaning that communications with the can be inDteefraruulpt tCeodn btruatc wtill nImotp lliecaitd C toon at ract or. Power Role Swap Fast Role Swap Source Port VCONN Packet Cable Plug SOP’ When a Packet or Cable Plug SOP ’is in placGe o(eo.dgC., RatC sMtaerstsuapg, eafter a oCr able Plug ) only the F tihgautr ies 2s.u2p, \"pElyxianmgp le SOP i's C aolmlomwuedni tcoa tsieonnd b etweens Vto CO a N N Source an (d Cab)l ae nPdlu igs (asl)l\"owed to respond to s from the C(able )P wluigth a in order to dVi Cs Oc No Nv eSro uthrece 's characteristics (see SOP Packet SOP’ Packet Sink Cabl)e. PDluurging Dthiissc pahrdasse, all ScOomP’ mPaucnkiectation with the is initiated and controlled by the which acts to prevent conflicts between s and s. The does not communicate with the and Eaxnpyl icit Contracts received. VCONN Source DFP UFP Cable Plug SOP’ Packet SOP’’ Packet Figure 2.2, \"Example SOP' Communication between VCONN WSohuercne a ann d Cable Plug(s)\" is in place, only the (either the C aobr lteh Pel ug ) can communicate with the VCONN S(so)u urcseing s/ s (see SOP* Packet VCONN Source ). During this phase, all communication with the is initiated and controlled by the which acts to prevent conflicts between s. The Port that is not the is not Cable Plug SOP’ Packet SOP’’ Packet DFP VCONN Source SOP* Packet Mode allowed to commMuodnaicla Otep ewraitthio tnhe and does not recognize any s/ s received. Only the, when acting as a, is allowed to send s to control the entry and exiting of s and to managFei gure 2.2 Exampl.e SOP' Communication between VCONN Source and Cable Plug(s) VCONN Source VCONN C Pa lub gle 1 Electronically Marked C Pa lub gle 1 (DFP/UFP) (SOP’) Cable (SOP’’) SOP’ signaling SOP’’ signaling SOP signaling", "tables": [], "figures": [], "page_range": [57, 58]}
{"section_path": "2.5 Operational Overview", "start_heading": "2.5 Operational Overview", "content": "Port Source Port Sink Source Port Sink Port PD Connection Port Partner Attach ASo UuSrcBe P Poowrter DelPivoerrty R supplying powe[Ur iSsB k Tnyopwen- Ca s2 a.4 ] and a DFP consVu Cm ONin Ng S poouwrceer is kAntotawcnh as a Sink. PTohretre is oPnolyrt one R and one UFP in each VCONN So ubrecteween the s. At the (the with p asserted see ) is also the and. At the (the witPhD d asserted) is also theS ourc aend is not the. Mode Standard Power Range SPR First Explicit Contract Contract Default Contract TImhpe loicriitg Cinoanlt UraScBt specificatiSoPnR alCloownterdac t s to deliOveprt iuopn taol 100W. This claMssoicd e of operation isE rxetefenrdreedd tPoo wase trh Rea nge EPR So (urce). The, the first EPR Mod aefter a or SPR Mode, is always an. There is an higher power referMreodd teo as the (SPR)E wxphliecriet Cthoen tract is allowed to deliver upSo tuor 2c4e 0PWor.t The Sink Port can only be entered from the EPR. The entry process is designed to prevent accidental entry into this higher power. It can be entered only when an is in place and both the and as well as the cable support.Source SinkPower Role DFP UFPData Role VCONN Source Port Source SinkPower Role Dual-Role Power Port TDhReP Po/rt s, D/FP UFPDatsa a Rnodl e D ruoalel- Rcaonle a Dlla stuab PsoerqtueDnRtDly be swapped orthogonally to each other. A that supports both and s is called a ( ).U AS B Co mthmatu snuicpaptoiornts both and s iDs FcPalDleadt aa Role Port ( ). USB Host USB Communication UFPData Role Port When USB Devisc ecapability is supported in the then the will also be able to act as a. Similarly, when s capability is supported in the then the will also be able to act as a. DFP UFP Source Sink The following sectiPoDns describe the high-levelP oDpUeSraBt iDoenv oicfe portsS etactkiionng 9o.1n. 2th, \"eM roalpepsi nogf to U,S B De, vice Sta atnesd\". F2o.r5 d.e1tails of how So muarpcs eto OUSpBe straatets iino an see. Source Attachment The- A otptaecrhates dPifDfe Creonntnleyc dtieopnendCinogn torna citts status: At S (onuor ce Port orS ource ): SinkAttachment  For a DRP -only the So duertceects Sin k. Port Source Port Attachment Sink For a that toggles between and operation, the becomes a on  Source of a vSafe5V - The PD Conn tehcetnio snuppliPeDs Connect.ion Contract Before So (unroc e_Capabilities oMre ssage ): Source Cable Capabilities Advertise Capabilities Cable Capabilities Prior to sending s the can detect the and  s its depending on the USB Type-C detected:  The dSoeufarucelt current carrying capability of a cCaabblel ei sP 3luAg. SOP’ Packet Cable Plug Capabilities The can attempt to communicate with one of the s using s. If the responds, then communication takes place to discover the cable's (e.g., 5A  caSpouarbclee). Advertise Capabilities Source_CapabilitiesMessage tTypeCSendSourceCap The periodically s its by sending s every - PD Connection. PD Connection Contract Establishing PD Capabl e(nPoo rt Partner or ): Presence of a GoodCR CMessage is detected eithSeoru:rce_CapabilitiesMessage  By receiving Ha ard Reset Signalin gin response to a. - By receiviFnigr st Explicit Co ntract. Attach Hard Reset USB Type-CError Recovery Implicit Contract Power Role Swap Fast Role Swap Establishing the after an,, or as a result of a or :", "tables": [], "figures": [], "page_range": [59, 59]}
{"section_path": "2.5.1 Source Operation", "start_heading": "2.5.1 Source Operation", "content": "Port Source Port Sink Source Port Sink Port PD Connection Port Partner Attach ASo UuSrcBe P Poowrter DelPivoerrty R supplying powe[Ur iSsB k Tnyopwen- Ca s2 a.4 ] and a DFP consVu Cm ONin Ng S poouwrceer is kAntotawcnh as a Sink. PTohretre is oPnolyrt one R and one UFP in each VCONN So ubrecteween the s. At the (the with p asserted see ) is also the and. At the (the witPhD d asserted) is also theS ourc aend is not the. Mode Standard Power Range SPR First Explicit Contract Contract Default Contract TImhpe loicriitg Cinoanlt UraScBt specificatiSoPnR alCloownterdac t s to deliOveprt iuopn taol 100W. This claMssoicd e of operation isE rxetefenrdreedd tPoo wase trh Rea nge EPR So (urce). The, the first EPR Mod aefter a or SPR Mode, is always an. There is an higher power referMreodd teo as the (SPR)E wxphliecriet Cthoen tract is allowed to deliver upSo tuor 2c4e 0PWor.t The Sink Port can only be entered from the EPR. The entry process is designed to prevent accidental entry into this higher power. It can be entered only when an is in place and both the and as well as the cable support.Source SinkPower Role DFP UFPData Role VCONN Source Port Source SinkPower Role Dual-Role Power Port TDhReP Po/rt s, D/FP UFPDatsa a Rnodl e D ruoalel- Rcaonle a Dlla stuab PsoerqtueDnRtDly be swapped orthogonally to each other. A that supports both and s is called a ( ).U AS B Co mthmatu snuicpaptoiornts both and s iDs FcPalDleadt aa Role Port ( ). USB Host USB Communication UFPData Role Port When USB Devisc ecapability is supported in the then the will also be able to act as a. Similarly, when s capability is supported in the then the will also be able to act as a. DFP UFP Source Sink The following sectiPoDns describe the high-levelP oDpUeSraBt iDoenv oicfe portsS etactkiionng 9o.1n. 2th, \"eM roalpepsi nogf to U,S B De, vice Sta atnesd\". F2o.r5 d.e1tails of how So muarpcs eto OUSpBe straatets iino an see. Source Attachment The- A otptaecrhates dPifDfe Creonntnleyc dtieopnendCinogn torna citts status: At S (onuor ce Port orS ource ): SinkAttachment  For a DRP -only the So duertceects Sin k. Port Source Port Attachment Sink For a that toggles between and operation, the becomes a on  Source of a vSafe5V - The PD Conn tehcetnio snuppliPeDs Connect.ion Contract Before So (unroc e_Capabilities oMre ssage ): Source Cable Capabilities Advertise Capabilities Cable Capabilities Prior to sending s the can detect the and  s its depending on the USB Type-C detected:  The dSoeufarucelt current carrying capability of a cCaabblel ei sP 3luAg. SOP’ Packet Cable Plug Capabilities The can attempt to communicate with one of the s using s. If the responds, then communication takes place to discover the cable's (e.g., 5A  caSpouarbclee). Advertise Capabilities Source_CapabilitiesMessage tTypeCSendSourceCap The periodically s its by sending s every - PD Connection. PD Connection Contract Establishing PD Capabl e(nPoo rt Partner or ): Presence of a GoodCR CMessage is detected eithSeoru:rce_CapabilitiesMessage  By receiving Ha ard Reset Signalin gin response to a. - By receiviFnigr st Explicit Co ntract. Attach Hard Reset USB Type-CError Recovery Implicit Contract Power Role Swap Fast Role Swap Establishing the after an,, or as a result of a or :  Source RequestMessage Sink Valid AcceptMessage PS_RDYMessage The receives a Expl ifcriot mCo tnhter act and, if this is a request, responds with an followed by a when its power supply is ready to source power  at DthFeP agreed level. At this poiSnOt Pa’n P acket SOP’’ Pa hcakse tbeen agreed. SOP’ Packet SOP’’ Packet Discards A that does not generate s or s, is not required to detect s or - Expsli caint dC ontract P tEh_eSmRC. _Ready When inS oaunr ce ( State): Message Message Local Policy The processes and responds (if a response is required) to all s received and sends approprSioauter ce s whenSienvker its Cap raebqiuliitrieess: Source_Capabilities Message The informs the whenever its change, by sending a  Sour.ce SinkRequestMessage Capabilities Source_CapabilitiesMessage The responds to a with the mismatch bit set, by  sendSinoug rac e R with its maximuCmC available powCeor.llision Avoidance  The P woriltl alwDayRsP haveS aonu rcpe value asserted on its wire used for Powe.r Role Power Role Swap Port Sink Implicit Contract EWxhpelinci tth Cios ntrac its a Nego tthiaet e can initiate or receive a request for the exchange of s. After the this will be a and in an until an  Port is DRD Sodu irmcemediately afterwards. Data Role Data Role Swap DFP USB Host UFP USB Device Port WSohuercne this iVs C a O NN So tuhrec e can initiate or receive a request for an exchange of s. After a the ( ) becomes a ( ). The remains a  So uarncde the role remains unchanged. VCONN Source VCONN SwapVCONN Port Port Source DFP TUhFeP Data R ocalen initiate or receive a request for an exchange of role. During a is applied by both s (make before break). The remains a and /  Sou rce s remainV uCOnNcNh aSnoguerdce. Cable Plug SOP’ Communication SOP’’ Communication SOP CTohme munica wtiohnen it is the can communicate with a using or at any time it is not engaged in any other  SOP Packe:t Source SOP’ Communication SOP’’ Communication SOP’ Communication SOP’’ Communication Cable Plug If s are received by the, during or, the or is immediately terminated (the  times Soouutr acned does not retry). SOP Communication SOP’ Communication SOP’’ Communication Capabilities SOP’ Communication SOP’’ CIfo tmhem unicat inoeneds to initiate an during an ongoing or (e.g., for a change) then the or  Source Posr wtill be inteDrFrPupted. When thSeo urce is also a : Mode Cable Plug Modal Operation The can control the entry and exiting of s in the (s) and control  Sourc.e Unstructured VDM Structured VDM  The Source can initiate s or Mode Sisn.k Modal Operation Structured VDM The can control the entry and exiting of s in the and control - Detachusing s.  So ourr cceommunicationDse ftaaicluhre: VBUS vSafe5V tSafe5V vSafe0V tSafe0V USB Type-CDetach CC A detects plug and takes down to within and within  (i.Seo. uurscieng detection Gvioao dC)R.CMessage Message tReceive When the detects the failure to receive a in response to a within  : Soft Reset tSoftReset CRCReceiveTimer Leads to a, within of the expiring.  Soft Reset Hard Reset tHardReset CRCReceiveTimer VBUS USB Default Operation If the process cannot be completed a will be issued within of the Source to restorVeC ONN Stoou rce VCONN within ~1-1.5s: Hard Reset When the is also the, will also be power cycled during the  So.urce SPR PPS Mode Request Message Sink tPPSTimeout When the operating in fails to receive periodic communication (e.g., a  Sourc)e from the Hard w Rietsheitn VBUS: vSafe5V  Sisosuurecse a and EtaPkRe Ms ode to. EPR_KeepAliveMessage Message Sink tSourceEPRKeepAlive When the operating in the fails to receive periodic communication (i.e., an  Source Hard Roers aenty other VBUS ) fvroSamf et5heV within :  issues a and takes to. Source Receiving no response to further attempts at communication is interpreted by the as an error  (see Error handling). Hard Reset Errors during power transitions will automatically lead to a to restore power to default - levels. ErroPrr ohtaoncdoll iEnrgr:or Soft_ResetMessage Port Partner Negotiate Port Soursc earDeF hPanUdFlePdV b Cy O Na N Source issued by either Modal O, pthearat trieosnets counters, timers and states, but does not change the d voltage and current or the 's  role (e.g.,, /, Hard Rese)t aSnigdn daoliensg not cause an exit Pfroormt P artner Hard R.eset Serious errors are handled Sboyf t Reset issued by either USB De.f Aau lt Operatio:n vSafe0V vSafe5V Sink Resets protocol as for a but also returns the power supply to  ( or Port D aotuat Rpuolte) in oDrFdPer to protect the.  Restores the Port's to.  Restores tShien k 's pVoCwOeNrN tSoo iutrsc UeSB default sVtaCtOeN.N Source Port VCONN Source When the is the it removes then the is restored as the . Active Mode Source Modal Operation  CausHeasr adl lR eset s to be exited sPuocrht tPhaartt tnheer is no longer itnN oResponse. nHardResetCount Hard Reset Source After a Error R eitc oisv eerxypected that the [USB T ywpiell- Cre 2s.p4o]nd within ErrorR. eIcf othviesr dyoes not occur then further s are carried out before the performs additional steps, as defined in, by entering the state.", "tables": [], "figures": [], "page_range": [59, 61]}
{"section_path": "2.5.2 Sink Operation", "start_heading": "2.5.2 Sink Operation", "content": "- Attach PD Connection Contract At Sink (no SourceAttac homr ent ): vSafe5V  dDetRePcts tShoruorucgeh theS pinreksence of Po.rt Sink Port Attachment Source For a that toggles between and operation, the becomes a on  Sin okf a. vSafe5V VBUS Source_CapabilitiesMessage PD CapableSource Once the detects the presence of on it waits for a  indicaStiinnkg the presence of a Source_Ca pabilit.iesMessage tTypeCSinkWaitCap Hard ResetSignaling Source Port Source_CapabilitiesMessage If the Sour cdeo Peos rntot rPeDc eCiavpe aab le within then it can issue in order to cause the to send a  if theS ink is SOP.’ Packet SOP’’ Packet SOP’ Packet SOP’’ Packet Discards The does not generate s or s, is not required to detect s or - PDs C aonndn ection tPhDem C.onnection Contract EstablisShiinnkg Sour (cneo_C apabilitiesMe ossra ge ): GoodCRCMessage  The Sink receives a SOP’ Packet SOP’’ P aancdk ertesponds with a SOP’ Pa.cket SOP’’ Packet Discards The does not generate s or s, is not required to detect s or - s Fainrdst Explicit C othnetrma.ct Attach Hard Reset Implicit Contract Power Role Swap Fast Role Swap Establishing the after an, or as a result of a  Sink or Source_Capa:bilitiesMessage Source Request Message Valid Sink AcceptMessage PS_RDYMessage The rSeocuerivcees a from the and responds with a Sou rce Sink. If this is a requeEstx pthliec it Co nrtercaecivtes an followed by a when the 's power supply is ready to source power at the agreed level. At this point the and S ihnakv Peo ernttered into an Capabil:ities Source vSafe5V [USB 2.0] [USB 3.2] [USB Type-C 2.4] [USBBC 1.2] The cNaeng roetiqauteiosnt one of the offered by the, even if this is the output offered by,, or, in order to enable futureS ipnokwer : Valid RequestMessage  A Sink not requesting any capability wCiatpha ab ilities results in an error. Capability Mismatch RAe que ustnMabelses atog efully operate at the offered requests the default capability but indicates that it would prefer another power level by setting the bit in the and also providing a physical indication of the failure to the end user (e.g.,  Sinuksing an LED). SOP’ Packet SOP’’ Packet SOP’ Packet SOP’’ Packet Discards The does not generate s or s, is not required to detect s or - PD Connse catnidon Explicit tChoenmtr.act PE_SNK_Ready During Sink ( - state): Message Message Local Policy The processes and responds (if a response is required) to all s received and sends  apSpirnokpriate s whenever its requires. Source RequestMessage Sink Port Capabilities Source vAS afe5 wVhose power needs[ hUaSvBe 2c.h0a]n[gUeSdB i n3d.2ic]a[tUesS Bth Tisy tpoe t-Ch e2.4] [ UwSiBthB aC n1e.2w]. The cNaeng oretiqautieosnt one of the previously offered by the, even if this is the output offered by,, or, in order to enable future power : RequestMessage  NoSti nrkequesting any capability with a Ca pabilitie rsesults in an error. Capabilities Mismatch A unable to fully operate at the offered requests an offered capability but indicates a i.e., that it would prefer another power level also providing a physical indication of the failure to the end user (e.g., using an LED).  Sink SPR PPS Mode RequestMessage tPPSRequest A operating in the periodically sends within even  if iStisn rkequest is unchangEePdR. Mode Source EPR_KeepAliveMessage Message tSourceEPRKeepAlive A operating in the periodically communicates with the (i.e., sends an  Sink orR any other CC) within.  The wPilol ratlwaysD hRaPve dS aisnskerted on its wire. Power Role Power Role Swap Port Source Implicit Contract EWxhpelinci tth Cios ntrac its a Nego, ttihaete d can initiate or receive a request for the exchange of s. After the this will be a and an will be in place until an  Port is DRD Sin kimmediately afterwards. Data Role Data Role Swap UFP USB Device DFP USB Host Port Sink VW Ch Oe Nn N tShoius rce is a the can initiate or receive a request for an exchange of s. After a the ( ) becomes a ( ). The remains a and  Sink role (or not) remains unchanged. VCONN Source VCONN Swap VCONN Port Sink DFP UFPData Role The can initiate or receive a request for an exchange of. During a is applied by both ends (make before break). The remains a and / s  remaSiinn kunchanged. VCONN Source Cable Plug SOP’ Communication SOP’’ Communication SOP Communication The when it is the can communicate with a using or SOP Packet at any time itS iisn nkot engagSeOdP i’n C aonmym outhneicra tion SOP’’ Commu:nication SOP’ Communication SOP’’ Communication Cable Plug If s are received by the, during or, the or is immediately terminated (the times  out anSdin dkoes not retry) SOP Communication SOP’ Communication SOP’’ Communication Capabilities SOP’ Communication SOP’’ CIfo tmhem unic anteieodns to initiate an during an ongoing or (e.g., for a change) then the or  Sink Ports will be iDntFePrrupted. When thSein k is alsUon as truct:ured VDM Structured VDM  The Sink can initiate Mode Entry s oMro de Exit Modes. Source Modal Operation [USB4] The can control the and of s in the and control - Detach (e.g. ).  Si nokr Communications FailurVeB:US PD Connection A detects the remvSoavafel 0oVf and interpretHsa trhdi sR aess ettheP eonwde ro Rf tohlee Swap Fast R:ole Swap  SiTnhkis is unless the is due to eitheRr a VBUS, VBUS or.  A deteScintsk plug removal (i.e., absence of pG ooro dCRC) Maneds sdaigsecharges. Message tReceive When the detects the failure to receive a in response to a within  : Soft Reset tSoftReset CRCReceiveTimer  LeadsS toof ta R eset, within of the Hard Reset expiring. tHardReset CRCReceiveTimer VBUS USB Default Operation If the process cannot be completed a will be issued within of  the to restore to within ~1-1.5s. Sink Receiving no response to further attempts at communication is interpreted by the as an  error (sSeinek Error handling). SPR PPS Mode Request Message Source tPPSRequest Source Hard Reset VBUS When thev Safe5 oVperating in the fails to send periodic communication (i.e. a ) to the within, the will issue a that results in  going to Sink. EPR Mode EPR_KeepAliveMessage Message Source tSourceEPRKeepAlive WSohuercne the operHaatirndg R iens ethte failVs B t Uo S send perivoSdaicfe c5oVmmunication (i.e. an or any other ) to the within the will issue a that results in going to.  Hard Reset Errors during power transitions will automatically lead to a to restore power to default - levels. ErroPrr ohtaoncdoll iEnrgr:or Soft_ResetMessage Port Partner Negotiate Port Sink DFPs UarFeP hVa Cn Od Nle Nd S bouy rac e issued by eitheMr odal Operatio, tnhat resets counters, timers and states, but does not change the voltage and current or the 's role  (e.g.,, /, Har)d a Rndes deoteSsi gnnoatl icnaguse an exit from Port Partner.Hard Reset Serious errors are handledS boyf t Reset issued by either USB Def. aAu lt Operatio:n vSafe0V vSafe5V Sink resets protocol as for a but also returns the power supply to  ( or Port Da otau tRpoulte) in UoFrdPer to protect the.  restores thSien k 's VCONN So utor ce. VCONN Source Port VCONN Source when the is the it removes then the is restored as the . Active Mode Source Modal Operation - cHauarsde sR aelsle t s to be exitePdo srutc Pha trhtnate rthe is no longetrT iynp eCSinkWaitCap. Hard Reset UFP PAEft_eSrN aK _Wait_for_ Cita ips aebxpileitciteesd that the will respond within. If this does not occur, then two further s are carried out before the stays in the state.", "tables": [], "figures": [], "page_range": [62, 64]}
{"section_path": "2.5.3 Cable Plugs", "start_heading": "2.5.3 Cable Plugs", "content": "- Cable Plug VCONN Contract s are powered when is present but are not aware of the status of the between - Cthaeb lpeo Prltusg the cable assembAlyM isS connecting. Message - Detach s do not initiate s and only respond to s sent to them.  or Communications Failure:  Communications can be interrupted at any time. DFP UFP Cable Plug  TherCea ibsl ne oP lcuogmmunication timeout scheme between the / and. - The is ready to respond to potentially repeated requests. Error haCnadbllien Pg:lug Hard ResetSignaling Source Sink The detects to determine that the and have been reset and willC naebeled Ptolu rgeset itself (equivalHeanrt dto R ae pseotwSeigr ncaylcilneg).  The Hard Reset cannot generate V BUS VC iOtsNeNlf. Cable Plug The process power cycles both and so this is expected to reset the - Cable Plusg by itselfC. able ResetSignaling A detects to determine that it will need to reset itself (equivalent to a power cycle).", "tables": [], "figures": [], "page_range": [65, 65]}
{"section_path": "2.6 Architectural Overview", "start_heading": "2.6 Architectural Overview", "content": "This logical architecture is not intended to be taken as an implementation architecture. An implementation architecture is, by definition, a part of product definition and is therefore outside of the scope of this specification. TPDhis sectionP oDutlines the high-level logical architecture of USB PoweUrS DBe Cliovmermy urneifcearteinocned throuUghSBou t this Cspoemcmifiucnaticioanti.o Inn practice various implemPoernttation options are possible based on many different possible types of devices. devices can have many different configurations e.g., or non, single versus multiple s, dedicated power supplies versus sPuDpplies shared on multiple ports, hardware versus software-based implementations etc. The architecture outlined in this section is therefore provided only for reference to indicate the high-level logical model used by the specification. This architecture is used to identify the key conPcoerptts aPnodrt to indicate logical blocks anPdD p Coasspiabblele links between them. The USB Power Delivery is a to architecture in which each device is made up of several major com- ponFeingtusr.e 2.3, \"USB Power Delivery Communications Stack\" Port Pair illustrates the relationship of the layers of the communications stack between a. The- commDuenviiccaet Pioonlisc ys tMacakn acognersists oSf:ection 8.2, \"Device Policy Manager\" Port Local PAo licy (see ) that exists in all devices and manages USB Power Delivery resources within the device across one or more s based on the device's - Polic.y Engine Section 8.3, \"Policy Engine\" Port Local Policy Port A (see ) that exists in each USB Power Delivery - imPprloetmoceonlt Lsa tyheer Section 6f,o \"rP rthotaotc ol La.yer\" Message Source Port Sink Port A (see ) that enables s to be exchanged between a - PH Yan Lda yae r Sec.tion 5, \"Physical Layer\" A (see ) that handles transmission and reception of bits on the wire and handles data transmission Figure 2.3 USB Power Delivery Communications Stack Provider Consumer Device Policy Device Policy Manager Manager Policy Engine Policy Engine Protocol Protocol Physical Layer Physical Layer CC Figure 2.4, \"USB Power Delivery Communication Over USB\" OptionalSystem Policy Manager Chapter 9 [UCSI] Additionally, USB PUoSwBe Hr Dosetlivery devices which can oPpDeUrSaBte D aesv UicSeB devices can communicPaotert over USB (see Port Port ). An US B Hub Device Poli (csye Me anager and ) that resides in the communicates with the PD over USB, via the root and potentially manages the individual to connections over a tree of s. The interacts with tNhoet Ue:SB intePrfDace in each device to provide and update related information in the USB domain. A device is not required to have a USB device interface. Figure 2.4 USB Power Delivery Communication Over USB USB Host System Policy Manager USB Root Hub USB Hub USB Hub PD USB PD USB Device Device USB Interface USB Interface Device Policy Device Policy Manager Manager Policy Engine Policy Engine Protocol Protocol Physical Layer Physical Layer CC CC Figure 2.5, \"High Level Architecture View\" AttachedPDPort Port Pair shows the logical blocks between two s ( ). In add- ition to theP rcoovmidmerunicDatuiaoln-R sotalec kP odwesecrr Dibeevdic aebove there areS aolusroc:e Port - For a Consume ror Dual-Role Power Devic:e oneS oinrk more s providing power to one or more s. - FoUrS aB -C Port C oonr trol Section:4 A.4 \"Cab cleo nTsyupme Dinegt epcotiwoner. Attach Detach ® [USB Type-C 2.4] A module (see \") that detects cable / - as defined in. [USB Type-C 2.4] USB Power Delivery uses standard cabling as defined in.", "tables": [], "figures": ["Figure 2.3", "Figure 2.4", "Figure 2.5"], "page_range": [66, 68]}
{"section_path": "2.6.1 Policy", "start_heading": "2.6.1 Policy", "content": "Device Policy Manager Source Sink USB-C Port Control Provider Consumer ® The talks to the communication stack, /, and the block to mFiganuraeg e2.t5h, e\" Hreigsho uLrecveesl iAnr cthheit ecture Vi eowr \". Provider Consumer Dual-Role Power Device Provider Consumer Provider Source Port illustrates a and a U. SB-C Port Control s can be constructed by combining the elements of both and into a single device. s can also ® contain multiple s each wFiigthu rthee 2ir.5 o Hwing hco Lmemveuln Aicracthioitnesc stutarcek V ainedw. Provider Consumer Device Policy Manager Device Policy Manager Source Port Sink Port Policy Engine Policy Engine Protocol Power Power Protocol Source(s) Sink USB-C Port USB-C Port Control Physical Layer Physical Layer Control BMC BMC USB Port USB Port CC VBUS VBUS CC VBUS CC There aSryes ttewmo P leovlieclys of Policy: System Policy Manager Provider Consumer 1) Local Policy applied systePmro wviiddeer by tChoen sumer Device Po laiccyr oMssa nmaugletriple s or s. 3) enforced on a or by the for a device. Poli- cy coSmysptermise Pso sleicvye Mraal nloaggiecral blocks: - Device Policy Manager (system wPriodvei)d.er Consumer - Policy Engine (Soonuerc pee Pro rt Sin ko rP ort ). Port Port System Policy [UCSI] SSyinstceem th Peo UliScyB MPoawnaegre Drelivery protocol is to Devic, eim Ppolleicmy eMnatnataigoenr of a reSqyusitreems cPoomlicmyu Mnaicnaatgioenr by an additional data coSmysmteumn Picoalticioyn mechanism i.e., UPrSoBv. ider hasC boenesunm creerated to define an interfaceS yfostre tmhe Policy Manager to comUmSuBn Hicoastte with the. WheDne pvricees ePnotl,i ctyh eM anager monitors anDdev ciocentDroelvsi ce U SbBe tCwoememn uvnairciaotuiso n s and s connected via USB. The Sy rsetseimde Pso ilnic tyhe and communicates via USB with the in each connected. s without capability or are not data connected, will not be able to partiScyipstaetme iPno licy Manager. Optional Provider Consumer USB Host System Policy Manager The is sUo SUBS HBo Psotwer Delivery s aUnSdB Host s will operate without it being present. This includes systems where the does not provide a and can also include \"headlessU\"S sBy sHteomsts withouSty astneym Policy M.a Inna tgheorseP rcoavseidse wrhere aC onsumer is noNt epgroetsieantet, USB Power Delivery is useful for charging purposes, or the powering of devices since useful USB functionality is not possible. Where there is a, but no, s and s can power between", "tables": [], "figures": [], "page_range": [69, 69]}
{"section_path": "2.6.2 Message Formation and Transmission", "start_heading": "2.6.2 Message Formation and Transmission", "content": "themselves, independently of USB power rules, but are more limited in terms of the options available for managing p2o.w6e.1r..2 Device Policy Manager Device Policy Manager Consumer Provider Device Policy Manager Local Policy The pSryosvtiedmes P moleiccyh Manainsmagse tro Lmoocanli tPoorl iacnyd control the USB PoPwoertr Delivery sysDteemvi cwe iPthoilnic ay pMaarntiacguelarr or Source.P Tohrte Sink Port enables toP obleic eyn Efonrgciende acroUssS Bth-Ce s yPsotretm Cboyn ctormolmunicatiPoonr wt ith thDee vice Policy Manager. is enacted on a per basis by Sthhae red Ca®pacity Charger 's con[tUroSlB o Tf tyhpee -C 2.4] s/ s and by communication with the and for that. The is responsible for the sharing algorithm used in 2.6.1.s3 (see Policy E) ngine Provider Consumer Local Policy Source Port Sink Port Negotiation Policy Engine Ports and Policy Engsin aere free to implement their oDwenvi ce Policy Ma noang tehreir directly connected Local Posl iocyr s. These wiDll ebveic seu Ppoploicryt eMda bnya ger and status mPeoclihcayn Einsmgisn eimplemented by the Lo cfoarl tPhoalitc y. ThCea pabilities interacts directly with the to determine the present to be enforced. The will also inform the whenever there is a change in Protocol Layer Message Port Pair CapabilitiesMessage Message The forms the s used to commPoulinciyc aEtneg iinnfeormation betweenM a essage. It is responsible for forming Polsi,c rye Eqnugeisntes and acknowledgments. Additionally, it forms s used to swap roles and maintain presence. It receives inputs from the indicating which s to send and indicates the responses back to the. Provider Capabilities Consumer Consumer Provider The basiCc appraobtoilcitoiel suses a push model where the pushes its to the that in turn responds with a request based on the offering. However, the can asynchronously request the 's Epxretesnednet d Message and can sDelaetcat SanizoetherM vaoxltEaxgtee/ncduerdreMnstg.Len Protocol Layer Port Partner Port Partner Extended Messages of uDpa ttao Sa ize of MaxExtendedMsgL ceagna cbyeL seennt and recePirvoetdo cporlo Lvaidyeerd the Chunk dinegtermines that both Messs saugpeport this capabCihliutyn.k When oneM oafx bEoxtthe ndedMsgChusn dkoL nenot supPpoorrtt Extensd oefd Message greater thanM axExtendedMsgLegacyLen then the Cshuupnpkoirntgs a mechanism to break larger s into smaller s of size. All s 2th.a6t s.2up.2port PHY Las yloenrger than are required to support. PHY Layer Message USB Type-CCC PD Multi-Drop CC Port Partner Cable Plug CTohleli sion Avoida ins creesponsible for sending and receivPinHgY Layer s across the Mess ag ewire and fCoRr Cmanaging data. is a system, sharing between the s and the (s) that implements Policy Engine Source Protocol Layer Atomic Message Sequence AMS Source Policy Engine Sink Protocol Layer AMS TheS ink in a will indicate to theA MS the start andP eonrdt Poaf retancehr ( ) that the initiates. The in a will indicate to the the start of each t2h.e6.3. 2initiates. Th i sP ernaobtloesc coo-lo Lrdainyaetiorn of initiation between the s. Protocol Layer Source R SinkTxOK Message Sink AMS Message TPrhoet ocol Layer in Sthoeu rce will request tPhHe YP HLaYy teor set the p vRalue to SinkTx wNGhen it is not actively seSnindking s. This indAicMaStes to the Sou trhcaet it can initiate an A bMy Ssending the first in the sequence. The in the will request the to set the p value to to indicate that the cannot initiate an since the is about to initiate an.", "tables": [], "figures": [], "page_range": [70, 70]}
{"section_path": "2.6.3 Collision Avoidance", "start_heading": "2.6.3 Collision Avoidance", "content": "themselves, independently of USB power rules, but are more limited in terms of the options available for managing p2o.w6e.1r..2 Device Policy Manager Device Policy Manager Consumer Provider Device Policy Manager Local Policy The pSryosvtiedmes P moleiccyh Manainsmagse tro Lmoocanli tPoorl iacnyd control the USB PoPwoertr Delivery sysDteemvi cwe iPthoilnic ay pMaarntiacguelarr or Source.P Tohrte Sink Port enables toP obleic eyn Efonrgciende acroUssS Bth-Ce s yPsotretm Cboyn ctormolmunicatiPoonr wt ith thDee vice Policy Manager. is enacted on a per basis by Sthhae red Ca®pacity Charger 's con[tUroSlB o Tf tyhpee -C 2.4] s/ s and by communication with the and for that. The is responsible for the sharing algorithm used in 2.6.1.s3 (see Policy E) ngine Provider Consumer Local Policy Source Port Sink Port Negotiation Policy Engine Ports and Policy Engsin aere free to implement their oDwenvi ce Policy Ma noang tehreir directly connected Local Posl iocyr s. These wiDll ebveic seu Ppoploicryt eMda bnya ger and status mPeoclihcayn Einsmgisn eimplemented by the Lo cfoarl tPhoalitc y. ThCea pabilities interacts directly with the to determine the present to be enforced. The will also inform the whenever there is a change in Protocol Layer Message Port Pair CapabilitiesMessage Message The forms the s used to commPoulinciyc aEtneg iinnfeormation betweenM a essage. It is responsible for forming Polsi,c rye Eqnugeisntes and acknowledgments. Additionally, it forms s used to swap roles and maintain presence. It receives inputs from the indicating which s to send and indicates the responses back to the. Provider Capabilities Consumer Consumer Provider The basiCc appraobtoilcitoiel suses a push model where the pushes its to the that in turn responds with a request based on the offering. However, the can asynchronously request the 's Epxretesnednet d Message and can sDelaetcat SanizoetherM vaoxltEaxgtee/ncduerdreMnstg.Len Protocol Layer Port Partner Port Partner Extended Messages of uDpa ttao Sa ize of MaxExtendedMsgL ceagna cbyeL seennt and recePirvoetdo cporlo Lvaidyeerd the Chunk dinegtermines that both Messs saugpeport this capabCihliutyn.k When oneM oafx bEoxtthe ndedMsgChusn dkoL nenot supPpoorrtt Extensd oefd Message greater thanM axExtendedMsgLegacyLen then the Cshuupnpkoirntgs a mechanism to break larger s into smaller s of size. All s 2th.a6t s.2up.2port PHY Las yloenrger than are required to support. PHY Layer Message USB Type-CCC PD Multi-Drop CC Port Partner Cable Plug CTohleli sion Avoida ins creesponsible for sending and receivPinHgY Layer s across the Mess ag ewire and fCoRr Cmanaging data. is a system, sharing between the s and the (s) that implements Policy Engine Source Protocol Layer Atomic Message Sequence AMS Source Policy Engine Sink Protocol Layer AMS TheS ink in a will indicate to theA MS the start andP eonrdt Poaf retancehr ( ) that the initiates. The in a will indicate to the the start of each t2h.e6.3. 2initiates. Th i sP ernaobtloesc coo-lo Lrdainyaetiorn of initiation between the s. Protocol Layer Source R SinkTxOK Message Sink AMS Message TPrhoet ocol Layer in Sthoeu rce will request tPhHe YP HLaYy teor set the p vRalue to SinkTx wNGhen it is not actively seSnindking s. This indAicMaStes to the Sou trhcaet it can initiate an A bMy Ssending the first in the sequence. The in the will request the to set the p value to to indicate that the cannot initiate an since the is about to initiate an.", "tables": [], "figures": [], "page_range": [70, 70]}
{"section_path": "2.6.4 Power supply", "start_heading": "2.6.4 Power supply", "content": "Protocol Layer Sink Policy Engine AMS R SinkTxOK AMS Message The in the, when the indicates that an is being initiated, will wait for the p 2va.l6ue.3 to. 3be set to PHY bLeafoyree irnitiating the by sending the first in the sequence. PHY Layer Source R SinkTxOK SinkTxNG Protocol Layer PHY Layer Sink R Protocol Layer The in the will set the p value to either or as directed by the. 2Th.e6.4 in tPheo we wri lls duetpecpt tlhye present p value and inform the. Provider Port Local Policy Source Port USB Type-C Port vESaachfe 0V VB w USill contain one or more poweDre stoauchrces that arHe asrhda Rreedse btetween oneS oour rmceore sA. Ttthaecshe power sources are controlled byv Stahfee 5V. s start up in Operation where the applies on and returns to this state on or after a. When the detects events it t2ra.6ns.i4tio.2ns its outpu t Stoi nk. Consumer Sink Port Sink Local Policy Sink USB Default Operation Port vSafe5V s are assumeDde ttoa hchave one H caordn nReecsteetd to a. This is controlled by. s start up in where the can operate at with USB default specified current levels and r2e.t6ur.n4 t.o3 this state o n D ual- Roro alfteer P a ower Po.rts Dual-Role Power Port Source Sink Power Role Power Role Swap Fast Role Swap s have the ability to operate as either a or a and to swap between the two 2.6s. 4us.i4ng Dead o Br attery or L.ost Power Detection [USB Type-C 2.4] Sink DRP Dead Battery defines mechanisms intended to communicate with and to charge a or with a 2.6.4.. 5 VCONN Source Source Port Attach VCONN Source VCONN Source Port Sink Port Cable Plug The at, is also the. ThCea rbelsep Polnusgibility for sPoourrtcing V c Ca On N b Ne S sowuracpeped between the s and Cables Pinlu ag make before break fashion to ensure that the s are continuously powered. To ensure reliable communication with the s only the that is the is permitted tNoo ctoem: municate witPho twhee r Role Swaps.Data Role Swap Fast Role Swap Source Port VCONN Source Cable Plug Prior to a, or each new needs to ensure that Downstream Facing Port DFP Port USB Device Attached DFP USB Host USB Communication DFP The Charger or D iFsP equivalent in the UUSSBB t oCpoomlomguyn tioc atthieo n a is DFP to. The will alAsolt ecronraretes pMoondde to the but only if is supported while acting as a. Products such as s can be a while not having capability. Only the is allowed t2o. c6o.n5tr.o2l Up sotprereaatiomn. Facing Port (UFP) Upstream Facing Port UFP Port USB Device USB Host USB Hub DFP UFP USB Device USB Communication The orU FP is equivalent in the USB topologyU FtoP the on a USB Co tmhamt uisn cicoantnioencted to the or 's. The will also correspond to the but only if is supported while acting as a. Products which charge can be a while not having capability.", "tables": [], "figures": [], "page_range": [71, 71]}
{"section_path": "2.6.5 DFP/UFP", "start_heading": "2.6.5 DFP/UFP", "content": "Protocol Layer Sink Policy Engine AMS R SinkTxOK AMS Message The in the, when the indicates that an is being initiated, will wait for the p 2va.l6ue.3 to. 3be set to PHY bLeafoyree irnitiating the by sending the first in the sequence. PHY Layer Source R SinkTxOK SinkTxNG Protocol Layer PHY Layer Sink R Protocol Layer The in the will set the p value to either or as directed by the. 2Th.e6.4 in tPheo we wri lls duetpecpt tlhye present p value and inform the. Provider Port Local Policy Source Port USB Type-C Port vESaachfe 0V VB w USill contain one or more poweDre stoauchrces that arHe asrhda Rreedse btetween oneS oour rmceore sA. Ttthaecshe power sources are controlled byv Stahfee 5V. s start up in Operation where the applies on and returns to this state on or after a. When the detects events it t2ra.6ns.i4tio.2ns its outpu t Stoi nk. Consumer Sink Port Sink Local Policy Sink USB Default Operation Port vSafe5V s are assumeDde ttoa hchave one H caordn nReecsteetd to a. This is controlled by. s start up in where the can operate at with USB default specified current levels and r2e.t6ur.n4 t.o3 this state o n D ual- Roro alfteer P a ower Po.rts Dual-Role Power Port Source Sink Power Role Power Role Swap Fast Role Swap s have the ability to operate as either a or a and to swap between the two 2.6s. 4us.i4ng Dead o Br attery or L.ost Power Detection [USB Type-C 2.4] Sink DRP Dead Battery defines mechanisms intended to communicate with and to charge a or with a 2.6.4.. 5 VCONN Source Source Port Attach VCONN Source VCONN Source Port Sink Port Cable Plug The at, is also the. ThCea rbelsep Polnusgibility for sPoourrtcing V c Ca On N b Ne S sowuracpeped between the s and Cables Pinlu ag make before break fashion to ensure that the s are continuously powered. To ensure reliable communication with the s only the that is the is permitted tNoo ctoem: municate witPho twhee r Role Swaps.Data Role Swap Fast Role Swap Source Port VCONN Source Cable Plug Prior to a, or each new needs to ensure that Downstream Facing Port DFP Port USB Device Attached DFP USB Host USB Communication DFP The Charger or D iFsP equivalent in the UUSSBB t oCpoomlomguyn tioc atthieo n a is DFP to. The will alAsolt ecronraretes pMoondde to the but only if is supported while acting as a. Products such as s can be a while not having capability. Only the is allowed t2o. c6o.n5tr.o2l Up sotprereaatiomn. Facing Port (UFP) Upstream Facing Port UFP Port USB Device USB Host USB Hub DFP UFP USB Device USB Communication The orU FP is equivalent in the USB topologyU FtoP the on a USB Co tmhamt uisn cicoantnioencted to the or 's. The will also correspond to the but only if is supported while acting as a. Products which charge can be a while not having capability.", "tables": [], "figures": [], "page_range": [71, 71]}
{"section_path": "2.6.6 Cable and Connectors", "start_heading": "2.6.6 Cable and Connectors", "content": "Dual-Role Data Port DFP UFP Data Role Data Role Swap s have the ability to operate as either a or a and to swap between the two s uNsointeg:. Dual-Role Data Port Dual-Role Power Port DFP UFPData Role Source Sink Products can be s without being s that is they can switch [USB Type-C 2.4] The USB Power Delivery specification assumes certified USB cables and associated detection mechanisms as d2e.f6in.e6d. i1n the USB-C P soperctif iCcaotinont.rol USB-C Port Control ® The- Devic eb Plooclkic py rMoavnidaegse mr echanismAtst atoc:h Detach - Inform tShinek Device Policy Manag oerf cable R / events. - InformS ourc'es Device Policy Manage rof the p vaRlue. 2.6.7Allow In'st eractions betw toe seetn th Ne opn va-lPueD., BC, and PD devices USB Power Delivery only operavteSsa wfeh5eVn two USB Power D[UeSliBv e2r.y0 ]de[vUiScBes 3 a.2re] d[UirSeBctBlyC c1o.n2n]ect[eUdS. WB Thyenp ea- Cd e2v.4ic]e finds itself a mixed environment, where the other device does not support the USB Power Delivery Specification, the existing rules on supplying as defined in the,, or specifications are applied. The- re are twUoS pBr HimoastryD cFasPesS otou rccoensider: PD Advertise AttachedPD Capable Advertise [USB 2.0] T[UhSeB 3.2] [US (BBC /1.2] [)U iSs Bn oTny-pe-C a n2d.4 a]s such will not send any ments. An device will not see any ments and operates using the rules defined in the, - Devic,e UFP Sink or PD specifications. Advertise USB Host DFP Source vSafe5V VBUS [USB T2.h0e] [USB 3 (.2] [/USBB)C i s1 n.2o]n- [U aSnBd T aysp seu-cCh 2 w.4il]l not see any ments and therefore will not respond. The ( / ) will continue to supply to as specified in the Power Rules Source Sink PDP Rating Chapter 10 \"Power Rules\" define voltages and current ranges that are offered by compliant USB Power Delivery s and used by a USB Power Delivery for a given value of. See for further details.", "tables": [], "figures": [], "page_range": [72, 72]}
{"section_path": "2.6.7 Interactions between Non-PD, BC, and PD devices", "start_heading": "2.6.7 Interactions between Non-PD, BC, and PD devices", "content": "Dual-Role Data Port DFP UFP Data Role Data Role Swap s have the ability to operate as either a or a and to swap between the two s uNsointeg:. Dual-Role Data Port Dual-Role Power Port DFP UFPData Role Source Sink Products can be s without being s that is they can switch [USB Type-C 2.4] The USB Power Delivery specification assumes certified USB cables and associated detection mechanisms as d2e.f6in.e6d. i1n the USB-C P soperctif iCcaotinont.rol USB-C Port Control ® The- Devic eb Plooclkic py rMoavnidaegse mr echanismAtst atoc:h Detach - Inform tShinek Device Policy Manag oerf cable R / events. - InformS ourc'es Device Policy Manage rof the p vaRlue. 2.6.7Allow In'st eractions betw toe seetn th Ne opn va-lPueD., BC, and PD devices USB Power Delivery only operavteSsa wfeh5eVn two USB Power D[UeSliBv e2r.y0 ]de[vUiScBes 3 a.2re] d[UirSeBctBlyC c1o.n2n]ect[eUdS. WB Thyenp ea- Cd e2v.4ic]e finds itself a mixed environment, where the other device does not support the USB Power Delivery Specification, the existing rules on supplying as defined in the,, or specifications are applied. The- re are twUoS pBr HimoastryD cFasPesS otou rccoensider: PD Advertise AttachedPD Capable Advertise [USB 2.0] T[UhSeB 3.2] [US (BBC /1.2] [)U iSs Bn oTny-pe-C a n2d.4 a]s such will not send any ments. An device will not see any ments and operates using the rules defined in the, - Devic,e UFP Sink or PD specifications. Advertise USB Host DFP Source vSafe5V VBUS [USB T2.h0e] [USB 3 (.2] [/USBB)C i s1 n.2o]n- [U aSnBd T aysp seu-cCh 2 w.4il]l not see any ments and therefore will not respond. The ( / ) will continue to supply to as specified in the Power Rules Source Sink PDP Rating Chapter 10 \"Power Rules\" define voltages and current ranges that are offered by compliant USB Power Delivery s and used by a USB Power Delivery for a given value of. See for further details.", "tables": [], "figures": [], "page_range": [72, 72]}
{"section_path": "2.6.8 Power Rules", "start_heading": "2.6.8 Power Rules", "content": "Dual-Role Data Port DFP UFP Data Role Data Role Swap s have the ability to operate as either a or a and to swap between the two s uNsointeg:. Dual-Role Data Port Dual-Role Power Port DFP UFPData Role Source Sink Products can be s without being s that is they can switch [USB Type-C 2.4] The USB Power Delivery specification assumes certified USB cables and associated detection mechanisms as d2e.f6in.e6d. i1n the USB-C P soperctif iCcaotinont.rol USB-C Port Control ® The- Devic eb Plooclkic py rMoavnidaegse mr echanismAtst atoc:h Detach - Inform tShinek Device Policy Manag oerf cable R / events. - InformS ourc'es Device Policy Manage rof the p vaRlue. 2.6.7Allow In'st eractions betw toe seetn th Ne opn va-lPueD., BC, and PD devices USB Power Delivery only operavteSsa wfeh5eVn two USB Power D[UeSliBv e2r.y0 ]de[vUiScBes 3 a.2re] d[UirSeBctBlyC c1o.n2n]ect[eUdS. WB Thyenp ea- Cd e2v.4ic]e finds itself a mixed environment, where the other device does not support the USB Power Delivery Specification, the existing rules on supplying as defined in the,, or specifications are applied. The- re are twUoS pBr HimoastryD cFasPesS otou rccoensider: PD Advertise AttachedPD Capable Advertise [USB 2.0] T[UhSeB 3.2] [US (BBC /1.2] [)U iSs Bn oTny-pe-C a n2d.4 a]s such will not send any ments. An device will not see any ments and operates using the rules defined in the, - Devic,e UFP Sink or PD specifications. Advertise USB Host DFP Source vSafe5V VBUS [USB T2.h0e] [USB 3 (.2] [/USBB)C i s1 n.2o]n- [U aSnBd T aysp seu-cCh 2 w.4il]l not see any ments and therefore will not respond. The ( / ) will continue to supply to as specified in the Power Rules Source Sink PDP Rating Chapter 10 \"Power Rules\" define voltages and current ranges that are offered by compliant USB Power Delivery s and used by a USB Power Delivery for a given value of. See for further details.", "tables": [], "figures": [], "page_range": [72, 72]}
{"section_path": "2.7 Extended Power Range (EPR) Operation", "start_heading": "2.7 Extended Power Range (EPR) Operation", "content": "Extended Power Range Mode PD SPR Mode Mode Explicit Contract is a Pthoartt provides Cfoarb ulep P tlou g240W which EisP cRonsiderably more power than the 100W the original specification ( ) offered. It is a of operation that can be entered only when an isE iPnR p Mlaoced eand both the s and the (s) support. EPR CapableSource EPR CapableSink EPR Capable EPR Source Entry into F fioxelldo wSusp ap slytrict pArodcjuesstsa; bthleis V aoslstaugrees S tuhpaptl tyheA hViSgher voltages, at power levEePlsR a Mboovdee 100W, are only transferred between known PsD and s over cables. EPRs Saoreu rccaepableE oPf Rb oStinhk aHnadr d Reset ( ) operation. MaSiPnRtaining operation also requires maintaining a regular cadence of USB communications; loss of communications between the EP Ran Mdo de will cause a to be initiated resulting in a return to operation. The Negoti aetnetry, operational anEdx pexliicti tp Crooncetrsasc its summSatarinzdeadr bdy P tohwee fro Rllaonwgieng steps: EPR Capable Source Sink EPRCapabilities PDO APDO RDO 1) and enter into an in the. During this step, EPRs Sainndk s will declare their EsuPpRp Soorutrecde EP Rth Mrooudgeh / and exchanges. 2) An EPR Sou,r hcaeving discovered an, can Aretqtaucehsetd entry. EPR Capable First Explicit ContractNegotiation EPR Sink EPR 3) MThoed e, having already confirmed that the cable assembly is during the, will respond to the with an acknowledgment of the entEryP Rre Mquoedset. 4) While inE PR Source: Capabilities Fixed SupplyPDO AVSAPDO EPR Sink Sink Explicit Contract a) The sends EPR ( s and an ) to the which requEirPeRs Sthinek to evaluate and respond as appropriate to adjust the EPR Source. EPR Mode b) The maintains a regular cadence of communications with the to allow to contiEnPuRe. Source EPR Sink EPR Mode EPR Mode Explicit Contract SPR 5) W(Ah)PeDn Oeither the or EPR Mod neo longer wants to remain in operation, a normal exit from will first require adjusting the to a voltage of 20V or lower ( Sour)c feollowed byE aPnR e Sxopulricciet E PexRi_tS roeuqrucees_tC.apabilitiesMessage SPR EPR Sink EPR Mode EPR Mode a) initiated:S PR Contract senNdesg aont iate SPR Mod e that only includes voltages to force the to drop to 20V or below followed by the exit. Once iSsi nekxited, a newE PR Sink is d to return to operatiEoPnR. Mode EPR Mode SPR Contract Negotiate SPR Mode b) initiated; requests a drop to 20V or below followed by the exit. Once Figure 2.6, \"Exam ipsl ee xoift ead N, oar nmeawl EPR Mode Op eirsa tional Flodw t\"o return to operation. EPR Mode EPR Mode Source EPR Mode EPRCapabilities Sink illustratSePs Ra n( Ae)xPaDmOple of a normalS ink Neg otiate opeSrPaRti Cononalt rfalocwt. In this example, at some timeS oduurrcieng the oEpPeRr aMtioodne, tehxeit Messa gdeecides tEhPaRt iMt noedeeds to exit S, PsRo iCto rnetsreancdts thNee gotia te to thSeP R Mo wdeith only s to cause the to an of 20V or lower and then the follows with an. Once is exited, a new is d to return to operation. Figure 2.6 Example of a Normal EPR Mode Operational Flow EPR Source EPR Cable EPR Sink Establish SPR Contract (Source/Sink EPR Status) Enter EPR Mode? Request EPR Mode EPR Mode Entry Cable is EPR? Phase Accept EPR Mode Establish EPR Contract EPR Mode Operation Maintain PD Repetitive Communications Exit EPR Mode? Establish EPR Contract (20V or less) EPR Mode Exit Phase Exit EPR Mode Establish SPR Contract (Source/Sink EPR Status) Figure 2.6, \"Example of a Normal EPR Mode Operational Flow\" EPR Mode Sink EPR Mode Sink NExopt liilcliut sCtorantterdac itn Source EPR_Mode exit,M wehsislaeg ien EPR Mopoedreation, the mSigPhRt Cdoenctidraec itt waNnetgso ttoia etxeit. In this case, theS PR M moduest initiate the exit process by reviEsxinpgli citits Contract with the at 20V or less followed EwPiRth M aond e Hard R.e Osentce is exited, a new is d to formalize the return to operation. Failure to revise the to one at 20V or less before attempting to exit will result in a.", "tables": [], "figures": ["Figure 2.6", "Figure 2.6", "Figure 2.6"], "page_range": [73, 74]}
{"section_path": "2.8 Charging Models", "start_heading": "2.8 Charging Models", "content": "Fixed Supply Programmable Power Supply Adjustable Voltage Supply This section provides a charging model overview for each of the primary power delivery methods:, Fixed Supply Source Advertise Capabilities Table2.1, \"Fixed Supply Power URaSnBg Peos\"wer Delivery supports charging usingS at asnetd oafr dd ePfoinweedr sRtaanngdeardSP vRoltages with cuErxrteenndt eadv aPiolawbeler uRpa ntoge thEe PliRmit of the 's and cable's d. As summarized in, the standard voltages are available in either the ( ) and/or the Table2.1 Fixed Supply Power Ranges ( ). Power Range Available Current and PDP Range Notes Voltages Standard Power Range SPR ( ) 3A: 5V, 9V, 15V, 20V 15 – 60W Extended Power Range EPR 5A : 20V >60 – 100W EPR Mode ( ) 3A : 5V, 9V, 15V, 20V 15 – 60W Requires entry into. 5A : 20V 5A : 28V, 36V, 48V 1) Requires 5EAPR cable. 2.28).2 Requires Pr coabgler.ammable Power Supply (PPS) Charging Models Programmable Power Supply PPS Source Advertise Capabilities USB Power Delivery includes supSpPoRr Mt foodre ( )O cphearragtiinngg u Csuinrgr ean stet of defined RsteaqnudeasrtdM voesltsaaggee ranges. With current up to the limit of the 's and cable's d. Additionally, when operating in the current is also limited by the field value in the Note: PPS. EPR Mode operation is not available in Standar.d Power Range SPR PPS Table2.2, \"PPS Voltage Power Ranges\" The standard voltage ranges available in the ( ) for are summarized in Table2.2 PPS Voltage Power Ranges. Available Current Prog Min Voltage (V) Max Voltage (V) PDP Range 3A 9V Prog 5 11 16 – 60W 15V Prog 5 16 20V Prog 5 21 5A 20V Prog 5 21 61 – 100W 1) Requires 5A cable.", "tables": ["Table 2.1", "Table 2.2"], "figures": [], "page_range": [75, 75]}
{"section_path": "2.8.1 Fixed Supply Charging Models", "start_heading": "2.8.1 Fixed Supply Charging Models", "content": "Fixed Supply Programmable Power Supply Adjustable Voltage Supply This section provides a charging model overview for each of the primary power delivery methods:, Fixed Supply Source Advertise Capabilities Table2.1, \"Fixed Supply Power URaSnBg Peos\"wer Delivery supports charging usingS at asnetd oafr dd ePfoinweedr sRtaanngdeardSP vRoltages with cuErxrteenndt eadv aPiolawbeler uRpa ntoge thEe PliRmit of the 's and cable's d. As summarized in, the standard voltages are available in either the ( ) and/or the Table2.1 Fixed Supply Power Ranges ( ). Power Range Available Current and PDP Range Notes Voltages Standard Power Range SPR ( ) 3A: 5V, 9V, 15V, 20V 15 – 60W Extended Power Range EPR 5A : 20V >60 – 100W EPR Mode ( ) 3A : 5V, 9V, 15V, 20V 15 – 60W Requires entry into. 5A : 20V 5A : 28V, 36V, 48V 1) Requires 5EAPR cable. 2.28).2 Requires Pr coabgler.ammable Power Supply (PPS) Charging Models Programmable Power Supply PPS Source Advertise Capabilities USB Power Delivery includes supSpPoRr Mt foodre ( )O cphearragtiinngg u Csuinrgr ean stet of defined RsteaqnudeasrtdM voesltsaaggee ranges. With current up to the limit of the 's and cable's d. Additionally, when operating in the current is also limited by the field value in the Note: PPS. EPR Mode operation is not available in Standar.d Power Range SPR PPS Table2.2, \"PPS Voltage Power Ranges\" The standard voltage ranges available in the ( ) for are summarized in Table2.2 PPS Voltage Power Ranges. Available Current Prog Min Voltage (V) Max Voltage (V) PDP Range 3A 9V Prog 5 11 16 – 60W 15V Prog 5 16 20V Prog 5 21 5A 20V Prog 5 21 61 – 100W 1) Requires 5A cable.", "tables": ["Table 2.1", "Table 2.2"], "figures": [], "page_range": [75, 75]}
{"section_path": "2.8.2 Programmable Power Supply (PPS) Charging Models", "start_heading": "2.8.2 Programmable Power Supply (PPS) Charging Models", "content": "Fixed Supply Programmable Power Supply Adjustable Voltage Supply This section provides a charging model overview for each of the primary power delivery methods:, Fixed Supply Source Advertise Capabilities Table2.1, \"Fixed Supply Power URaSnBg Peos\"wer Delivery supports charging usingS at asnetd oafr dd ePfoinweedr sRtaanngdeardSP vRoltages with cuErxrteenndt eadv aPiolawbeler uRpa ntoge thEe PliRmit of the 's and cable's d. As summarized in, the standard voltages are available in either the ( ) and/or the Table2.1 Fixed Supply Power Ranges ( ). Power Range Available Current and PDP Range Notes Voltages Standard Power Range SPR ( ) 3A: 5V, 9V, 15V, 20V 15 – 60W Extended Power Range EPR 5A : 20V >60 – 100W EPR Mode ( ) 3A : 5V, 9V, 15V, 20V 15 – 60W Requires entry into. 5A : 20V 5A : 28V, 36V, 48V 1) Requires 5EAPR cable. 2.28).2 Requires Pr coabgler.ammable Power Supply (PPS) Charging Models Programmable Power Supply PPS Source Advertise Capabilities USB Power Delivery includes supSpPoRr Mt foodre ( )O cphearragtiinngg u Csuinrgr ean stet of defined RsteaqnudeasrtdM voesltsaaggee ranges. With current up to the limit of the 's and cable's d. Additionally, when operating in the current is also limited by the field value in the Note: PPS. EPR Mode operation is not available in Standar.d Power Range SPR PPS Table2.2, \"PPS Voltage Power Ranges\" The standard voltage ranges available in the ( ) for are summarized in Table2.2 PPS Voltage Power Ranges. Available Current Prog Min Voltage (V) Max Voltage (V) PDP Range 3A 9V Prog 5 11 16 – 60W 15V Prog 5 16 20V Prog 5 21 5A 20V Prog 5 21 61 – 100W 1) Requires 5A cable.", "tables": ["Table 2.1", "Table 2.2"], "figures": [], "page_range": [75, 75]}
{"section_path": "2.8.3 Adjustable Voltage Supply (AVS) Charging Models", "start_heading": "2.8.3 Adjustable Voltage Supply (AVS) Charging Models", "content": "SPR Mode PDP EPR Mode Adjustable Voltage Supply AVS Source PDP RUaStBin Pgower Delivery operating in (when is higher than 27W) and includes support for ( ) charging using a set of defined standard voltage ranges based on the 's. AVS Table2.3, \"AVS Voltage Power Ranges\" Table2.3 AVS Voltage Power Ranges The standard voltage ranges available for are summarized in. PDP Minimum Maximum Maximum Minimum Maximum Maximum Voltage (V) Voltage (V) Available Voltage (V) Voltage (V) Available Current N/A Current >27…45W 9 15 3A >45…60W 9 20 3A >60…100W 9 20 5A 100…140W 9 20 5A 15 28 5A >140…180W 9 20 5A 15 36 5A >180…240W 9 20 5A 15 48 5A 1) Requires 5A EcaPbRle. 2) Requires an Cable. SPR AVS Fixed Supply PDO Fixed Supply PDO 3) The maximum available current is determined by the maximum available current in the 15V in the 9 - 15V range and 20V in the 15 - 20V range. Connectors Deprecated [USBPD 2.0] BFSKSignaling Scheme USB Type-A USB Type-B This section has been. Please refer to for details of cables and connectors used in scenarios utilizing the in conjunction with or connectors.", "tables": ["Table 2.3"], "figures": [], "page_range": [76, 77]}
{"section_path": "4.1 Interoperability with other USB Specifications", "start_heading": "4.1 Interoperability with other USB Specifications", "content": "T4h.i1s chapter c o Ivnerts ethre oplpatfeorrma'sb eilelcittriyca lw reiqtuhire moetnhtse forr iUmpSleBm eSnptineg cUiSfBi Pcoawteir oDenlivsery. May [USB 2.0] [USB 3.2] [USB4] [USBBC 1.2] [USB Type C 2.4] USB Type-C Device [USBBC 1.2] USB Power Delivery be impSlehmalelnted alongside the,,, Port P aainrd Detached ( Hard R)e sspeetcifications. In the case where a requests poPwoerrt vSihaa ll and then the USB SPeocwtieorn D 6e.8li.v3e, \"rHy aSrpde cRiefisceatt\"ion, it follow the USB Power Delivery Specification until the is or there is a. If the USB Power Delivery connection is lost, the return to its default state, see Dead Battery USB Device USB Host USB Host /unpowered operation is when a needs to provide power to a under the circ- umstancesD weahde rBea tthteer y : - Has a that requires charging or - Has lost its power source or - Does not have a power source or Dead BaDttoeerys not want to provide power. USB Type-C [USB Type-C 2.4] PDSink Port USB Communication USB Communication Every capable of can be susceptible to unreliable if the voltage dro[pU aScBr oTsysp ger-oCu 2n.d4 ]falls outside of the acceptable common mode range for the USB Hi-Speed transceivers data lines due to excessive current draw. Certified USB cabling is specified such that such errors don't typically o4c.c4ur (See Cable Ty).pe Detection USB Type-C PD vSafe5V [USB Type-C ®2.4] SourceShall Capabilities Capabilities Standard cable assemblies are rated for voltages higher than and current levels of at least 3A (See ). The limit maximum it offers so as not to exceed the oSof uthrcee type of cabling detected. Shall Attached Capabilities Cable Capabilities Discovse rca Ipdaebnltei toyf Cooffmerminagn mdore thSeacnt i3oAn 6.4.4. 3d.e1t,e \"cDti tshcoe vteyrp Ied oefn tity\" cable anSdO lPim’ Ciot mthme unication theSye cotfifoenr b2.a4s, e\"dS OoPn* t Choe mcumrurennicta ctaiorrny\"ing capaCbailbitley Polfu tghe cabClea dbleet eVrDmOined by the Disco dveerte Irdmeinnteitdy uCsoinmgm thane d (see Shall Negoti)a steent using (seEex plicit Contract ) to the. The returned as part of the details the maximum current and voltage values that be d for a given cable as part of an Cabl.e Discovery Source Power Role Swap Fast Role Swap Sink Shall The process is usually run when the is powered up, after a or or when power is applied to a. The method used to detect these events meet the following req- uiremSoeunrtcse: Shall Cable Discovery Source Source_CapabilitiesMessage s run the process prior to the sending - Ssin okffering UcuSrBr eTnyptse -inC excess of 3AS ahnadll/or voltCaagpeasb iinli etixecsess of 20V. Source Capabilities Source Capabilities s with connectors select from the offered assum - iSningk that the Dua lh-Raso lael rPeoawdye rdeterminSehda tlhle G oeft t_hSeo ucarcbele_C. apMessage Source Capabilities Capabilities s with the bit set, respond to a by declaring their full, without limiting them based on the cable's.", "tables": [], "figures": [], "page_range": [78, 78]}
{"section_path": "4.2 Dead Battery Detection / Unpowered Port Detection", "start_heading": "4.2 Dead Battery Detection / Unpowered Port Detection", "content": "T4h.i1s chapter c o Ivnerts ethre oplpatfeorrma'sb eilelcittriyca lw reiqtuhire moetnhtse forr iUmpSleBm eSnptineg cUiSfBi Pcoawteir oDenlivsery. May [USB 2.0] [USB 3.2] [USB4] [USBBC 1.2] [USB Type C 2.4] USB Type-C Device [USBBC 1.2] USB Power Delivery be impSlehmalelnted alongside the,,, Port P aainrd Detached ( Hard R)e sspeetcifications. In the case where a requests poPwoerrt vSihaa ll and then the USB SPeocwtieorn D 6e.8li.v3e, \"rHy aSrpde cRiefisceatt\"ion, it follow the USB Power Delivery Specification until the is or there is a. If the USB Power Delivery connection is lost, the return to its default state, see Dead Battery USB Device USB Host USB Host /unpowered operation is when a needs to provide power to a under the circ- umstancesD weahde rBea tthteer y : - Has a that requires charging or - Has lost its power source or - Does not have a power source or Dead BaDttoeerys not want to provide power. USB Type-C [USB Type-C 2.4] PDSink Port USB Communication USB Communication Every capable of can be susceptible to unreliable if the voltage dro[pU aScBr oTsysp ger-oCu 2n.d4 ]falls outside of the acceptable common mode range for the USB Hi-Speed transceivers data lines due to excessive current draw. Certified USB cabling is specified such that such errors don't typically o4c.c4ur (See Cable Ty).pe Detection USB Type-C PD vSafe5V [USB Type-C ®2.4] SourceShall Capabilities Capabilities Standard cable assemblies are rated for voltages higher than and current levels of at least 3A (See ). The limit maximum it offers so as not to exceed the oSof uthrcee type of cabling detected. Shall Attached Capabilities Cable Capabilities Discovse rca Ipdaebnltei toyf Cooffmerminagn mdore thSeacnt i3oAn 6.4.4. 3d.e1t,e \"cDti tshcoe vteyrp Ied oefn tity\" cable anSdO lPim’ Ciot mthme unication theSye cotfifoenr b2.a4s, e\"dS OoPn* t Choe mcumrurennicta ctaiorrny\"ing capaCbailbitley Polfu tghe cabClea dbleet eVrDmOined by the Disco dveerte Irdmeinnteitdy uCsoinmgm thane d (see Shall Negoti)a steent using (seEex plicit Contract ) to the. The returned as part of the details the maximum current and voltage values that be d for a given cable as part of an Cabl.e Discovery Source Power Role Swap Fast Role Swap Sink Shall The process is usually run when the is powered up, after a or or when power is applied to a. The method used to detect these events meet the following req- uiremSoeunrtcse: Shall Cable Discovery Source Source_CapabilitiesMessage s run the process prior to the sending - Ssin okffering UcuSrBr eTnyptse -inC excess of 3AS ahnadll/or voltCaagpeasb iinli etixecsess of 20V. Source Capabilities Source Capabilities s with connectors select from the offered assum - iSningk that the Dua lh-Raso lael rPeoawdye rdeterminSehda tlhle G oeft t_hSeo ucarcbele_C. apMessage Source Capabilities Capabilities s with the bit set, respond to a by declaring their full, without limiting them based on the cable's.", "tables": [], "figures": [], "page_range": [78, 78]}
{"section_path": "4.3 Cable IR Ground Drop (IR Drop)", "start_heading": "4.3 Cable IR Ground Drop (IR Drop)", "content": "T4h.i1s chapter c o Ivnerts ethre oplpatfeorrma'sb eilelcittriyca lw reiqtuhire moetnhtse forr iUmpSleBm eSnptineg cUiSfBi Pcoawteir oDenlivsery. May [USB 2.0] [USB 3.2] [USB4] [USBBC 1.2] [USB Type C 2.4] USB Type-C Device [USBBC 1.2] USB Power Delivery be impSlehmalelnted alongside the,,, Port P aainrd Detached ( Hard R)e sspeetcifications. In the case where a requests poPwoerrt vSihaa ll and then the USB SPeocwtieorn D 6e.8li.v3e, \"rHy aSrpde cRiefisceatt\"ion, it follow the USB Power Delivery Specification until the is or there is a. If the USB Power Delivery connection is lost, the return to its default state, see Dead Battery USB Device USB Host USB Host /unpowered operation is when a needs to provide power to a under the circ- umstancesD weahde rBea tthteer y : - Has a that requires charging or - Has lost its power source or - Does not have a power source or Dead BaDttoeerys not want to provide power. USB Type-C [USB Type-C 2.4] PDSink Port USB Communication USB Communication Every capable of can be susceptible to unreliable if the voltage dro[pU aScBr oTsysp ger-oCu 2n.d4 ]falls outside of the acceptable common mode range for the USB Hi-Speed transceivers data lines due to excessive current draw. Certified USB cabling is specified such that such errors don't typically o4c.c4ur (See Cable Ty).pe Detection USB Type-C PD vSafe5V [USB Type-C ®2.4] SourceShall Capabilities Capabilities Standard cable assemblies are rated for voltages higher than and current levels of at least 3A (See ). The limit maximum it offers so as not to exceed the oSof uthrcee type of cabling detected. Shall Attached Capabilities Cable Capabilities Discovse rca Ipdaebnltei toyf Cooffmerminagn mdore thSeacnt i3oAn 6.4.4. 3d.e1t,e \"cDti tshcoe vteyrp Ied oefn tity\" cable anSdO lPim’ Ciot mthme unication theSye cotfifoenr b2.a4s, e\"dS OoPn* t Choe mcumrurennicta ctaiorrny\"ing capaCbailbitley Polfu tghe cabClea dbleet eVrDmOined by the Disco dveerte Irdmeinnteitdy uCsoinmgm thane d (see Shall Negoti)a steent using (seEex plicit Contract ) to the. The returned as part of the details the maximum current and voltage values that be d for a given cable as part of an Cabl.e Discovery Source Power Role Swap Fast Role Swap Sink Shall The process is usually run when the is powered up, after a or or when power is applied to a. The method used to detect these events meet the following req- uiremSoeunrtcse: Shall Cable Discovery Source Source_CapabilitiesMessage s run the process prior to the sending - Ssin okffering UcuSrBr eTnyptse -inC excess of 3AS ahnadll/or voltCaagpeasb iinli etixecsess of 20V. Source Capabilities Source Capabilities s with connectors select from the offered assum - iSningk that the Dua lh-Raso lael rPeoawdye rdeterminSehda tlhle G oeft t_hSeo ucarcbele_C. apMessage Source Capabilities Capabilities s with the bit set, respond to a by declaring their full, without limiting them based on the cable's.", "tables": [], "figures": [], "page_range": [78, 78]}
{"section_path": "4.4 Cable Type Detection", "start_heading": "4.4 Cable Type Detection", "content": "T4h.i1s chapter c o Ivnerts ethre oplpatfeorrma'sb eilelcittriyca lw reiqtuhire moetnhtse forr iUmpSleBm eSnptineg cUiSfBi Pcoawteir oDenlivsery. May [USB 2.0] [USB 3.2] [USB4] [USBBC 1.2] [USB Type C 2.4] USB Type-C Device [USBBC 1.2] USB Power Delivery be impSlehmalelnted alongside the,,, Port P aainrd Detached ( Hard R)e sspeetcifications. In the case where a requests poPwoerrt vSihaa ll and then the USB SPeocwtieorn D 6e.8li.v3e, \"rHy aSrpde cRiefisceatt\"ion, it follow the USB Power Delivery Specification until the is or there is a. If the USB Power Delivery connection is lost, the return to its default state, see Dead Battery USB Device USB Host USB Host /unpowered operation is when a needs to provide power to a under the circ- umstancesD weahde rBea tthteer y : - Has a that requires charging or - Has lost its power source or - Does not have a power source or Dead BaDttoeerys not want to provide power. USB Type-C [USB Type-C 2.4] PDSink Port USB Communication USB Communication Every capable of can be susceptible to unreliable if the voltage dro[pU aScBr oTsysp ger-oCu 2n.d4 ]falls outside of the acceptable common mode range for the USB Hi-Speed transceivers data lines due to excessive current draw. Certified USB cabling is specified such that such errors don't typically o4c.c4ur (See Cable Ty).pe Detection USB Type-C PD vSafe5V [USB Type-C ®2.4] SourceShall Capabilities Capabilities Standard cable assemblies are rated for voltages higher than and current levels of at least 3A (See ). The limit maximum it offers so as not to exceed the oSof uthrcee type of cabling detected. Shall Attached Capabilities Cable Capabilities Discovse rca Ipdaebnltei toyf Cooffmerminagn mdore thSeacnt i3oAn 6.4.4. 3d.e1t,e \"cDti tshcoe vteyrp Ied oefn tity\" cable anSdO lPim’ Ciot mthme unication theSye cotfifoenr b2.a4s, e\"dS OoPn* t Choe mcumrurennicta ctaiorrny\"ing capaCbailbitley Polfu tghe cabClea dbleet eVrDmOined by the Disco dveerte Irdmeinnteitdy uCsoinmgm thane d (see Shall Negoti)a steent using (seEex plicit Contract ) to the. The returned as part of the details the maximum current and voltage values that be d for a given cable as part of an Cabl.e Discovery Source Power Role Swap Fast Role Swap Sink Shall The process is usually run when the is powered up, after a or or when power is applied to a. The method used to detect these events meet the following req- uiremSoeunrtcse: Shall Cable Discovery Source Source_CapabilitiesMessage s run the process prior to the sending - Ssin okffering UcuSrBr eTnyptse -inC excess of 3AS ahnadll/or voltCaagpeasb iinli etixecsess of 20V. Source Capabilities Source Capabilities s with connectors select from the offered assum - iSningk that the Dua lh-Raso lael rPeoawdye rdeterminSehda tlhle G oeft t_hSeo ucarcbele_C. apMessage Source Capabilities Capabilities s with the bit set, respond to a by declaring their full, without limiting them based on the cable's.", "tables": [], "figures": [], "page_range": [78, 78]}
{"section_path": "5.1 Physical Layer Overview", "start_heading": "5.1 Physical Layer Overview", "content": "PHY Layer Signaling PHY Layer PDUSB Device The Physical Layer ( ) defines the technology for USB Power Delivery. This chapter defines the e5le.c2trical requ iPremheynstsi acnad lp aLraamyeteerrs oFf uthne ctions required for interoperability between s. PHY Layer CC PHY Layer Collision Avoidance The USB PD consists of a pair of transmitters and receivers that communicate across a single signal wire ( ). All communication is half duplex. The practices to minimize communication errors on the channel. The- transmitter Ppaercfkoertms the followinPgr ofutonccotilo Lnasy:er - Receive data fromCR tChe. - Calculate anPda acpkpetend a. CRC Payload - Encode the Packe dtatPar ienacmlubdleingSO thPe* Pay (loi.aed., tChRe C EO)P. Bi-phase Mark Coding BMC CC Transmit the (,,, and ) across the channel using ( ) over. The- receiver performs the following functionPsa:cket Preamble - Recover thSeO cPlo*ck and lock onto the from the. - Detect the. CRC - Decode theE rOePceived data includCinRgC the. Detect thCe RC Vanadli dvalidate the Pa:cket Protocol Layer  If the CRC is Inval,i ddeliver the data to the. If the is, flush the received data.", "tables": [], "figures": [], "page_range": [79, 79]}
{"section_path": "5.2 Physical Layer Functions", "start_heading": "5.2 Physical Layer Functions", "content": "PHY Layer Signaling PHY Layer PDUSB Device The Physical Layer ( ) defines the technology for USB Power Delivery. This chapter defines the e5le.c2trical requ iPremheynstsi acnad lp aLraamyeteerrs oFf uthne ctions required for interoperability between s. PHY Layer CC PHY Layer Collision Avoidance The USB PD consists of a pair of transmitters and receivers that communicate across a single signal wire ( ). All communication is half duplex. The practices to minimize communication errors on the channel. The- transmitter Ppaercfkoertms the followinPgr ofutonccotilo Lnasy:er - Receive data fromCR tChe. - Calculate anPda acpkpetend a. CRC Payload - Encode the Packe dtatPar ienacmlubdleingSO thPe* Pay (loi.aed., tChRe C EO)P. Bi-phase Mark Coding BMC CC Transmit the (,,, and ) across the channel using ( ) over. The- receiver performs the following functionPsa:cket Preamble - Recover thSeO cPlo*ck and lock onto the from the. - Detect the. CRC - Decode theE rOePceived data includCinRgC the. Detect thCe RC Vanadli dvalidate the Pa:cket Protocol Layer  If the CRC is Inval,i ddeliver the data to the. If the is, flush the received data.", "tables": [], "figures": [], "page_range": [79, 79]}
{"section_path": "5.3 Symbol Encoding", "start_heading": "5.3 Symbol Encoding", "content": "Preamble Shall Except for the, all communications on the line be encoded with a line code to ensure a reasonable level of DC-balance and a suitable number of transitions. This encoding makes receiver design less complicated and allows for moreS hvaarlilations in the receiver design. 4b5b line code be used. This encodes 4-bit data to 5-bit symbols for transmission and decodes 5-bit symbols to 4-bit data for consumption by the receiver. Hard Reset Packet Table5.1, \"4b5b Symbol Encoding\" The 4b5b code provides data encoding along with special symbols. Special symbols are used to signal, Table5.1 4b5b Symbol Encoding and delineate boundaries (see ). Name 4b 5b Symbol Description A 1010 10110 hex data A B 1011 10111 hex data B C 1100 11010 hex data C D 1101 11011 hex data D E 1110 11100 hex data E Sync-1 K-code F 1111 11101 hex data F Sync-2 K-code RST-1 K-code Hard Reset #1 RST-2 K-code Hard Reset #2 00111 EOP K-code EOP End of Packet 11001 Shall Not be used 01101 Shall Not be used Error 00000 Shall Not be used Error 00001 Shall Not be used Error 00010 Shall Not be used Error 00011 Shall Not be used Error 00100 Sync-3 K-code Error 00101 Shall Not be used Shall Not be used Error 01000 Shall Not be used Error 01100 Shall Not be used Error 10000 Error 11111", "tables": ["Table 5.1"], "figures": [], "page_range": [80, 80]}
{"section_path": "5.4 Ordered Sets", "start_heading": "5.4 Ordered Sets", "content": "Shall Figure 5.1, \"Interpretation of ordered sets\" Ordered sets be interpKre-cteodd eaccording to Figure 5.1, \"Interpretation of ordere.d sets\" An ordered set consists of 4 Fs isgeunrte a 5s.s1h Ionwtenr ipnr etation of ordered sets. Transmit last Transmit first K-code 4 K-code 3 K-code 2 K-code 1 b4 b0 BIT BIT BIT BIT BIT Transmit last Transmit first Table5.2, \"Ordered Sets\" SOP* SOP SOP’ SOP’’ A list of the ordered sets used by USB Power Delivery can be seen in. is a generic term Table5.2 Ordered Sets used in place of / /. Ordered Set Reference Cable Reset Section 5.6.5, \"Cable Reset\" Hard Reset Section 5.6.4, \"Hard Reset\" SOP Section 5.6.1.2.1, \"Start of Packet Sequence (SOP)\" SOP’ Section 5.6.1.2.2, \"Start of Packet Sequence Prime (SOP')\" SOP’_Debug Section 5.6.1.2.4, \"Start of Packet Sequence Prime Debug (SOP'_Debug)\" SOP’’ Section 5.6.1.2.3, \"Start of Packet Sequence Double Prime (SOP'')\" SOP’’_Debug Section 5.6.1.2.5, \"Start of Packet Sequence Double Prime Debug (SOP''_Debug)\" Shall K-code K-code Shall Valid K-code May The receiver search for all four s. When the receiver finds all four s in the correct place, it interpret this as a ordered set. When the receiver finds three out of four s in the correct place, it Valid Should K-code Valid Table5.3, \"Validation of Ordered Sets\" interpret this as a ordered set. The receiver ensure that all four s are to avoid ambiguity Table5.3 Validation of Ordered Sets in detection (see ). 1st code 2nd code 3rd code 4th code Valid K-code K-code K-code Valid1 CKo-rcroudpet K-code K-code Valid1 K-code CKo-rcroudpet K-code Valid1 K-code K-code CKo-rcroudpet Valid 1 K-code K-code K-code CKo-rcroudpet Invalid2 K-code K-code (perfect) May Valid (example) Corrupt Corrupt Shall Valid 1) be interpreted as a ordered set. 2) be interpreted as a ordered set.", "tables": ["Table 5.2", "Table 5.2", "Table 5.3", "Table 5.3"], "figures": [], "page_range": [81, 82]}
{"section_path": "5.5 Transmitted Bit Ordering", "start_heading": "5.5 Transmitted Bit Ordering", "content": "Shall Table5.4, \"Data Size\" This section describes the order of bits on the wire that be used when transmitting data of varying sizes. Figure 5.2, \"Transmit Oshrdoewrs f othr eV adrififoeurse nSitz desa toaf sDizaetas \"that are possible. Shall Table5.4 Data Size shows the transmission order that be followed. Unencoded Encoded Byte 8-bits 10-bits Word 16-bits 20- bits FiguDrWe 5or.2d Transmit Ord32e-rb iftosr Various Size40s -obfit Dsata b31 b0 b31 Transmit last b16 b15 Transmit first b0 b15 b8 b7 b0 b7 b4 b3 b0 b b b4 b0 BIT BIT BIT BIT BIT Transmit last Transmit first", "tables": ["Table 5.4", "Table 5.4"], "figures": ["Figure 5.2"], "page_range": [83, 83]}
{"section_path": "5.6 Packet Format", "start_heading": "5.6 Packet Format", "content": "Packet Shall Preamble SOP* Section 5.6.1.2, \"Start of Packet Sequences\" Packet Message Header CRC EOP Section 5.6.1.5, \"End of Packet (EOP)\" Packet The F fiogrumrea 5t.3, \"US cBo nPsoiwste or fD ae livery Pac, kaent Form, a(ste\"e PacketSha),l l data including the, a and aPna cket (Ssheea ll BMC CC ). The format is shown in and indicates which parts of the be 4b/5b Nenoctoed:ed. Once 4b/5b encodPeadc, kthete entire Pream bbele transmBMitCted using over. SectionA l6l.t2h.1e, b\"Mitse sinsa tghee C onstru,c itnioclnu\"ding the, are Pack eentcoded. Control Message Data Message Extended Message See for more details of the construction for s, s and sF.igure 5.3 USB Power Delivery Packet Format SOP* (Start Message Preamble(training for receiver) Byte 0 Byte 1 Of Packet) Header EOP (End Of Byte n-1 Byte n CRC Packet) LEGEND: Training sequence provided by the Provided by the Physical Provided by the Protocol Physical layer, not encoded with 4b5b layer, encoded with 4b5b layer, encoded with 4b5b Preamble SOP* Start of Packet Packet EOP End of Packet K-code The transmission starts with a that is used to allow the receiver to lock onto the carrier. It is followed by 5a.6.1 (.1 P).r Tehae mble is terminated with an ( ). Preamble Packet PreambleShall The is used to achieve lock in the receiver by presenting an alternating series of \"0s\" and \"1s\", so the averPagreea fmrebqlueeSnhcayl lis the carrier frequency. Unlike the rest of the, the Preamb leSha Nllot be 4b/5b encoded. Shall The consist of a 64-bit sequence of alternating 0s and 1s. The start with a \"0\" and 5.6. 1en.2d with a \"1\". Start of Packet Sequences SOP SOP Sync-1K-code Sync-2K-code Table5.5, \"SOP Ordered Set\" is an ordered set. The ordered set is defined as: three s followed by one (see Table5.5 SOP Ordered Set ). K-Code Number K-Code in Code Table Sync-1 Sync-1 Source SinkShall4 Packet SOP Valid SOP Table5.3, \"Validation of Ordered Sets\" Shall Discarded A Power Delivery Capable or be able to detect and communicate with s using. If a is not detected (see SOP Packet Shall PD Ca)p tahbelne tPhoer twholeP DtrUaSnBsm Hiossstion PD UbSeB Device. Cable Plug VPD Shall SOP Packet Sending and receiving of s be limited to s on s and s. s and s neither send nor receive s.", "tables": ["Table 5.5", "Table 5.5"], "figures": [], "page_range": [84, 84]}
{"section_path": "5.6.1 Packet Framing", "start_heading": "5.6.1 Packet Framing", "content": "Packet Shall Preamble SOP* Section 5.6.1.2, \"Start of Packet Sequences\" Packet Message Header CRC EOP Section 5.6.1.5, \"End of Packet (EOP)\" Packet The F fiogrumrea 5t.3, \"US cBo nPsoiwste or fD ae livery Pac, kaent Form, a(ste\"e PacketSha),l l data including the, a and aPna cket (Ssheea ll BMC CC ). The format is shown in and indicates which parts of the be 4b/5b Nenoctoed:ed. Once 4b/5b encodPeadc, kthete entire Pream bbele transmBMitCted using over. SectionA l6l.t2h.1e, b\"Mitse sinsa tghee C onstru,c itnioclnu\"ding the, are Pack eentcoded. Control Message Data Message Extended Message See for more details of the construction for s, s and sF.igure 5.3 USB Power Delivery Packet Format SOP* (Start Message Preamble(training for receiver) Byte 0 Byte 1 Of Packet) Header EOP (End Of Byte n-1 Byte n CRC Packet) LEGEND: Training sequence provided by the Provided by the Physical Provided by the Protocol Physical layer, not encoded with 4b5b layer, encoded with 4b5b layer, encoded with 4b5b Preamble SOP* Start of Packet Packet EOP End of Packet K-code The transmission starts with a that is used to allow the receiver to lock onto the carrier. It is followed by 5a.6.1 (.1 P).r Tehae mble is terminated with an ( ). Preamble Packet PreambleShall The is used to achieve lock in the receiver by presenting an alternating series of \"0s\" and \"1s\", so the averPagreea fmrebqlueeSnhcayl lis the carrier frequency. Unlike the rest of the, the Preamb leSha Nllot be 4b/5b encoded. Shall The consist of a 64-bit sequence of alternating 0s and 1s. The start with a \"0\" and 5.6. 1en.2d with a \"1\". Start of Packet Sequences SOP SOP Sync-1K-code Sync-2K-code Table5.5, \"SOP Ordered Set\" is an ordered set. The ordered set is defined as: three s followed by one (see Table5.5 SOP Ordered Set ). K-Code Number K-Code in Code Table Sync-1 Sync-1 Source SinkShall4 Packet SOP Valid SOP Table5.3, \"Validation of Ordered Sets\" Shall Discarded A Power Delivery Capable or be able to detect and communicate with s using. If a is not detected (see SOP Packet Shall PD Ca)p tahbelne tPhoer twholeP DtrUaSnBsm Hiossstion PD UbSeB Device. Cable Plug VPD Shall SOP Packet Sending and receiving of s be limited to s on s and s. s and s neither send nor receive s. Note: PDUSB Device AMA SOP Packet s, even if they have the physical form of a cable (e.g., s), are still required to respond to SOP’ Sync-1K-code Sync-3K-code Table5.6, \"SOP’ Ordered Set\" The ordered set is defined as: two s followed by two s (see Table5.6 SOP’ Ordered Set ). K-Code Number K-Code in Code Table Sync-1 Sync-1 VPDShall SOP’ Communication 4 VPD Cable Plug SOP’ Communication Shall Packet SOP’ A have capability. A and a capable of s onPlyo rdtetect and communicate with Cabsl es tPalrutging with S.OP’ Communication Attached Port Pair Packet SOP’ Cable Plug A S OnPeeding to communicate witPho rat Partner capable of s, between a will be able to communicate using both s starting with to communicate with the and starting with VPD to coCmambleu nPilcuagte with its SOP’ Comm.unication ValidSOP’ Table5.3, \"Validation of Ordered Sets\" Shall Discarded Port SOP’ Communication FVoarli ad SOP or aS OP’ supporting Table5.3, \"Validatios,n i fo af Order ed Set iss\" not detected (see Shall Discarded ) then the whoElxep tlriacints Cmoinstsriaocnt bIme plicit Contr.a Fcotr a supSpinokrtSihnag ll Not SOP’ Packse tif a Sh all Doirs card is noPta dckeetetcted (see SOP’ ) then the whole transmission be. When there is no or an in place a send s 5an.d6.1.2. 3 all Stasr stt aortfi nPga wcikthe t Se.quence Double Prime (SOP'') SOP’’ K-code Sync-1 Sync-3 Sync-1 Sync-3 Table5.7, \"SOP’’ Ordered Set\" The ordered set is defined as the following sequence of s:,,, (see Table5.7 SOP’’ Ordered Set ). K-Code Number K-Code in Code Table Sync-1 Sync-3 VPDShall Not SOP’’ Communication 4 Cable Plug SOP’’ Communication Shall SOP’ Communication Cable Plug Shall SOP’’ Communication Cable APl ug SO Ph’a’ vCeo mmunication capSahbaillilty. A capable of Packet, haSvOe Pa’ ’ ShallDiscard capabilitPya icnk ethte other. No cable only support. A to which is assigned only detect and communicate with s starting with anPdo rt any other s. Cable Plug Attached Port Pair Packet SOP’ SOP’’ Cable Plug Packet SOP A needing to commPournt iPcaatretn werith sPuocrht a, SOP’’ C boemtwmeuenni caa tionShal lwill be able toS cOoPm’ municate uCosimngm unicatiso sntartinSgh walilth and SOP* t oC ocmommmunuincaictaioten with the s and s starting with to communicate with its. A which supports also support Cable Pl uagnd co-oSrOdiPn’’a Cteo mmunication Vali sdoS aOsP t’o’ avoid collisions. Table5.3, \"Validation of Ordered Sets\" Shall Discarded Port ValidSOP* TFoarb lteh5e.3, \"Validati osunp opf oOrrtdinegre d Sets\", if a iSsh naoltl detDecistecda r(dseeed ) then the whole transmission be. For the if a is not detected (see ) then the whole transmission be.", "tables": ["Table 5.5", "Table 5.5", "Table 5.6", "Table 5.7"], "figures": [], "page_range": [84, 85]}
{"section_path": "5.6.2 CRC", "start_heading": "5.6.2 CRC", "content": "SOP’_Debug K-code Sync-1 RST-2 RST-2 Sync-3 Table5.8, \"SOP’_Debug Ordered Set\" The ordered set is defined as the following sequence of s:,,, (see Table5.8 SOP’_Debug Ordered Set ). The usage of this Ordered Set is presently undefined. K-Code Number K-Code in Code Table Sync-1 RST-2 SOP’’_Debug K-code Sync-1 RST-2 Sync-3 Sync-2 Table5.9, \"SOP’’_Debug Ordered Set\" The ordered set is defined as the following sequence of s:,,, (see Table5.9 SOP’’_Debug Ordered Set ). The usage of this Ordered Set is presently undefined. K-Code Number K-Code in Code Table Sync-1 RST-2 Packet Protocol Layer Section 6.2, \"Messages\" Shall Table5.1, \"4b5b Symbol Encoding\" The data is delivered from the (see ) and be encoded with the 5he.x6 d.1at.a4 codes from CRC. CRCShall Payload Section 5.6.2, \"CRC\" T5h.6e.1.5 be ins e Ertnedd ju ostf a Pftearc thkee t (EO.P It) is described in. Packet Shall EOPK-code Figure 5.1, \"Interpretation of ordered sets\" Shall CRC EOP CRC Shall CRC The end of Sha lml arkDeirs carde bde a single Pack aest dSehfainlled in Protocol Layer. This mark the end of the. After the, the -residual be checked. If the is not good, the whole Ntroantes:mission EOPM baey, if it is good, the Pac kbeet delivered to the Hard Rese.tSignaling Message Header Shall CRC The- CRC and data be protected by a P32ay-bloita d CR. C - -C3R2C protects the dataS hinatlelgrity of the data. -32 is defined as follows: - The CRC-32 polynomial Shall be = 04C1_1DB7h. - TCRhCe S-h3a2l Ilnitial value be = FFFF_FFFFPha.y load Packet Preamble SOP* EOP -32 be calculated for all bytes of the not inclusive of any framing symbols (i.e., - eCxRcCludes the Sha, ll, ). Packet - -32 calculationC RC bSehgainll at byte 0, bit 0 and continue to bit 7 of each of the bytes of the. - The remainder oCfR C -3S2h all be complemented. The residual of -32 be C704 DD7Bh. CRC CRC This inversion of the -32 remainder adds an offset of FFFF_FFFFh that will create a constant -32 residual of CN7o0te4:_DD7Bh aCtR thCe receiver side. [USB 3.2] Figure 5.4,T \"hCeR C-32 iGmepnleermateionnta\"tion is identical to thCeR Cone used in. Shall Table5.10, \"CRC-32 Mapping\" is an illustration of -32 generation. The output bit ordering be as detailed in. Figure 5.4 CRC-32 Generation = Flip Flop Table5.10 CRC-32 Mapping CRC-32 Result Bit Position in CRC-32 Field CRC Shall 31 0 The -32 be encoded before transmission. ataD ataD ataD 01234567 Bit Order Byte Order Input", "tables": ["Table 5.8", "Table 5.8", "Table 5.9", "Table 5.9", "Table 5.1", "Table 5.10", "Table 5.10"], "figures": ["Figure 5.4", "Figure 5.4"], "page_range": [86, 88]}
{"section_path": "5.6.3 Packet Detection Errors", "start_heading": "5.6.3 Packet Detection Errors", "content": "CRC Shall MessageShall Discarded GoodCRCMessageShall Not errors, or errors detected while decoding encoded symbols using the code table, be treated the same way; the be Pac kaentd a CC be returned. Shall Packet Discard GoodCRCMessage Section 5.8.6.1, \"Definition of Idle\" While the recBeMivCerI disl eprocessing a, if at any time the -line becomes Idle the receiver stop processing the and it (no is returned). See for the d5e.f6in.it4ion of Ha.rd Reset Hard ResetSignaling PHY Layer Hard ResetSignaling RST-1K-code RST-2K-code Table5.11, \"Hard Reset Ordere d Set\" is an ordered set of bytes sent with the purpose to be recognized by the. The ordered set is defined as: three s followed by one (see Table5.11 Hard Reset Ordered Set ). K-Code Number K-Code in Code Table RST-1 RST-1 Shall Hard Reset 4 Hard ResetSignaling Hard Reset Signaling Shall Section 6.8.3, \"Hard Reset\" ValidHard Reset ATa dbelvei5c.e3, \"Vali dpaetrifoonr mof aO rdered Sets \"when it receives Shall. ADftiescr arredceeidving the, the device reset as described in. If a is not detected (see Cable PlugShall Hard Rese)t then the whole tHraanrsdm RiessseiotnS ignali nbge. Port Partner Hard ResetSignaling Shall Section 6.8.3, \"Hard Reset\" A perform a when it detects being sent between the s. After receiving the Har d ResetSi, gtnhae ldinegviSchea ll reset as described in. The- procedurPe HfoYr Lsaeynedring Me ssage be asM feosllsoawges:Shall EOPKcode MessageDiscarded If the is currently sending a, the be interrupted by sending an - CC and thIed rleest of the Idle. Section 5.8.6.1, \"Definition of Idle\" - If itsI nntoetr Fra,m weaGita fpor it to become (see ). - WCaCit Idle. Preamble K-code Hard ResetSignaling - If is still send the followed by the 4 s foPrH Y Layer. Protocol Layer PHY Layer Disable the channel (i.e., stop sending and receiving), reset the and inform the - that the has been reset. Protocol Layer Figure 5R.5e, -\"eLninaeb lfeo rtmhea tc hoaf nHnaerld w Rheseent \"requested by the Hard R.esetSignaling Preamble Hard Reset shows the line format of which is a followed by the Ordered Set. Figure 5.5 Line format of Hard Reset Preamble(training for receiver) RST-1 RST-1 RST-1 RST-2 LEGEND: Preamble provided by the Physical layer, Provided by the Physical not encoded with 4b5b layer, encoded with 4b5b", "tables": ["Table 5.11"], "figures": ["Figure 5R"], "page_range": [89, 89]}
{"section_path": "5.6.4 Hard Reset", "start_heading": "5.6.4 Hard Reset", "content": "CRC Shall MessageShall Discarded GoodCRCMessageShall Not errors, or errors detected while decoding encoded symbols using the code table, be treated the same way; the be Pac kaentd a CC be returned. Shall Packet Discard GoodCRCMessage Section 5.8.6.1, \"Definition of Idle\" While the recBeMivCerI disl eprocessing a, if at any time the -line becomes Idle the receiver stop processing the and it (no is returned). See for the d5e.f6in.it4ion of Ha.rd Reset Hard ResetSignaling PHY Layer Hard ResetSignaling RST-1K-code RST-2K-code Table5.11, \"Hard Reset Ordere d Set\" is an ordered set of bytes sent with the purpose to be recognized by the. The ordered set is defined as: three s followed by one (see Table5.11 Hard Reset Ordered Set ). K-Code Number K-Code in Code Table RST-1 RST-1 Shall Hard Reset 4 Hard ResetSignaling Hard Reset Signaling Shall Section 6.8.3, \"Hard Reset\" ValidHard Reset ATa dbelvei5c.e3, \"Vali dpaetrifoonr mof aO rdered Sets \"when it receives Shall. ADftiescr arredceeidving the, the device reset as described in. If a is not detected (see Cable PlugShall Hard Rese)t then the whole tHraanrsdm RiessseiotnS ignali nbge. Port Partner Hard ResetSignaling Shall Section 6.8.3, \"Hard Reset\" A perform a when it detects being sent between the s. After receiving the Har d ResetSi, gtnhae ldinegviSchea ll reset as described in. The- procedurPe HfoYr Lsaeynedring Me ssage be asM feosllsoawges:Shall EOPKcode MessageDiscarded If the is currently sending a, the be interrupted by sending an - CC and thIed rleest of the Idle. Section 5.8.6.1, \"Definition of Idle\" - If itsI nntoetr Fra,m weaGita fpor it to become (see ). - WCaCit Idle. Preamble K-code Hard ResetSignaling - If is still send the followed by the 4 s foPrH Y Layer. Protocol Layer PHY Layer Disable the channel (i.e., stop sending and receiving), reset the and inform the - that the has been reset. Protocol Layer Figure 5R.5e, -\"eLninaeb lfeo rtmhea tc hoaf nHnaerld w Rheseent \"requested by the Hard R.esetSignaling Preamble Hard Reset shows the line format of which is a followed by the Ordered Set. Figure 5.5 Line format of Hard Reset Preamble(training for receiver) RST-1 RST-1 RST-1 RST-2 LEGEND: Preamble provided by the Physical layer, Provided by the Physical not encoded with 4b5b layer, encoded with 4b5b", "tables": ["Table 5.11"], "figures": ["Figure 5R"], "page_range": [89, 89]}
{"section_path": "5.6.5 Cable Reset", "start_heading": "5.6.5 Cable Reset", "content": "Cable ResetSignaling PHY Layer Cable ResetSignaling K-code RST-1 Sync-1 RST-1 Sync-3 Table5.12, \" Cable Rese its Oanrd oerrdeedr Seedt \"set of bytes sent with the purpose to be recognized by the. The ordered set is defined as the following sequence of s:,,, (see Table5.12 Cable Reset Ordered Set ). K-Code Number K-Code in Code Table RST-1 Sync-1 Cable ResetSignalingShall 4DFP Cable Reset Cable Plug Hard Reset Port Partner Cable Plug Cable ResetSignalingShall only beC saebnlet bPylu tghe. The Ordered Set is used to reset the s without the need to the s. The state of the after the bFieg euqreu i5v.a6l, e\"nLtin teo fpoormwaetr ocfy Cclaibnlge tRhees et\". Cable ResetSignaling Preamble Cable Reset shows the line format of which is a followed by the Ordered Set. Figure 5.6 Line format of Cable Reset Preamble(training for receiver) RST-1 Sync-1 RST-1 Sync-3 LEGEND: Preamble provided by the Physical layer, Provided by the Physical not encoded with 4b5b layer, encoded with 4b5b", "tables": ["Table 5.12", "Table 5.12"], "figures": [], "page_range": [90, 90]}
{"section_path": "5.7 Collision Avoidance", "start_heading": "5.7 Collision Avoidance", "content": "PHY LayerShall CC Idle Idle Shall ThSee ction 5.8.5.4, \"Int mero-Fnritaomr et hGea cph\"annel for data tranIdslmeission and Sohnalyll initiate transmissions when is. If the bus condition is present, it be considered safe Ptoa sctkaerttS ah tarallnsmDisissicoanr pdreodvided thPea ccoknetditiDonissc daertdaeilded in CC Idle PHY Layer aSrhe amllet. The bus Pr cootoncdoitl iLoany er be checkDeisdc iamrmdeeddiateMly epsrsiaogre to traCnCsmission. IfI dtrleansmiSsesicotino nca 5n.8n.o6t. 1b, e\" Dineiftiinaitteiodn, tohfe Ind lteh\"e be IdleCC. If the is because is not, the signal to the that it has the as soon as becomes. SeeE xplicit Contract PHY LayerSha flolr the definitiRon of. Source Sink SourceShall R InSi andkdTixtiOoKn, during an Sink, thMea y AM ScontroSlo tuhrec ep S hreaslilstor valRue to avoid collisions between aSnindk TxN GtransmSishsaiollns. The Sink set an Shp avlall Nueo tcorrespondiAnMg Sto a cuSrhraelnlt of 3A ( Message) to indicate toA MthSe [ UthSaBt iTt ype-C i n2i.t4i]ateU SaBn Type.- TChe set an p value coRrresponding to a currIemnpt loicfi 1t.C5oAn (tract ) this iEnxdpilcicaitte C toon tthrea ct that it Power R oinleit Siawtea pan Fa asnt dR ole Sw oanply resRpond to s as part of an. SeUe SB Type-C ( ) for detCaoillsl iosifo tnh eA cvooridreasnpcoending p values. During the that precedes an (including and ) the p rTeasbisleto5r.1 v3a, l\"uRe i sv aulsueeds utos esdp efocrif Cyo llision Avoid caunrcree\"nt and is notR used for Shall. Source Sink AMS p details the p values that be used by the to control initiation of an. Table5.13 R values used for Collision Avoidance Source R Parameter Descriptpion Sink Operation Source Operation SinkShall Not p Source AMS AMS tSinkDelay SinkTxNG Sink The SinkT ixnNitGiate tSinkT x can initiate anR an once has 1.5A@5V Transmit “No Go,” after setting p to elapsed after is tShoiusr vcaelue. asserted. SinkTxOK Sink Sink AMS AMS cannot initiate an 3A@5V Transmit “Ok” can initiate an. while it has this value set. Section 6.6.16, \"Collision Avoidance Timers\" Section 6.10, \"Collision Avoidance\" See also and.", "tables": [], "figures": [], "page_range": [91, 91]}
{"section_path": "5.8 Bi-phase Mark Coding (BMC) Signaling Scheme", "start_heading": "5.8 Bi-phase Mark Coding (BMC) Signaling Scheme", "content": "Bi-phase Mark Coding BMC PHY LayerSignaling Scheme Message CC Message ( ) is the for carrying USB Power Delivery s. This eBni-cpohdaisneg M asasrukm Coeds ian gdedicated DC connection, over the wir[IeE, Cw 6h0ic9h5 i8s -u1s]ed foBr MseCnding PD s. UI UI BMC is a version of Manchester coding (see ). In, there is a transition at the start of every bit time ( ) and there is a second transition in the middle of the Pac wkehten a 1 is transmitted. is effectively DC balanced, (each 1 is DC balanced and two successive zeros are DC balanced, regardless of the number oFfig inurteer 5v.e7n, \"inBgM 1C' sE)x. aItm hpalse \"bounded disBpi-aprhitays e(l Mimairtked C otod i1n gbit over an arbitrary, so a very low DPCr leeavmelb).l e Sync-1K-code SOP Message illustrates. This example shows the transition from a to Nthoet e: K-sc oofd ethe Ordered Set aPt rtehaem stbalert of aS ignaling. Hard Reset Cable Reset Other s can occur after the Figure 5. 7fo Br MC Exam psluech as and. Preamble Sync-1 Sync-1 Data In BMC BMC Signaling CC Figure 5.8, \"BMC Transmitter Block Diagram\" Figure 5.9, \"BMC Receiver Block Diagram\" uses DC coupled baseband on. shows a block diagram for a Transmitter and shows a block diagram for the corresponding Receiver. Figure 5.8 BMC Transmitter Block Diagram Data 4b5b BMC to CC Encoder Encoder CRC", "tables": [], "figures": ["Figure 5.9"], "page_range": [92, 92]}
{"section_path": "5.8.1 Encoding and signaling", "start_heading": "5.8.1 Encoding and signaling", "content": "Bi-phase Mark Coding BMC PHY LayerSignaling Scheme Message CC Message ( ) is the for carrying USB Power Delivery s. This eBni-cpohdaisneg M asasrukm Coeds ian gdedicated DC connection, over the wir[IeE, Cw 6h0ic9h5 i8s -u1s]ed foBr MseCnding PD s. UI UI BMC is a version of Manchester coding (see ). In, there is a transition at the start of every bit time ( ) and there is a second transition in the middle of the Pac wkehten a 1 is transmitted. is effectively DC balanced, (each 1 is DC balanced and two successive zeros are DC balanced, regardless of the number oFfig inurteer 5v.e7n, \"inBgM 1C' sE)x. aItm hpalse \"bounded disBpi-aprhitays e(l Mimairtked C otod i1n gbit over an arbitrary, so a very low DPCr leeavmelb).l e Sync-1K-code SOP Message illustrates. This example shows the transition from a to Nthoet e: K-sc oofd ethe Ordered Set aPt rtehaem stbalert of aS ignaling. Hard Reset Cable Reset Other s can occur after the Figure 5. 7fo Br MC Exam psluech as and. Preamble Sync-1 Sync-1 Data In BMC BMC Signaling CC Figure 5.8, \"BMC Transmitter Block Diagram\" Figure 5.9, \"BMC Receiver Block Diagram\" uses DC coupled baseband on. shows a block diagram for a Transmitter and shows a block diagram for the corresponding Receiver. Figure 5.8 BMC Transmitter Block Diagram Data 4b5b BMC to CC Encoder Encoder CRC Figure 5.9 BMC Receiver Block Diagram Data from CC BMC SOP 5b4b Decoder Detect Decoder CRC Shall CC Shall vSwing CC Section 5.8.5, \"BMC Transmitter TSpheec UifiScBa tPioDn bs\"aseband signal be driven on the wire with a tristaUteS Bdr Tivyepre -tChat cause a sw[UiSnBg Tony pe-.C T 2h.e4 ]tristate driver is slew rate limited (see min rise/fall time in ) to limit coupling to D+/D- and to other signal lines in the fully featured cables (see ). This sPlreewa mrabtlee limiting can be peSrhfoarllmed either with driver design or an RC filter on Sthhea ldlriver output. May Preamble tStartDrive Figure 5.10, \"BMC WEnhceond esde nSdtainrtg othf Pe reamble\", the transmitter start by transmitting a low level. The receiver tolerate the loss of the first edge. The transmitter vary the start of the by min (see ). Figure 5.10 BMC Encoded Start of Preamble High Impedance (level set by R/R) p d 1UI 1UI 1UI 1UI 1UI 1UI tStartDrive Shall Frame CC UI FTrhaem treansmitter Figu rtee r5m.1i1n,a \"tTer tahnes mfinitatli nbgit o orf R tehcee iving B MbyC aEnn ceoddgeed ( Fthraem “ter aTielirnmgi nedagteed” )b tyo Z hereolp w einths uHrieg hth-taot- Lthoew rLeacset iTvrear ncsloitciokns \"the finFaigl ubrite. 5If. 1th2e, \" tTrraailninsmg eitdtigneg r oers uRletsc einiv itnhge BtrManCs Emnictotedre dd rFivrainmge Te lromwi n(ia.ete.,d t hbey fOinnael whaitlhf- Hi gohf -tthoe Low La isst hTirgahn, ssieteio n\" and - Shall ), then the tCrCansmittert:HoldLowBMC - Shoul cdontinue tCoC drive low for. tHoldLowBMC Shall CC tEndDriveBMC release to high impedance as soon as possible after min and release Figure 5b.1y1 m, \"aTxr ansmitting or Re.ceiving BMC Encoded Frame Terminated by Zero with High-to-Low Last Transition\" BMC Frame Frame Figure 5.12, \"Transmitting or Receiving BMC Encoded Frame Terminated by One with iHlliugsht-rtaot-eLso twh eL aesntd T orfa an sition e\"ncoded with an eBnMcoCded zero foFrr wamhiech the final bit of the is terminated by a high Ftor alomwe transition. tInterFrameGap illustrates tFhrea emned of a EPnorctoded with an encoded one for which the final bit of the Frame is terSmecintiaotne d5.b8.y5.a4 h, \"iIgnht etor- lForwam trea Gnasipt\"ion. Both figures also illustrate the timing requirement before the start of the next when the has either been transmitting or receiving the previous (see ). Figure 5.11 Transmitting or Receiving BMC Encoded Frame Terminated by Zero with High-to-Low Last Transition final bit trailing edge of pre-amable for of frame final bit next frame High Impedance (level set by Rp/Rd) 1UI min tHoldLowBMC max tEndDriveBMC tInterFrameGap Figure 5.12 Transmitting or Receiving BMC Encoded Frame Terminated by One with High-to-Low Last Transition final bit trailing edge of pre-amable for of frame final bit next frame High Impedance (level set by Rp/Rd) 1UI min tHoldLowBMC max tEndDriveBMC tInterFrameGap CC UI Frame Figure 5.13, \"Transmitting or Receiving BMC Encoded Frame Terminated by Zero with Low to High Last Transition\" IFfi gthuer et r5a.1il4in, g\"T erdagnes mreisttuilntgs ionr tRheec etrivainnsgm BiMtteCr E dnrcivoidnegd Fra hmigeh T (ei.rem., itnhaet efidn ably h Oanlfe- wi tohf Lthoew to Hig his L laoswt,T sreaen sition\" and ), then- theS thraanllsmitter: CC UI  conSthinaulel to driCveC high tfoHro 1ld Lo.wBMC - ShoTuhlden dCrCive low for. tHoldLowBMC Shall CC tEndDriveBMC release to high impedance as soon as possible after min and release Figure 5b.1y3 m, \"aTxr ansmitting or Re.ceiving BMC Encoded Frame Terminated by Zero with Low to High Last Transition\" BMC Frame Frame Figure 5.14, \"Transmitting or Receiving BMC Encoded Frame Terminated iblylu Ostnrea wteist hth Leo wen tdoi nHgig ohf La ast Tr eanncsoitdioend\" that ends with an enBcMoCded zero foFrr wamhiech the final bit of the is terminated by a low to high traFnrsaimtioen. tInterFrameGap illustrates the ending of Far ame encoded Port that ends with an encoded one for which the final bitF orfa tmhee Se icst itoenr m5.i8n.5a.t4e,d \" Ibnyt ear -loFwra mtoe h Gigahp \"transition. Both figures also illustrate the timing requirement before the start of the next when the has either been transmitting or receiving the previous (see ). Figure 5.13 Transmitting or Receiving BMC Encoded Frame Terminated by Zero with Low to High Last Transition ofi fn fa r 0al mbit e trail fi in ng a le bd ig te of pr ne e-a xm t 0fa rb al me efor High Impedance (level set by Rp/Rd) 1UI 1UI min tHoldLowBMC max tEndDriveBMC tInterFrameGap Figure 5.14 Transmitting or Receiving BMC Encoded Frame Terminated by One with Low to High Last Transition ofi fn fa r 1al mbit e trail fi in ng a le bd ig te of pr ne e-a xm t 0fa rb al me efor High Impedance (level set by Rp/Rd) 1UI 1UI min tHoldLowBMC max tEndDriveBMC tInterFrameGap Note: Packet There is no requirement to maintain a timing phase relationship between back-to-back s.", "tables": [], "figures": ["Figure 5.9", "Figure 5.9", "Figure 5b", "Figure 5.12", "Figure 5.11", "Figure 5.12", "Figure 5b", "Figure 5.14", "Figure 5.13", "Figure 5.14"], "page_range": [92, 95]}
{"section_path": "5.8.2 Transmit and Receive Masks", "start_heading": "5.8.2 Transmit and Receive Masks", "content": "Shall Not Figure 5.15, \"BMC Tx 'ONE' Mask\" Figure 5.16, \"BMC Tx 'ZERO' Mask\" Table5.14, \"BMC Tx Mask Definition, X Values\" Table5.15, \"BMC Tx Mask Definition, Y Values\" The transmitted signal violate the masks defined in Secti,o n 5.8.3, \"Transmitter Loa, d Model\" RandR [USB Type-C 2.4] at the output of a load equivalent to the cable model and receiver load model described in Note:. The masks apply to the full range of p/ d values as defined in. The measurement of the transmitter does not need to accommodate a change in signal offset due to the ground offsetS whahleln current is flowing in the cablet.Rise Shall tFall The transmitted signal have a rise time no faster than. The transmitted signal have a fall time no faster than. The maximum limits onF itghuer reis 5e. 1an5d B fMalCl t Timx e'Os NarEe' eMnafosrkced by the Tx inner masks. 1UI Y9 Y8 Y7 Y6 Y5 Y4 Y3 Y2 Y1 X1 X2 X3 X4 X5 X6 X7X8 X9 X10 X11 X12 X13X14 0.5UI Figure 5.16 BMC Tx 'ZERO' Mask 1UI Y9 Y8 Y7 Y6 Y5 Y4 Y3 Y2 Y1 X1 X2 X3 X4 X5 X6 X7X8 X9 X10 X11 X12 X13X14 0.5UI Table5.14 BMC Tx Mask Definition, X Values Name Description Value Units X1Tx UI X2Tx Left Edge of Mask 0.015 UI X3Tx see figure 0.07 UI X4Tx see figure 0.15 UI X5Tx see figure 0.25 UI X6Tx see figure 0.35 UI X7Tx see figure 0.43 UI X8Tx see figure 0.485 UI X9Tx see figure 0.515 UI X10Tx see figure 0.57 UI X11Tx see figure 0.65 UI X12Tx see figure 0.75 UI X13Tx see figure 0.85 UI X14Tx see figure 0.93 UI Right Edge of Mask 0.985 Table5.15 BMC Tx Mask Definition, Y Values Name Description Value Units Y1Tx Lower bound of Out -0.075 V Y2Tx er mask Lower bound of in Y3Tx ner mask Y4Tx see figure 0.15 V Y5Tx see figure 0.325 V Inner mask vertical Y6Tx midpoint Y7Tx see figure 0.8 V Y8Tx see figure 0.975 V Y9Tx see figure 1.04 V Upper Bound of Out Source BMCSignaling SchemeShall Figure 5.17, \"BMC Rx 'ONE' Mask when Sourcing Power\" Figure 5.18, \"BMC Rx 'ZERO' AM ask whe uns Sinogu rtchien g Pow er\" Table5.1 6, \"BM bCe R cxa Mpaabskle D oeff irneicteioivni\"ng a siSgonuarlc tehat complies with the mask when sourcing power as defined in vNoiseActive So,u rce and. The Rx mask is bounded by sweeping a TCxo nmsuasmke crompliant sBigMnCalS, wigintahl iandgd Secdh emeShall between power neutral and offsets. Figure 5.21, \"BMC Rx 'ONE' Mask when Sinking Power\" Figure 5.22, \"BMC Rx A'Z ERO' Mask uwshinegn tShinek ing P ower\" Table5.16, \" BbMe Cca Rpxa bMlae sokf Dreecfieniivtiinong \"a signCalo tnhsautm ceormplies with the mask when sinking power as defined in vNoiseActive, Consumer and. The Rx mask is bounded by sweeping a Tx mask comBpMliaCnSt isginganlainl,g w Sicthh eamdedeSdh all between power neutral and offsets. Figure 5.19, \"BMC Rx 'ONE' Mask when Power neutral\" Figure 5.20, \"BMC Rx E'ZvEeRrOy 'p Mroadsku cwt huesnin Pgo twheer neut ral\" Table5.1 6, \"BM bCe R cxa pMaabslke Dofe frienciteiiovnin\"g a signal that complies with the mask when power neutral as defined in, F Dual-Role Power Device Shall and Source. BMCSignaling Scheme Sink BMCSignaling Scheme s meet the receiver requirements for a when providing power during any transmission using the or a when consuming power during any transmission using the Cable Plug Shall. Source Sink BMCSignaling Scheme s meet the receiver requirements for both a and a during any transmission using the. The parameters used in the masks are specified to be appropriate to either edge triggered or oversampling receiver implementations. BMC The masks are defined for 'ONE' and 'ZERO' separately as enforces a transition at the midpoint of the unit interval while a 'ONE' is transmitted. tRxFilter The Rx masks are defined to bound the Rx noise after the Rx bandwidth limiting filter with the time constant has been applied. Y1Rx Y5Rx vSwing vNoiseActive vIRDropGNDC The boundaries of Rx outer mask, and, are specified according to max and accommodate half of from cable noise coupling and the signal offset due to the ground offset when current is flowing in the cable. Y4Rx Y2Rx Y7Tx Y3Tx X3Tx vNoiseActive The vertical dimension of the Rx inner mask, -, for power neutral is derived bvyN roeidseuAcicntgiv tehe vertical dimension of the Tx inner mask, -, at time location by to account for cable noise coupling. The received signal is composed of a waveform compliant to the Tx mask plus. vNoiseActive vIRDropGNDC The vertical dimension of the Rx inner mask for sourcing power is derived by reducing the vertical dimension of the Tx inner mask by and to account for both cable noise coupling and signal DC offset. vNoiseActive vIRDropGNDC vIRDropGNDC The received signal is composed of a waveform compliant to the Tx mask plus the maximum value of plus where the value transitions between the minimum and the maximum values as allowed in this spec. vNoiseActive vIRDropGNDC The vertical dimension of the Rx inner mask for sinking power is derived by reducing the vertical dimension of the TvNx oinisneeArc mtiavsek by vIRDropGND mCax and vIRDropGN mDCax for account for both cable noise coupling and signal DC offset. The received signal is composed of a waveform compliant to the Tx mask plus the maximum value of plus where the value transitions between the minimum and the maximum values as allowed in this spYe3cR. x vSwing vIRDropGNDC vIRDropGNDC The center line of the Rx inner mask,, is at half of the nominal for power neutral, and is shifted up by half of maSxh faolrl sourcing power and is shifted down by half of max for sinking power. vNoiseIdle Shall BMC Idle The receiver sensitivity be set such that the receiver does not treat noise on an undriven signal path as an incoming signal. Signal amplFitiugduerse b5e.1lo7w B MC Rx 'ON Em' aMx ask w hbee ntr Seoatuerdc iansg n Pooiswe ewrhen is. 1UI Y5 Y4 Y3 Y2 Y1 X1 X2 X3 X4 0.5UI X5 X6 X7 X8 Figure 5.18 BMC Rx 'ZERO' Mask when Sourcing Power 1UI Y5 Y4 Y3 Y2 Y1 X1 X2 X3 X4 0.5UI X5 X6 X7 X8 Figure 5.19 BMC Rx 'ONE' Mask when Power neutral 1UI Y5 Y4 Y3 Y2 Y1 X1 X2 X3 X4 0.5UI X5 X6 X7 X8 Figure 5.20 BMC Rx 'ZERO' Mask when Power neutral 1UI Y5 Y4 Y3 Y2 Y1 X1 X2 X3 X4 0.5UI X5 X6 X7 X8 Figure 5.21 BMC Rx 'ONE' Mask when Sinking Power 1UI Y5 Y4 Y3 Y2 Y1 X1 X2 X3 X4 0.5UI X5 X6 X7 X8 Figure 5.22 BMC Rx 'ZERO' Mask when Sinking Power 1UI Y5 Y4 Y3 Y2 Y1 X1 X2 X3 X4 0.5UI X5 X6 X7 X8 Table5.16 BMC Rx Mask Definition Name Description Value Units X1Rx UI X2Rx Left Edge of Mask 0.07 UI X3Rx Top Edge of Mask 0.15 UI X4Rx See figure 0.35 UI X5Rx See figure 0.43 UI X6Rx See figure 0.57 UI X7Rx See figure 0.65 UI X8Rx See figure 0.85 UI Y1Rx See figure 0.93 Y2Rx Lower bound of Outer Mask Y3Rx -0.3325 V Y3Rx 1 1 – 0.205 when sourcing power or sinking power. Lower Bound of Inner Mask V Y3Rx – 0.33 when power neutral. Center line of Inner Mask 0.5625 Power Neutral. V Y4Rx Y3Rx 0.4375 Sinking Power. Y3Rx 1 1 + 0.205 when sourcing power or sinking power. Upper bound of Inner mask V Y5Rx + 0.33 when power neutral. Upper bound of the Outer mask 1.5325 V 1) The position of the center line of the Inner Mask is dependent on whether the receiver is Sourcing or Sinking power or is Power Neutral (see earlier in this section).", "tables": ["Table 5.14", "Table 5.15", "Table 5.16"], "figures": ["Figure 5.16", "Figure 5.17", "Figure 5.21", "Figure 5.19", "Figure 5.18", "Figure 5.19", "Figure 5.20", "Figure 5.21", "Figure 5.22"], "page_range": [96, 102]}
{"section_path": "5.8.3 Transmitter Load Model", "start_heading": "5.8.3 Transmitter Load Model", "content": "Shall Figure 5.23, \"Transmitter Load Model for BMC Tx from a Source\" Source Figure 5.24, \"Transmitter Load Model for BMC Tx from a Sink\" Sink The transmitter load model be equivalent to the circuit outlined in [USB Type-C 2.4] R R for a and for a. It is formed by the concatenation of a cable load model and a receiver load model. See for details of tNhoet e:p and d resistors. [USB Type-C 2.4] The parameteFrisg zuCraeb 5le.2_C3C T, rtCaanbslmeDitetleary _LCoCa dan Md ocdCeabl lfeoPrl BugM_CCC T axr efr doemfi nae Sdo iunr ce. Figure 5.24 Transmitter Load Model for BMC Tx from a Sink Informative Section 5.8.5, \"BMC Transmitter Specifications\" The transmitter system components rOutput and cShunt are illustrated for purposes, and do not form part of the transmitter load model. See for a description of the transmitter system design. Shall The value of the modeled cable inductaLnac=e t,C Laab, l(eiDn enlHay)_ CC b* ez Ccaalbcluel_aCtCed from the following formula: max min tCableDelay_CC is the modeled signal propagation delay through the cable, and zCable_CC is the modeled cable impedance. The modeled cable inductance is 640nH for a cable withS hzCaallble_CCmin = 32Ω and tCableDelay_CCmax = 20ns. The value of the modeled cable capacitCaan=cteC, aCbal, e(Dine lpaFy)_ CC /bzeC caabllceu_lCaCted f rom the following formula: max min The modeled cable capacitance is Ca = 625pF for a cable with zCable_CCmin = 32Ω and tCableDelay_CCmax = 20ns. Therefore, Ca/2 = 312.5pF. cReceiver Shall cCablePlug_CC models the capacitance of the plug at each end of the cable. models the capacitance of the receiver. The maximum values be used in each case. cCablePlug_CC Transmitter Load Model Output Cable Model Receiver Load Model Connector L a c cShunt a cReceiver CC_gulPelbaCc R p rOutput c a R d cCablePlug_CC Transmitter Load Model Output Cable Model Receiver Load Model Connector L a c cShunt a cReceiver CC_gulPelbaCc R p rOutput R d c a Note: The transmitter load model assumes that there are no other return currents on the ground path.", "tables": [], "figures": ["Figure 5.24"], "page_range": [103, 104]}
{"section_path": "5.8.4 BMC Common specifications", "start_heading": "5.8.4 BMC Common specifications", "content": "T5h.8is.s4ec.t1ion defines t hBeM coCm mCoonm recmeivoenr a Pnda trraanmsmeittteerr rsequirements. Table5.17, \"BMC Common Normative Requirements\"Shall The electrical requirements specified in apply to both Table5.17 BMC Common Normative Requirements the transmitter and receiver. Name Description Min Nom Max Units Comment fBitRate tUnitInterval Bit rate 270 300 330 Kbps fBitRate Unit Interval 3.03 3.70 µs 1/ BMC UI 1) Denotes the time to transmit an unencoded data bit, not the shortest high or low times on the wire after encoding with. A single data bit cell has duration of 1, but a data bit cell with value 1 will contain a centrally placed", "tables": ["Table 5.17", "Table 5.17"], "figures": [], "page_range": [105, 105]}
{"section_path": "5.8.5 BMC Transmitter Specifications", "start_heading": "5.8.5 BMC Transmitter Specifications", "content": "Shall Table5.18, \"BMC Transmitter Normative Requirements\" Table5.18 BMC Transmitter Normative Requirements The transmitter meet the specifications defined in. Name Description Min Nom Max Units Comment pBitRate Maximum difference between the The reference bit rate is the Packet Preamble Preamble bit-rate during the part of the average bit rate of the last 32 bits following the of the. rFRSwapTx aF na dst tR ho el e r eS fw era ep n R cee q bu ite -s rt ate. Fast Role Swap Request transmit Maximum driver resistance of a driver resistance (excluding cable resistance) transmitter. Assumes a worst case [USB Type-C 2.4] cable resistance of 15Ω as defined Note: in. Based on this value the maxFimasut mRo cleo mSwbainpe Rde quest driver and cable resistance of a tEndDriveBMC transmitter is 20Ω. tHoldLowBMC Time to cease driving the line Min value is limited by Frame after the end of the last bit of the 23 µs. tFall. Fall Time 10% and 90% amplitude points, tHoldLowBMC condition. tEndDriveBMC Time to cease driving the line Max value is limited by after the final high-to-low 1 µs. tInterFrameGap transition. Frame Time from the end of last bit of a Preamble until the start of the first 25 µs tFRSwapTx bFaits ot fR tohlee nSwexatp Request. Fast Role Swap Request Initial Source transmit is Initial Sink CC duration indicated from the to the by driving tRise low for this time. Rise time 10% and 90% amplitude points, tStartDrive condition. Preamble Time before the start of the first Shall bit of the when the -1 1 µs transmitter start driving vSwing the line. Voltage Swing Applies to both no load condition Section 5.8.3, and under the load condition specified in zDriver Source. [USB 2.0] Transmitter output impedance output impedance at the Nyquist frequency of low speed (750 kHz) while the is driving the line. cReceiver DFP UFPShall CC DFP UFP May cReceiver CC Shall is the capacitance that a or present on the line when the or Sh'asl rleceiver is not transmitting on the line. cTRheec teriavnesrmitter C Chave more captIanctitearnFcrea tmhaenG ap while driving the line, but meet the waveform mask requirements. Once transmission is complete, the transmitter disengage c5a.p8ac.5ita.2nce in exces s Sofo urce O ufrotmp uthte Im wpireed waitnhicn e. Source zDriver Source zDriver output impedance is determined by the driver resistance and the shunt capacitance of the and is hence a frequency dependent term. impacts the noise ingression in the cable. It is specified such that tzhDer nivoeirse at the Receiver is bounded. is defined by the following eqzuDartiivoenr:=rOutput/(1+s*rOutput*cShunt) Figure 5.25 Transmitter diagram illustrating zDriver rOutput zDriver cShunt Shall cReceiver c5S.h8u.n5t.3 Not cau sBe ait v iRolaattioen Dofr ift when not transmitting. fBitRate fLBimitRitas toen the drift in are set to help low-complexity receiver implementations. Packet fBitRate PacketShall pBitRate fBitRate is the reciprocal of the averPargeea bmitb dleurfaBtiitoRna ftreom the previous 3P2a bckitest at a given portiEoOnP ofS thhae ll. The cphBaintRgae tien durinpgB iat Rate be less than. The reference bit rate (refBitRate) is the average over the last 32 bits of the. throughout the, including the, be within of refBitRate. pBi tiRs aextep r=e |s sfBedit Rasa ate p -e rrecfeBnittRagaete: | / refBitRate x 100% Shall pBitRate Packet BIST Carrier Mode Payload pBitRate SOP The transmitter have the same May for all types. The Packet and Bit StrPeraemam sbiglenals are continuous signals without a. When checking Preamb aleny set of 1044 bits (20 bit followed by the 32 preceding bits considered to be the last 32 bits of the used to compute refBitRate. Figure 5.26, \"Inter-Frame Gap Timings\" Frame Fi gilulurset 5ra.2te6s Itnhtee irn-tFerra-me Ga pga Tpi mtiminingsgs. End of Frame Bus driven after end Bus driven before Preamble of Frame Preamble tInterFrameGap tEndDriveBMC tStartDrive Shall tEndDriveBMC Frame The transmitter drive the bus fForra nmoe lonPgreear mthbalne after transmFriattminegS thhae lflinal bit of the. tInterFrameGap Before starting to transmit the next 's the transmitter of the next ensure that it waits for - after either: Frame Message AMS GoodCRCMessage Transmitting the previous, for example sending the next in an immediately after - having sent a Frame, or Message GoodCRC Message Receiving the previous, for example when responding to a received with a -, or Idle CC Section 5.7, \"Collision Avoidance\" Port AMS Idle Section 5.8.6.1, \"Definition of Idle\" tInterFrameGap Observing an conditFiroanm oen (see Section 5.7, \"Collision Avoidance\"). In this case the isA wMaSiting to initiate an observes (see ) and then waits before transmitting the. See also for details on when an can Note: be initiated. Idle Frame Section 5.8.6.1, \"Definition of Idle\" The transmitter is also required to verify a bus condition immediately prior to starting transmission of the next F (rsaeme eMay Pream)b.le tStartDrive Section 5.8.1, \"Encoding and signaling\" The transmitter of the next vary the start of the by (see Sectio)n. 5.8.1, \"Encoding and signaling\" Idle Frame See also for figures detailing the timings relating to transmitting, receiving, 5an.d8 o.5bs.e5rving in Srehlaotinrgt iton g of sT.ransmitter Output Port Cable PlugShall tFRSwapTx Fast Role Swap A TraSnescmtioitnt e5r.8 in.5.a6, \"Fa sot rR ole Swap T ransm tiossleiornat\"e having its output be shorted to ground for max. This is due to the potential for to be signaled while the Transmitter is in the process of transmitting (see ). Fast Role Swap PDUSB Hub Port USB Device USB Host The process is intendedF faosrt uRsoel eb Syw aa p tVh Ba Ut S presently has an external supply and is USB Hproosvtiding powveSra fbeo5tVh through its dVo Bw Un Sstream s tvoS afe5V s and upstream toF aas t Role Sw aspucShig ansa ali nlagptop. OFans rt eRmoloev Sawl oafp tAhMe eSxternal wall supply Sou ernceabSleinsk aP owe rs uRpoplely to be maintained bRy aRllowing the Secti oton a8p.3p.2ly.8, \"Fast R owleh Sewn aitp s\"ees droop below after having detected. The is then used to correctly assign / s and configure the p/ d resistors (see Initial SourceShall )F.ast Role Swap Request CC rFRSwapTx tFRSwapTx Initial SourceShall Fast Role Swap Request Explicit TCohnet ract Initi al Sou rscigenMaal ay Fast Role Swap Re bqyu desrtiving to ground with a resSiisntka nCcaep aobf illeitsise sthan Initia lf Soirn k. The Fast R ole S wonalpy R seeqnude ast Message Swhhaelnl it hDaiss caanr ded Section 6.. 1T2h.e2.2.1, \"Common Pro tsoecnodl Laa yer Message Transmiss eiovne nS tiaf tite hDaisa gnroat mye\"t had its queried by the. On transmission of the any pending s be (see Fast Role SwapSignalingMay ). The Initial Sink oveFrarisdt eR aonley S awcatipve transmissions. FR_SwapMessage Initial SourceShall R SinkTxOK Fast Role SwapSignaling Since the 's response to the signal is to send an, the ensure p is set to once the is complete.", "tables": ["Table 5.18"], "figures": ["Figure 5.25", "Figure 5.26"], "page_range": [106, 109]}
{"section_path": "5.8.6 BMC Receiver Specifications", "start_heading": "5.8.6 BMC Receiver Specifications", "content": "Shall Table5.19, \"BMC Receiver Normative Requirements\" Table5.19 BMC Receiver Normative Requirements The receiver meet the specifications defined in. Name Description Min Nom Max Units Comment cReceiver DFP UFP Shall CC The or system have careceiver capacitance 200 600 pF pacitance within this range when not nBER transmitting on the line. -6 nTransitionCount Bit error rate, S/N = 25 dB 10 Idle Number of transitions to be detected to tFRSwapRx T Fara stn Rsi oti leo n Ss w f ao pr Rsi eg qn ua el s d tetect 3 deF ca las rt eR bo ule s S nw oa np - Req.uest A results in the detection time tRxFilter least this amount of time. Rx bandwidth limiting filter Time constant of a single pole filter to tTransitionWindow (digital or analog) limit broad-band noise ingression1. Idle Time window for detecting vFRSwapCableTx Fnaosnt- Role Swap Request 12 20 µs Fast Role Swap Request The must be bevoltvIRDropGNDC age detection tIhRr Desrhopold ed. [USB Type-C 2.4] vNoiseActive Cable Ground 250 mV As specified in VBUS [U.SB BMC 2.0] Peak-to-peak noise from, Noise amplitude when atnRdx SFBilUte lrines after the Rx bandis active. width limiting filter with the time convNoiseIdle stant has been aV pB pU lS ie[ dU.SB BMC 2.0] Idle Peak-to-peak noise from, Noise amplitude when atnRdx SFBilUte lrines after the Rx bandis. width limiting filter with the time conzBmcRx stant has been applied. Receiver Input Impedance 1 MΩ 51.8).6.1Broad-band n oDisee infignreisstiioon nis douef tIod coluepling in the cable interconnect. BMCCollision Avoidance nTransitionCount tTransitionWindow tTra nsitionWindow is performed byn tThera dnesteitcitoinonC oouf nsitgnal transitions at thSeh raeclleiver. DetectioIdnl eis active when transitions occur at the receiver within a time window of. After waiting Section 5.8.5.w4, i\"tIhnotuert -dFertaemctei nGga p\" transitions the buMs ay be declared. Refer to for details of when transmissions start. BMCSignaling Scheme Multi-Drop BMCMulti-Drop CC Multi-Drop The is suiMtaublltei- fDorro upse in configurations coCnabtalein Pinlugg one or two transceivers connected to the wire, where one or both ends of a cable contains a transceiver. In this Fspigeucrifei c5a.2ti7o,n \" Ethxea mlopclaet iMonul otif- Dthreo p Configura ttiroann sshceoiwveinrg i st wreof eDrRrePds\" to as the. Multi-Drop DRP below illustrates a typical configuration with twFoi gures.5.27 Example Multi-Drop Configuration showing two DRPs Switch Switch DRP VCONN VCONN DRP Cable Connector Connector cReceiver cReceiver cCablePlug cCablePlug Multi-Drop Shall Multi-Drop The transceive[rU SB Ty opbee-Cy a2l.l4 t]he electrical characteristics specified in this sectionM euxlctei-pDtr foopr those relating to capacitance. The maximum capMaucilttai-nDcreo apllowed for the May node when not driving the line is cCablePlug_CC defined inM ulti-Drop. There are no constraints as to the distance of the UtrSaBn sHcoesivter fUroSmB Dtheevi ecend of the plug. The transceiver(s) be located anywhere along the cable including the plugs. The transceiver suffers less from ground offset compared to the transceivers in the or and contributesA nttoa scihgnificant reflPeocrttions. VCONN Source Port VCONN Source Port DFP Attached It is pUoFsPsible to have a configuration at Figure w 5.h2e8r, e\" Eoxnaem ple Mcaunl tbi-eD ar op Configurati aonnd s hthoew ointgh ear DFP a ins dn oUtF aPb\"le to be a, suCcCh that thereP oisr tno switch in the sVe Cc Oo Nn Nd S ourc. eASnh eaxlalmple of a wcRitehc eai svweritch to a without a switch is outlined in. The capacitance on the line for a not able to be a still be within except when transmitting. Figure 5.28 Example Multi-Drop Configuration showing a DFP and UFP Switch DFP VCONN UFP Cable Connector Connector cReceiver cReceiver cCablePlug cCablePlug Initial Sink Fast Role Swap Fast Role Swap Request vSafe5V Section 7.1.13, \"Fast Role ASwn ap\" Ini tpiarel pSianrkesS hfoarl la by eFnasustr iRnogl et hSawt aopn Rcee qitu heasts detected the its power supply is ready to respond by applying according to the timing detailed in. The only respond to the when all the following conditions have bee- n met: Explicit Contract Sink Capabilities Initial Source Initial Sink An has been established and the of the have been - receiSviendk _bCya, paandb ialitt tiehse Mreeqsusaegste of, the. Initial Source Fast Role Swap Fixed SupplyPDO The received from the has at least one of the - bits sIneitt iina li Stsin 5kV. Initial Source Fast Role Swap Sink_CapabilitiesMessage The is able and willing to source the current requested by the in the bits ofF iatsst Role Swap Reques t. Message Shall Discarded Section 6.12.2.2.1, \"Common Protocol Layer Message Transmission State Diagram\" On detection of the any pending s be (see Initial Sink Fast Role Swap ). CC tFRSwapRx [USB Type-C 2.4] SourceR vNoiseIdle WhenM thaey CisC prepared for a vNo ainsedI dthlee bus is idle the voltage averageIdn oitviaelr Sink min remains abFoavste R0o.7leV S (wseaep ) since the Initi alp S ios uerictheer 1.5A or 3.0FAas. tH Roowlee Svwera, p Request noise cause the line voltage to reach 0.7V- CC /2 for short duravtiFoRnSsw. WaphCeanb tlheeT x is prepared fIonrit aia l Sink while it iFs atrsat nRsomlei tStwinagp andS thhael l Not iFsa ssetn Rdoinleg S aw ap Request C,C the transmission will be attteFnRuSawteadp sRuxch that the peak voltage wilIln niotita el xScineked Fa smt Rino. lTe hSewraepfore, wShhaelnl the CC is prepared for avF RSwapCableT,x it tFR dSewteacpt Rax Fast Role Swap Re qwuhesetn the voltage, averaged over min, is above 0.7V. When the is prepared for a, it Note: detect a Ini tvioallt Saignek lower than mCCin for as a. InitialT Shinek Shall is not reFqausti rReodl et oS wavaeprAagMeS the vtoFltRaSgwe atop Imneitet these requiremFeanstts R.ole Swap R R Port Section T6.h3e.1 9, \"FR_Swa p Mes siangiteia\"te the within of detecting the Request in order to assign the p/ d resistors to the correct s and to re-synchronize the state machines (see Initial SinkShall ). New Source Shall vSafe5V USB Type-C [USB Type-C 2.4] tSrcFRSwap VBUS vSafe5V Initial SinkShall VBUS The become the anFda st Rol es tSawrta spupplying at current (see ) no later than after has dropped below. An disable its DNiostceo:nnect Threshold detection circuitry wVhCilOeN N Source dCeatbelect Piolung is active. While power is transitioning the to the (s) cannot be guaranteed.", "tables": ["Table 5.19"], "figures": [], "page_range": [110, 112]}
{"section_path": "5.9 Built in Self-Test (BIST)", "start_heading": "5.9 Built in Self-Test (BIST)", "content": "BIST Shall T5h.e9 f.o1llowing sec tBionIsS dTef iCnea rri efurnc Mtionoadlitey which be supported. BIST Carrier Mode PHY LayerShall BMC In, the send out a encoded continuous string of alternating \"1\"s and \"0\"s. TNhoitse e:nables the measurement of power supply noise and frequency drift.S hall Not Packet SeTchtiios ntr 6a.n4s.3m, \"isBsIiSoTn M ise ass paugree\"ly a sequence of alternating bits and be formatted as a. S5e.e9 a.ls2o BIST Test Da. ta Mode BIST Test DataMessage Tester Tester Test Pattern UUT UUT Section 6.4.3, \"BIST Message\" A is used by the to send various generated s to the in order Ftoig tuerset t5h.2e9, \"Te'sst r Fercaemivee\"r. See also Test Frame Shall. Tester UUT BISTMessage BIST Test DataBIST Data Object Preamble SOP* Message Header Da stah oOwbsje tchte BwIhSTic hT est Da btea sBeInStT b Dya tthae O bject to the. ThDea ta Ob ject, with a CR Cconsists of a EOP, followed by, followed by the with a data length of 7 s, followed a, followed by 6 s containing test data, followed by the andF itghuenre a 5n.29 T.est Frame SOP* (Start Header BIST Test Data Preamble(training for receiver) Of Packet) Data Objects = 7 BDO Test Data 192 bits EOP (End Of CRC Packet) LEGEND: Preamble, not encoded Provided by the Physical Provided by the Protocol with 4b5b layer, encoded with 4b5b layer, encoded with 4b5b", "tables": [], "figures": [], "page_range": [113, 113]}
{"section_path": "5.9.1 BIST Carrier Mode", "start_heading": "5.9.1 BIST Carrier Mode", "content": "BIST Shall T5h.e9 f.o1llowing sec tBionIsS dTef iCnea rri efurnc Mtionoadlitey which be supported. BIST Carrier Mode PHY LayerShall BMC In, the send out a encoded continuous string of alternating \"1\"s and \"0\"s. TNhoitse e:nables the measurement of power supply noise and frequency drift.S hall Not Packet SeTchtiios ntr 6a.n4s.3m, \"isBsIiSoTn M ise ass paugree\"ly a sequence of alternating bits and be formatted as a. S5e.e9 a.ls2o BIST Test Da. ta Mode BIST Test DataMessage Tester Tester Test Pattern UUT UUT Section 6.4.3, \"BIST Message\" A is used by the to send various generated s to the in order Ftoig tuerset t5h.2e9, \"Te'sst r Fercaemivee\"r. See also Test Frame Shall. Tester UUT BISTMessage BIST Test DataBIST Data Object Preamble SOP* Message Header Da stah oOwbsje tchte BwIhSTic hT est Da btea sBeInStT b Dya tthae O bject to the. ThDea ta Ob ject, with a CR Cconsists of a EOP, followed by, followed by the with a data length of 7 s, followed a, followed by 6 s containing test data, followed by the andF itghuenre a 5n.29 T.est Frame SOP* (Start Header BIST Test Data Preamble(training for receiver) Of Packet) Data Objects = 7 BDO Test Data 192 bits EOP (End Of CRC Packet) LEGEND: Preamble, not encoded Provided by the Physical Provided by the Protocol with 4b5b layer, encoded with 4b5b layer, encoded with 4b5b", "tables": [], "figures": [], "page_range": [113, 113]}
{"section_path": "5.9.2 BIST Test Data Mode", "start_heading": "5.9.2 BIST Test Data Mode", "content": "BIST Shall T5h.e9 f.o1llowing sec tBionIsS dTef iCnea rri efurnc Mtionoadlitey which be supported. BIST Carrier Mode PHY LayerShall BMC In, the send out a encoded continuous string of alternating \"1\"s and \"0\"s. TNhoitse e:nables the measurement of power supply noise and frequency drift.S hall Not Packet SeTchtiios ntr 6a.n4s.3m, \"isBsIiSoTn M ise ass paugree\"ly a sequence of alternating bits and be formatted as a. S5e.e9 a.ls2o BIST Test Da. ta Mode BIST Test DataMessage Tester Tester Test Pattern UUT UUT Section 6.4.3, \"BIST Message\" A is used by the to send various generated s to the in order Ftoig tuerset t5h.2e9, \"Te'sst r Fercaemivee\"r. See also Test Frame Shall. Tester UUT BISTMessage BIST Test DataBIST Data Object Preamble SOP* Message Header Da stah oOwbsje tchte BwIhSTic hT est Da btea sBeInStT b Dya tthae O bject to the. ThDea ta Ob ject, with a CR Cconsists of a EOP, followed by, followed by the with a data length of 7 s, followed a, followed by 6 s containing test data, followed by the andF itghuenre a 5n.29 T.est Frame SOP* (Start Header BIST Test Data Preamble(training for receiver) Of Packet) Data Objects = 7 BDO Test Data 192 bits EOP (End Of CRC Packet) LEGEND: Preamble, not encoded Provided by the Physical Provided by the Protocol with 4b5b layer, encoded with 4b5b layer, encoded with 4b5b", "tables": [], "figures": [], "page_range": [113, 113]}
{"section_path": "6 Protocol Layer", "start_heading": "6 Protocol Layer", "content": "Protocol Layer This- chapter describes Mthees sraegqeuirements of the USB Power Delivery Specification's including: - Details of how s are constructed and used. - Use of tMimesesrasg aend timeout values. - Use of and retry counters. - Reset operation. - EStrartoer handling. Secti obne h2a.6v, i\"oArr.chitectural Overview\" Refer to for an overview of the theory of operation of USB Power Delivery.", "tables": [], "figures": [], "page_range": [114, 114]}
{"section_path": "6.1 Overview", "start_heading": "6.1 Overview", "content": "Protocol Layer This- chapter describes Mthees sraegqeuirements of the USB Power Delivery Specification's including: - Details of how s are constructed and used. - Use of tMimesesrasg aend timeout values. - Use of and retry counters. - Reset operation. - EStrartoer handling. Secti obne h2a.6v, i\"oArr.chitectural Overview\" Refer to for an overview of the theory of operation of USB Power Delivery.", "tables": [], "figures": [], "page_range": [114, 114]}
{"section_path": "6.2 Messages", "start_heading": "6.2 Messages", "content": "Message This- speCcoifnictarotilo Mn edsesafignees three types of s: Message Port Partner Message Control Message s that are short and used to manage the flow between s or to - eDxacthaa Mngeess age s that require no additional data. s areP 1or6t bPiatsr tinne lrengDtaht.a Message s that are used to exchange information between a pair of s. s range from 48 to 240 bDiatsta in M leesnsgatghe. Some examples of Capabisli tairees: Negotiate  Those used to expoBseIS T and power.  Those used for Vthene dor D.efined Message - ExtendTedh oMsees tshaagte are s. Port Partner Extended Message MaxExtendedMsgLen s that are used to exchange information between a pair of s.  s are up to Extended Message bytes. Some examples of Source Batterys are:  Those used for and information.  Those used for Security.  Those used for VFeirnmdowr aDreef iUnpedda Etxet.ended Message Message Shall Message Header Message Protocol Layer PHY Layer PHY Layer All s Proto bceo cl oLmaypeorsed of a and a variable length (including zero) data portion. A either originates in the and is passed to the, or it is received by the and is pFiagsusreed 6 t.o1,t h\"Ue SB Power Delive.ry Packet Format for a Control Message\" Control Message Packet Protocol Layer PHY Layer illustrates a as part of a showing the pFaigrtusr aer 6e.p1r UovSiBd ePdo bwye trh De elivery Packet a Fnodr mat for a.Control Message SOP* (Start Message Header EOP (End Of Preamble CRC Of Packet) (16 bit) Packet) Legend: PHY Layer Protocol Layer Figure 6.2, \"USB Power Delivery Packet Format including Data Message Payload\" Data Message Packet Protocol Layer PHY Layer illustrates a as part of a showing the parts are provided by the and.", "tables": [], "figures": ["Figure 6.2"], "page_range": [115, 115]}
{"section_path": "6.2.1 Message Construction", "start_heading": "6.2.1 Message Construction", "content": "Message This- speCcoifnictarotilo Mn edsesafignees three types of s: Message Port Partner Message Control Message s that are short and used to manage the flow between s or to - eDxacthaa Mngeess age s that require no additional data. s areP 1or6t bPiatsr tinne lrengDtaht.a Message s that are used to exchange information between a pair of s. s range from 48 to 240 bDiatsta in M leesnsgatghe. Some examples of Capabisli tairees: Negotiate  Those used to expoBseIS T and power.  Those used for Vthene dor D.efined Message - ExtendTedh oMsees tshaagte are s. Port Partner Extended Message MaxExtendedMsgLen s that are used to exchange information between a pair of s.  s are up to Extended Message bytes. Some examples of Source Batterys are:  Those used for and information.  Those used for Security.  Those used for VFeirnmdowr aDreef iUnpedda Etxet.ended Message Message Shall Message Header Message Protocol Layer PHY Layer PHY Layer All s Proto bceo cl oLmaypeorsed of a and a variable length (including zero) data portion. A either originates in the and is passed to the, or it is received by the and is pFiagsusreed 6 t.o1,t h\"Ue SB Power Delive.ry Packet Format for a Control Message\" Control Message Packet Protocol Layer PHY Layer illustrates a as part of a showing the pFaigrtusr aer 6e.p1r UovSiBd ePdo bwye trh De elivery Packet a Fnodr mat for a.Control Message SOP* (Start Message Header EOP (End Of Preamble CRC Of Packet) (16 bit) Packet) Legend: PHY Layer Protocol Layer Figure 6.2, \"USB Power Delivery Packet Format including Data Message Payload\" Data Message Packet Protocol Layer PHY Layer illustrates a as part of a showing the parts are provided by the and. Figure 6.2 USB Power Delivery Packet Format including Data Message Payload SOP* (Start Message Header EOP (End Of Preamble 0..7 Data Object(s) CRC Of Packet) (16 bit) Packet) Legend: PHY Layer Protocol Layer Figure 6.3, \"USB Power Delivery Packet Format including an Extended Message Header and Payload\" Extended Message Packet Protocol Layer PHY Layer illustrates an Figure 6.3 US Bas P poawrte orf D ae livery sPhaocwkientg F tohrem paatr tisn acrlue dpirnogv iadne dE xbtye tnhdee d Message He aandde r and Payl.oad SOP* (Start Message Header Extended Message Header EOP (End Of Preamble Data (0..260 bytes) CRC Of Packet) (16 bit) (16 bit) Packet) Legend: PHY Layer Protocol Layer MessageShall Message Header Eve- ry Figure 6.1, \"U sStBa rPto wwiethr Da elivery Packet Fo rams asht ofowr na iCno:ntrol Message\" - Figure 6.2, \"USB Power Delivery Packet Format including Data Message Payload\" - Figure 6.3, \"USB Power Delivery Packet Format including an Extended Message Header and Payload\" Table6.1, \"Message Header\" Message Header Message PortCapabilities and as defined in. The contains basic information about the and tMhees PsaDg e He aderMay. Control Message Number of Data Objects Data Message Number of Data Objects The be used standalone as a when the field is zero or as the first part of a whenT tahbe le6.1 Message Header field is non-zero. Bit(s) Start of Packet Field Name Reference SOP* Extended Section 6.2.1.1.1 14…12 SOP* MessageID Section 6.2.1.1.3 11…9 SOP Port Power Role Section 6.2.1.1.4 SOP’ oS nO lP y’’ Cable Plug Section 6.2.1.1.7 SO /P* Specification Revision Section 6.2.1.1.5 7…6 SOP Port Data Role Section 6.2.1.1.6 SOP’ SOP’’ Reserved Section 1.4.2 only SO /P* Message Type Section 6.2.1.1.8 4…0 Extended Shall Control Message Data Message Extended Message The 1-bit field be set to zero to indicate a or and set to one to indicate an. Extended Shall SOP* Packet T6h.2e.1.1.2 fie l dN umb aepprl yo tfo Dalal ta Object tsypes. Extended Number of Data Objects Shall Data Object Message Header Message Control Message When the Mes sfaiegled is seDta ttoa z Mereoss tahgee 3-bit field indicate the number of 32-bit s that follow the. When this field is zero the is a and when it is noNnu-zmerboe, rt hoef Data Ob jiesc at s Shall. SOP* Packet The Extended fieldC hunke adpply to all Ntyupmesb.er of Data Objects Shall Data Object Message Extended Message Header When both the Data Obje cbtit and bit are set to one, the field indicate the number of s in the padded to the 4-byte boundary including the as part of theE fxirtsetn ded. Chunked Number of Data Objects Shall Reserved When the bit is set to one and bit is set to zero, the field be Note:. Message Data Size Extended Message Header In this case, the length is determined solely by the field in the MessageID Message MessageIDCounterShall Soft Reset Hard Reset MThees s3a-bgietI DCounterS hfiaelldl is the value generated byM ae srsoalglieng counter maintained by the originator of the. GThooe dCRCMessage be initialized to zero at power-on as a result of a, or a. The be incremented when a is successfully received as indicated by receipt of a Note:. MessageID BISTMessage [USBPDCompliance] MessaTgheeI Dusage oSfh all duriSnOgP t*e Pstaicnkge wt ith s is defined in. T6h.2e.1.1.4 f i ePldo rt Po apwpelyr t oR aolll e types. Port Power Role Shall Port Power Role The- 1-bit Sink field indicate the 's present : - 0b Source Message1b Get_Sink_Cap_Extended Source Shall Port Power Role Source Message RequestMessage SinkShall s, such aPs ort Power Role, thSaitn akre only ever sent by a, always have the field set to. Similarly, s such as the that are only ever sent by a always haveP othwee r Role SwapAMS field setIn tiot ial So.urcePort Port Power Role Shall Sink PS_RDYMessage Initial Source Table8.60, \"Steps for a DSuucrciensgs ftuhle S ource Initiated Po wer,R foolre t Shwe ap Sequence\" T, tahbele 8.63, \"Steps for a fSieulcdc essful Sbien kse Itn tioti ated Pino wtheer Role Swa p Sequen icned\"icating that the 's power supply is turned off (see and Power Rol)e. SwapAMS Initial Sink Port Power Role Shall Source Message Policy Engine PS_RDYMessage Initial Source Table8.60, \"Steps for aD uSuricncge stshfeu l Source Initiated Powe, rf oRro tlhe eS wap Sequen, cthe\"e Table8.63, \"S tfeieplsd f or a S ubcec seesstf tuol Sink In iftoiart ed Powesr Rinoilteia Stweda pb yS ethqeu ence\" after receiving the from the (see and Fast Role )S.wapAMS Initial SourcePort Port Power Role Shall Sink PS_RDYMessage VBUS Initial Source vSafe5V Figure 8.39, \"DSuurcicnegs stfhuel Fast Role Swap Sequ,e fnocre t\"he, the field be set to in the indicating that is not being driven by the and is within (see Fast Role SwapAMS ). Initial SinkPort Port Power Role Shall Source Message Policy Engine PS_RDYMessage Initial Source Figure 8.39, \"DSuurcicnegs stfhuel Fast Role Swap Sequ,e fnocre t\"he, the field be set to for s initiated by the after receiving the from the (see Note: GoodCRCMessage ). Initial Sink PS_RDYMessage Initial Source Port Power Role Sink Protocol Layer The sent by the in response to the from the will have its field set to since this is initiated by the. Subsequent Message Policy Engine PS_RDYMessage VBUS Port Power Role Source s initiated by the, such as the sent to indicate that is ready, Port Pwoiwll ehra Rveo ltehe M fieeslsda sgeet Stho all Not. Shall Not Soft Reset Hard Reset Error Recovery The field of a received be verified by the receiver and lead to P, ort Power R oorl e Shall if it is incorrect. SOP Packet 6Th.2e.1.1.5 Sp eficelidf icati oonnly R bee vdeifsiinoedn for s. Specification Revision Shall The- Revision 1.0 D feieplrde cated be one of the following values (except 11b): - 00b - Revision 2.0 ( ) - 01b - Revision 3.x - 10b - Reserved Shall Not 11b -, be usePdD. USB PDUSB Shall Specification Revision [USB 2.0] SOP* VPD ShallIgnoreMessage To eSnpseucirfeic ianttieorno Rpeevriasbioilnity with existing products, products support every PD starting from for ; the only exception to this is a which s sent with PD 2U.0S aBn Tdy peaer-ClierE.rror Recovery Attach Port Specification Revision Port Partn®er Cable Plug Specification Revision DAfettearc ah pHhayrsdic Rale osert logiEcarlr o(r Recovery ), a discovers the common level between itself and its and/or the (s), and uses this level until a, or Specification Re hviaspiopnens. Shall Revision After detection of the to be used, all PD communications comply completely with the relevant Specific oaft itohne RPeDv sispieocnification. GoodCRCMessage Shall Message GoodCRCMessageShall Specification Revision The 2-bit Revision 2.0 field of a Mes sage does not carry any mSepaencinifgic aantdio n Rev bisei oconnsidered as dMone'sts caagree H beya tdheer recipient of the GoodCR. CThMee ssesnagdeerM oaf ya Spe cificatio n Rev siesito thne field to 01b ( Message) when responding Rtoe vai sion 3.x that cSopnetaciinfisc a0t1ibo nin R tehvei sion Message f iHeleda doef r the. The sender of a set the field to 01b or 10b when respSopnedcinifgic taot aio n Revisi othnat contSahianlsl 10b ( SOP*) P ianc tkheet field of the. TheA ttach Hard R efiseeltdS hall apply to all types. Specification Revision Port Cable Plug An event or a cause the detection of the applicable to be performed for both Sousr acned P ort s according to the ruleSsi nskta Pteodrt belowSp:ecification Revision Shall When the first communicates with the the field be used as described byS tohuer cfoe lPloowrting stepsS:ource_CapabilitiesMessage Sink Port Specification Revision Revision Source Port 1) The sends a to the setting the Sink Pfioerltd to the highest Reque sotf Mthees sPaogweer Delivery SSppeecciiffiiccaattiioonn tRheev ision supports. Revision Sink Port 2) TSpheec ification R reevsipsioonnds with a Source P soerttting the field to the highest of the Power Delivery Specification the supports that is equal to or lower than the Source Sink P roercteiSvheadl lfrom the Specification. Revision RequestMessage Sink Detach Hard Reset Error Recovery 3) The and s use the in the from the in step 2 in all suFibrsset qEuxepnlitc icto CmomnturancictationVsC uOnNtNi lS ao urceSh,a ll, or happens. Specification Revision Prior to entering the, the use the following steps to establish a VCONN Sou lercveel: Discover IdentityREQ Cable Plug SOP’ Specification Revision Message Revision VCONN 1) TSohuer ce sends Va C ONN Swap Stoo ftth_eR eset Acce p(tMe)s ssaegtteing the field in theS ection 6.3 t.o1 3t,h \"eS hofitg hReesste t Messag eo\"f the Power Delivery Specification the supports. After a the required / exchange is used for the same purpose (see ). Cable Plug Discover IdentityACK Specification Revision Message Revision VCONN Source 2) The responds wSitphe cai fication Revision setting the Source Port field in the to the highest of the Power Delivery Specification the supports that is equaCl atob loe rP llouwger thVaCnO tNhNe SourceShall it received from the. Explicit Contract 3) The and communicate using the lower of the two revisions until an Table6.2, \"Revisi ohna sIn bteeeronp eesrtaabbilliisthy eddu.ring an Explicit Contract\" Specification Revision Shall Port Partner Cable Plug Specification Revision 4) Explicit Contract shows the that be used between the s and the s when the has been Notes: discovered and an is in place. - VCONN Source Cable Plug May - A Cable P ltuhgat does not communicatRee wviistiho nt h3e.x Discover (Ids)e ntity sRkEipQ the abovDei spcroovceerd Iudreen.tity ACK BUSY VCONN SourceMay Revision 2.0Discover IdentityREQ When a does not respond tCoa ab le Plug with a or the repeat steps 1-4 using a in step VCONN1 S obuerfcoere establishing tRheavti stihoenr 3e.xis no to communicate withM. ay Cable Plug Revision 3.x Revision 3.x Specification Revision A Port Partn ethrat supporEtsx plicit Contra cotf the Power DeliEvexpryli cSipt eCcoinfitcraatciotn communicate withP ao rt Partner also Csaubplpeo Prltuingg Shall Tuasbinleg 6.2, \"Revisio nC Ionmteprloiapnetr aCboimlitmy udunricinagti oanns E rxepglaicridt lCeosns torfa tcht\"e Rofe ivtiss ion while no exists. After an has been established the s and (s) use to determine the to beM uesessda.ge Shall Specification Revision Message Header Message All data in all s be consistent with the field in the for that paCratibcluel aPrlu gShall N. ot Specification Revision Cable PlugShall Specification Revision Specification Revision AM essage saveV t Ch Oe N s Nt aStoeu orcf ethe agreed. A respond with the highest it supports that is equal to or lower than the contained in the Cable Plu rgecSehivaeldl from the.Specification Revision SOP’ SOP’’ Cable Plug Shall Specification Revision Cable Plug s operate using the same for both and. Cable assemblies with two Table6s. 2, \"Re voipsieorna tIen tuesrionpge trhaeb isliatmy deu ring an Explicit Contr afocrt \"both s. Shall See for details of how various Revisions inter-operate. Table6.2 Revision Interoperability during an Explicit Contract Port 1 Revision Cable Plug Revision Port 2 Revision Port to Port Port to Cable Operating Plug Operating Revision Revision Port Data Role Shall Port Data Role The- 1-bit UFP field indicate the 's present : - 0b DFP 1b Port Data Role Shall SOP Packet SOP* Packet Port Data Role Reserved Shall The field only be defined for s. For all other s the field is USB Type a-nCdP ort be set toM zeesrsoa.ge Port Data Role Data Role Data Role GoodCRCMessage USB Type-CError Recovery [USB Type-C 2.4]Shall If a receives a with the field set to the same as its current, except for the, actions as defined in be perforUmSBed T.ype-CPort Port Data Role Shall Attachment Hard Reset Port R Port R For a the field be set to the default value at after a : 0b for a with d Paosrsterted anUdS B1 bC ofomrm a unica wtioitnh p asserted.Attachment Source PortShall DFP Sink PortShall UFP In the case that a is not s capable, at a default to and a Cable Plug Shall Message Cable Plug VPD The- 1-bit Message field indicaDteF PwhetUhFePr this originated from a or : - 0b Message originated from a Cabl eo rP lug. VPD Cab1leb Plug oSrihgainllated from a SOP’ Pac oker t SOP’’ Packet 6Th.2e.1.1.8 f i eMld essa gonel yT aypppley to and types. Message Type Shall Message Message Type Number of Data Objects Message Control Message Data TMhees s5a-gbeit fieMlde ssage i nTdyipcaete the type of Table b6e.5in, \"gC soennttr.o Tl oM feuslslya gdee cToydpee st\"he Table6.6, \"Da,t ath e Message Types\" field is first examined to determine whether the is a or a. Then the specific can be found in or Message Ty.pe Shall SOP* Packet 6Th.2e.1.2 f i eEldx ten dapepdly Mto aells sage He atydpeesr. Extended Message Extended Message Header Shall Extended Message Header Message Header Figure 6.3, \"USB Power Delivery Packet Format including an Extended Messasg (ei nHdeiacadteerd a bnyd tPhaey load\" field being sTeatb ilne t6h.3e, \"Extended Messa) ge Hea cdoenrt\"ain an following the as shown in Extended Message Data Block Danatda d Seifzineed in “ Extended Message. Message Chunk Data Block Chunk Chunk sC chounntkainSh all s Mofa xExtende,d dMefsignCehdu inn kthLee n Ch, tuhnakt are either seSnht ainll a single or as a series oDfa ta Blosc.k When the is senMt aasx Eax steerniedse odfM sgChus,n ekaLcehn in thSeh saelrlies, except for the last, Data cOobnjetacitn bytes. The last in the series contain the remainder of the and so could be less than bytes and be 6pa.d2d.1ed. 2to.1 the ne x tC 4h-buyntek ed boundary. Table6.3 Extended Message Header Bit(s) Start of Packet Field Name Reference SOP* Chunked Section 6.2.1.2.1 14…11 SOP* Request Chunk Section 6.2.1.2.3 8…0 Port Partner Shall Unchunked Extended Messages Supported Source_Capabilities Message Unchunked Extended Messages Supported RequestMessage The Message sD ata S uizsee thMe axExtendedMsgLegacyLen Ufienlcdh uinn ktheed Extended Message Section 6 a.4n.1d. 2.1.6, \"Unchunked Extended Messages Support feide\"ld in thSeec tion 6.4.2.6, \"Unch tuon dkeedte Ermxtienned wedh Metehsesra gtoe s sSeunpdp orted\" s of > bytes in a single (see and ). Port Partner Chunked Extended Message Wh- en eitherC hunked only supEpxotretnsd ed MessageShall s: - The Extende db iMt iens seavgeery Data Size MaxE xtend bede Msestg tLoe ognaec.yLenShall Port Partner Chunk Every of > be transmitted between the - Numbers o inf Data Osb jects Message HeaderShall Data Object Message Extended Message Header Data OThbjee ct in the indicate the number of s in the padded to the 4-byte boundary including the as part of the first. Shall Port Pair Detached Hard Reset Error Recovery Source Power Role Swap Fast Role Swap Initial Source The conditions listed abovNee w Sou arpcpely until the is, there is a, there is or the removes power (except during a or when the removes power in orPdoerrt t Po afortrn tehre Unc thou anpkpedly E pxotwenedre)d. Message Wh- en both Chunked s support Extended MessageShall s: - The Extende bdi Mt iens seavgeeryS hall be set to Pzeorrot.Partner Unchunked - EverNy umber of Data Ob jects be traMnsemssiatgteed H beeatdweeren Rthees erved s. The Shall in the Port Pair D iest ached. Hard Reset Error Recovery Source Power Role Swap Fast Role Swap Initial Source The conditions listed abovNee w Sou arpcpely until the is, there is a, there is or the removes power (except during a or when the removes power in orderE txot efonrd ethde M essage to aCpapbllye pPoluwger). VCONN SourceShall Chunked Extended Message Cable Plug Shall Extended Message Data Size MaxExtendedMsgLegacyLenChunked Shall When sCehnduinnkge d Extesn tdoe tdh Me essage the only send s. s always send s of > and set theE xtended M beits siang eevery Chunki tnog oSnhea.ll W6.h2e.n1.2.2 Chunsk ar Ne suumppboreterd be supported. Chunk Number Shall Valid Message Chunked Chunked Chunk Number Shall The field only be in a if the flag is set to one. If the flag is set tCo hzuenrok tNhuem ber field also be set to zero. Message Data Block The field is used differently depending on whether the is a request for Data, or a requested - being returned: Chunk Number Chunk Shall Chunk Chunk In a request foCrh udnakta the field indicates the number of the being requested. The requester only set this field to the number of the next in the series (the next after the - last received Dat)a. Block Chunk Number Chunk Chunk Number Chunk Shall Shall Chunk In the requested the fielCdh inudnkicates the number of the being returned. The for each in the series start at zero and increment for each 6.2.1.2by.3 one up Rtoe aq muaexismt uCmh ouf n9 kcorresponding to 10 s in total. Request Chunk Shall Chunked Extended Message Chunked Figure 6.7, \"Example Security_Request sequence Chunked (Chunked bit = 1)\" Unchunked Extended TMhees sage M beists age S ohnallyl be used for the transfer of an when the Figure 6 b.4it, i\"sE sxeatm top l1e (Sseeceu rity_Request sequence Unchunked (Chunked bit = 0)\" ). For transfers, s be sent and received without the request/response mechanism (see Request Chunk Shall ). Chunk Data Block Shall Chunk Chunk Chunk Chunk The Data BlockShal lbit be set to one tCoh inudnkicate that this is a request for a of a Chunk and be sCehtu tnok zero to indicate tChhaut nthkis is a Sh arellsponse containing a. ExcMepest sfaorg e Type zero, a requesteRd equest oCfh au nk only bDea rteat uSrizneed as aS hall response to a corresponding request for that. Both the request and the response contain the same value in the field. When the bit is set to one the field be zero. Data Size Shall Data Block MessageShall Not MaxExtendedMsgLen The field indicate how many bytes of data in total are in being returned. The total numbDera otaf dSaiztae bytes in the Max Extended MexscgeLeedg acyLen Chunk.ed PacketPayload Shall Data Object If the field is less than and the bit is set then the Dbea tpaa dSdizeed to the next 4-byte boundaryE wxtitehn dzeedro Ms e(0ssxa0g0e). MaxExtendedMsgLen MessageShall If the Shall Ig fineoldr eisd greater than expected for a given but less than or equal to then the expected fields in the be processed appropriately and the additional f6ie.2ld.s1.2.5 be Exte.nded Message Examples Extended Message Chunked Chunked Unchunked Chunked Security_RequestMessage Data Size The following examSepcluesr iitlylu_Rstersapteo nthsee tMraensssamgiessioDna otfa Size s both M (essage bit is one) and ( M beits sias gzeero). The examples use a of 7 bytes which is Mreesspsoangdeed to by a of 30 bytes. The sizes of these s are arbitrary and are used to illustrate transmission; they are not intended to correspond to genuine security related Nse.gotiation Explicit Contract Port Partner Unchunked Extended Messages Supported Source_CapabilitiesMessage Unchunked Extended Messages Supported During Request oMf ethssea ge after connectionC,h tuhne ked Tsa ubslee t6h.4e, \"Use of Unchunked Message Supported bit\" field inP otrhte P artner Unc hunked E xatnedn ded Message Chunked field in the Chun ked to determine the value of the bit (see ). When both s support s then the bit is zero otheCrwhuisnek tehde bit is one. The- C hbuitn iks used to determine whether: - TExhtee nded M reesqsaugeest/respCohnusnek emdechanism is used. - s are. - PaddNinugm ibs earp polfi eDda.ta Objects The field is used. The following examples illustTraatbel eth6e. 4e x Upesect oedf Uunsacgheu innk eeadc hM ceasssea.ge Supported bit Source Source_CapabilitiesMessage UnchunkedM: essage Unch unkedMessage Sink RequestMessage UnchunkedMessage ChunSkuepdported bit = 0 ChunSkuepdported bit = 1 : bit = 1 bit = 1 USnucphpuonrkteeddM beits s=a 0ge Chunked Chunked bit = 1 bit = 0 Supported bit = 1 Figure 6.4, \"Example Security_Request sequence Unchunked (Chunked bit = 0)\" Security_RequestMessage Security_ResponseMessage UnchunkedExtended Message Chunked USB Host Charger Data Bloc ikllustrates a typical seMqeusesangcee for a Chunk responded to by a using s ( bit is zero) between a and a. The entire is returned in one. The request/response mechanism is not used. Figure 6.4 Example Security_Request sequence Unchunked (Chunked bit = 0) Host Charger (Data S Se izc eu r =i t 7y,_ CR he uq nu ke es dt = 0) GoodCRC (DataS e Sic zu er i =t y 3_ 0R, e Cs hp uo nn ks ee d = 0) GoodCRC Figure 6.5, \"Example byte transmission for Security_Request Message of Data Size 7 (Chunked bit is set to zero)\" Security_RequestMessage Figure 6.4, \"Example Security_Request sequence Unchunked (Chunked bit = 0)\" details theN umber of Data Ob jects shown in Reserved Chunked Data Size. The figure showsE txhtee nbdyetde oMredsesraigneg on the buCs haus nwkeeldl as the fact that there is no padding in this case. The field has a value of 0 since it is when the bit is zero. The Fig ufireeld 6 i.n5d Eicxaatmesp thlee bleyntget thr oafn tshme ission for Securit wy_hReenq tuhees t Messag bei ot ifs D saett ato S 0iz, ew 7h i(cChh inu nthkies dca bsiet iiss 7 s bety tteos. zero) Message Header Extended Message (16 bit) Header Message Type = (16 bit) Data (7 bytes) Security_Request Chunked = 0 Number of Data Data Size = 7 Objects = 0 (Reserved) Message Message Message Message Header Header Header Header B0 B1 B2 B3 B4 B5 B6 LSB MSB LSB MSB Figure 6.6, \"Example byte transmission for Security_Response Message of Data Size 30 (Chunked bit is set to zero)\" Security_ResponseMessage Figure 6.4, \"Example Security_Request sequence Unchunked (Chunked bit = 0)\" details theN umber of Data Obje cts shown in Reserved Chunked Data Size. The figure shows Ethxtee bnydteed o Mrdesesraingge on the busC ahsu wneklel das the fact that there is no padding in this case. The field has a value of 0 since it is when the bit is zero. The field indicates the length of the when the bit is set to zero, which in this case is 30 bytes. Figure 6.6 Example byte transmission for Security_Response Message of Data Size 30 (Chunked bit is set to zero) Message Header Extended Message (16 bit) Header Message Type = (16 bit) Data (30 bytes) Security_Response Chunked = 0 Number of Data Data Size = 30 Objects = 0 (Reserved) Message Message Message Message Header Header Header Header B0 B1 B28 B29 LSB MSB LSB MSB Figure 6.7, \"Example Security_Request sequence Chunked (Chunked bit = 1)\" Security_RequestMessage Security_ResponseMessage Chunked Extended Message Chunked USB Host Charger illustrates a typical sequence for a responded to by a using s N(ote: Cbhitu ins ko nNeu)m bebtewreen a E xatnendd ae d Messag.e Chunk Chunk Number Chunk zero in every is sent without the need for a Request, but one and following need to be requested with a request. Figure 6.7 Example Security_Request sequence Chunked (Chunked bit = 1) Host Charger Security_Request Chunk RC eh q( uN un eu k sm e td b CS e = he r uc 1 ou n, fr kC i D t h =y a u _ 0t nR a, k e DO q N abu tuj ae e m s c St bt i zs e e = r = =3 7, 0 ), GoodCRC Security_Response RC eh( qN u uu n em k seS tbe d Cec = hru ur o 1i nf,t y kCD_ h =aR u te 0a ns, k Op D o Nb an j tue as mce St bs iz e= er 7 ==, 30 0, ) GoodCRC S RCe ehc q(u uN ur n eui kt smy e t_ d b CR e = he r us 1 op n, fo kC D n h =s a u 1e t na, “ k DOC N ah b tuu j ae mn c Sk bt i zsr e e e = r q = =1u 0, 1e ),st” GoodCRC RC eh( qN u uu n em k seS tbe d Cec = hru ur o 1i nf,t y kCD_ h =aR u te 0a ns, k Op D o Nb an j tue as mce St bs iz e= er 2 ==, 31 0, ) GoodCRC Figure 6.8, \"Example Security_Request Message of Data Size 7 (Chunked bit set to 1)\" Security_Request Message Figure 6.7, \"Example Security_Request sequence Chunked (Chunked bit = 1)\" shows the Message shown in Data Object Numb einr mofo Drea tdae tOabilj ects including the byte ordering on the bus and pCadhudninkg. ThreCeh buyntke sN oufm pabdedring have been added toD tahtea Size so that the total number of bytes is a multiple oEfx 3te2n-bdietds,M coersrsaesgpeonding to 3 s. The field is set to 3 to indicate the length of this. The is set to zero and the field is set to 7 to indicate the length of the whole. Figure 6.8 Example Security_Request Message of Data Size 7 (Chunked bit set to 1) Extended Message Message Header Header (16 bit) (16 bit) SM ece us rs ia tyg _e R T ey qp ue e = st Chunked = 1 Data (7 bytes) Padding (3 bytes) Number of Data Chunk Number = 0 Request Chunk = 0 Objects = 3 Data Size = 7 Message Message Message Message P0 P1 P2 Header Header Header Header B0 B1 B2 B3 B4 B5 B6 (0x00) (0x00) (0x00) LSB MSB LSB MSB Data Object 0 Data Object 1 Data Object 2 Figure 6.9, \"Example Chunk 0 of Security_Response Message of Data Size 30 (Chunked bit set to 1)\" Chunk Number Security_ResponseMessage Figure 6.7, \"Example Security_Request sequence Chunked (Chunked bit = 1)\" shows Chunk zero of the Payload sEhxotewnnd eind Message Header Data Object in mNourem dbeetra iol fi nDcalutad iOnbg jtehcet sbyte ordering on the bus and padding. No padCdhiunngk is need foDra tthais Size since the full 26-byte plus 2-byte Extended Message is a multiple of 32-bits, corresponding to 7 s. The field is set to 7 to indicate the length of this and the fFieigldu irse s 6et.9 t oE x3a0m top ilned Cichauten kth 0e olefn Sgetchu orfi ttyh_eR wehspoloen se Message of Da.ta Size 30 (Chunked bit set to 1) Extended Message Message Header Header (16 bit) (16 bit) SeM cues ris ta yg _e R eT sy pp oe n = s e Chunked = 1 Data (26 bytes) Number of Data Chunk Number = 0 Request Chunk = 0 Objects = 7 Data Size = 30 Message Message Message Message Header Header Header Header B0 B1 B22 B23 B24 B25 LSB MSB LSB MSB Data Object 0 Data Object 6 Figure 6.7, \"Example Security_Request sequence Chunked (Chunked bit = 1)\" Message Security_ResponseMessageChunk Chunk Number Figure 6.7, \"Example Security_Request sequence Chunked (Chunked s hboitw =s 1 a)n\" exampCleh oufn tkhe fNourmmabte, rb oytfe D oartdae Oribnjge actnsd padding foMr tehssea ge Pa yrleoqaudest for one shown in Figure 6.10, \"Example byte transmission for a Security_Response Message C. hInu nthke r equest r(Ceqhuuenskte tdh bei t is set to 1)\" Chun fkieedld in the isC sheutn tko 1 to indicCahtuen tkhat the is 32 bits equivalenMt teos s1a dgeata obCjheuctn (ksee Request Chunk Chunk Chunk Number). Since the Data Si zbeit is set to 1 the request/ respDoantsae Bmloecckhanism is used. The is a request so the bPita iysl osaedt to one, and in this case one is being requested so is set to one. is set to zero indicating the length of the being transferred. Two bytes of padding are added to ensure that the is a multiple of 32 bits. Figure 6.10 Example byte transmission for a Security_Response Message Chunk request (Chunked bit is set to 1) Extended Message Message Header Header (16 bit) (16 bit) Message Type = Padding (2 bytes) Chunked = 1 Security_Response Chunk Number = 1 Number of Data Request Chunk = 1 Objects = 1 Data Size = 0 Message Message Message Message P0 P1 Header Header Header Header (0x00) (0x00) LSB MSB LSB MSB Data Object 0 Figure 6.11, \"Example Chunk 1 of Security_Response Message of Data Size 30 (Chunked bit set to 1)\" Chunk Number Security_ResponseMessage Figure 6.7, \"Example Security_Request sequence Chunked (Chunked bit = 1)\" shows one of the Payload shown in Data Object Number of Data Objects in more detail including the byte Cohrudnekring on thDe abtuas S ainzed padding. Two bytes of padding are added to ensuErxete tnhdaet dt hMee ssage is a multiple of 32 bits, corresponding to 2 s. The field is set to 2 to indicate the length of this and the field is set to 30 to indicate the length of thFei wguhroele 6.11 Example Chu.nk 1 of Security_Response Message of Data Size 30 (Chunked bit set to 1) Extended Message Message Header Header (16 bit) (16 bit) Message Type = Chunked = 1 Data (4 bytes) Padding (2 bytes) Security_Response Chunk Number = 1 Number of Data Request Chunk = 0 Objects = 2 Data Size = 30 Message Message Message Message P0 P1 Header Header Header Header B0 B1 B2 B3 (0x00) (0x00) LSB MSB LSB MSB Data Object 0 Data Object 1", "tables": ["Table 6.1", "Table 6.2", "Table 6s", "Table 6.3"], "figures": ["Figure 6.2", "Figure 6.2", "Figure 6.3", "Figure 6.3", "Figure 6.7", "Figure 6.4", "Figure 6.4", "Figure 6.5", "Figure 6.6", "Figure 6.6", "Figure 6.7", "Figure 6.7", "Figure 6.8", "Figure 6.8", "Figure 6.9", "Figure 6.7", "Figure 6.7", "Figure 6.10", "Figure 6.11"], "page_range": [115, 127]}
{"section_path": "6.3 Control Message", "start_heading": "6.3 Control Message", "content": "Message Control Message Number of Data Objects Message Header Control Message Message Header CRC Protocol Layer Control AM essage is deAfcinceepdt aMs aes sage RejectMes wsahgeen the field in the is set to zero. The consists only of a and a. The originates the Contsr (oil. eM., essage, Metecs.s)a.ge Header Message Type Table6.5, \"Control Message Types\" May MTheess age Source Sink typeCsa balree P slpuegcified in the Shall No'ts field (bitMs 4e…ss0a)g eand are summarized in Message S. hTahlel Sent by column inSdOicPa Pteasc eknettities whicMh essag seend the gMivaeny ( SOP,* Pac koert ); entities not listed issue the corresponding. The \"Valid Start of Packet\" column indicates the s which only be issued in s and the s which be issued in s. Table6.5 Control Message Types Bits 4…0 Message Type Sent by Description Valid Start of Packet Reserved N/A Reserved All values not explicitly Shall Not 0_0000 defined are and GoodCRC Source Sink Cable Plug Section b 6 e. 3 u. s1 ed. SOP* 0_0001 GotoMin (Deprecated) Deprec, ated or See Section 6.3.2. N/A 0_0010 Accept Source Sink Cable Plug See Section 6.3.3. SOP* 0_0011 Reject Source, Sink or Cable Plug See Section 6.3.4. SOP* 0_0100 Ping (Deprecated) Deprec, ated or See Section 6.3.5. SOP 0_0101 PS_RDY Source Sink See Section 6.3.6. SOP only 0_0110 Get_Source_Cap Sink oD rR P See Section 6.3.7. SOP only 0_0111 Get_Sink_Cap Sour c oe r DRP See Section 6.3.8. SOP only 0_1000 DR_Swap Source or Sink See Section 6.3.9. SOP only 0_1001 PR_Swap Source or Sink See Section 6.3.1.0 SOP only 0_1010 VCONN_Swap Source or Sink See Section 6.3.11. SOP only 0_1011 Wait Source or Sink See Section 6.3.12. SOP only 0_1100 Soft_Reset Source or Sink See Section 6.3.13. SOP* only 0_1101 Data_Reset Source or Sink See Section 6.3.14. SOP 0_1110 Data_Reset_Complete Source or Sink See Section 6.3.15. SOP only 0_1111 Not_Supported Source oS rin k Cable Plug See Section 6.3.16. SOP* only 1_0000 Get_Source_Cap_Extended Sink, DRP or See Section 6.3.17. SOP 1_0001 Get_Status Sour c oe r Sink See Section 6.3.18. SOP* only 1_0010 FR_Swap Sink or See Section 6.3.19. SOP 1_0011 Get_PPS_Status Sink1 See Section 6.3.20. SOP only 1_0100 Get_Country_Codes Source Sink See Section 6.3.21. SOP only 1_0101 Get_Sink_Cap_Extended Source or DRP See Section 6.3.22. SOP only 1_0110 Get_Source_Info Sink oD rR P See Section 6.3.23. SOP only 1_0111 Get_Revision Sour c oe r Sink See Section 6.3.24. SOP* Only 1_1000 or See. Reserved N/A Reserved All values not explicitly 1_1001… Shall Not defined are and 1_1111 Port vSafe5V R R Port Power be used. Role Sink Fast Role SwapAMS 1) In this case the is providing however it will have d asserted rather than p and sets the field to, until the has completed.", "tables": ["Table 6.5"], "figures": [], "page_range": [128, 128]}
{"section_path": "6.3.1 GoodCRC Message", "start_heading": "6.3.1 GoodCRC Message", "content": "GoodCRCMessageShall Message GoodCRCMessage GoodCRCMessageShall Message MessageID The beM seesnsta bgye the receiver to acknowledge that the previoGuoso dCRCMe wssaasg ecoSrhraelcltly received (i.e., hadt Ta ransmit ). The retMurenss tahgee 's so the sender can determine that the correct is being acknowledged. The first bit of the be BreItSuTrned within Goo daCftReCr rMeecsesiapgt eof the last biCto onft tinhue opurse BviIoSuTs M ode. Section 6.4.3, \"BIST Message\" does not send the whMieles siang ae (seGeo odCRCMessage ). CRCReceiveTimer Message Message The reMtryes msaegcehanism is triggered when the sender fails Ctoon rfeigceuirvaet iao n Channel CC before the Shall Not expires. It is used by the sender to detect that the was not correctly received by the Me rsescaigpeient due to noise or other disturbance on the ( ). The retry mechanism be used for any other purpose such as a means of gaining time for processing the required response to 6th.e3 re.2ceived Go. toMin Message (Deprecated) GotoMin (Deprecated)Message Deprecated Message Type Valid Shall Not_SupportedMessage The has been. The 0_0010 is no longer and 6be. 3re.s3ponded to b yA ac cept Mess age. AcceptMessage Valid The- Sh all is a Sreosuprocense iSnP tRh eM foodlleowing cases: Sink Source RequestMessage It be sent by the, in, to signal the that the is willing to meet the - Shall. Source EPR Mode Sink Source EPR_RequestMessage It be sent by the, in, to signal the that the is willing to meet the - Shall. PR_SwapMessage Power Role Swap Power Role SwapAMS It be sent by the recipient of the to signal that it is willing to do a - Sha lalnd has begun the DR_S wap.Message Data Role Swap Data Role SwapAMS It be sent by the recipient of the to signal that it is willing to do a - anSdh haalls begun the VC.ONN_SwapMessage VCONN Swap VCONN SwapAMS It be sent by the recipient of the to signal that it is willing to do a - anSdh haalls begun the. FR_SwapMessage Fast Role Swap AMS It be sent by the recipient of the to indicate that it has begun the - Sh.all Soft_ResetMessage Soft Reset - It Shall be sent by the recipient of the Enter_USB Messag eto indicate that it has completed its. AMS It be sent by the recipient of the to indicate that it has begun the Enter USB - Sh.all Data_ResetMessage Data Reset AMS It be sent by the recipient of the to indicate that it has begun the AcceptM.essageShall tReceiverResponse Message Section 6.6.2, \"SenderResponseTimer\" The be sent within of the receipt of the last bit of the (see RejectMessage Valid The- S hall is a responSsien kin thSeP fRol Mloowdieng cases: Source RequestMessage May Invalid Source AItd vertis bee sent to signal the, in, that the is unable to meet the. This be due an request or because the can no longer provide what it previously d.", "tables": [], "figures": [], "page_range": [129, 129]}
{"section_path": "6.3.2 GotoMin Message (Deprecated)", "start_heading": "6.3.2 GotoMin Message (Deprecated)", "content": "GoodCRCMessageShall Message GoodCRCMessage GoodCRCMessageShall Message MessageID The beM seesnsta bgye the receiver to acknowledge that the previoGuoso dCRCMe wssaasg ecoSrhraelcltly received (i.e., hadt Ta ransmit ). The retMurenss tahgee 's so the sender can determine that the correct is being acknowledged. The first bit of the be BreItSuTrned within Goo daCftReCr rMeecsesiapgt eof the last biCto onft tinhue opurse BviIoSuTs M ode. Section 6.4.3, \"BIST Message\" does not send the whMieles siang ae (seGeo odCRCMessage ). CRCReceiveTimer Message Message The reMtryes msaegcehanism is triggered when the sender fails Ctoon rfeigceuirvaet iao n Channel CC before the Shall Not expires. It is used by the sender to detect that the was not correctly received by the Me rsescaigpeient due to noise or other disturbance on the ( ). The retry mechanism be used for any other purpose such as a means of gaining time for processing the required response to 6th.e3 re.2ceived Go. toMin Message (Deprecated) GotoMin (Deprecated)Message Deprecated Message Type Valid Shall Not_SupportedMessage The has been. The 0_0010 is no longer and 6be. 3re.s3ponded to b yA ac cept Mess age. AcceptMessage Valid The- Sh all is a Sreosuprocense iSnP tRh eM foodlleowing cases: Sink Source RequestMessage It be sent by the, in, to signal the that the is willing to meet the - Shall. Source EPR Mode Sink Source EPR_RequestMessage It be sent by the, in, to signal the that the is willing to meet the - Shall. PR_SwapMessage Power Role Swap Power Role SwapAMS It be sent by the recipient of the to signal that it is willing to do a - Sha lalnd has begun the DR_S wap.Message Data Role Swap Data Role SwapAMS It be sent by the recipient of the to signal that it is willing to do a - anSdh haalls begun the VC.ONN_SwapMessage VCONN Swap VCONN SwapAMS It be sent by the recipient of the to signal that it is willing to do a - anSdh haalls begun the. FR_SwapMessage Fast Role Swap AMS It be sent by the recipient of the to indicate that it has begun the - Sh.all Soft_ResetMessage Soft Reset - It Shall be sent by the recipient of the Enter_USB Messag eto indicate that it has completed its. AMS It be sent by the recipient of the to indicate that it has begun the Enter USB - Sh.all Data_ResetMessage Data Reset AMS It be sent by the recipient of the to indicate that it has begun the AcceptM.essageShall tReceiverResponse Message Section 6.6.2, \"SenderResponseTimer\" The be sent within of the receipt of the last bit of the (see RejectMessage Valid The- S hall is a responSsien kin thSeP fRol Mloowdieng cases: Source RequestMessage May Invalid Source AItd vertis bee sent to signal the, in, that the is unable to meet the. This be due an request or because the can no longer provide what it previously d.", "tables": [], "figures": [], "page_range": [129, 129]}
{"section_path": "6.3.3 Accept Message", "start_heading": "6.3.3 Accept Message", "content": "GoodCRCMessageShall Message GoodCRCMessage GoodCRCMessageShall Message MessageID The beM seesnsta bgye the receiver to acknowledge that the previoGuoso dCRCMe wssaasg ecoSrhraelcltly received (i.e., hadt Ta ransmit ). The retMurenss tahgee 's so the sender can determine that the correct is being acknowledged. The first bit of the be BreItSuTrned within Goo daCftReCr rMeecsesiapgt eof the last biCto onft tinhue opurse BviIoSuTs M ode. Section 6.4.3, \"BIST Message\" does not send the whMieles siang ae (seGeo odCRCMessage ). CRCReceiveTimer Message Message The reMtryes msaegcehanism is triggered when the sender fails Ctoon rfeigceuirvaet iao n Channel CC before the Shall Not expires. It is used by the sender to detect that the was not correctly received by the Me rsescaigpeient due to noise or other disturbance on the ( ). The retry mechanism be used for any other purpose such as a means of gaining time for processing the required response to 6th.e3 re.2ceived Go. toMin Message (Deprecated) GotoMin (Deprecated)Message Deprecated Message Type Valid Shall Not_SupportedMessage The has been. The 0_0010 is no longer and 6be. 3re.s3ponded to b yA ac cept Mess age. AcceptMessage Valid The- Sh all is a Sreosuprocense iSnP tRh eM foodlleowing cases: Sink Source RequestMessage It be sent by the, in, to signal the that the is willing to meet the - Shall. Source EPR Mode Sink Source EPR_RequestMessage It be sent by the, in, to signal the that the is willing to meet the - Shall. PR_SwapMessage Power Role Swap Power Role SwapAMS It be sent by the recipient of the to signal that it is willing to do a - Sha lalnd has begun the DR_S wap.Message Data Role Swap Data Role SwapAMS It be sent by the recipient of the to signal that it is willing to do a - anSdh haalls begun the VC.ONN_SwapMessage VCONN Swap VCONN SwapAMS It be sent by the recipient of the to signal that it is willing to do a - anSdh haalls begun the. FR_SwapMessage Fast Role Swap AMS It be sent by the recipient of the to indicate that it has begun the - Sh.all Soft_ResetMessage Soft Reset - It Shall be sent by the recipient of the Enter_USB Messag eto indicate that it has completed its. AMS It be sent by the recipient of the to indicate that it has begun the Enter USB - Sh.all Data_ResetMessage Data Reset AMS It be sent by the recipient of the to indicate that it has begun the AcceptM.essageShall tReceiverResponse Message Section 6.6.2, \"SenderResponseTimer\" The be sent within of the receipt of the last bit of the (see RejectMessage Valid The- S hall is a responSsien kin thSeP fRol Mloowdieng cases: Source RequestMessage May Invalid Source AItd vertis bee sent to signal the, in, that the is unable to meet the. This be due an request or because the can no longer provide what it previously d.", "tables": [], "figures": [], "page_range": [129, 129]}
{"section_path": "6.3.4 Reject Message", "start_heading": "6.3.4 Reject Message", "content": "GoodCRCMessageShall Message GoodCRCMessage GoodCRCMessageShall Message MessageID The beM seesnsta bgye the receiver to acknowledge that the previoGuoso dCRCMe wssaasg ecoSrhraelcltly received (i.e., hadt Ta ransmit ). The retMurenss tahgee 's so the sender can determine that the correct is being acknowledged. The first bit of the be BreItSuTrned within Goo daCftReCr rMeecsesiapgt eof the last biCto onft tinhue opurse BviIoSuTs M ode. Section 6.4.3, \"BIST Message\" does not send the whMieles siang ae (seGeo odCRCMessage ). CRCReceiveTimer Message Message The reMtryes msaegcehanism is triggered when the sender fails Ctoon rfeigceuirvaet iao n Channel CC before the Shall Not expires. It is used by the sender to detect that the was not correctly received by the Me rsescaigpeient due to noise or other disturbance on the ( ). The retry mechanism be used for any other purpose such as a means of gaining time for processing the required response to 6th.e3 re.2ceived Go. toMin Message (Deprecated) GotoMin (Deprecated)Message Deprecated Message Type Valid Shall Not_SupportedMessage The has been. The 0_0010 is no longer and 6be. 3re.s3ponded to b yA ac cept Mess age. AcceptMessage Valid The- Sh all is a Sreosuprocense iSnP tRh eM foodlleowing cases: Sink Source RequestMessage It be sent by the, in, to signal the that the is willing to meet the - Shall. Source EPR Mode Sink Source EPR_RequestMessage It be sent by the, in, to signal the that the is willing to meet the - Shall. PR_SwapMessage Power Role Swap Power Role SwapAMS It be sent by the recipient of the to signal that it is willing to do a - Sha lalnd has begun the DR_S wap.Message Data Role Swap Data Role SwapAMS It be sent by the recipient of the to signal that it is willing to do a - anSdh haalls begun the VC.ONN_SwapMessage VCONN Swap VCONN SwapAMS It be sent by the recipient of the to signal that it is willing to do a - anSdh haalls begun the. FR_SwapMessage Fast Role Swap AMS It be sent by the recipient of the to indicate that it has begun the - Sh.all Soft_ResetMessage Soft Reset - It Shall be sent by the recipient of the Enter_USB Messag eto indicate that it has completed its. AMS It be sent by the recipient of the to indicate that it has begun the Enter USB - Sh.all Data_ResetMessage Data Reset AMS It be sent by the recipient of the to indicate that it has begun the AcceptM.essageShall tReceiverResponse Message Section 6.6.2, \"SenderResponseTimer\" The be sent within of the receipt of the last bit of the (see RejectMessage Valid The- S hall is a responSsien kin thSeP fRol Mloowdieng cases: Source RequestMessage May Invalid Source AItd vertis bee sent to signal the, in, that the is unable to meet the. This be due an request or because the can no longer provide what it previously d.", "tables": [], "figures": [], "page_range": [129, 129]}
{"section_path": "6.3.5 Ping Message", "start_heading": "6.3.5 Ping Message", "content": "- Shall Sink EPR Mode Source EPR_Request Message May Invalid Source It be sAednvte trot issiegnal the, in, that the is unable to meet the. This be due an request or because the can no longer provide what it - prSehviaolulsly d. PR_SwapMessage Power Role Swap - It Shall be sent by the recipient of a PR_Swap Message to indicaEteP iRt Mis oudneable to do a. - It Shall be sent by the recipient of a DR_Swap Message while in. Data Role Swap - It Shall be sent by the recipient of a VCONN_Sw apMessa tgoe indicate it is unable to doV aC ONN Source. VCONN Swap It be sent by the recipient of a that is not presently the, to - indShicaaltle it is unablUeF tPo do a En. ter_USBMessage Mode It be sent by on receiving an to indicate it is unable to enter the requested USB Re.quest EPR_Request PR_Swap DR_Swap VCONN_Swap Enter_USBMessage RejectMessage Shall Not Message The sender of a,,,,, or, on receiving a - E rxepslpicoint sCeo, ntractNeg soetniadt itohnis same toS tohuer creecipient untSilo ounrec eo_fC tahpea foblilloitwieinsgM heasssa ogcecurred: EPR_Source_CapabilitiesMessage A New as a result of the sending a or  Source Device Po licy Mana. Tgehris can be triggered by:  ThGee t_Sour'cse _CapMessage. Sink Source SPR Mode  A EPR_Get_Sourc e_CapMe ssesnatg efrom the toS tihnek S ionu rce EPR. Mode  AnP ower Role Swap sent from the to the in.  A Soft Reset.  A Hard Rese.t  A. - DAat Da iRscoolen nSwecatp/Re-connect. - A Data Reset. SinkAM ay. RequestMessage Shall Not RequestMessage RDO Explicit ContractNegotiation Data Role Swap TheD ata R eset send a different to the one which was rejected but repeat the same, using the same, unless there has been a New, or RejectMe asss adgeescSrhiabelld above. tReceiverResponse Message Section 6.6.2, \"SenderResponseTimer\" The be sent within of the receipt of the last bit of (see Note: RejectMessage). Valid Message Not_SupportedMessage Section 6.3.16, \"Not_Supported Message\" The is not a response when a is not supported. In this case the Ping (Deprecated)Message Message Type Valid ThPeo rt P ing (Dep rheacsa tbeede)nM deespsraegceaMteady. The 0_0101 Not_Suppo ritse ndoM loenssgaegre Ig.nore Ping (Deprecated)Message Cable Plug Ping (Deprecated)MessageShallIgnore Ping (Deprecated) MA essag tehat receives a respond with a or the. A that receives a the 6.3.6. PS_RDY Message PS_RDYMessageShall Source New Sink New Source Power Role SwapAMS Fast Role SwapAMS TSehcet ion 8.3.2.2, \"Powe r Nego btiea stieonnt\" by the (or by both the and during the or ) to indicate its power supply has reached the desired operating condition (see ).", "tables": [], "figures": [], "page_range": [130, 130]}
{"section_path": "6.3.6 PS_RDY Message", "start_heading": "6.3.6 PS_RDY Message", "content": "- Shall Sink EPR Mode Source EPR_Request Message May Invalid Source It be sAednvte trot issiegnal the, in, that the is unable to meet the. This be due an request or because the can no longer provide what it - prSehviaolulsly d. PR_SwapMessage Power Role Swap - It Shall be sent by the recipient of a PR_Swap Message to indicaEteP iRt Mis oudneable to do a. - It Shall be sent by the recipient of a DR_Swap Message while in. Data Role Swap - It Shall be sent by the recipient of a VCONN_Sw apMessa tgoe indicate it is unable to doV aC ONN Source. VCONN Swap It be sent by the recipient of a that is not presently the, to - indShicaaltle it is unablUeF tPo do a En. ter_USBMessage Mode It be sent by on receiving an to indicate it is unable to enter the requested USB Re.quest EPR_Request PR_Swap DR_Swap VCONN_Swap Enter_USBMessage RejectMessage Shall Not Message The sender of a,,,,, or, on receiving a - E rxepslpicoint sCeo, ntractNeg soetniadt itohnis same toS tohuer creecipient untSilo ounrec eo_fC tahpea foblilloitwieinsgM heasssa ogcecurred: EPR_Source_CapabilitiesMessage A New as a result of the sending a or  Source Device Po licy Mana. Tgehris can be triggered by:  ThGee t_Sour'cse _CapMessage. Sink Source SPR Mode  A EPR_Get_Sourc e_CapMe ssesnatg efrom the toS tihnek S ionu rce EPR. Mode  AnP ower Role Swap sent from the to the in.  A Soft Reset.  A Hard Rese.t  A. - DAat Da iRscoolen nSwecatp/Re-connect. - A Data Reset. SinkAM ay. RequestMessage Shall Not RequestMessage RDO Explicit ContractNegotiation Data Role Swap TheD ata R eset send a different to the one which was rejected but repeat the same, using the same, unless there has been a New, or RejectMe asss adgeescSrhiabelld above. tReceiverResponse Message Section 6.6.2, \"SenderResponseTimer\" The be sent within of the receipt of the last bit of (see Note: RejectMessage). Valid Message Not_SupportedMessage Section 6.3.16, \"Not_Supported Message\" The is not a response when a is not supported. In this case the Ping (Deprecated)Message Message Type Valid ThPeo rt P ing (Dep rheacsa tbeede)nM deespsraegceaMteady. The 0_0101 Not_Suppo ritse ndoM loenssgaegre Ig.nore Ping (Deprecated)Message Cable Plug Ping (Deprecated)MessageShallIgnore Ping (Deprecated) MA essag tehat receives a respond with a or the. A that receives a the 6.3.6. PS_RDY Message PS_RDYMessageShall Source New Sink New Source Power Role SwapAMS Fast Role SwapAMS TSehcet ion 8.3.2.2, \"Powe r Nego btiea stieonnt\" by the (or by both the and during the or ) to indicate its power supply has reached the desired operating condition (see ).", "tables": [], "figures": [], "page_range": [130, 130]}
{"section_path": "6.3.7 Get_Source_Cap Message", "start_heading": "6.3.7 Get_Source_Cap Message", "content": "Get_Source_Cap Source Capabilities MessageMay Port Source Capabilities Dual-Role Power Port Partner Dual-Role Power PortShall ThSeo urce_Capabilitie (sGMete ssage Section 6). 4.1.5, \"SP R So ubrec ese Cnatp bayb ail ities Mtoe rsesaqguee\"st the and capability of its (e.g., capable). The respond by returning 6a.3.8 Ge t_Sink (_seCea p Message ). Get_Sink_Cap Sink Capabilities MessageMay Port Sink Capabilities Dual Role Power Port Partner Dual-Role Power PortShall STihnek _Capabilities M(Geests age Section )6.4.1.6, \"SP R Sin bke C saepnatb biyli taie s Me tsosa rgeeq\"uest the and capability of its (e.g., capable). The respond by returning a DR_SwapMessage DFP UFP Port Partner VBUS Data Role Swap Port Partner The USB C ommunic aist iuosned to exchangeD FP and operUaStiBo nC obmetmwueneinc ation s while maintainUiSnBg Hthoes t direActttiaocnh mofe pnotweUr FflPow over. ThUeS B Communicatio nprocess can be used by USB Devices whAetttahcehrm ore nntot they support s capability. A that supports capability starts as the [oUnS B Type-C 2.. 4A] Dua lt-hRaotl es uDpaptaortDs RD Port Shall capability starts as the Data R oolne Swap. PE_SRC_Ready PE_SNK_Ready DFP UFP May Data Role Swap PE_SRC_Read y PE_SNK_Re a(dy ) s Data R hoalve eS wthaep cSahpaalblility to perform a from Dtheeta ch Re-attach or USB Co smtamteusn. icatiso annd s have the capabilitPyo trot pPearrftonremr a A fcrtoivme tMhoed e oPro rt Partner stateDs.R A_ SwapMessage be regarded inH tahred s Raemseet wSahya alls a cable / Sectio inn 6re.4la.4t.i3o.n4,t \"oE anntyer Mode Command\" whichC aisb loen Pglouigng betweeAnc ttihvee Mode s. If DthFePreS haraell a Nnoyt DR_sS wbeatpwMeeens stahgee Shall s when Aa ctive Mode C iasb al er ePcluegived, then a be pDearftoar Rmoeled (Ssweaep ). If the has any s then the issue a and cause all s in the to be exited before accepting a request.VBUS VCONN SourceShall R R CC Data Role Swap The source of and remain unchanged as well as the p/ d resistors on the wire during the DR_SwapMess apgreocMeassy. Port Partner DR_SwapMessageShall AcceptMessage WaitMessage RejectMessage Section 6.9, \"Accept, Reject and Wait\" The be sent by either. The recipient of the respond by s- ending anA cceptM essage, a Source or a SinkSh all (see Data Role ). - If anR ejectM essage is sent, the and exchange s. Data Role Swap Shall If a is sent, the requester is informed that the recipient is unable, or unwilling, to do a - WaitMessag aend no action be taken. Data Role Swap Shall If a is sent, the requester is informed that a might be possible in the future bDuat ttah aRto nleo S iwmampediate actioDnF PSha lble taken. Port Data Role DFP UFPShall Port Data Role UFP Before a the initial have its bit set to, and the initial have its D baitta s eRto tloe Swa.p DFP HostShall UFP Device DFPShall Port Data Role DFP UFPShall Port Data Role UFP USB CAoftmerm au snuiccacteisosnful the Port /Partn er become the / Sho uanldd vice-versa; the new have Ditast a Role bit set to, and the new have its bit set to. Where is supported by both s a USB data connection be established according to the new Data Roles.Swap Port Partner USB Type-CError Recovery I[fU tShBe Type-C 2.4], after having been accepted by the, is subsequently not successful, in order to attempt a re-establishment of the connection, actions, such as disconnect, as defined in Section 8.3.2.9 w, \"iDlla btea nReoclee sSswarayp.\" 6Se.e3.10 PR_Swap M.essage PR_SwapMessageMay Port Partner Power Role MessageShall AcceptMessage WaitMessage RejectMessage Section 6.9, T\"Ahcec ept, Reject and Wa it\" be sent by either to request an exchange of s. The recipient of the respond by sending an, a or a (see ).", "tables": [], "figures": [], "page_range": [131, 131]}
{"section_path": "6.3.8 Get_Sink_Cap Message", "start_heading": "6.3.8 Get_Sink_Cap Message", "content": "Get_Source_Cap Source Capabilities MessageMay Port Source Capabilities Dual-Role Power Port Partner Dual-Role Power PortShall ThSeo urce_Capabilitie (sGMete ssage Section 6). 4.1.5, \"SP R So ubrec ese Cnatp bayb ail ities Mtoe rsesaqguee\"st the and capability of its (e.g., capable). The respond by returning 6a.3.8 Ge t_Sink (_seCea p Message ). Get_Sink_Cap Sink Capabilities MessageMay Port Sink Capabilities Dual Role Power Port Partner Dual-Role Power PortShall STihnek _Capabilities M(Geests age Section )6.4.1.6, \"SP R Sin bke C saepnatb biyli taie s Me tsosa rgeeq\"uest the and capability of its (e.g., capable). The respond by returning a DR_SwapMessage DFP UFP Port Partner VBUS Data Role Swap Port Partner The USB C ommunic aist iuosned to exchangeD FP and operUaStiBo nC obmetmwueneinc ation s while maintainUiSnBg Hthoes t direActttiaocnh mofe pnotweUr FflPow over. ThUeS B Communicatio nprocess can be used by USB Devices whAetttahcehrm ore nntot they support s capability. A that supports capability starts as the [oUnS B Type-C 2.. 4A] Dua lt-hRaotl es uDpaptaortDs RD Port Shall capability starts as the Data R oolne Swap. PE_SRC_Ready PE_SNK_Ready DFP UFP May Data Role Swap PE_SRC_Read y PE_SNK_Re a(dy ) s Data R hoalve eS wthaep cSahpaalblility to perform a from Dtheeta ch Re-attach or USB Co smtamteusn. icatiso annd s have the capabilitPyo trot pPearrftonremr a A fcrtoivme tMhoed e oPro rt Partner stateDs.R A_ SwapMessage be regarded inH tahred s Raemseet wSahya alls a cable / Sectio inn 6re.4la.4t.i3o.n4,t \"oE anntyer Mode Command\" whichC aisb loen Pglouigng betweeAnc ttihvee Mode s. If DthFePreS haraell a Nnoyt DR_sS wbeatpwMeeens stahgee Shall s when Aa ctive Mode C iasb al er ePcluegived, then a be pDearftoar Rmoeled (Ssweaep ). If the has any s then the issue a and cause all s in the to be exited before accepting a request.VBUS VCONN SourceShall R R CC Data Role Swap The source of and remain unchanged as well as the p/ d resistors on the wire during the DR_SwapMess apgreocMeassy. Port Partner DR_SwapMessageShall AcceptMessage WaitMessage RejectMessage Section 6.9, \"Accept, Reject and Wait\" The be sent by either. The recipient of the respond by s- ending anA cceptM essage, a Source or a SinkSh all (see Data Role ). - If anR ejectM essage is sent, the and exchange s. Data Role Swap Shall If a is sent, the requester is informed that the recipient is unable, or unwilling, to do a - WaitMessag aend no action be taken. Data Role Swap Shall If a is sent, the requester is informed that a might be possible in the future bDuat ttah aRto nleo S iwmampediate actioDnF PSha lble taken. Port Data Role DFP UFPShall Port Data Role UFP Before a the initial have its bit set to, and the initial have its D baitta s eRto tloe Swa.p DFP HostShall UFP Device DFPShall Port Data Role DFP UFPShall Port Data Role UFP USB CAoftmerm au snuiccacteisosnful the Port /Partn er become the / Sho uanldd vice-versa; the new have Ditast a Role bit set to, and the new have its bit set to. Where is supported by both s a USB data connection be established according to the new Data Roles.Swap Port Partner USB Type-CError Recovery I[fU tShBe Type-C 2.4], after having been accepted by the, is subsequently not successful, in order to attempt a re-establishment of the connection, actions, such as disconnect, as defined in Section 8.3.2.9 w, \"iDlla btea nReoclee sSswarayp.\" 6Se.e3.10 PR_Swap M.essage PR_SwapMessageMay Port Partner Power Role MessageShall AcceptMessage WaitMessage RejectMessage Section 6.9, T\"Ahcec ept, Reject and Wa it\" be sent by either to request an exchange of s. The recipient of the respond by sending an, a or a (see ).", "tables": [], "figures": [], "page_range": [131, 131]}
{"section_path": "6.3.9 DR_Swap Message", "start_heading": "6.3.9 DR_Swap Message", "content": "Get_Source_Cap Source Capabilities MessageMay Port Source Capabilities Dual-Role Power Port Partner Dual-Role Power PortShall ThSeo urce_Capabilitie (sGMete ssage Section 6). 4.1.5, \"SP R So ubrec ese Cnatp bayb ail ities Mtoe rsesaqguee\"st the and capability of its (e.g., capable). The respond by returning 6a.3.8 Ge t_Sink (_seCea p Message ). Get_Sink_Cap Sink Capabilities MessageMay Port Sink Capabilities Dual Role Power Port Partner Dual-Role Power PortShall STihnek _Capabilities M(Geests age Section )6.4.1.6, \"SP R Sin bke C saepnatb biyli taie s Me tsosa rgeeq\"uest the and capability of its (e.g., capable). The respond by returning a DR_SwapMessage DFP UFP Port Partner VBUS Data Role Swap Port Partner The USB C ommunic aist iuosned to exchangeD FP and operUaStiBo nC obmetmwueneinc ation s while maintainUiSnBg Hthoes t direActttiaocnh mofe pnotweUr FflPow over. ThUeS B Communicatio nprocess can be used by USB Devices whAetttahcehrm ore nntot they support s capability. A that supports capability starts as the [oUnS B Type-C 2.. 4A] Dua lt-hRaotl es uDpaptaortDs RD Port Shall capability starts as the Data R oolne Swap. PE_SRC_Ready PE_SNK_Ready DFP UFP May Data Role Swap PE_SRC_Read y PE_SNK_Re a(dy ) s Data R hoalve eS wthaep cSahpaalblility to perform a from Dtheeta ch Re-attach or USB Co smtamteusn. icatiso annd s have the capabilitPyo trot pPearrftonremr a A fcrtoivme tMhoed e oPro rt Partner stateDs.R A_ SwapMessage be regarded inH tahred s Raemseet wSahya alls a cable / Sectio inn 6re.4la.4t.i3o.n4,t \"oE anntyer Mode Command\" whichC aisb loen Pglouigng betweeAnc ttihvee Mode s. If DthFePreS haraell a Nnoyt DR_sS wbeatpwMeeens stahgee Shall s when Aa ctive Mode C iasb al er ePcluegived, then a be pDearftoar Rmoeled (Ssweaep ). If the has any s then the issue a and cause all s in the to be exited before accepting a request.VBUS VCONN SourceShall R R CC Data Role Swap The source of and remain unchanged as well as the p/ d resistors on the wire during the DR_SwapMess apgreocMeassy. Port Partner DR_SwapMessageShall AcceptMessage WaitMessage RejectMessage Section 6.9, \"Accept, Reject and Wait\" The be sent by either. The recipient of the respond by s- ending anA cceptM essage, a Source or a SinkSh all (see Data Role ). - If anR ejectM essage is sent, the and exchange s. Data Role Swap Shall If a is sent, the requester is informed that the recipient is unable, or unwilling, to do a - WaitMessag aend no action be taken. Data Role Swap Shall If a is sent, the requester is informed that a might be possible in the future bDuat ttah aRto nleo S iwmampediate actioDnF PSha lble taken. Port Data Role DFP UFPShall Port Data Role UFP Before a the initial have its bit set to, and the initial have its D baitta s eRto tloe Swa.p DFP HostShall UFP Device DFPShall Port Data Role DFP UFPShall Port Data Role UFP USB CAoftmerm au snuiccacteisosnful the Port /Partn er become the / Sho uanldd vice-versa; the new have Ditast a Role bit set to, and the new have its bit set to. Where is supported by both s a USB data connection be established according to the new Data Roles.Swap Port Partner USB Type-CError Recovery I[fU tShBe Type-C 2.4], after having been accepted by the, is subsequently not successful, in order to attempt a re-establishment of the connection, actions, such as disconnect, as defined in Section 8.3.2.9 w, \"iDlla btea nReoclee sSswarayp.\" 6Se.e3.10 PR_Swap M.essage PR_SwapMessageMay Port Partner Power Role MessageShall AcceptMessage WaitMessage RejectMessage Section 6.9, T\"Ahcec ept, Reject and Wa it\" be sent by either to request an exchange of s. The recipient of the respond by sending an, a or a (see ).", "tables": [], "figures": [], "page_range": [131, 131]}
{"section_path": "6.3.10 PR_Swap Message", "start_heading": "6.3.10 PR_Swap Message", "content": "Get_Source_Cap Source Capabilities MessageMay Port Source Capabilities Dual-Role Power Port Partner Dual-Role Power PortShall ThSeo urce_Capabilitie (sGMete ssage Section 6). 4.1.5, \"SP R So ubrec ese Cnatp bayb ail ities Mtoe rsesaqguee\"st the and capability of its (e.g., capable). The respond by returning 6a.3.8 Ge t_Sink (_seCea p Message ). Get_Sink_Cap Sink Capabilities MessageMay Port Sink Capabilities Dual Role Power Port Partner Dual-Role Power PortShall STihnek _Capabilities M(Geests age Section )6.4.1.6, \"SP R Sin bke C saepnatb biyli taie s Me tsosa rgeeq\"uest the and capability of its (e.g., capable). The respond by returning a DR_SwapMessage DFP UFP Port Partner VBUS Data Role Swap Port Partner The USB C ommunic aist iuosned to exchangeD FP and operUaStiBo nC obmetmwueneinc ation s while maintainUiSnBg Hthoes t direActttiaocnh mofe pnotweUr FflPow over. ThUeS B Communicatio nprocess can be used by USB Devices whAetttahcehrm ore nntot they support s capability. A that supports capability starts as the [oUnS B Type-C 2.. 4A] Dua lt-hRaotl es uDpaptaortDs RD Port Shall capability starts as the Data R oolne Swap. PE_SRC_Ready PE_SNK_Ready DFP UFP May Data Role Swap PE_SRC_Read y PE_SNK_Re a(dy ) s Data R hoalve eS wthaep cSahpaalblility to perform a from Dtheeta ch Re-attach or USB Co smtamteusn. icatiso annd s have the capabilitPyo trot pPearrftonremr a A fcrtoivme tMhoed e oPro rt Partner stateDs.R A_ SwapMessage be regarded inH tahred s Raemseet wSahya alls a cable / Sectio inn 6re.4la.4t.i3o.n4,t \"oE anntyer Mode Command\" whichC aisb loen Pglouigng betweeAnc ttihvee Mode s. If DthFePreS haraell a Nnoyt DR_sS wbeatpwMeeens stahgee Shall s when Aa ctive Mode C iasb al er ePcluegived, then a be pDearftoar Rmoeled (Ssweaep ). If the has any s then the issue a and cause all s in the to be exited before accepting a request.VBUS VCONN SourceShall R R CC Data Role Swap The source of and remain unchanged as well as the p/ d resistors on the wire during the DR_SwapMess apgreocMeassy. Port Partner DR_SwapMessageShall AcceptMessage WaitMessage RejectMessage Section 6.9, \"Accept, Reject and Wait\" The be sent by either. The recipient of the respond by s- ending anA cceptM essage, a Source or a SinkSh all (see Data Role ). - If anR ejectM essage is sent, the and exchange s. Data Role Swap Shall If a is sent, the requester is informed that the recipient is unable, or unwilling, to do a - WaitMessag aend no action be taken. Data Role Swap Shall If a is sent, the requester is informed that a might be possible in the future bDuat ttah aRto nleo S iwmampediate actioDnF PSha lble taken. Port Data Role DFP UFPShall Port Data Role UFP Before a the initial have its bit set to, and the initial have its D baitta s eRto tloe Swa.p DFP HostShall UFP Device DFPShall Port Data Role DFP UFPShall Port Data Role UFP USB CAoftmerm au snuiccacteisosnful the Port /Partn er become the / Sho uanldd vice-versa; the new have Ditast a Role bit set to, and the new have its bit set to. Where is supported by both s a USB data connection be established according to the new Data Roles.Swap Port Partner USB Type-CError Recovery I[fU tShBe Type-C 2.4], after having been accepted by the, is subsequently not successful, in order to attempt a re-establishment of the connection, actions, such as disconnect, as defined in Section 8.3.2.9 w, \"iDlla btea nReoclee sSswarayp.\" 6Se.e3.10 PR_Swap M.essage PR_SwapMessageMay Port Partner Power Role MessageShall AcceptMessage WaitMessage RejectMessage Section 6.9, T\"Ahcec ept, Reject and Wa it\" be sent by either to request an exchange of s. The recipient of the respond by sending an, a or a (see ).", "tables": [], "figures": [], "page_range": [131, 131]}
{"section_path": "6.3.11 VCONN_Swap Message", "start_heading": "6.3.11 VCONN_Swap Message", "content": "- AcceptMessage Source SinkShall Power Role Swap - If anR ejectM essage is sent, the and do a. Power Role Swap Shall If a is sent, the requester is informed that the recipient is unable, or unwilling, to do a - WaitMessage and no action be taken. Power Role Swap Shall If a is sent, the requester is informed that a might be possible in the PR_fSuwtuarpe Mbuests tahgaet Snhoa imll mNoetdiate action E bPeR t aMkoedne. EPR Mode Power Role Swap EPR Mode Shall The be sent while in. While in if a is required, an exit Powe rb eR odloen Sew fairpst. Port Partner Shall Protocol Layer Soft Reset MessageIDCounter RetryCounter Protocol Layer After a successfuFli rst Explicit Contra tchte s New r eSsoeutr ctheeSihr arellspective CapsCouns t(eerquivalent to a ): resetting their, and state machines before attempting to esNtaebwli sSho utrhcee Shall R. At this pCoCint the New SinkS ahlasoll reset iRts. CC [USB Type-C 2.4] Power Role Swap Source Sink PortShall CC The R haRve p asserted on the P owwireer Ranodle tShwe ap S ink Shoauvrec ed asseProtretdS ohna ltlhe wire aCsC defined in R R. WhDenFP peHrfoosrtmiUnFgP a Device Data Role from VCONN tSoo urce, Sthhea ll change its wireP orewseisrt Roor lfer oSmwa pp to d. When performing a from to, the change its wire resistor from d to p. The ( ), ( ) s and remain unchanged by tNhoet e: pProowceers sR.ole Swap Initial Sink VBUS vSafe5V During the process the does not disconnect even though drops below. Power Role Swap For- morSee icntfioornm 7a.3t.i2o,n \" Treraganrsditiinogn st hCea used by Power Ro,l er eSfwera pto\": - Section 8.3.2.5, \"Data Reset\" - Section 8.3.3.19.3, \"Policy En.gine in Source to Sink Power Role Swap State Diagram\" - Section 8.3.3.19.4, \"Policy Engine in Sink to Source Power Role Swap State Diagram\". - Section 9.1.2, \"Mapping to USB Device States\". VCONN_SwapMessageShall Port VCONN Source The VCONN_Swap Message May be supported byP oarnty P artn ethrat can operate as a VCONN S.ource MessageShall AcceptMessage RejectMessage WaitMessage Section 6.9, T\"Ahcec ept, Reject an d Wait\" N obte_ Sseunptp boyr eteitdhMere ssage to request an exchange of. The recipient of the respond by sending an,, (see - AcceptMessa) goer Port P artner.Shall VCONN Swap VCONN SourceShall PS_RDYMessage tVcONNSourceOn VCONN IVf C a On N N Sourc eShall is sent, the VCONN s tVC p Oe Nr NfSoorumr ac eOff. The new E OP sendP Sa_ RDYMe ssage within to indicate that it is now sourcing. The initial cease sourcing within of receipt of the last bit of the of - the RejectM essage. VCONN Swap Shall RejectMessageShall Port If a VCONN i sS osuenrcte, the requester is iVn Cfo Or Nm N_eSdw tahpatM theess raegceipient Piso rutnable, or unwilling, toV d COo N a N SourceShall a Nnodt no actioRne jectM bees staagkeen. A VCON N_Swa opnMlye bsesa sgeent by the that is not presently the in response to a. The that is presently the - Wa itMessage send a in response to VCONN Swa p. Shall Port VCONN Source VIf C a O NN Sw ap is sSehnatl, lt hNeo trequester iVs Ci On Nfo Nr Smweadp that a tVCO Nm NiSgwhta bpeD peloasysDibFleP in the future tbVu Ct O t Nh NaSt wnoa pimDmeleadyiUatFeP action be taken. A afVte Cr O Nlo Ns iSnwga tpheA MS role due to incoming request initiate a until at least / - Not_SupportedMes saaftgeer completing the previous VCON.N Swap Port VCONN SourceMay VCONN Not_SupportedMessage If a VC Ois N Nse_Snwt, athpeM reesqsuaegseter is informed that is not supported. The that is not presently the turn on when a is received in response to a.", "tables": [], "figures": [], "page_range": [132, 132]}
{"section_path": "6.3.12 Wait Message", "start_heading": "6.3.12 Wait Message", "content": "DFP Host UFP Device Data Role Source VBUSShall R R CC VCONN Swap The ( ), ( ) s and of remain unchanged as well as the p/ d resistors oVnCO tNhNe Sha wllire during the processV.CONN Swap Cable Plug be continually sourced during the process to maintain power to the (s) i.e., make before break. Cable Plug PortShall VCONN Source Cable Plug VCONN Swap VCONN Source Before comVm COu Nn Nicating with a a C eanbsleu Prelu tghat it is the Po arntd that the s are powereCda,b bley Ppleurgforming a VCONN iSfo nuercceessaryN. Soitn_cSeu iptp coarntneodt Mbee sgsuaagreanteed that the present is Vsu Cp Op Nl Ny_iSnwg apMes, stahgee only meanPs otrot ensure that the Vs Ca Or Ne N p Soowuerrceed is for aH ard R wesisehtingD toet caocmhmunicate with a to become the. If a is returned in response to the VCONN Sour ce, then thSeo urce is allowed to become tDhies cover Identity uCnotiml am and S oOrP ’ C.able Plug First Explicit Contract A that is also a can attempt to send a using to a Nproitoer: to the establishment of the VCONN Source. Sink AMS Cable Plug R SinkTxOK Section 6.9, \"Accept, Reject and Wait\" Even when it is presently the, the is not permitted to initiate an with a 6.3.12unless Wp isa seitt t oM essag e(see ). WaitMessage Valid Message The- Shall is a responsSei ntok one of the followRinegq uestMesss:age SPR Mode Negotiation Source It be sent to signal the, in response to a in during, to - indSihcaaltle that the is cuSrrinekntly unable to meeEt PthRe_ Rreeqquueesstt.Message EPR Mode Negotiation Source It be sent to signal the, in response to a in during - Shall, to indicate that the PR _iSsw cuarpreMnetslysa ugneable to meet the request. Power Role Swap It be sent by the recipient of a to indicate it is currently unable to do a - Shall. DR_SwapMessage Data Role Swap It be sent by the recipient of a to indicate it is currently unable to do a - Sha.ll VCONN_SwapMessage VCONN Source VCONN Swap It be sent by the recipient of a that is not presently the to - indSihcaaltle it is currently unable to do a Enter_USBM. essage Mode It be sent by the recipient of an to indicate it is currently unable to enter the WairteMqueesssategde SUhSaBl l. tReceiverResponse Message Section 6.9, \"Accept, Reject and Wait\" The be sent within of the receipt of the last bit of the (see WaitMessage Source Renegotiation Sink Source SourceShould WaitMessage RTehqeu estM essage allows tEhxep licit Co ntitmraec tto recover the powerP iotr rte Pqauritrneesr to meet the request, e.g., through with other s or an upstream. A only send a in response to a Sink when an RequestM eexssisatgse between thSein kRequestTism. er Shall tSinkRequest WaitMessage RequestMessage The is allowed to repeat the using the and ensure that there is WaitMessage PR_SwapMessage Power Role Swap PR_SwapMessage The is used when responding to Sai nk Capabi lities to indicate that a PR_SwapMe smsaigghet be possible in the future. This can occur in anyP coarste P warhtenreer thSeh oduevldice receiving Pthoew er Role Sw ap needs to evaluate thPeR r_eSqwuaepstM fuerstshaegre e.g., by requesting from the originator of the. Once it has completed this evaluation one of the s initiate the process again by sendWinagi at Message. Hub [UCSI] The is also used where a is operating in hybrid mode when a request cannot be satisfied (see ).", "tables": [], "figures": [], "page_range": [133, 133]}
{"section_path": "6.3.13 Soft Reset Message", "start_heading": "6.3.13 Soft Reset Message", "content": "Port WaitMessage PR_SwapMessageShall tPRSwapWait WaitMessage PR_SwapMessage A that receives a in response to a wait after receiving 6th.e3.12.3 be f oWrea sietn diinng r aenostpheorn se to a DR_S.wap Message WaitMessage DR_SwapMessage Data Role Swap DR_SwapMessage The is used when responding to a to indicaPteo rtth Pata rat ner Should might bDe ata pRoosles iSbwlea ipn the future. This can occur iDn Ran_Syw caaspeM wehssearge ethe device receiving the needs to evaluate the request further. Once it has completed this evaluation one of the s initiate the Port process agaWina bity Mseenssdaingge a DR_.SwapMessageShall tDRSwapWait WaitMessage DR_SwapMessage A that receives a in response to a wait after receiving 6th.e3.12.4 be f oWrea sietn diinng r aenostpheorn se to a VCON.N_Swap Message WaitMessage VCONN_SwapMessage VCONN_Swap VCONN_SwapMessage The is used when responding to a to indicPaotert t Phaart tan er Should might be pVo COs Nsi Nb lSew ianp the future. This can occur in Van COy N c Na_sSew wahpeMree tshsaeg deevice receiving the needs to evaluate the request further. Once it has completed this evaluation one of the s initiate the Port process agWaainit bMy essesnadgieng a VCONN_Sw. apMessageShall tVCONNSwapWait WaitMessage VCONN_SwapMessage A that receives a in response to a wait after rePceoirvting the V bCOeNfoNr Seo suerncdeiSnhga alnlother Ac ceptMes.sage WaitMessage Port Partner Revision Version RevisionMessage Port Partner A that is currentlyR ethvies ion Versio n respond withW aani tMessa ge (rather than aS oft Re set ) if the 's and, as reported in the, is earlier than R3.2 V1.1. A 6su.p3p.o1rt2in.g5 an earlier Wait i ann dr espo nwsille n otto e xapnec tE an ter _USB M aned swsilal ggeenerate a in response. WaitMessage UFP Enter_USBMessage Mode UFP ThNe egotia te is used, by the, when respondUinFgP to an DF tPoS ihnoduicladte that entering the requested USB might bEe nptoesrs_iUblSeB inM tehsesa fgueture. This can occur, for example, in any case where the needs to more power to enter the mode. Once the has completed this the initiate the Enter USB prDoFcePss again by sendWinagi taMn essage. Enter_USBMessageShall tEnterUSBWait WaitMessage Enter_USBMessage A that receives a in response to an wait after receiving t6he.3.13 bSeofofrte sRenedsinegt a nMotehesrs age. Soft_ResetMessageMay Source Sink Port Partner Soft Reset Soft_ResetMessageShall Soft Reset Port Pair Section 6.8.1, \"Soft Reset and Protocol AEr ror\" Soft_Re setM beses aingietiated byH aeirtdh eRre stehteS hall or to its tHardRe rseeqtuesting a. The CRCReceiv eTimer cause a nRetryCou onf tthe connected (see ). If the fails a be initiated within of the last Soft_ResetMessa gexepiring after Pr roettorcioels Lhaayveer been completed. Message Message Soft_ResetMessage Source Sink A N egotiated is used to recover from errors; puttinMg othdea l Operati ocnounters to a knowSno sftta te Rtoe sreetgain syncShorfot nRiezsaettion. The Explicit C ohnatsr naoct eNffeegcot toiant itohne or ; that is the previously direction. Voltage and current rPeomrta Pina urtnncehranged. PE_S iNs Kun_Raeffaedctyed by PE_SR. HC_oRweeavdeyr after a has compSleetcetdio, na n8.3.3.4, \"SOP Soft R eset and Pro otocccuorl sE, rirno orr Sdteart eto D riea-gersatmabsl\"ish PD Communication and to bring state operation for both s back to either the or Soft_ResetM esstsaategse aMsa ayppropriate (see Source Sink Message ). Soft Reset Hard ResetSignalingShall Section 6.8.3, \"Hard Reset\" A be sent by either the or when there is a synchronization error. If thSeo efrtr_oRre sise ntoMte csosarrgeecStehda lbly the, be issued (see SOP* Packet Soft_Res).et Message SOP Packet ShallSoft Reset Port Partner Soft_ResetMessage SOP’ Packet ASO P’’ Packet ShallSo ft Rese bte targeted at a speciCfiacb elen tPiltuyg depending on the type of used. s sent using s the only. s sent using / VCONsN Swap VCONN tShoeu crocreresponding Cab loen Plylu.g Protocol Layer MessageID VCONN Swap VCONN Source Cable Plug SOP’ PAaftcekre at Shall the Soft_ResetMe nsesaegdes to resetS tOhPe’ Packet 's tCoa ebnlseu Prleu g Protocol Layer synchronization. If after a the wants to communicate with a using s, it issue a using a in order to reset the 's. If", "tables": [], "figures": [], "page_range": [134, 134]}
{"section_path": "6.3.14 Data_Reset Message", "start_heading": "6.3.14 Data_Reset Message", "content": "VCONN Source Cable Plug SOP’’ Packet Shall Soft_ResetMessage SOP’’ Packet Cable Plug Protocol Layer the wants to communicate with a using s, it issue a u6s.i3ng. 1a 4 D ian toard_eRr teo sreesett Mthee ssage's. Data_ResetMessageMay DFP UFP Shall Alternate Mode Port Partner VBUS USB4 Mode Shall TheD ata_Reset Message be sent by eMitahyer the or Dat aa_nRde setM reesssaegt eth ®e USB data connection and exit all s with its while preserving the power on. capable ports support the Data_Reset Message aSnhda ollt hNeort ports support the. The- C ontract change the existing: - PDoawtae Rr ole Port DFP UFP s (Di.aet.,a w_Rheicshe tMes issa tgheeS hall or ) AcceptMessage Shall VCONN Swap Data Reset The receiver of the Da ta_Reset _Com prelestpeoMnde sbsya gseending an and then followAc tcheep ptrocess oMuetslsinaegde in tGhoe ofodlCloRwCing steps. NeithAecrc ethpet sender nor receivePro rt initiateD aa ta_ResetMe ussnatgile the process is complete, and the has been sent. Following receipt of the, or DFPShal lfollowing the, depending which sends the : 1) The : Port [USB 2.0]  Disconnect the[ USB' s3.2] D+/DP-o sritgnals. [USB 3.2]  If operating in [USB4] removeP tohret 's Rx Terminations (se[eU SB4] ). If operDaFtPing in UFPSha dlrlive the Alter'sn aSBteT MX otdoe a logic low (see ). 2) Both the and exit all s if any. 3) Reset theV cCaObNlNe: SourcePort UFP Shall UFPVCONN Section 7.1.15.1, \"UFP VCONN Power Cycle\" If the is also the, then it run the Power Cycle process de  scribeVdC iOnN N SourcePort DFP Shall. DFPVCONN Section 7.1.15.2, \"DFP VCONN Power Cycle\" If the is also the, then it run the Power Cycle process de  scribDeFdP inS hall VCONN. VCONN Source VCONN ThteD ataR eset exitD tFhPe Shall Power Cycle process as the and be sourcing. 4) After t[hUeS B 2.0 ] :  ReconPnoerctt the D+[/UDS-B s i3g.n2a]ls. [USB4] Port [USB 3.2] IfD tahtea Rese wt as operating in D oFrP Shall reappDlya tthae_ Rese'ts_ CRoxm TeprlmetienMateiossnasg (esee ). [USB Type-C 2.4] 5) The process is complete; the send a and enter the ® IniUtiSaBto4r DiscoDvaetray _aRneds eEtnMtreys sFalogwe (See Valid). tSenderResponse Shall ErrorRecovery If the of the does not receive a response within it enter 6th.e3.15 D Satattea._Reset_Complete Message Data_Reset_CompleteMessageShall DFP UFP Data Reset Section 6.3.14, \"Data_Reset Message\" The be sent by the to the to indicate the completion of the 6pr.o3ce.s1s 6(see Not_Supported Mes)s.age Not_SupportedMessageShall Port Cable Plug Message Not_SupportedMessage ThSee ction 6.13, \"Mes sage App licabil ibtey \"sent by a or in reNspoto_nSsuep tpoo arnteyd Messag eit does not support. Returning a is assumed in this specification and has not been called out explicitly except in which defines cases where the is returned.", "tables": [], "figures": [], "page_range": [135, 135]}
{"section_path": "6.3.15 Data_Reset_Complete Message", "start_heading": "6.3.15 Data_Reset_Complete Message", "content": "VCONN Source Cable Plug SOP’’ Packet Shall Soft_ResetMessage SOP’’ Packet Cable Plug Protocol Layer the wants to communicate with a using s, it issue a u6s.i3ng. 1a 4 D ian toard_eRr teo sreesett Mthee ssage's. Data_ResetMessageMay DFP UFP Shall Alternate Mode Port Partner VBUS USB4 Mode Shall TheD ata_Reset Message be sent by eMitahyer the or Dat aa_nRde setM reesssaegt eth ®e USB data connection and exit all s with its while preserving the power on. capable ports support the Data_Reset Message aSnhda ollt hNeort ports support the. The- C ontract change the existing: - PDoawtae Rr ole Port DFP UFP s (Di.aet.,a w_Rheicshe tMes issa tgheeS hall or ) AcceptMessage Shall VCONN Swap Data Reset The receiver of the Da ta_Reset _Com prelestpeoMnde sbsya gseending an and then followAc tcheep ptrocess oMuetslsinaegde in tGhoe ofodlCloRwCing steps. NeithAecrc ethpet sender nor receivePro rt initiateD aa ta_ResetMe ussnatgile the process is complete, and the has been sent. Following receipt of the, or DFPShal lfollowing the, depending which sends the : 1) The : Port [USB 2.0]  Disconnect the[ USB' s3.2] D+/DP-o sritgnals. [USB 3.2]  If operating in [USB4] removeP tohret 's Rx Terminations (se[eU SB4] ). If operDaFtPing in UFPSha dlrlive the Alter'sn aSBteT MX otdoe a logic low (see ). 2) Both the and exit all s if any. 3) Reset theV cCaObNlNe: SourcePort UFP Shall UFPVCONN Section 7.1.15.1, \"UFP VCONN Power Cycle\" If the is also the, then it run the Power Cycle process de  scribeVdC iOnN N SourcePort DFP Shall. DFPVCONN Section 7.1.15.2, \"DFP VCONN Power Cycle\" If the is also the, then it run the Power Cycle process de  scribDeFdP inS hall VCONN. VCONN Source VCONN ThteD ataR eset exitD tFhPe Shall Power Cycle process as the and be sourcing. 4) After t[hUeS B 2.0 ] :  ReconPnoerctt the D+[/UDS-B s i3g.n2a]ls. [USB4] Port [USB 3.2] IfD tahtea Rese wt as operating in D oFrP Shall reappDlya tthae_ Rese'ts_ CRoxm TeprlmetienMateiossnasg (esee ). [USB Type-C 2.4] 5) The process is complete; the send a and enter the ® IniUtiSaBto4r DiscoDvaetray _aRneds eEtnMtreys sFalogwe (See Valid). tSenderResponse Shall ErrorRecovery If the of the does not receive a response within it enter 6th.e3.15 D Satattea._Reset_Complete Message Data_Reset_CompleteMessageShall DFP UFP Data Reset Section 6.3.14, \"Data_Reset Message\" The be sent by the to the to indicate the completion of the 6pr.o3ce.s1s 6(see Not_Supported Mes)s.age Not_SupportedMessageShall Port Cable Plug Message Not_SupportedMessage ThSee ction 6.13, \"Mes sage App licabil ibtey \"sent by a or in reNspoto_nSsuep tpoo arnteyd Messag eit does not support. Returning a is assumed in this specification and has not been called out explicitly except in which defines cases where the is returned.", "tables": [], "figures": [], "page_range": [135, 135]}
{"section_path": "6.3.16 Not_Supported Message", "start_heading": "6.3.16 Not_Supported Message", "content": "VCONN Source Cable Plug SOP’’ Packet Shall Soft_ResetMessage SOP’’ Packet Cable Plug Protocol Layer the wants to communicate with a using s, it issue a u6s.i3ng. 1a 4 D ian toard_eRr teo sreesett Mthee ssage's. Data_ResetMessageMay DFP UFP Shall Alternate Mode Port Partner VBUS USB4 Mode Shall TheD ata_Reset Message be sent by eMitahyer the or Dat aa_nRde setM reesssaegt eth ®e USB data connection and exit all s with its while preserving the power on. capable ports support the Data_Reset Message aSnhda ollt hNeort ports support the. The- C ontract change the existing: - PDoawtae Rr ole Port DFP UFP s (Di.aet.,a w_Rheicshe tMes issa tgheeS hall or ) AcceptMessage Shall VCONN Swap Data Reset The receiver of the Da ta_Reset _Com prelestpeoMnde sbsya gseending an and then followAc tcheep ptrocess oMuetslsinaegde in tGhoe ofodlCloRwCing steps. NeithAecrc ethpet sender nor receivePro rt initiateD aa ta_ResetMe ussnatgile the process is complete, and the has been sent. Following receipt of the, or DFPShal lfollowing the, depending which sends the : 1) The : Port [USB 2.0]  Disconnect the[ USB' s3.2] D+/DP-o sritgnals. [USB 3.2]  If operating in [USB4] removeP tohret 's Rx Terminations (se[eU SB4] ). If operDaFtPing in UFPSha dlrlive the Alter'sn aSBteT MX otdoe a logic low (see ). 2) Both the and exit all s if any. 3) Reset theV cCaObNlNe: SourcePort UFP Shall UFPVCONN Section 7.1.15.1, \"UFP VCONN Power Cycle\" If the is also the, then it run the Power Cycle process de  scribeVdC iOnN N SourcePort DFP Shall. DFPVCONN Section 7.1.15.2, \"DFP VCONN Power Cycle\" If the is also the, then it run the Power Cycle process de  scribDeFdP inS hall VCONN. VCONN Source VCONN ThteD ataR eset exitD tFhPe Shall Power Cycle process as the and be sourcing. 4) After t[hUeS B 2.0 ] :  ReconPnoerctt the D+[/UDS-B s i3g.n2a]ls. [USB4] Port [USB 3.2] IfD tahtea Rese wt as operating in D oFrP Shall reappDlya tthae_ Rese'ts_ CRoxm TeprlmetienMateiossnasg (esee ). [USB Type-C 2.4] 5) The process is complete; the send a and enter the ® IniUtiSaBto4r DiscoDvaetray _aRneds eEtnMtreys sFalogwe (See Valid). tSenderResponse Shall ErrorRecovery If the of the does not receive a response within it enter 6th.e3.15 D Satattea._Reset_Complete Message Data_Reset_CompleteMessageShall DFP UFP Data Reset Section 6.3.14, \"Data_Reset Message\" The be sent by the to the to indicate the completion of the 6pr.o3ce.s1s 6(see Not_Supported Mes)s.age Not_SupportedMessageShall Port Cable Plug Message Not_SupportedMessage ThSee ction 6.13, \"Mes sage App licabil ibtey \"sent by a or in reNspoto_nSsuep tpoo arnteyd Messag eit does not support. Returning a is assumed in this specification and has not been called out explicitly except in which defines cases where the is returned.", "tables": [], "figures": [], "page_range": [135, 135]}
{"section_path": "6.3.17 Get_Source_Cap_Extended Message", "start_heading": "6.3.17 Get_Source_Cap_Extended Message", "content": "Get_Source_Cap_ExtendedMessage Port Port Source Capabilities PortShall Source_Capabilities_ExtendedMessage Section 6.5.1, T\"Shoeu rce_Capabilities_Extended M essage\" is sent by a to request additional information about a 's. The respond by returning a (see Get_StatusMessage Port SOP Port Partner The Port Partne rShall is sent by a using Stat utos Mreeqsusaesgte the Section 6.5.'2s, p\"Sretasteunst Msteastsuasg. e\" Port AlertMessage Section 6.4.6, \"Alert Message\" Source Sink The Should respondG beyt_ rSetatutrunsinMge sas age (see ). A that receives an (see ) indicates that the or 's Status has changed and Get_Sta btues rMe-ersesaadg uesMinagy a Act.ive Cable SOP’ SOP’’ The Active Cable Shall also be sent to anS tatusMessag teo get itSse pctrieosne 6n.t5 s.2ta, \"tuStsa utusisn Mg essag/e\". 6Th.e3.19 FR _reSswponadp b yM reetusrsniangg ae (see ). FR_SwapMessageShall New Source tFRSwapInit Fast Role Swap Section 5.8.6.3, \"Fast Role Swap Detection\" Section 6.6.17.3, \"tFRSwapInit\" Fast Role SwapAMS The R beN seewn tS bouy rtchee R wNiethwi nS ink after it has detected a tsFigRnSawl (aspeIen it Shall anFda st Role Swap Request ). The tFRSwapRx is necessary to apply Ep OtoP the FR_Swap aMnde ssad gtoe the and to re-synchPrHonYi zLea ythere state machines. The time be measured from the time the has been sent for (max) until the last bit of thFeR _Swa opf tMhees sageShal l has been transmAictcteedp tbMy tehssea ge. The recipient of thFea st Role Sw ap Po rt Par rtneseproSnhda blyl sending an Protoc.ol Layer Soft Reset MessageIDCounter RetryCounter Protocol Layer After a succesFsifruslt Explicit Contra tchte s Sou rreceseSth tahellir respective CapsCounters (equivalent to a ): resetting their, and state machines before attempting to establish the Cable Plu. gAt this point the Good CRCM aelsssoa greeset its Discover Ide.n tityCommand This ensuresF athsta Rt oolnel yS wthaep AMS N erwes Spoounrdcse wShitahl la R to thCeC New SinkShall. R CC Prior to the, the have d asserted on the wire and the have Npo atess:erted on the wire. R R R Source R Sink [USB Type-C 2.4] Fast Role SwapAMS This is an incorrect assignment of p/ d (since p follows the and d follows the as defined inF ast Role SwapAMS) that Nise cwo SrroeucrtceedS bhya tlhle CC. R R New Sink Shall CC R R DFP Host UFP Device Data Role VCONN SourceShall During the F, athset Role Swap change its wire resistor from d to p and the change its wire resistor from p to d. The ( ), ( ) s and remaIninit uianlc ShoaunrgceedS hdouurilndg the VCO NpNr oScoeusrsc.e VCONN Swap Initial Source VCONN Fast Role STwhea p avoid being the (by using the process) whenever not actively communicating with the cable, since it is difficult for the to maintain power during the Note: procesFsa.st Role Swap PDUSB Device AMS Hard RAe set [USB Typ ies -aC \" 2b.e4s]t Eerfrfoorrt R\" escooluvetiroyn to a situation where a has lost its external power. This process can occur at any time, even during an in which case error handling such as Note: or Fast Role Swap Ini twiaill lS binek triggered. VBUS vSafe5V During the process the does not disconnect even though drops below. Fast Role Swap For- morSee icntfioornm 7a.1t.i1o3n, r\"eFgaastr dRionlge tShwea p\" process, refer to: - Section 7.2.10, \"Fast Role Swap\" - Section 8.3.3.19.5, \"Policy Engine in Source to Sink Fast Role Swap State Diagram\" - Section 8.3.3.19.6, \"Policy Engine in Sink to Source Fast Role Swap State Diagram\"", "tables": [], "figures": [], "page_range": [136, 136]}
{"section_path": "6.3.18 Get_Status Message", "start_heading": "6.3.18 Get_Status Message", "content": "Get_Source_Cap_ExtendedMessage Port Port Source Capabilities PortShall Source_Capabilities_ExtendedMessage Section 6.5.1, T\"Shoeu rce_Capabilities_Extended M essage\" is sent by a to request additional information about a 's. The respond by returning a (see Get_StatusMessage Port SOP Port Partner The Port Partne rShall is sent by a using Stat utos Mreeqsusaesgte the Section 6.5.'2s, p\"Sretasteunst Msteastsuasg. e\" Port AlertMessage Section 6.4.6, \"Alert Message\" Source Sink The Should respondG beyt_ rSetatutrunsinMge sas age (see ). A that receives an (see ) indicates that the or 's Status has changed and Get_Sta btues rMe-ersesaadg uesMinagy a Act.ive Cable SOP’ SOP’’ The Active Cable Shall also be sent to anS tatusMessag teo get itSse pctrieosne 6n.t5 s.2ta, \"tuStsa utusisn Mg essag/e\". 6Th.e3.19 FR _reSswponadp b yM reetusrsniangg ae (see ). FR_SwapMessageShall New Source tFRSwapInit Fast Role Swap Section 5.8.6.3, \"Fast Role Swap Detection\" Section 6.6.17.3, \"tFRSwapInit\" Fast Role SwapAMS The R beN seewn tS bouy rtchee R wNiethwi nS ink after it has detected a tsFigRnSawl (aspeIen it Shall anFda st Role Swap Request ). The tFRSwapRx is necessary to apply Ep OtoP the FR_Swap aMnde ssad gtoe the and to re-synchPrHonYi zLea ythere state machines. The time be measured from the time the has been sent for (max) until the last bit of thFeR _Swa opf tMhees sageShal l has been transmAictcteedp tbMy tehssea ge. The recipient of thFea st Role Sw ap Po rt Par rtneseproSnhda blyl sending an Protoc.ol Layer Soft Reset MessageIDCounter RetryCounter Protocol Layer After a succesFsifruslt Explicit Contra tchte s Sou rreceseSth tahellir respective CapsCounters (equivalent to a ): resetting their, and state machines before attempting to establish the Cable Plu. gAt this point the Good CRCM aelsssoa greeset its Discover Ide.n tityCommand This ensuresF athsta Rt oolnel yS wthaep AMS N erwes Spoounrdcse wShitahl la R to thCeC New SinkShall. R CC Prior to the, the have d asserted on the wire and the have Npo atess:erted on the wire. R R R Source R Sink [USB Type-C 2.4] Fast Role SwapAMS This is an incorrect assignment of p/ d (since p follows the and d follows the as defined inF ast Role SwapAMS) that Nise cwo SrroeucrtceedS bhya tlhle CC. R R New Sink Shall CC R R DFP Host UFP Device Data Role VCONN SourceShall During the F, athset Role Swap change its wire resistor from d to p and the change its wire resistor from p to d. The ( ), ( ) s and remaIninit uianlc ShoaunrgceedS hdouurilndg the VCO NpNr oScoeusrsc.e VCONN Swap Initial Source VCONN Fast Role STwhea p avoid being the (by using the process) whenever not actively communicating with the cable, since it is difficult for the to maintain power during the Note: procesFsa.st Role Swap PDUSB Device AMS Hard RAe set [USB Typ ies -aC \" 2b.e4s]t Eerfrfoorrt R\" escooluvetiroyn to a situation where a has lost its external power. This process can occur at any time, even during an in which case error handling such as Note: or Fast Role Swap Ini twiaill lS binek triggered. VBUS vSafe5V During the process the does not disconnect even though drops below. Fast Role Swap For- morSee icntfioornm 7a.1t.i1o3n, r\"eFgaastr dRionlge tShwea p\" process, refer to: - Section 7.2.10, \"Fast Role Swap\" - Section 8.3.3.19.5, \"Policy Engine in Source to Sink Fast Role Swap State Diagram\" - Section 8.3.3.19.6, \"Policy Engine in Sink to Source Fast Role Swap State Diagram\"", "tables": [], "figures": [], "page_range": [136, 136]}
{"section_path": "6.3.19 FR_Swap Message", "start_heading": "6.3.19 FR_Swap Message", "content": "Get_Source_Cap_ExtendedMessage Port Port Source Capabilities PortShall Source_Capabilities_ExtendedMessage Section 6.5.1, T\"Shoeu rce_Capabilities_Extended M essage\" is sent by a to request additional information about a 's. The respond by returning a (see Get_StatusMessage Port SOP Port Partner The Port Partne rShall is sent by a using Stat utos Mreeqsusaesgte the Section 6.5.'2s, p\"Sretasteunst Msteastsuasg. e\" Port AlertMessage Section 6.4.6, \"Alert Message\" Source Sink The Should respondG beyt_ rSetatutrunsinMge sas age (see ). A that receives an (see ) indicates that the or 's Status has changed and Get_Sta btues rMe-ersesaadg uesMinagy a Act.ive Cable SOP’ SOP’’ The Active Cable Shall also be sent to anS tatusMessag teo get itSse pctrieosne 6n.t5 s.2ta, \"tuStsa utusisn Mg essag/e\". 6Th.e3.19 FR _reSswponadp b yM reetusrsniangg ae (see ). FR_SwapMessageShall New Source tFRSwapInit Fast Role Swap Section 5.8.6.3, \"Fast Role Swap Detection\" Section 6.6.17.3, \"tFRSwapInit\" Fast Role SwapAMS The R beN seewn tS bouy rtchee R wNiethwi nS ink after it has detected a tsFigRnSawl (aspeIen it Shall anFda st Role Swap Request ). The tFRSwapRx is necessary to apply Ep OtoP the FR_Swap aMnde ssad gtoe the and to re-synchPrHonYi zLea ythere state machines. The time be measured from the time the has been sent for (max) until the last bit of thFeR _Swa opf tMhees sageShal l has been transmAictcteedp tbMy tehssea ge. The recipient of thFea st Role Sw ap Po rt Par rtneseproSnhda blyl sending an Protoc.ol Layer Soft Reset MessageIDCounter RetryCounter Protocol Layer After a succesFsifruslt Explicit Contra tchte s Sou rreceseSth tahellir respective CapsCounters (equivalent to a ): resetting their, and state machines before attempting to establish the Cable Plu. gAt this point the Good CRCM aelsssoa greeset its Discover Ide.n tityCommand This ensuresF athsta Rt oolnel yS wthaep AMS N erwes Spoounrdcse wShitahl la R to thCeC New SinkShall. R CC Prior to the, the have d asserted on the wire and the have Npo atess:erted on the wire. R R R Source R Sink [USB Type-C 2.4] Fast Role SwapAMS This is an incorrect assignment of p/ d (since p follows the and d follows the as defined inF ast Role SwapAMS) that Nise cwo SrroeucrtceedS bhya tlhle CC. R R New Sink Shall CC R R DFP Host UFP Device Data Role VCONN SourceShall During the F, athset Role Swap change its wire resistor from d to p and the change its wire resistor from p to d. The ( ), ( ) s and remaIninit uianlc ShoaunrgceedS hdouurilndg the VCO NpNr oScoeusrsc.e VCONN Swap Initial Source VCONN Fast Role STwhea p avoid being the (by using the process) whenever not actively communicating with the cable, since it is difficult for the to maintain power during the Note: procesFsa.st Role Swap PDUSB Device AMS Hard RAe set [USB Typ ies -aC \" 2b.e4s]t Eerfrfoorrt R\" escooluvetiroyn to a situation where a has lost its external power. This process can occur at any time, even during an in which case error handling such as Note: or Fast Role Swap Ini twiaill lS binek triggered. VBUS vSafe5V During the process the does not disconnect even though drops below. Fast Role Swap For- morSee icntfioornm 7a.1t.i1o3n, r\"eFgaastr dRionlge tShwea p\" process, refer to: - Section 7.2.10, \"Fast Role Swap\" - Section 8.3.3.19.5, \"Policy Engine in Source to Sink Fast Role Swap State Diagram\" - Section 8.3.3.19.6, \"Policy Engine in Sink to Source Fast Role Swap State Diagram\"", "tables": [], "figures": [], "page_range": [136, 136]}
{"section_path": "6.3.20 Get_PPS_Status", "start_heading": "6.3.20 Get_PPS_Status", "content": "- Section 9.1.2, \"Mapping to USB Device States\" VBUS Get_PPS_StatusMessage Sink Source Port Shall PPS_StatusMessage Section 6.5.10, \"PPS_Status Message\" The is sent by the to request additional information about a 's status. The 6.3. r2e1spond by rGeteurtn_inCgo a untry_C odes (see ). Get_Country_CodesMessage Port Port Partner [ISO 3166] Port PartnerShall Country_CodesMessage Section 6.5.11, T\"Choeu ntry_Codes Message \" is sent by a to request the alpha-2 country codes its supports as defined in. The respond by returning a (see Get_Sink_Cap_Extended Sink Capabilities Message Port Port Sink Capabilities PortShall Sink_Capabilities_Extended MTheess age Section 6.5.13, \" S(Ginekt_ Capabilities_Exte Endxteedn Mdeedss)a ge\" is sent by a to request additional information about a 's. The respond by returning a Get_Source_InfoMessage Port Capabilities Capabilities Port Source PortShall Source_InfoMessage TSehcet ion 6.4.11, \"Sourc e_Info Me isss asegne\"t by a to request the type, maximum and present of the when it is operating as a. The respond by returning the (See Get_RevisionMessage Port SOP Revision Version Port Partner The is sent by a using to request the and of the Power Delivery SpecPifoicrat tPioanrt intesr Shall supports. Message Section 6.4.12, \"Revision Message\" The Get_Revision Mess aregsepMonady by returning a ReCvaibsileo nP lug (See Revision Version ). SOP’ SOP’’ The also be sent to a to request the and of the Power DelivAecrtyiv Sep CeacbifliecaSthioanll it supports using /. Message Section 6.4.12, \"Revision Message\" The respond by returning a Revision (see ).", "tables": [], "figures": [], "page_range": [137, 137]}
{"section_path": "6.3.21 Get_Country_Codes", "start_heading": "6.3.21 Get_Country_Codes", "content": "- Section 9.1.2, \"Mapping to USB Device States\" VBUS Get_PPS_StatusMessage Sink Source Port Shall PPS_StatusMessage Section 6.5.10, \"PPS_Status Message\" The is sent by the to request additional information about a 's status. The 6.3. r2e1spond by rGeteurtn_inCgo a untry_C odes (see ). Get_Country_CodesMessage Port Port Partner [ISO 3166] Port PartnerShall Country_CodesMessage Section 6.5.11, T\"Choeu ntry_Codes Message \" is sent by a to request the alpha-2 country codes its supports as defined in. The respond by returning a (see Get_Sink_Cap_Extended Sink Capabilities Message Port Port Sink Capabilities PortShall Sink_Capabilities_Extended MTheess age Section 6.5.13, \" S(Ginekt_ Capabilities_Exte Endxteedn Mdeedss)a ge\" is sent by a to request additional information about a 's. The respond by returning a Get_Source_InfoMessage Port Capabilities Capabilities Port Source PortShall Source_InfoMessage TSehcet ion 6.4.11, \"Sourc e_Info Me isss asegne\"t by a to request the type, maximum and present of the when it is operating as a. The respond by returning the (See Get_RevisionMessage Port SOP Revision Version Port Partner The is sent by a using to request the and of the Power Delivery SpecPifoicrat tPioanrt intesr Shall supports. Message Section 6.4.12, \"Revision Message\" The Get_Revision Mess aregsepMonady by returning a ReCvaibsileo nP lug (See Revision Version ). SOP’ SOP’’ The also be sent to a to request the and of the Power DelivAecrtyiv Sep CeacbifliecaSthioanll it supports using /. Message Section 6.4.12, \"Revision Message\" The respond by returning a Revision (see ).", "tables": [], "figures": [], "page_range": [137, 137]}
{"section_path": "6.3.22 Get_Sink_Cap_Extended Message", "start_heading": "6.3.22 Get_Sink_Cap_Extended Message", "content": "- Section 9.1.2, \"Mapping to USB Device States\" VBUS Get_PPS_StatusMessage Sink Source Port Shall PPS_StatusMessage Section 6.5.10, \"PPS_Status Message\" The is sent by the to request additional information about a 's status. The 6.3. r2e1spond by rGeteurtn_inCgo a untry_C odes (see ). Get_Country_CodesMessage Port Port Partner [ISO 3166] Port PartnerShall Country_CodesMessage Section 6.5.11, T\"Choeu ntry_Codes Message \" is sent by a to request the alpha-2 country codes its supports as defined in. The respond by returning a (see Get_Sink_Cap_Extended Sink Capabilities Message Port Port Sink Capabilities PortShall Sink_Capabilities_Extended MTheess age Section 6.5.13, \" S(Ginekt_ Capabilities_Exte Endxteedn Mdeedss)a ge\" is sent by a to request additional information about a 's. The respond by returning a Get_Source_InfoMessage Port Capabilities Capabilities Port Source PortShall Source_InfoMessage TSehcet ion 6.4.11, \"Sourc e_Info Me isss asegne\"t by a to request the type, maximum and present of the when it is operating as a. The respond by returning the (See Get_RevisionMessage Port SOP Revision Version Port Partner The is sent by a using to request the and of the Power Delivery SpecPifoicrat tPioanrt intesr Shall supports. Message Section 6.4.12, \"Revision Message\" The Get_Revision Mess aregsepMonady by returning a ReCvaibsileo nP lug (See Revision Version ). SOP’ SOP’’ The also be sent to a to request the and of the Power DelivAecrtyiv Sep CeacbifliecaSthioanll it supports using /. Message Section 6.4.12, \"Revision Message\" The respond by returning a Revision (see ).", "tables": [], "figures": [], "page_range": [137, 137]}
{"section_path": "6.3.23 Get_Source_Info Message", "start_heading": "6.3.23 Get_Source_Info Message", "content": "- Section 9.1.2, \"Mapping to USB Device States\" VBUS Get_PPS_StatusMessage Sink Source Port Shall PPS_StatusMessage Section 6.5.10, \"PPS_Status Message\" The is sent by the to request additional information about a 's status. The 6.3. r2e1spond by rGeteurtn_inCgo a untry_C odes (see ). Get_Country_CodesMessage Port Port Partner [ISO 3166] Port PartnerShall Country_CodesMessage Section 6.5.11, T\"Choeu ntry_Codes Message \" is sent by a to request the alpha-2 country codes its supports as defined in. The respond by returning a (see Get_Sink_Cap_Extended Sink Capabilities Message Port Port Sink Capabilities PortShall Sink_Capabilities_Extended MTheess age Section 6.5.13, \" S(Ginekt_ Capabilities_Exte Endxteedn Mdeedss)a ge\" is sent by a to request additional information about a 's. The respond by returning a Get_Source_InfoMessage Port Capabilities Capabilities Port Source PortShall Source_InfoMessage TSehcet ion 6.4.11, \"Sourc e_Info Me isss asegne\"t by a to request the type, maximum and present of the when it is operating as a. The respond by returning the (See Get_RevisionMessage Port SOP Revision Version Port Partner The is sent by a using to request the and of the Power Delivery SpecPifoicrat tPioanrt intesr Shall supports. Message Section 6.4.12, \"Revision Message\" The Get_Revision Mess aregsepMonady by returning a ReCvaibsileo nP lug (See Revision Version ). SOP’ SOP’’ The also be sent to a to request the and of the Power DelivAecrtyiv Sep CeacbifliecaSthioanll it supports using /. Message Section 6.4.12, \"Revision Message\" The respond by returning a Revision (see ).", "tables": [], "figures": [], "page_range": [137, 137]}
{"section_path": "6.3.24 Get_Revision Message", "start_heading": "6.3.24 Get_Revision Message", "content": "- Section 9.1.2, \"Mapping to USB Device States\" VBUS Get_PPS_StatusMessage Sink Source Port Shall PPS_StatusMessage Section 6.5.10, \"PPS_Status Message\" The is sent by the to request additional information about a 's status. The 6.3. r2e1spond by rGeteurtn_inCgo a untry_C odes (see ). Get_Country_CodesMessage Port Port Partner [ISO 3166] Port PartnerShall Country_CodesMessage Section 6.5.11, T\"Choeu ntry_Codes Message \" is sent by a to request the alpha-2 country codes its supports as defined in. The respond by returning a (see Get_Sink_Cap_Extended Sink Capabilities Message Port Port Sink Capabilities PortShall Sink_Capabilities_Extended MTheess age Section 6.5.13, \" S(Ginekt_ Capabilities_Exte Endxteedn Mdeedss)a ge\" is sent by a to request additional information about a 's. The respond by returning a Get_Source_InfoMessage Port Capabilities Capabilities Port Source PortShall Source_InfoMessage TSehcet ion 6.4.11, \"Sourc e_Info Me isss asegne\"t by a to request the type, maximum and present of the when it is operating as a. The respond by returning the (See Get_RevisionMessage Port SOP Revision Version Port Partner The is sent by a using to request the and of the Power Delivery SpecPifoicrat tPioanrt intesr Shall supports. Message Section 6.4.12, \"Revision Message\" The Get_Revision Mess aregsepMonady by returning a ReCvaibsileo nP lug (See Revision Version ). SOP’ SOP’’ The also be sent to a to request the and of the Power DelivAecrtyiv Sep CeacbifliecaSthioanll it supports using /. Message Section 6.4.12, \"Revision Message\" The respond by returning a Revision (see ).", "tables": [], "figures": [], "page_range": [137, 137]}
{"section_path": "6.4 Data Message", "start_heading": "6.4 Data Message", "content": "Data MessageShall Message Header Data Object Data Message Number of Data Objects Message Header A consist of a and be followed by one or more s. s are easily identifiable becausDe atthae Object D faietlad M ine stshaeg e is a non-zero value. The- re arPeo mwearn yD atytap eOsb ojef ct PDO s used to compSoosuer ce Port s. SCoampaeb eilxitaimesples aSrien:k ( ) used to expose a 's power or a 's power - Rreeqquuiersetm Deantats O. bject RDO Sink Port Negotiate Explicit Contract - Vendor Data Object (VDO) used by a to an. - BIST Data Object B D(O ) used toP HcoYn Lvaeyye vrendor specific information. - ( ) used for compliaBnacttee treysting. - Battery Status Data Object (BSDO) used to convey status iSnofuorrcmeatioSnin. k AlerDt aDtaat aO bOjbecjetct (ADO) used toD iantdai cMatees seavgeents occurring on thMee ssage H oera der. Message Type Table6.6, \"Data Message Types\" May TMhees staygpee oSfo urce Sink bCeaibnlge uPsluegd in a isS hdaelfli nNeodt by the 's Message field and is summarized in Message S. hTahlel Sent by column inSdOicPa tPeasc eknettities whichM essag seend the gMivaeny ( SOP,* Pac koert ); entities not listed issue the corresponding. The \"Valid Start of Packet\" column indicates the s which only be issued in s and the s which be issued in s. Table6.6 Data Message Types Bits 4…0 Type Sent by Description Valid Start of Packet Reserved N/A N/A Reserved Shall Not All values not explicitly defined are 0_0000 Source_Capabilities Source Dual-Role Power Section 6.4.1.5 SOP and be used. Request Sink Section 6.4.2 SOP 0_0001 or See only BIST Tester Source Sink Section 6.4.3 SOP* 0_0010 only See only Sink_Capabilities Sink Dual-Role Power Section 6.4.2 SOP 0_0011, or See Battery_Status Source Sink Section 6.4.5 SOP 0_0100 or See only Alert Source Sink Section 6.4.6 SOP 0_0101 or See only Get_Country_Info Source Sink Section 6.4.7 SOP 0_0110 or See only Enter_USB DFP Section 6.4.8 SOP* 0_0111 or See only EPR_Request Sink Section 6.4.9 SOP 0_1000 See EPR_Mode Source Sink Section 6.4.10 SOP 0_1001 See only Source_Info Source Section 6.4.11 SOP 0_1010 or See only Revision Source Sink Cable Plug Section 6.4.12 SOP* 0_1011 See only 0_1100 Reserved N/A, or See N/A Reserved Shall Not 0_1101…0 All values not explicitly defined are Vendor_Defined Source Sink Cable Plug Section 6.4.4 SOP* _1110 and be used. Reserved Shall Not 1_0000…1 All values not explicitly defined are _1111 and be used.", "tables": ["Table 6.6"], "figures": [], "page_range": [138, 138]}
{"section_path": "6.4.1 Capabilities Message", "start_heading": "6.4.1 Capabilities Message", "content": "CapabilitiesMessage SPR Mode EPR Mode CapabilitiesMessage SPR Mode Section 6.5.15, \"EPR Capabilities Message\" There are twCaop daibstiliintciets Message s: oneE PuRse Md owdheile in and another while in. This section defines the s specific to the and d6e.f4in.e1s.t1he P ower Ds sapetcaif iOc tbo jtehec ts. Section 6.4.1.5, \"SPR Source Capabilities Message\" Section 7.1.3, \"Types of Sources\" Power Data Object PDO CapabilitiesMessage SPR Mode EPR Mode Sections and describes the s ( s) usedP oinw tehre D caotnas Otrbujcetciton of a for both and. Message Header Power Data Object There are three types of s. They contain additional information beyond that encoded in the - Fixed Su ptop liydentify each of the three types of s: - Variable Sup pisly used to expose well-regulated fixed voltage power supplies. - Battery Supply is used to expose very poorly regulated power supplies. VBUS isA uusgemd eton teexdp Pooswe ebra tDteartiae Os bthjeactt can be directly connected to. The- re arSeP tRh PrePeS types of s: Advertise Source is used to expose a power supply whose output voltage can be programmatically adjusted over - SthPeR AVS EdP vRo AltVagSe range and limited by the to a programmable current limit. Advertise Fixed Supply AVS and are used to expose a power supply whose output voltage can be adjusted over the d voltage range but otherwise is equivalent to a ( does not support a Power Dpartoag Orbajmecmtable current limit). Capabilities May Power Role Swap s are also used to expose additional that be utilized, such as in the case of a. Power Data Object Shall Source Capabilities SinkMay Capabilities Request Data Object Power Data Object A lNiset goof toiantee or more Explicsi t Cont braec stent by the to convey its. The then request one of these by returning a that contains an index to a, to a mutually agreeable. PDO Shall Where Maximum and Minimum voltage and current values are given in s these be taken to be absolute valuSeos.urce SinkShall NotNegotiate Attached [USB Type-C 2.4] SourceShall TCahpea bilities and a power level that would allowA tthtae cchuerdrent to exScienekdS thhael ml aximum current supported by their receCpatapcalbeisl iotire tshe pluSgo u(srecee ). TheS ection 4.4, \"C alibmlei tT iytsp eo Dffeerteecdt ion\" to the maximum current supported by its receptacle and plug. A only make a Sreoquurceest from any of the Capabil oitfifeesred by the Sou. rFcoer_ fCuarpthaebri ldietiteasilsM seeses age Sink. Sink_CapabilitiesMessage Power Data Object Tasb elexp6o.7s,e \" Pthoewire rp oDwatear Object\" by sending a. s expose their power requirements by sending a. Both are composed of several 32-bit s (see ). Table6.7 Power Data Object Bit(s) Description Value Parameter Fixed Supply Battery 00b (Vmin = Vmax) Variable Supply Battery 01b B31…30 Augmented Power Data Object APDO 10b (non- ) Capabilities PDO 11b ( ) B29…0 Specific Power are described by the s in the following sections. Augmented Power Data Object APDO PDO Power Data Object APDO The Table6.8, \"Augmented Po w( er Da)t ais O dbejfeicnte\"d to allow support for more than the four types by extending the field from 2 to 4 bits when the B31…B30 are 11b. The generic structure is shown in Table6.8 Augm.ented Power Data Object Bit(s) Description Value Parameter Augmented Power Data Object APDO SPR PPS B31…30 11b ( ) EPR AVS 00b SPR AVS 01b B29…28 Reserved 10b Capabilities APDO 11b B27…0 Specific Power are described by the s in the following sections. PDO Source SPR Capabilities EPRCapabilitiesMessage T6h.4is. s1e.c2ti.o1n lists the typ eFsi oxfe d Ssu a pply P coanw ueser i nD aant a Object or. Table6.9, \"Fixed Supply PDO – Source\" Fixed Supply PDO Section 7.1.3, \"Types of Sources\" describes the (00b). See for the electrical Prerqouviidreerments of thveS paofew5eVr supply. vSafe5VFixed SupplyPower Data Object Fixed SupplyPower Data Object Shall Since all USB s support, the required is also used to convey additional information that is returned in bits 29…23. All other s set bits 2S9o…u2r3ce to zero. Capabilities Voltage Shall Maximum Current Shall Dual-Role Power Capabilities FPoorw ae r Role offering no, the field (B19…10) be set to 5V and the field be set to 0mA. This is used in cases such as a device which offers no in its default Sou orcre when exteSrinnkal power is required to offVeBr UpSower. Voltage Shall Maximum Current Shall WSohuercne a waSnintsk a, copnSsnukmSiunsgp power from, to go to its lowest power state, the field (B19…10) be set to 5V and the field be set to 0mA. This is used in cases where the wants the to draw Tab.le6.9 Fixed Supply PDO – Source Bit(s) Field Description Fixed Supply Fixed SupplyPDO Dual-Role Power Dual-Role Power B31…30 00b - USB Suspend Supported B29 Set to ‘1’ for device. Unconstrained Power B28 Set to ‘1’ if USB suspend is supported. USB Communications Capable USB Communication B27 Set to ‘1’ if unconstrained power is available. Dual-Role Data Dual-Role Data B26 Set to ‘1’ if capable of s capable Unchunked Extended Messages B25 Set to ‘1’ foUrn ac hunked Extende dde Mviecses.age Supported B24 EPR Capable Set to ‘1 if EPR Capable s are supported. Reserved Reserved Shall B23 Set to ‘1 if. Peak Current B22 – be set to zero. Voltage B21…20 Peak Current value. Maximum Current B19…10 Voltage in 50mV units B9…0 Maximum current in 10mA units Dual-Role Power Shall Port Dual-Role Power PR_SwapMessage The Static bit bSeh saeltl when the is capable i.e., supports the Po wer Role. Dual-Role Power Source_CapabilitiesMessage Dual-Role Power TSihniks _iCs aap abilit cieaspaMbeislistayg wehSihcahl l remain fixed for a givDeuna dl-eRvoiclee Preogwaerdrless of the device's present. ISfo tuhrec e_CapabilitiesMe bssiat gise set tDo uoanle- Rino tleh eP ower Sink_ Capabili ttihees MessageShall bit in the also be set to one. If the bit is set to zero in the Explicit Contract USB Communications Capable USB Suspend Supported Sink Shall [USB 2.0] [USB 3.2] [USB4] [PUriSoBr Ttoy pane- C 2.4] [USBBC o 1r. 2w]hen the Explicit Contract Neg obtiita itse sdet to zero, the flag is undefined and s follow the rules for suspend as defined in,,, - USB o Sru spend Supp.o Artfteedr an S ihnaksS bheaelnl [:USB 2.0] [USB 3.2] [USB4] May pSnkSusp PDUSB IHf uthbeM ay pHubSusp flag is set, then the Se ction f7o.2ll.o3w, \" Sthinek Standby\", or rules for suspend and resume. A PDUSB Peripheral draw up to during suspend; a draw up to during suspend (see ). - USB Suspend Supported SinkShall Not [USB 2.0] [USB 3.2] [USB4] May Negotiated If the flag is cleared, then the apply the, or Note: rules for suspend and continue to draw the power. Sink MayWhen USB is suSsopuerncdeed, the USB device state is also suspUeSnBd Seuds.pend Supported RequestMessage Section 6.4.2.5, \"No USB Suspend\" s indicate to the that they would prefer to have the flag cleared by setting t6h.e4 N.1o. 2US.1B. 3Suspend flag in aU nconst rained ( Pseoew er ). Unconstrained Power Shall The bit be set when an external source of power is available that is sufficient to adequately power the system while charging external devices, or when the device's primary function is to charge external deUvnicceosn.strained Power Should To s- et the AC Supply Charg beirt because of an external souSricnek, the external source of power be either: - An, e.g., aP DUSB Hu, dbirectly connected to the. Or, in theS coausrec eof a Uncon:strained Power  A PD Swoiuthrc iets Unconstr abiint esdet P. ower 6.4.1.2.1.M4ultiple PD USs Bal lC woimth mtheuinr ications Capable bits set. USB Communications Capable Shall Source The bit only be set for s capable of communication over the USB data 6lin.4es.1 (e.2.g..1, D.5+/- or SS Tx/Rx )D. ual-Role Data Dual-Role Data Shall Port Dual-Role Data DR_SwapMessage Static Shall Power Role TheD ata Role D buiatl -Role bDea steat when the is Source_Ca cpaapbabillieti ie.es.,M ite ssusapgpeorts tDheu al-Role Da ta. ThisS iisn ak _Capab cialpitaiebsiliMtye swsahgicehS hall remain fixed for a givenD dueavlic-Re orleeg aDradtlaess of the device's present Soor urce_Capa. bIfi ltihteie sMessage D ubaitl -iRs oselet tDoa otane in the Sink_Capabilities Message Sthhae ll bit in the also be set to one. If the bit is set to zero in the Unchunked Extended Messages Supported Shall Port Extended Message Data Size MaxExtendedMsgLegacyLen Unchunked Extended Message The bit be set when the can send and receive 6.4.1.2s. 1w.7ith > EPR Mode Capable bytes in a single,. EPR Capable Static Shall Source EPR Mode The bit is a bit that be set if the is designed to supply more than 100W and operate in. EPR Source Wh- en this bit is set, aSnP R ModeSha:ll EPR_Source_CapabilitiesMessage EPR_Get_Source_CapMessage Operating in only send an in response to an - May EPR M ode Sink EPR Capable Fixed Supply Operating Current IoC RDO The USB Power Delivery is only required toS oduerlicveer the amount of current requested in the field ( ) of an. In some usages however, for example computer systems, where there are short bursts of activity, it might be desirable to overload the for short periods. Section 7.2.8, \"Sink Peak Current Operation\" For example, when aP ceoamkp Cuuterrr esnytstem tries to maSionutracien avAerdavgeer tpisoewer consumption, the higher the peak current, the longer the low cPuorrrtent P(soeret Shall Not ) period neededS itnok maintaiHnu sbuch average power. The field allows a to this additional capability. This capability is intended for direct to connections only and be offered to downstream s via a. Fixed SupplyPDOShall Peak Current Capabilities ShallAdvertise Peak Current Fixed SupplyPDO Table6.10, \"Fixed EPovwereyr Source Peak Curr ent Ca cpoanbtialiitny a\" field. Supplies that want to offer a set ofS ohvaelrlload this througFhix tehde S upplyPDO field in the corresponding (see Source_C)a. Spuapbpilliietise tsh_Eatx dteon ndoetd sMupepssoargt ean oveSreloctaido nc a6p.5a.b1i, lity set these bits to \"0S0obu irnc et_hCea cpoarbrielistpieosn_dEixntegn ded Message \" Sh. aSullpplies that support an exteSnidnekd overload capability specEifxiteedn idne tdh e PCaeapkaCbuilritrieenstS1h…a3ll fields of the Get_Source_Cap_ExtendedMe ssage (see Capabilities Source ) also set these bits to 00b. s wishing to utilize these first send the to determine what, if any are supported by the. Table6.10 Fixed Power Source Peak Current Capability Bits 21…20 Description IoC Source_Capabilities_ExtendedMessage Get_Source_Cap_ExtendedMessage Peak current equals (default) or look at the (send ) IoC IoC Overload : IoC IoC 1. Peak current equals 150% for 1ms @ 5% duty cycle (low current equals 97% for 19ms) 2. Peak current equals 125% for 2ms @ 10% duty cycle (low current equals 97% for 18ms) Capabilities 3. Peak current equals 110% for 10ms @ 50% duty cycle (low current equals 90% for 10ms) IoC IoC Overload : IoC IoC 1. Peak current equals 200% for 1ms @ 5% duty cycle (low current equals 95% for 19ms) 2. Peak current equals 150% for 2ms @ 10% duty cycle (low current equals 94% for 18ms) Capabilities 3. Peak current equals 125% for 10ms @ 50% duty cycle (low current equals 75% for 10ms) IoC IoC Overload : IoC IoC 1. Peak current equals 200% for 1ms @ 5% duty cycle (low current equals 95% for 19ms) 2. Peak current equals 175% for 2ms @ 10% duty cycle (low current equals 92% for 18ms) 3. Peak current equals 150% for 10ms @ 50% duty cycle (low current equals 50% for 10ms) Table6.11, \"Variable Supply (non-Battery) PDO – Source\" Variable Supply Battery PDO Source Section 7.1.3, \"Types of Sources\" describes a (non- ) (10b) for a. See Shall for the electricSahl arellquirements of the power supply. Shall Shall TNhoet voltage fields Minim deufmin eV tohleta rganege that output voSlhtaaglle N ot fall withinM. Tahxiism duomes V nooltt iangdeicate the voltage that wMiilnl ibme usmup Vpoliletda,g eexcept it S hfaallll w Niothtin that range. The absoluMtea vxoimltaugme, Vinocltluadgieng any voltage variation, fall below the field value and exceed the field value. The field vaTluaeb le6.11 V baer ilaebssle t hSaunp 8p0ly% ( noof tnh-eB attery) PDO – Sour fcieeld value. Bit(s) Field Description Variable Supply Variable Supply Battery PDO Maximum Voltage B31…30 01b - (non- ) Minimum Voltage B29…20 Maximum voltage in 50mV units Maximum Current B19…10 Minimum voltage in 50mV units B9…0 Maximum current in 10mA units Table6.12, \"Battery Supply PDO – Source\" Battery Supply PDO Source Section 7.1.3, \"Types of Sources\" describes a (01b) for a. See S fhora ltlhe electrical reqBuaitrteemryents of the power supBpaltyt.eryShall Shall Not MThine ivmolutmag eV foiletladgs e represent tShhea ll Not 's voltage raMnagxei.m Thuem Voltag e be capable of supplying the Power value over the entire voltage range. The absolute voltage, including any voltage variation, fall below the Note: Batte friey lSdu vpaplluyeP aDnOd exceed the field value. The uses power instead of current. SinkMay Battery The monitor the vToaltbalgee6..12 Battery Supply PDO – Source Bit(s) Field Description Battery Supply Battery SupplyPDO Maximum Voltage B31…30 10b - Minimum Voltage B29…20 Maximum voltage in 50mV units Maximum Allowable Power B19…10 Minimum voltage in 50mV units B9…0 Maximum allowable power in 250mW units Shall SPR PPS Mode SPR AVS Mode EPR AVSMode Maximum Current The voltage fields define the output voltage raSnhgael olver which the power supply A bdev eardtjiusestable in 20mV steps iSne ction 7.1.3, \"Ty paensd o 1f0 S0omurVc esst\"eps in both and. The field contains the current the Programmable Power Supply be capable of delivering over the d voltage range. See Table6.13, \"SPR Programmable Power Supply APDO – Source\" SPR PPS APDO Source SPR Mode below describes the (1100b) for a operating in Table a6n.1d3 s u SpPpRly Pinrgo 5grVa umpm toa 2b1leV P. ower Supply APDO – Source Bit(s) Field Description APDO Augmented Power Data Object APDO SPR PPS SPR PPS B31…30 11b – ( ) PPS Power Limited PPS B29…28 00b – B27 Reserved SReet steor ‘v1e’ dwheSnh all Power Limited Maximum Voltage B26…25 – be set to zero. B24…17 Reserved MRaexsiemrvuemd voSlhtaaglel in 100mV increments Minimum Voltage B16 – be set to zero. B15…8 Reserved MRiensiemruvmed voSlthaaglel in 100mV increments B7 Maximum Current – be set to zero. B6 Maximum current in 50mA increments PPSAPDO Sink Directed Charge Battery Sink Battery May Sink The is used primarily for Directed Charge of a in the. When applying a current to the greater than the cable supports, a high efficiency fixed voltage scaler be used in the t6o. 4re.1du.2ce.4 th.1e.c1able current. PPS Power Limited PPS Power Limited SPR PPSSourceShall PPS Power Limited Section 7.1.4.2, \"SPR Programmable Power Supply (PPS)\" When the bit is set, the operate in the same way as if the - M biaty is clear (see Source PDP Optiona wlith the below exceFpigtuiorne: 7.7, \"SPR PPS Constant Power\" supply power that exceeds the 's rated within the operating area in PPS Power Limited. SPR PPSSourceShall Maximum Current Maximum Voltage Advertise APDO When the bit is cleared, the deliver the field value up to thSeP R PPSSourceShall N aost dR iDnO its.Operating Current Maximum Current APDO Operating Current STohuer ce PDP reject an with an field value that is less than or equal to the field value in the even if the requested field value is greater than the 's /requested Output voltage. Table6.14, \"SPR Adjustable Voltage Supply APDO – Source\" SPR AVS APDO Source SPR Mode below describes the (1110b) for a operating in andT asubplepl6y.i1n4g 9SVP Ru pA tdoj u2s0tVa.b le Voltage Supply APDO – Source Bit(s) Field Description APDO Augmented Power Data Object APDO SPR AVS B31…30 11b – ( ) Table6.10, \"Fixed Power Source Peak Current B29…28 SPPeRa Ak VCSurrent 10b – Capability\" Peak Current (see B27…26 Reserved Reserved Shall )) B25…20 Maximum Current 15V – be set to zero. Maximum Current Fixed SupplyPDO For 9V – 15V range: Maximum current in 10mA units equal to the B19…10 field of the 15V Maximum Current 20V Maximum Current Fixed SupplyPDO For 15V – 20V range: MaSxPimRu AmV Scurrent in 10mA units equal to the B9…0 field of the 20V, set to 0 if the maximum voltage in the range is 15V. Peak Current Peak Current Section 6.4.1.2.1.8, \"Peak Current\" Table6.10, \"Fixed Power Source Peak Current Capability\" The field follows the same definition as for the field (see Table6.15, \"EPR Adjustable Voltage Supply APDO – Source\" EPR AVS APDO Source EPR Mode below describes the (1101b) for a operating in anTd asbulpep6ly.1in5g 1E5PVR uApd tjou s4t8aVb.l e Voltage Supply APDO – Source Bit(s) Field Description APDO Augmented Power Data Object APDO EPR AVS B31…30 11b – ( ) Table6.16, \"EPR AVS Power Source Peak Current B29…28 EPPeRa kA VCuSrrent (Source EPR AVS) 01b – Capability\" Peak Current (see B27…26 Maximum Voltage ) B25…17 Reserved MRaexsiemrvuemd voSlhtaaglel in 100mV increments Minimum Voltage B16 – be set to zero. PDP PDP B15…8 Minimum voltage in 100mV increments B7…0 in 1W increments PDP Shall AVSPort PDP The Sectio fnie 1ld0.2.3.3, c\"oOnpttaioinn athl Ne orm ative' sE xtend.ed Power Range (EPR)\" Figure 10.6, \"Valid EPR AVS Operating Region\" PDP AVSAPDO See and EPR AVS Operating Current IoC AVSRDO The USB Power Delivery is only required to deSloivuerrc ethe amount of current requested in the field ( ) of an. In some usages however, for example computer systems, where there are short bursts of activity, it might be desirable to overload the for short periods. Section 7.2.8, \"Sink Peak Current FOopre reaxtaimonp\"le, whePne aa kco Cmuprruetenrt s(ySsotuermce t rEiPesR t Ao VmSa)intain averageS poouwrceer coAndsuvemrtpitsieon, the higher the peak current, the longer the low current period needed to maintain such average power (see ). The field allows a to this additional capability. This Port Charger Shall Not Sink Hub capability is intended for direct to connections only and be offered to downstream s via a.EPR AVSAPDOShall Peak Current (Source EPR AVS) CapabilitiesShallAdvertise Peak Current (Source EPR AVS) EEPveRr Ay VSAPDO T able6.c1o6n, t\"aEiPnR a AVS Power Source Peak Current Ca fpiealbdi.l Situyp\"plies that want to offer a set of overload S hall this through the EPR AVSAPDO field in the corresponding (see Sour. cSeu_pCpalpieasb tihliatti edso_ Enxotte snudpepdort an Moveesrslaogaed capaSbeiclittiyo n 6.5.1 s, e\"tS othuercsee_ bCiatsp atob i0li0tibe si_nE txhtee ncdoerdre Mspeossnadgien\"g Shall. Supplies thaSti nskupport an extended oveErxloteandd ceadp Caabpilaitbyi lsitpieesciSfiheadl lin the PeakCuGrerte_nSto1u…rc3e f_iCealdps_ Eofx ttehne dedMessage Capabilit (iessee Source ) set these bits to 00b. s wishing to utilize these first send a to determine what, if any are supTpaobrltee6d.b1y6 t hEeP R AVS.Power Source Peak Current Capability Bits 21…20 Description IoC Source_Capabilities_ExtendedMessage Get_Source_Cap_ExtendedMessage Peak current equals (default) or look at the (send ) IoC IoC Overload : IoC IoC 1. Peak current equals 150% for 1ms @ 5% duty cycle (low current equals 97% for 19ms) 2. Peak current equals 125% for 2ms @ 10% duty cycle (low current equals 97% for 18ms) Capabilities 3. Peak current equals 110% for 10ms @ 50% duty cycle (low current equals 90% for 10ms) IoC IoC Overload : IoC IoC 1. Peak current equals 200% for 1ms @ 5% duty cycle (low current equals 95% for 19ms) 2. Peak current equals 150% for 2ms @ 10% duty cycle (low current equals 94% for 18ms) Capabilities 3. Peak current equals 125% for 10ms @ 50% duty cycle (low current equals 75% for 10ms) IoC IoC Overload : IoC IoC 1. Peak current equals 200% for 1ms @ 5% duty cycle (low current equals 95% for 19ms) 2. Peak current equals 175% for 2ms @ 10% duty cycle (low current equals 92% for 18ms) 3. Peak current equals 150% for 10ms @ 50% duty cycle (low current equals 50% for 10ms) PDO Sink SPR EPRCapabilitiesMessage T6h.4is. s1e.c3ti.o1n lists the typ eSsi onf k Fisx ae d S ucapnp ulsye iPn oanw er oDr ata Object. Table6.17, \"Fixed Supply PDO – Sink\" SinkFixed Supply PDO Section 7.1.3, \"Types of Sources\" SinkShall Voltage Operational Current describes the (00b). See for the electrical requirements of the power supply. The set the field to its required vSoilntakge and the field to its required opeSraintking current. Required operating current is defined as the amount of current a given device needs to be functional. This value could be the maximum current the will ever require oCro cnosuulmde bre sufficienvt Stoa foep5eVrate the inv oSnaef eo5f VitsF imxeodd Seus popfl oypPeorwateiro Dn.ata Object Fixed SupplyPower Data Object SSihnaclel all USB s support, the required is also used to convey additional information that is returned in bits 29 through 20. All other s Ssientk bits 29…20 to zero. Source Voltage Shall Operational Current Shall For a requiring no power from the, the field be set to 5V and the field be set to 0mA. Table6.17 Fixed Supply PDO – Sink Bit(s) Field Description Fixed Supply Fixed SupplyPDO Dual-Role Power Dual-Role Power B31…30 00b - Higher Capability B29 Set to ‘1’ if supported Unconstrained Power B28 Set to ‘1’ if Higher Capability supported USB Communications Capable USB Communication B27 Set to ‘1’ if Unconstrained Power supported Dual-Role Data Dual-Role Data B26 Set to ‘1’ if s Capable Fast Role Swap USB Type-C [USB Type-C B25 2.4] required current (see also Value Description ): Fast Role Swap required USB Type-C Fast Role Swap Current Port B24 23 00b not supported (default) 01b Default USB 10b 1.5A@5V Reserved R1e1sberve3d.0AS@ha5lVl Voltage B22 20 – be set to zero. Operational Current B19…10 Voltage in 50mV units B9…0 Operational current in 10mA units Dual-Role Power Shall Port Dual-Role Power PR_SwapMessage Static Shall Power Role The Dual-Role Powe brit be set when theS ourc ies _CapabilitiesMe scsaapgaeble i.eD.,u saulp-pRoorlets P thoew er. TSihniks _iCs aap abilit cieaspaMbeislistayg wehSihcahl l remain fixed for a givDeuna dl-eRvoiclee Preogwaerdrless of the device's present. ISfo tuhrec e_CapabilitiesMe bssiat gise set tDo uoanle- Rino tleh eP ower Sink_ Capabili ttihees MessageShall bit in the also be set to one. If the bit is set to zero in the Sink vSafe5V Higher Capability Shall In the case that the needs more than (e.g., 15V) to provide full functionality, then the Unconstrained Power Shall The bit be set when an external source of power is available that is sufficient to adequately power the system while charging external devices, or when the device's primary function is to charge external devices. Unconstrained Power Should To s- et the AC Supply Charg beirt because of an external souSricnek, the external source of power be either: - An, e.g., aP DUSB Hu, dbirectly connected to the. Or, in theS coausrec eof a Uncon:strained Power  A PD Swoiuthrc iets Unconstr abiint esdet P. ower 6.4.1.3.1.M4ultiple PD USs Bal lC woimth mtheuinr ications Capable bits set. USB Communications Capable Shall Sink The bit only be set for s capable of communication over the USB data l6in.4es.1 (e.3.g..1, D.5+/- or SS Tx/Rx )D. ual-Role Data Dual-Role Data Shall Port Dual-Role Data DR_SwapMessage Static Shall Power Role TheD ata Role D buiatl -Role bDea steat when the is Source_Ca cpaapbabillieti ie.es.,M ite ssusapgpeorts tDheu al-Role Da ta. ThisS iisn ak _Capab cialpitaiebsiliMtye swsahgicehS hall remain fixed for a givenD dueavlic-Re orleeg aDradtlaess of the device's present Soor urce_Capa. bIfi ltihteie sMessage D ubaitl -iRs oselet tDoa otane in the Sink_Capabilities Message Sthhae ll bit in the also be set to one. If the a bit is set to zero in the Fast Role Swap required USB Type-C Current Shall Sink Fast Role Swap The field indicate the current level the will require after a Initial Source hSahsa blel eNno tperformed.Fast Role Swap Request Fast Role Swap required USB Type-C Current The transmit a if the field is set to zero.New Source vSafe5V R Shall USB Type-C New Sink New Source Shall Not Initially whFeanst t Rhoel e Swap apRplies it willN heawv eS oud r acseserted but Fast R porloev Siwdea pthAeM S Secti ocunr 6r.e3n.1t9, i\"nFdRi_cSawteadp bMye tshsea ge\" in this fUieSldB. TIfy tphee-C is not ableR to Sshuaplplly this level of current, it perform a Fast Role. W Swheanp rp e iqsu aisrseedr tUeSdB b Ty ythpee -C Current during the (see ), the value of current indicated by p be the same or greater than that 6in.d4ic.a1t.e3d. i2n the Variable Supply (non-Batter fyie)ld P. ower Data Object Table6.18, \"Variable Supply (non-Battery) PDO – Sink\" Variable Supply Battery PDO Sink Section 7.1.3, \"Types of Sources\" describes a (non- ) (10b) used by a. See Shall for the electrical requSiirnekments of the power supplyO.perational Current Shall Sink The voltage fields be set to the outpSuhta vllo Nltoatge range that thMe inim ruemqu Viroeltsa tgoe operate. The Shall Not fieMlda ximu bme sVeotl ttoa gthee operational current that the requires at the given voltage range. The absolute voltage, including any voltage variation, fall below the Sink field value and exceed the Sink field value. Required operating current is defined as the amount of current a given device needs to be functional. This value could be the maximum current the will ever require or could be sufficient to operate the T ianb olene6.o1f8 it sV maroidaebsl eo fS ouppeprlayt i(onno.n-Battery) PDO – Sink Bit(s) Field Description Variable Supply Variable Supply Battery PDO Maximum Voltage B31…30 01b - (non- ) Minimum Voltage B29…20 Maximum voltage in 50mV units Operational Current B19…10 Minimum voltage in 50mV units B9…0 Operational current in 10mA units Table6.19, \"Battery Supply PDO – Sink\" Battery Supply PDO Sink Section 7.1.3, \"Types of Sources\" describes a (01b) used by a. See for the electrical requirements of the power supply. Shall Sink Operational Power Shall Sink The voltage fields be set to tShhea ollu Ntpoutt voltage rangeM thianti mthue m Vo rletaqgueires to operate. ThSeh all Not Mfiealdxi mum bVeo lsteatg teo the operational power that the requires at the given voltage range. The absolute voltage, including any voltage variation, fall below the field value and exceed the Note: B faietltde rvya Sluuep.p lyPDO Only the uses power instead of current. Sink Sink Required operating power is defined as the amount of power a given device needs to be functional. This value could be the maximum power the will ever require or could be sufficient to operate the in one of its modes of operation. Table6.19 Battery Supply PDO – Sink Bit(s) Field Description Battery Supply Battery SupplyPDO Maximum Voltage B31…30 10b - Minimum Voltage B29…20 Maximum voltage in 50mV units Operational Power B19…10 Minimum voltage in 50mV units B9…0 Operational Power in 250mW units Section 7.1.3, \"Types of Sources\" See for the eSlheactlrlical requirements of the power supply. Sink The Maximum and Minimum voltage fields be set to the output voltage range that the requires to o6p.4er.1at.e3..4.1 SPR Programmable Power Supply APDO Table6.20, \"SPR Programmable Power Supply APDO – Sink\" SPR PPSAPDO Sink SPR Mode Maximum Current Shall Sink below describes a for a operating in and consuming 21V or less. ThSien k Directed Charge field be set to the maximum current the requires over the voltage range. The maximum current is defined as the maximum amount of current the device needs to fully support its fTuanbclteio6n. 2(e0. g S., PR Programmable P)o.wer Supply APDO – Sink Bit(s) Field Description APDO Augmented Power Data Object APDO SPR PPS SPR PPS B31…30 11b – ( ) B29…28 Reserved 0R0ebs e–r ved Shall Maximum Voltage B27…25 – be set to zero. B24…17 Reserved MRaexsiemrvuemd voSlthaaglel in 100mV increments Minimum Voltage B16 – be set to zero. B15…8 Reserved MRiensiemruvemd voSlthaaglel in 100mV increments Maximum Current B7 – be set to zero. B6 0 Maximum current in 50mA increments Table6.21, \"SPR Adjustable Voltage Supply APDO – Sink\" SPR AVS APDO Sink SPR AVS Mode Maximum Current 15V Maximum Current 20V SPR AVSAPDO Sink below describes the (1110b) for a operating in. The / fields in the for the is defined as the mTaxaibmleum6. 2cu1r rSePnRt tAhdej duesvtaicbel en eVeodlst atoge f uSlulyp spulpyp AoPrDt iOts –f uSninctkion. Bit(s) Field Description APDO Augmented Power Data Object APDO SPR AVS B31…30 11b – ( ) Reserved Reserved Shall B29…28 SPR AVS 10b – B27…20 Maximum Current 15V – be set to zero. Maximum Current Fixed SupplyPDO For 9V – 15V range: Maximum current in 10mA units equal to the B19…10 field of the 15V Maximum Current 20V Maximum Current Fixed SupplyPDO For 15V – 20V range: MaSxPimRu AmVS Current in 10mA units equal to the B9…0 field of the 20V, set to 0 if the Maximum voltage in the range is 15V. Table6.22, \"EPR Adjustable Voltage Supply APDO – Sink\" EPR AVSAPDO Sink EPR AVS Mode PDP EPR AVSAPDO Sink PDP below describes a for a operating in. The field in the for the is defined as the the device needs to fully support its function. Table6.22 EPR Adjustable Voltage Supply APDO – Sink Bit(s) Field Description APDO Augmented Power Data Object APDO EPR AVS B31…30 11b – ( ) Reserved Reserved Shall B29…28 EPR AVS 01b – Maximum Voltage B27…26 – be set to zero. B25…17 Reserved MRaexsiemrvuemd voSlhtaaglel in 100mV increments Minimum Voltage B16 – be set to zero. PDP PDP B15…8 Minimum voltage in 100mV increments B7…0 in 1W increments SPR CapabilitiesMessage Source_CapabilitiesMessage Sink_CapabilitiesMessage Shall Power Data Object vSafe5V SPR CapabilitiesMessageShall Port An (Power Data Object Power Da otra Object SPR C apabiliti)e sMess haagveeS ahta llelast one for. The also contain the sending 's information followed by up to 6 additional s. s in an be sent in the followvinSga foer5dVerF:ixed SupplyPDOShall (A)PDO 1) The Fixed Supp lyPD O always bSeh tahlel first. 2) The rBeamttaeirnyi nSug pplyPDO s, ifS phraelslent, be sent in voltage order; lowest to highest. 3) The Variable Supply s ifB partteesreyntP DO be sent in MShinailml um voltage order; lowest to highest. 4) The (non- ) s, if present, be sent in Minimum voltage order; lowest to highSePstR. AVSAPDO Shall 5) The, if present, AP bDeO sent. Shall 6) The Programmable Power Supply s, if present, be sent in Maximum voltage order, lowest to Note: highesEt.PR CapabilitiesMessage Section 6.5.15.1, \"EPR Capabilities Message Construction\" The construction is defined in. Figure 6.12, \"SPR Capabilities Message Construction\" SPR CapabilitiesMessage Message Fixed Supply PDO PDO Source Capabilities describes the construction of an. The will always have at least one 5V and may have up to six more s depending on the. Figure 6.12 SPR Capabilities Message Construction Header PDO PDO PDO PDO PDO PDO PDO 001b 010b 011b 100b 101b 110b 111b Figure 6.13 Example Capabilities Message with 2 Power Data Objects Header Fixed 5V Fixed 9V No. of Data Objects= 2 PDO PDO Source Figure 6.13, \"Example Capabilities Message with 2 Power Data Objects\" Number of Data Objects vSafe5V In the 27W as shown in, the Power Data Obje cfiteldP iDs O2: Aug mpleunst eodn eP oowtheerr D vaotlata Ogbej.ect APDO Message Header Message Type SPR CapabilitiesMessage s ( ) and s ( ) are identified by the 's Source Source_CapabilitiesMessage PortCapabilities Get_Source_CapMessage Section 6.5.15.2, \"EPR_Source_Capabilities Message\" EPR Source Capabisli tsieensdM ae ssage either as part of advertising, or in response to a. See for information about Hard Resse.t Source PortShall Source_Capabilities Message SourceCapabilityTimer Advertise Shall Sink PFoorlltowinAgt taa chment, aS poouwrceerS-ohna lelvent or plug insertion event, a nCapsCou ntSo usernced_ Ca apabilitiesMessage G oaoftdeCrR eCveMrye ssage timeout as an ments that be interpreted by the on. The continue sending a minimum of s until a So urce_Ca pisa rbeicleitiiveesdM. essageShall Port Add- itionally, a Source Port PE_SRC_ Ready only be sent by a in the following cases: Port By the from the state upon a change in its ability to supply power to this -.Source Port Dual-Role Power Port Get_Source_CapMessage - BOyp tai onally S ooru rce Port PE_S iRnC r_eRsepaodnyse to a. Port Source Capabilities Port by a from the state when available power in a multi- system Sourcec hPaonrtgSehs,a elvlen if the Capabilities for this haPvoew neor tD cahtaan Ogebdje.ct Table6.7, \"Power Data Object\" Source_CapabilitiesMessage Figure 6.13, \"Example Capabilities Message with 2 Power AD ata Objects\" Pow erre Dpoartta iOtsb ject in a series of 3S2o-ubricte Port Capabilitiess (see Dual Role Po)w aesr part of a Sink (see ). s are used to convey a 's to provide power including Power pDoarttas OpbrejescetnSthlya ollperating as a. Source Battery Fixed Supply Number of Data Objects Message HeaderShall Each Power Da ta Ob djeecstcribe a specific Mess acgaep aHbeialidtyer such aDsa at a Messa g(ee.g., 2S.8o-u4r.1ceV) Sohra al l (e.g., 15V)P aotw ae mr Daaxtima Oubmje acltlowable currevnSta. Tfeh5eV SourceShall Not field in thPeo wer Data Object define the nuFmixbeedr S oufp ply Variable Supplsy thBaatt ftoerllyo Swu tphpely in a Shall. All s P omwienri mDaaltlay oOfbfejerc otne that reports. SAo urce offer multiple s of the same type (,, ) and the same voltage but instead offer one with the highest available current for that capability and voltage. Sink VBUS [USB Type-C 2.4] Sink Source VCONN VBUS Shall Advesr twisiethv SAacfcee5ssVory SuppoMrta dxoim nuomt s oCuurrcree nt (see ). Powse rw Ditaht aA Occbejescstory Support are still considered s wSihnekn sourcing to an Accessory even tPhEo_uSgRhC _Rea disy not applied; in thisA lctaesren athtee yM ode with the field set to 0mA in the first. The main purpose of thSisin iks to SePnRab Mleo dtheeS hall with AccessoryS Souuprpceo_rCt atop agbeti liintiteos tMhee ssage StateS thoa elnlter an Reque.st Message Source Capabilities ShallRe-negotiate SAo urce in A devvearlutiastee eCvaeprayb ilities it receives and respond with a. If its power consumption exceeds the it so as not to exceed the Sink's mSoPsRt Mreocdeently Explicidt Contract. PPSAPDO Shall PPSAPDO tPPSRequest A, in, in an with a, periodically re-request the at least eve- ry Sink until either: PPSAPDO - The rePqouweesrt sR soolem Sewthaipng other than. - There is a Hard Reset. - There is aE rror Recove.ry Sink TEhPeRre M iso de. Source_CapabilitiesMessage Get_Source_CapMessageShall Not RequestMessage Sink EPR Mode Source_CapabilitiesMessage A Ge itn_S ource_Ca pthMate srseacgeeives aS inkShall H ard Reset in response to a respond with a. If a in receives a, not in response toS ao urce R, etqhue estM essag einitiate a. RDOShall Hard ResetSignaling RequestMessage RDO tPPSTimeout SourceShall A that has accepted a with a Programmable issue if it has not received a with a Programmable within. The discontinue this beh- avior after: RequestMessage Fixed Supply Variable Supply Battery SupplyRDO - Receiving aP ower Role Swap with a, or. - There is a Hard Reset. - There is aE rror Recove.ry 6.4.1.T6here is SPR Sin. k Capabilities Message Sink Sink_CapabilitiesMessage Section 6.4.2, \"Request Message\" Get_Sink_Cap Message Section 6.5.15.3, \"EPR_Sink_Capabilities Message\" CapabilitiesMessage s send a (see ) in response to a. See Sink vSafe5V forV mBUoSre informatioSinn akbWouati ttChaep Timer. Source_CapabilitiesMessage Shall Hard Reset AttachedSource A USB Power Delivery capable, uponS oduerteccet_iCnagp abilities oMn essag eand after a Negotiat itoimneout without seeing a, send a. If the is USB Power DeSliinvke rPyo cratpSahballel, it responds by sending s thus alloPwoinwge rp oDwatear Object sS teoc tbieogni n. Table6.7, \"Power Data Object\" Sink_CapabilitiesMessage AG et_Sink_Ca pMe srseapgoert powFeigr ulerev e6l.s1 3it, i\"sE axbalme ptole o Cpaepraabteil iattie isn M a essesraigees owfi t3h2 2-b Pito wer Data Objects\" s (see Source PortCa)p. aTbhileistiee sare returned as paProtw oef ra Data Object Fi xed Suppl iyn Vraesripaobnles eS utop pal y Battery Supply (see Power Data Object Sink Port ). This is similar to that used for Dua l-Role Powe rw Pitohr tequivalent Sousr fcoer, and as defined in this section. s are used to convey the 's operational power requiPreomweenr tDsa itnac lOubdjiencgt Shall s prSeisnekntly operating as a. Battery Supply Fixed Supply Number of Data Objects Message HeaderShall Each Power Data O bject describe a specifMice ssag eo pHeeraadteiornal pDoawtear M leevsesal,g seuch as a (e.g., 2.8 4.1V) or a (e.g., 15V). The field in the define the numSibnekr oSfh all s thatP foowlloerw D tahtea Object in a. Sink SinkShall Not Power Data Object Fixed Supply Variable Supply Battery Supply All s Sh amllinimally offer one Power Data Object with a power level at which the can opSeinrakte. A offer multiple s of the same type (,, ) and the same voltage but instead offer one with the highest available current for that capability and voltSaingek. Shall Power Data Object vSafe5V Shall All s include one that reports even if they require additional power to operate fully. In the case where additional power is required for full operation the Higher Capability bit be set. Dual-Role Power Source_CapabilitiesMessage Section 6.4.1.5, \"SPR Source Capabilities Message\" PortCapabilities Source Dual-Role Power Source_Capabili tdieevsiMceess ssaegned a Get_So urce_Cap (Mseees sage )D ausa pl-aRrot loe fP aodwveerrtising Sink_Ca wpahbeinl iotipeesrMateinssga igne Se rcotlieo.n 6.4.1.6, \"SPR Sin kd Cevaipcaebsi slietineds a Message\" Ge tin_S rienskp_oCnaspeM toe sas age regardless of their present operating role. Similarly devices send a (see 6.4.1.6). 2in response t o M a anagemen t of th ere gPaordwleessr o Rf tehseier rpvreesent operating role. Section 8.2.5, \"Managing Power Requirements\" This section has been removed. Refer to.", "tables": ["Table 6.9", "Table 6.11", "Table 6.12", "Table 6.13", "Table 6.14", "Table 6.10", "Table 6.15", "Table 6.16", "Table 6.17", "Table 6.18", "Table 6.19", "Table 6.20", "Table 6.21", "Table 6.22", "Table 6.7"], "figures": ["Figure 6.12", "Figure 6.13"], "page_range": [139, 154]}
{"section_path": "6.4.2 Request Message", "start_heading": "6.4.2 Request Message", "content": "RequestMessageShall Sink Negotiation Request Data ObjectShall Sink Shall A Sou rce_C baep saebnitl ibtiye as Mess taog reequesSt epcotwioenr 8 d.3u.r2i.n2g, \" tPhoew reerq uNeesgto pthiaatsioen o\"f an SPR poSwPeRr M ode. TRheqe uestMessageShall be returned by thSei nkR emquaeksint gD aat rae Oqbujeesctt for poSwhaelrl. It be sPenowt ienr rDeastpao Onsbeje tcot the most recent (see ) when in. A return one and only one that identify the beinSgo ruerqcueeSshteadll. RequestMessage AcceptMessage WaitMessage RejectMessage Section 6.9, \"Accept, Reject and Wait\" The respond to a with an, a or a (see RequestMessage ). Source_CapabilitiesMessage Fixed SupplyPDO Sink Operating TCuhrer ent includes the requested power level. For example, if the includes a that offers 9V @ 1.5A and if the only wants 9V @ 0.5A, it will set the field to 50 (i.e., 10mA * 50 = 0.5A). The- request Fuisxeesd a S dupifpfelyrePnotw foerrm Daatt ad eOpbejencdting onV athriea bklien dSu opf pploywPoewr reerq Duaetsat eOdb.ject Table6.23, \"Fixed and Variable Request Data Object\" The and share a common format - showBna titne ry SupplyPower Data Object. Table6.24, \"Battery Request Data Object\" The uses the format shown in - PPS. Request Data Object Table6.25, \"PPS Request Data Object\" - The AVS Request Data Object's format is shown in Table6.26, \"AVS Request Data Object\". RequTehset Data Object 's formatE iPs Rs_hRoewqnu eins tMessage EPR Mode. Section 6.4.9, \"EPR_Request Message\" EPR_RequestMessage The s are also used by the when operating in. See Source EP foRr M inofdoermation about thRee uqsuee ostf tMhees sageShall Ha.rd Reset A operating in Ta bthleat6 r.2ec3e iFviexse ad and Var iable Re quest i nDiatitaat eO ab ject. Bit(s) Field Description Object Position Reserved Shall Not Object position (0000b and 1110b…1111b are B31…28 Giveback Deprecated Shall and be used) Capability Mismatch Capabilities Mismatch B27 GiveBack flag = 0 - and be set to zero. USB Communications Capable USB Communication B26 Set to ‘1’ for a No USB Suspend B25 Set to ‘1’ if s Capable Unchunked Extended Messages Supported Unchunked Extended Message B24 Set to ‘1’ if requesting No USB Suspend EPR Capable EPR Capable B23 Set to ‘1’ if s Supported Reserved Reserved Shall B22 Set to ‘1’ if Operating Current B21…20 – be set to zero. Maximum Operating Current B19…10 Operating current in 10mA units B9…0 Maximum Operating current 10mA units Table6.24 Battery Request Data Object Bit(s) Field Description Object Position Reserved Shall Not Object position (0000b and 1110b…1111b are B31…28 Giveback Deprecated Shall and be used) Capability Mismatch Capabilities Mismatch B27 GiveBack flag = 0- and be set to zero. USB Communications Capable USB Communication B26 Set to ‘1’ for a No USB Suspend B25 Set to ‘1’ if s Capable Unchunked Extended Messages Supported Unchunked Extended Message B24 Set to ‘1’ if requesting No USB Suspend EPR Capable EPR Capable B23 Set to ‘1’ if s Supported Reserved Reserved Shall B22 Set to ‘1’ if Operating Power B21…20 – be set to zero. Maximum Operating Power B19…10 Operating Power in 250mW units B9…0 Maximum Operating Power in 250mW units Table6.25 PPS Request Data Object Bit(s) Field Description Object Position Reserved Shall Not Object position (0000b and 1110b…1111b are B31…28 Reserved Reserved Shall and be used) Capability Mismatch Capabilities Mismatch B27 – be set to zero. USB Communications Capable USB Communication B26 Set to ‘1’ for a No USB Suspend B25 Set to ‘1’ if s Capable Unchunked Extended Message B24 Unchunked Extended Messages Supported Set to ‘1’ if requesting No USB Suspend Set to ‘1’ if s B23 EPR Capable EPR Capable Supported Reserved Reserved Shall B22 Set to ‘1’ if Output Voltage B21 – be set to zero. Reserved Reserved Shall B20 9 Output voltage in 20mV units. Operating Current B8 7 – be set to zero. B6 0 Operating current 50mA units. Table6.26 AVS Request Data Object Bit(s) Field Description Object Position Reserved Shall Not Object position (0000b and 1110b…1111b are B31…28 Reserved Reserved Shall and be used) Capability Mismatch Capabilities Mismatch B27 – be set to zero. USB Communications Capable USB Communication B26 Set to ‘1’ for a No USB Suspend B25 Set to ‘1’ if s Capable Unchunked Extended Message B24 Unchunked Extended Messages Supported Set to ‘1’ if requesting No USB Suspend Set to ‘1’ if s B23 EPR Capable EPR Capable Supported Reserved Reserved Shall B22 Set to ‘1’ if B21 – be set to zero. Output Voltage Shall Output voltage in 25mV units, the least two B20 9 significant bits be set to zero making the Reserved Reserved Shall effective voltage step size 100mV. Operating Current B8 7 – be set to zero. B6 0 Operating current 50mA units. Object Position Shall Source_CapabilitiesMessage EPR_Source_CapabilitiesMessage RDO Fixed SupplyPDO The value in the Sfioeuldr ce_Ca pinadbiiclaittiee wsMhiecshs aogbejectM iens tshaeg e Header EPR_Sou rce_Capa obri lities Message Extended Messa ge Heade trhe refers to. The value 0001b alwayPsD iOndicates the 5V as it is the first object following the ’s or Obje’sc t Position. The numbeSrh 0a0l1l0b refers to the next SP aRn d(A s)oP DfoOrthS.PR (A)PDO May Request EPR_RequestMessage Shall The EPR (A)PDO fEiePldR v(Aal)uPeDsO 00S0h1abl…l 0111b only be useEdP Rto_ Rreefqeur etsot Message s. Object Possit ion be requReesqteude bstyM eietshsearg ae or an. ObjSeocut rpcoesSithioanlls 1000Hba…r1d0 R1e1sbe tSign aolninlyg be used to refer to s. s only be requested by an. If the field 6in. a4.2.2 GcoinvteaiBnsa ac vkal uFel gargea t(eDr tehapnr 0e1c1a1bt,e thde) send. Giveback Deprecated Shall T6h.4e.2.3 flag ha sC baeepna bility M iasnmd atc hbe set to zero. Capabilities Mismatch Source Sink Source Capabilities SinkShall Valid Source Capabilities ASh all Capability oMccisumrsa wtchhen the Secti ocann 8n.2o.t5 s.2a,t i\"sPfoyw theer Capa'sb ipliotwy Meri srmeqautcirhe\"ments baseCda poanb tihlieti es Mismatch it has offered. In this case thSein kSh all No mtake a Cap arbeqiluiteys tM firsomma tthceh offered and set the bit (see ). When a Si nckondition doReesq nuoest te Dxaistta, tOhbej ect Cap saebt itlhiety Mismatch bit. Source Capabilities Message Source When a returns a with the bit set in response to a, it indicates that it wants more power than the is currently offering. This can be due to either a sSpoeucricfeic voltageP tohratt Rise npootr bteedin PgD oPffered or there is nPoot rstu Pffriceiseennt tc uPrDrPent forS tehceti voonl 6ta.4g.e1s1 t, h\"Saot uarrcee b_Ienifnog M oeffsesraegde.\" Shall Capability Mismatch Source tCapabsi wlithieossMe ismatchResponse is lesPs Sth_RanD YthMeiers sageShall (seeS ource CapabilitiesMessage ) respond to the Requests with the bit set as follows. The within of the send a new that offers either: Source Capabilities Sink 1) The set of to minimally satisfy the 's requirements based on what it actually requirSeins kfo_Cr afuplal boiplietriaetsi_oEnx tbeyn edveadluMateisnsga gthee: Sink a) Sink_Capabilities EPR_Sin k_Capab(iifl istuiepspMoretsesda gbey the ) and/or b) Source Capab iolirt ies Source. Port Present PDP 2) The set of Source Should N othte canS osuurpcpel yC aapt athbiisli ttiiemseM beasssaedge on the. Request Message Capability Mismatch Port Present PDP To prevent looping, s send a new in response to subsequent with the Source flag set until its Capability Mi scmhaantgcehs. Shall Not Source CapabilitiesMessage PDP Sink SOinncke C aa GpuabairlaitnieteseMde CsasapgaebilityS ink_Cap thaabti lhitaise rse_Espxtoennddeedd toM ae ssage, it Sour scuebsequently send out another May at a lowSeirn k Ca puanblielsitsi etshMe pesoswageer reqSuinirke_dC bayp athbeil ities _(Eaxs tiennddiceadteMde isns aitgse or ) has also been reduced. s wishing to manage their power periodically check the or tNoo dtee:termineS owuhrceeth Cearp tahbeisliet iheasvMee cshsaagneged. Source_CapabilitiesMessage EPR_Source_Capabilities Message Sink CapabilitiesMessage Sink_CapabilitiesMessage EPR_Sink_Capabilities AM essage Request R erqefueersst tMo aes sage EPR_Reques t or an, and a refers to a or Va, lidRequ erestfeMrse stsoa ag e or depending on operating mode. In t- his conteOxtb aj ect Po sition Shall means the following: Source CapabilitiesMessage The field contain a reference to an object that was present in the last received - Operating Cur rent Op.erating Power Shall (A)PDO Source CapabilitiesMessage The / field contain a value which is less than or equal to the maximum current/power offered by the selected the. USB Communications Capable Shall Sink [USB 2.0] [USB 3.2] [USB4] USB Communications Capable TShhae ll Sink flag be set to one when the has USB data lines and is capable of commu[UniScBa t2in.0g] u[sUinSgB e 3it.2h]er [USB4], or protocoSlosu. Trchee flag be set to zero when thUeS B Co mdomesu nnoicta htaiovne sU CSaBp daabtlae lines or is otherwise incapabSlein okf communSicoautrinceg using either, or protocols. This is used by Sthinek to determine operation in certain cases such as USB suspend. If the flag has been set to zero by a, then the needs t6o. b4e. 2aw.5are that USB SNuosp eUnSd Bru lSesu csapnneont bde observed by the. No USB Suspend May Sink Source Explicit Contract Sink The U flSaBg Comm buen siecta btiyo nthe to indicate toB athttee ry that this device is requesting to continue its during USB Suspend. s setting this flag typically have functionality that can use power for purpSoosuersc oether than e.g., foSr hcohuarldging a.Source_CapabilitiesMessage USB Suspend Supported The uses this flag to evaluate whether it re-issue the with the Unchunked Extended Messages Supported Shall Port Extended Message Data Size MaxExtendedMsgLegacyLen Unchunked Extended Message The bit be set when the can send and receive 6.4.2.7s with EP >R Mode Capable bytes in a single,. EPR Capable Shall Sink EPR Mode Sink EPR Mode Shall RequestMessage EPR Capable The RDO bit indicate whether or not the is capable of operating in. When the 's ability to operate in changes, it send a new with the updated bit set 6in. t4he.2.8. Operating Current Operating Current Request Data ObjectShall Sink Explicit Contract RequestMessage EPR_RequestMessage Operating Current TShhae ll field inS itnhke be set to the highest current the will draw during the. A new or, with an updated value, O bpee risastuinegd Cwuhrerneenvter the 's power needs changRe.e quest Data Object Sink Source Current Limit Source The S hfiaellld in the SPR Programmable Operating Current is used in additioSni nbky the to request the for the SourceShall level it needs. When the request is accepted the Oper'as toiuntgp Cuut rcurerrnetnt supplied into any load be less than or equal to the value. When the attempts to consume more current, the reduce the output voltage so as not to exceed the valueO.perating Current AVSRequest Data ObjectShall Sink Explicit Contract The field in the be set to the highest current the will draw Nduortien:g the Source AVS M.o de SPR Source PPS Mode Sink A in, unlike the in, does not support current limit; the is ReqrueespstonsEiPblRe_ nRoetq tuoe tsatkMe emssoargee current than it reqOupeestreadt.i ng Current Shall Sink A new /, with an updated value, be issued whenever the 's power neeOdps ecrhaatnigneg. Current Shall Not Source_CapabilitiesMessage EPR AVS Operating Current Shall Not PDP The value in the field exceed the value in the Maximum Current field of the. For, the field exceed the / Output voltage rounded dSohwanll to the nearesFt i5x0ed m SAu.pply Variable Supply AVSRDO T6h.i4s.f2ie.ld9 appl y Mto athxe imum Op, erating Cu,r Prreognratm mable and s. Deprecated Source Maximum Operating Current RequestMessage TheE PMRa_xRimequumes OtpMeersastaingge Current fiSehlda lhlas been functionally O.p Ienr oartdinegr tCou mrraeinnttain backward compatibility with s thSaot umracey tSrhyo tuol idntIegrnporreet the field in the or, the field be set equal to the value of the field. To ensure backward compatibility, the this field.", "tables": ["Table 6.23", "Table 6.24", "Table 6.25", "Table 6.26"], "figures": [], "page_range": [155, 158]}
{"section_path": "6.4.3 BIST Message", "start_heading": "6.4.3 BIST Message", "content": "Shall Fixed Supply Variable SupplyRDO SPR Mode Fixed SupplyRDO EPR Capable This field apply to the and in and the in 6.4.2.1. 0 Operating Power Operating Power Request Data ObjectShall Sink Explicit Contract The field in the be set to the highest power the will draw throughouSth tahlel Batt.ery SupplyRDO 6Th.4is.f2ie.ld1 1 appl y Mto athxe imum Ope rat.ing Power Maximum Operating Power Deprecated Source Maximum Operating Power RequestMessage The Shall field has bOeepne rfuanticntigo Pnaolwlye r. In order to maintain backward Source ScohmoupladtiIbginliotyr ewith s that may try to interpret the field in the, the field be set equal to the value of the field. To ensure backward compatibility, the Shall this field. Battery SupplyRDO T6h.i4s.f2ie.ld1 2 appl y Otou thtep ut Voltage. AVSRequest Data Object Shall Sink Sink Source Shall The Output Voltage field in the Programmable and s be set by the to the voltage the requires asA VmSeAasPuDrOed at the 's output connector. The Output Voltage field be greater than or equal to the Minimum Voltage field and less than or equal to the Maximum Voltage field in the Programmable Power SupSphlayl land s, respectively.RDO AVSRDO 6Th.i4s f.i3eld a p pBlyI StoT th eM Preosgrsaamgmeable and. BISTMessage Port PHY Layer Section 5.9, \"Built in Self-Test (BIST)\" The is sent to request the to enter a test mode (see - ) that perCfoonrtminsu oonues BofI StThe M foodlleowing functions: Tester - Enter a Shared Capa ctoit ys eGnrdo uap continuous stream of test data to the. MesEsangteer and leave a Figure 6.14, \"B tIeSsTt mMeosdsea.ge\" The format is as shown in Figure 6.14 BIST M.essage Header BIST Data Object No. of Data Objects= 1or 7 Shall Unit Under Test UUT vSafe5V BIST Mode Shall All Ports be able to be a ( ) only when operating at. All of the following - s be supported: BIST Carrier ModeBIST Data Object Shall Process reception of a that result in the generation of the - appropriate carrier sigBnIaSl.T Test DataBIST Data Object Shall Message Ignored UUT Process reception of a Shared Capacity Group [USB t Thaytp e-C 2. r4e]suSlht ainll the being BIST. Mode s with Ports constituting a (see ) support the following - : BIST Shared Test Mode EntryBIST Data Object Shall UUT BIST Shared Capacity Test Mode UUT Source Capabilities Port ProcesSsh raerceedp Ctiaopna ocfi tay Group that cause the to enter ; a mode in which the offers its full on every in the. - BIST Shared Test Mode ExitBIST Data Object Shall UUT BIST Shared Capacity Test Mode Process reception of a that cause the to exit tPhoer t BISTMessageBIST D.ata Object BIST Mode vSafe5V BIST MessageShall Ignored When a receives a for a when not operating at, the P ort be BIS.TMessageBIST Data Object BIST Mode BISTMessageShall Ignored When a receives a for a it does not support the be Por.t Cable Plug BISTMessageBIST Data Object Continuous BIST Mode Port Cable Plug BIST Mode Shall BIST Mode tBISTContMode Shall When a or S reectcieoinv e6s.6 a.7.2, \"B ISTContM odeTimer\" for a the or enters the requested and remain in that for and then return to normal operation (sePeH Y LayerBIST Mode ). Port Partner The usage model of the s generally assumes that some controlling agent will request a test of its Section 8.3.2.1. 5, \"Built in Self-Test (BIST)\" In there is a sequence description of the test sequences used for compliance testinBgIS.T Data Object Table6.27, \"BIST Data Object\" The fields in the are definTeadb lien 6th.2e 7 BIST Data Object. Bit(s) Value Parameter Description Reference Applicability Reserved Shall Not Section 1.4.2 0000b…0100b be used Section 6.4.3.1 - BIST Carrier Mode RBIeSqTu Cesatr rier Mode 0101b Transmitter to enter Mandatory Reserved Shall Not Section 1.4.2 0110b…0111b BIST Test Data Te s bt e F ur sa em de Section 6.4.3.2 - 1000b Sends a UUT. Section 6.4.3.3.1 Mandatory UUT B31…28 BIST Shared Test Mode Entry BIST Shared CRaepqauceisttys T est M too de Mandatory for s 1001b enter UUT. Section 6.4.3.3.2 with shared cap Ua Uc Tity BIST Shared Test Mode Exit BIST Shared RCaepqauceisttys T est M too edxeit Mandatory for s 1010b Reserved Shall Not. Section 1.4.2 with shared capacity 1011b…1111b Reserved Shall be used Section 1.4.2 - B27…0 be set to zero. - BISTMessage BIST Carrier ModeBIST Data Object UUTShall BMC Upon receipt of a, with a, the send out a continuous strinUgU oTf Shal lencoded aClotnertinnautoinugs \"B1IS\"sT aMnodd \"e0\"s. tBISTContMode Continuous BIST Mode Section 6.6.7.2, \"BISTContModeTimer\" The exit the within of this being enabled 6(s.e4e.3.2 BIST Test Data). Mode BISTMessage BIST Test DataBIST Data Object UUTShall GoodCRCMessage Shall BIST Test Data Mode Message GoodCRCMessage Upon receipt of a M essage, withS eac tion 5.9.2, \"BIST Test Data Mode\", the return a Test Fram e and enter in which it sends no further s except for s in responseS thoa rlleceived s. See Hard ResetSignaling UU fTor the definition of the. The test be ended by sending to reset the. Shared Capacity Group Source Capabilities [USB Type-C 2.4] BIST Shared Capacity Test ModeShall A of SPhoarrtse ds hCaarpea ac ictoym Grmoounp power source that is not capable of simultaneously powering all the ports to their full (see ). The only be implUemUTenStheadr ebdy Cpaopratsc iitny aG roup Shall. BIST Shared Test Mode EntryBIST Data Object BIST Shared Test Mode ExitBIST Data TOhbjee ct of Ports contain one or more Ports, designated as Master Ports, that recognize both the and the 6.4.3..3.1 BIST Shared Test Mode Entry Port Shared Capacity Group BISTMessage BIST Shared Test Mode Entry BIST Data Object PE_SRC_Ready UUTShall When any mSoausrtceer Capa binil iat ies receivesP ao rt with a, while in the State, the enter a compliance test mode where the maximum are always offered on every, regardless of the availability of shared power i.e., all shared poSwhaerre md aCnaapgaecmitye nGtr oisu dpisabled. Shall Not BIST Shared Test Mode EntryBIST Data Object Ports in the that are not Master Ports enter compliance mode on receiving the BISTMessage BIST Sha.red Test Mode EntryBIST Data Object UUTShall GoodCRCMessage Shall BIST Shared Capacity Test Mode Upon receipt of a, with a, the return a and U UenTtSehr athlle Source_Capabilities.M essage Port Shared Capacity Group tBISTSharedTestMode Tester On entering this mode, the send a new from each in the BISTMessage BIST Shared Test Mode ExitBIST Data Object UUTShall GoodCRCMessage Shall BIST Shared Capacity Test Mode Message BIST UMpeossna rgeeceipt of Ba IST Sh ared Te,s wt Mitho dae ExitBIST Data Object BIS,T t hShea red Capac irteyt Tuersnt aM ode Shall Not and UUT exit the BIST Shared Capacity Test Mo. dIef any other, aside from a, with a, is received while in this cause the UUT tMo eaxyit the Source_CapabilitiesMessage Port Shared Capacity Group UUTMay ErrorRecovery Port On exiting the mode, the send a new to each in the or theS hare d Cap paceirtfyo Grmro up on each S. hall Not BIST Shared Test Mode EntryBIST Data Object Ports in the that are not Master Ports exit compliance mode on receiving the Shared Capac ity Group. Should Not BIST Shared Test Mode ExitBIST Data Object Ports in the that are not Master Ports exit compliance mode on receiving the - UUTShall B IST Shared Capaci.ty Test Mode - The UUT Shall exit BIST Shared Capacity Test M wohdeen It is powered off. BIST Shared Test Mode ExitBIST Data Object UUTShall BIST Shared Capacity TTehset Mod e remain in for any PD event (except when a, is received); specifically the remain in  Hard R ewsehten any of the following PD events occurs:  Cable Reset  Soft Reset  Data Role Swap  Power Role Swap  Fast Role Swap  VCONN Swap - UUTMay. BIST Shared Capacity Test Mode Tester Capabilities UUT The leave if the makes a request that exceeds the of the.", "tables": [], "figures": [], "page_range": [159, 161]}
{"section_path": "6.4.4 Vendor Defined Message", "start_heading": "6.4.4 Vendor Defined Message", "content": "Vendor_DefinedMessage VDM The ( ) is provided to allow vendors to exchange information outside of that defined byV tehnisd sopre_DciefifcinateidonM.essageShall Vendor Data Object VDO VDM Header May VDO A consist of at least one ( ), the, and contain up to a maximum of six aVdednitdioonra_Dl efines.dMessage Vendor_DefinedMessage Shall Valid Standard or Vendor ID SVID VDM Header To ensure vendor uniqueness of s, all s contain a USB Vendor_Defin (edMe)s asallgoecated by USB-IFS tirnu tchtuer ed VDM. Unstructured VDM Structured VDM Modal Operation Unstructured VDM Two types of Message May s are defined: s and s. A defines an extensible structure designed to support. An does not define any sVternudctourr_eD aenfidn edMessasg e Sh bael lc Nreoatted in any manner that theN veegnodtioart icohnooses. May Local Policy Message s be used for direct power. They however be used to alter Message, affectingS hwahlalt is offered or coFnigsuurme e6d.1 v5i,a \" tVheen ndoorr mDeafli PneDd Messages\". The format be as showFni ginu re 6.15 Vendor Defined Message. Header VDM Header 0-6 VDOs No. of Data Objects= 1-7 VDM HeaderShall Message VDM Header Command Message May TCohme mand S tructu breed t hVeD fMirst 4-byte object in a Vendor Defined. The provides space to allow vendors to customize s for their own purposes. Additionally, vendors make use of the s in a VDM Header. Unstructured VDM VDM Type Shall Table6.28, \"Unstructured VDM Header\" VDM Header Structured VDM VDM Type The fields in theS hall for an Table6.29, \"Struc, wtuhreedn VthDeM Header\" Bit is set to zero, be as defined in. The fields in the for a, when the Bit is Usents ttrou ocntuer ed VD bMe as deSfitnruedct iunr ed VDM Shall. Explicit Contract Discover IdentityCommand May Source BDoeftahu lt Contract Ims apnlidci t Contract s onAltyt abceh senPt oawnedr r Reoceleiv Sewda apfter Faans t Role Swap has been established. The oCnalyb leex Cceapptaiboinli ttioe sthis is tSheec tion 8.3.3.25.3, \"So urce Startu wp hSticrhu cture db eV DseMn tD bisyc over Id ewnhtietny oaf a Cable Plug State Doira agnra m\" (in place after, a or ) is in place in order to discover (see S Unstructured VDM VDM Header VID Port Partner Cable Plug Shall The Unstr udcoteusr endo tV dDeMfine the coHnatredn tRse osef tbits B14…0 in the. Their definition and use are the sole responsibility of the vendor indicated by the. The s and s exit any states entered using an whUenns atr uctured VD aMppMeeasrssa goen PD. The- folloUwnisntrgu rcutulerse da pVpDlyM toS thhael ulse of E xplicit Cosn:tract - s E xopnlilcyi tb Ce ounsterda cwthUenns tarnu ctured VDM Sha lils N ino tplace. Shall Ignored Prior to establishing an s be sent and be if - received.DFPShall Initiator Unstructured VDM - Only the UFP C abbel ea nP lugShall of Responder Unss.tructured VDM - OUnnslytr tuhcet ured VorD aM Shall No t be a to. s be initiated or responded to under any other circumstances. - Unstructured VDM Shall Modal Operation Active Mode UFP Enter ModeCommand Unstructured VDM Active Mode s only beU nussterdu cdtuurriendg VDM Shall in the conSVteIxDt of an i.e., only after the has Ack'ed the can s be sent or received. The - Unstructured a VnDd MtheM asasyociated SOP* Packets use the same. - DFP UFPs be used withU nstructureds V. DM VID Shall Not_SupportedMessage When a or does not support s or does not recognize the it return Table6.2a8, \"Unstructured VDM Hea.der\" VDM Header Tab illelu6st.r2a8t e Us nthsetr uctured VD Mbi tHs.eader Bit(s) Parameter Description Vendor ID (VID) VDM Type Unstructured VDM B31…16 Unique 16-bit unsigned integer. Assigned by the USB-IF to the Vendor. B15 0 = B14…0 Available for Vendor Use Content of this field is defined by the vendor. Vendor ID (VID) Shall Vendor ID VID Shall The field contain the 16-bit value assigned to the vendor by the USB-IF ( ). No o6t.h4e.r4 v.a1lu.2e be pre sVenDt Min tThiys pfieeld. VDM Type Shall Unstructured VDM T6h.4e.4.2 field Str ubec steut rtoe zder oV iDndMicating that this is an. VDM Type Structured VDM Structured VDM Header Structured VDM Header Table6.29, \"Structured VDM Header\" Setting the field to 1 ( ) defines the use of bits B14…0 in the. The fields in the areS tdreufcintuerde idn V DMMessage. The- folloSwtriuncgt urrueleds V aDpMplyS thoa tlhle use of E xplicit Cosn:tract  s only Fbier suts Eexdp wlichiet nC oannt ract SourceMa yis in plaDcies wcoivthe rt hIde efonltliotwyMinegs esaxgceeption: Cable Plug SOP’ Packet Initiator Section 8.3.3.25.3, \"Source Startup Structured VDM PDrisiocor vteor e Isdteanbtliitsyh oinf ga tChaeb le Plug State Diagram, \"a issue s, to a using s, as an (see - PortMay Initiator Structured VDM ). Enter Mode Exit ModeCommand Shall DFP Either be an of s except for the and s - whCiacbhl e Plug oSnhlayl ble initiatedR beysp tohned er. Structured VDM - ASt ructured V DM S hoanllly N boet a to s. - DFP Us FP be initiatedSt orru crteusrpeodn VdDedM to undSetrr uacntyu roetdh eVrD cMircumstanceSsh.all Not_SupportedMessage When a or does not support s any s received return a - SV.ID Command Structured VDM Header VDM Header ResponderShallNAKMessage SVID VDM Header WhenS uVsIDing any of thSeV ID SpeciCfiocm mand s in the SVID Comma (nd b4…0 - valuSeV 1ID6 - 31) the s where the in the is not recognized as an that uses Specific s or the use of Specific s is not supported for - the C.able Plug Structured VDM Structured VDM Shall Ignored When a does not support s any s received be. DFP UFP Cable Plug Structured VDM Structured VDM SVID Shall NAKCommand A, or which supports s and receiving a for a that it does not recognize reply with a Table6.29. Structured VDM Header Standard or Vendor ID (SVID) Bit(s) Field Description VDM Type Structured VDM B31…16 Unique 16-bit unsigned integer, assigned by the USB-IF Version Structured VDM B15 1 = Version Structured VDM Version Number (Major) of the (not this specification - Deprecated Shall Not (Major) ): - B14…13 Version 1.0 = 00b ( and be used) - Reserved Shall Not Version 2.x = 01b Command Version Structured VDM Values 2-3 are and be used - For s 0…15 Number (Minor) of the Structured VDM Version Version 2.0 = 00b (Used for ports implemented prior to USB PD (Minor) - Revision 3.1, Version 1.6) B12…11 Version 2.1 = 01b (Used for ports implemented starting with USB - Reserved Shall Not PD Revision 3.1, Version 1.6) - SVID Command SVID All other Values are and be used Enter Mode Exit Mode AttentionCommand Specific s (16…31) defined by the. For the,, and s (Requests/ - Reserved Shall Not Responses): - VDO 000b = and be used. Alternate ModeVDO 001b…110b = Index into the list of s to identify the desired Object Position - A ctive Mode Shall - Command B10…8 111b = Exit all s (equivalent of a power on reset). Command only be used with the. - s 0…3, 7…15: - Reserved Shall Not 000b SVID Command SVID 001b…111b = and be used. REQ InitiatorPort Specific s (16…31) defined by the. ACK ResponderPort 00b = (Request from ) Command Type NAK ResponderPort 01b = (Acknowledge Response from ) B7…6 BUSY ResponderPort 10b = (Negative Acknowledge Response from ) Reserved 1S1hba =l l (Busy SRheaspllonseI gfrnoomre d ) Reserved Shall Not B5 be set to zero and be Discover Identity Discover SVIDs Discover Modes Command Enter Mode B4…0 4 = Attention Reserved Shall Not 7-15 = SVID andC ommand be used. VID 16…31 = Specific s 1) In the case where a SID is used the modes are defined by a standard. When a is used the modes are defined by the Vendor. Section Table6.30, \"Structured VDM Commands\" Command SVID Command SOP* Shall shows the s, which to use with each and the values which be usedT.able6.30 Structured VDM Commands Command VDM Header SVID SOP* used Field Discover Identity Shall PD SID Shall SOP SOP’ Discover SVIDs Shall only use the PD SID. Shall only use SOP/SOP’. Discover Modes Valid only use tShVeI D. S hall only useS OP/SOP’. Enter Mode Valid with any SVID. Valid only SuOseP * /. Exit Mode Valid with any SVID. Valid with SOP*. Attention Valid with any SVID. Valid with SOP*. SVID Command Valid with any SVID. Valid with SOP*. SVID Specific s with any. with (defined by ). Standard or Vendor ID (SVID) Shall VID Shall The field contain either a 16-bit USB Standard ID value (SID) or the 16-bit aSsescitgionne dT atob lteh6e. 3v1e,n \"dSoVrI Db yV tahlue eUs\"SB-IF ( ). NoS VoItDher value be present in this field. lists specifiTc able 6v.a3l1u e Ss VreIDfe rVeanlcueeds by this specification. Parameter Value Description PD SID DPTC SID [DPTC2.1] 0xFF00 Standard ID allocated to this specification by USB-IF. 0xFF01 Standard ID allocated to by USB-IF. VDM Type Shall Structured VDM T6h.4e.4.2.3 field S btre usectt tuo roened i nVdDicaMtin Vg ethrasti tohins is a. Structured VDM Version (Major) Structured VDM Version (Minor) Structured VDM Version Version The Structured VDM Ver/sion (Major)Shall fields indicate the level of fuSntcrtuiocntuarlietdy VsuDpMp oVretersdi oinn t (hMe inor) part of the specification. This is not Pthoret same as the of this specification. The Version be set to 01b to indicate Version 2.x with the field set as appropriate based on whether the is implemented to USB PD Revision 3.1, Version 1.6 (or newer) or a prior P.DUSB PDUSB Shall Structured VDM Version To ensure interoperability with existing products, products support every numbeVr DstMar Htienagd ferrom Version 1.0V.ersion Port Cable PlugShall Version VDM Header Version OnP orretceipCt aobf lae PlugShall with a higher nuVmerbsieorn than it supports, a or respond using the highest number it supports. On receipt of a with a lower number than it supports, a St rour ctured VDM Vers rioensp (oMnadj ours)ingS ttrhuec stuamreed VDM Ve nrusmiobne (rM iti nroecre)ived. Discover IdentityCommand Discovery ProcessShall Structured VDM TVehres ion Port Partner/ Cable Plug Shall fields of the Specificatio n Revision sent and receiDveedta dcuhreidng the S tructu breed u VseDdM toV edrestieornmine Sthtreu lcotwureestd c VoDmMm Voenr sion (Major) Structu rsuedp pVoDrMte dV berys tihoen (Minor) s orS hall and continue to Sotpreurcattuer euds iVnDg MthiVse rsion until they are. After discovering the, the / fields match the agreed common. Object Position Shall Enter Mode Exit ModeCommand Discover Modes Command VDO Alternate Mode Object Position The field be used by the VDO aAnldte rnate Mod e s. TheE nter Mode E xit ModeCom rmeatunrdns a list of zeroO tob sjeixc t Possi,t eioanchS hofa wllhich describes an Alterna. tTeh Me ovdaelue in SVID fieldV iIsD an index into that lisVtD tOhat indicaAtletse rwnahticeh M ode S(eh.ag.l,l ) in the list the Standard oarn dV endor ID (SV ID) refers to. ThSeh all start with one for the first VDO in the list. IMf tahye is a, the content of the for the be definCedap bayb tihlitei evsendor. AIfl ttehren ate Mode Respon ids ear SID, the value be assigned, by the USB-IF, to the given Standard. The 's conAtletnert nate M boe daes simple as a numeric value or as complex as bit mapped description of of the. In all cases, the is responsible for deciphering the contents to know whether or not it supports the at the ObjeSchta Pllosition. REQ ACK NAK BUSY Command This field be set to zero in the Request or Response (,, or ) when not required by the 6sp.e4c.i4fic.2at.i5on of the indi v iCdouaml mand T. ype Command Type Shall Command ThiIsn itiatorShall fieldC omma bned u Tsyepde to indicaRteE tQhe type of requCeosmt/mreasnpdonse being sent. Initiator AnS tructured VDM set the field to to indicate that this is a request from an. If - Respondesr aArCeK supported, then the responsSehsa alrle as follows: Command \" \" is the normal return and be sent to indicate that the request was - rReceespivoendd aenrdN AhaKndSlheda lnlormally. Command \" I nvali\"d be returnedI nwvhaelind tShVeI D Altern raetqeu Mesotd:e  Has an parameter (e.g., or ). Alternate Mode Alternate Mode Alternate Mode Active MCaondneot be acted upon because the configuration is not correct (e.g., an which has a dependency on another or a request to exit an which is not an  ). Message  Is an UnrecognizeRde sponderN. AK Initiator - ReTsphoen hdaenrdBlUinSgY ofS \"hall \" is left up to the VDM. Responder Command Command May InitiatorShall \"tVDMBusy \" Respo bned seernBtU inS Ythe response to a when the C iosm unmaabnled to respond to the request immediately, but the request be retried. The wait Command Type Shall Command InitiatorShall REQ Command Initiator Structured VDM This Shall field bAet utesnedti oton iCnodmicamtae nthde type of request being sent. An set the field to to indicate that this is a request from an. If s are supported, then 6no.4 re.4sp.o2n.6se be m a dCeo tmo amn and. Command VDMCommand Command Command TCohme mand field contains the value for the being sent. The s explicitly listed in the field are used to identify devices and manage their operational Modes. There is a further range of Structur evda lVuDeMs leCfot mfomr athned vendor to useC toom mmaannadge additional exCtoemnsmioannsd. ACK NAK BUSY Structured VDMCommand A conGsiosotsd oCfR aC Message request and a response ( Res, pond eorr ). A Command is deemed to be completed (and if applicable, the transition to the requested functionality is made) when the has been successfully received by the in reply to its response. Structured VDM Structured VDMCommand Message Shall Table6.32, \"Commands and Responses\" If s are supported, but the request is an Unrecognized, it 6be.4 N.A4K.2e.d6 (.s2ee Attention Command). Command VDMCommand Attention AttentionCommand May Initiator Responder The field contains the value for the being sent ( ). The Str ubcet uurseedd VbDy MthAe ttention Ctoo mnomtiafyn dthe Cthomatm ita rnedquires service. Command Structured VDMAttentionCommand GoodCRCMessage A Initiator Attention cCoonmsimstas nodf a request but no response. A is deemed to be completed when the has been successfully received byS tthruec tured VD iMn reply to its Structure rde VqDuMesAt.ttentionCommand Message Shall Ignored Table6.32, \"Commands and Responses\" If s are supported, but the request is an Unrecognized 6it.4.4.b3e ( s Uees e of Commands ). VDM Header Structured VDMMessage Command SVID SVID Command The for a defines s used to retrieve a list of s the device sup- portsD, itsoc odvisecro Ivdeern tthiety Modes associated with each, and to enter/exit the Modes. The s include: - Discover SVIDs - Discover Modes - Enter Mode - Exit Mode - Attention Command Reserved AddiCtioomnmal andAMS space is also Initiator for RSteasnpdoanrdde rand Vendor use and for future extensions. Port Provider Consumer The Power Roles Suosue rtchee terSminsk Ini atinadto r Po rtto identify messagingC ormolmesa tnhde ports are taking on rReelsaptoivned teor each oPthoertr. This role is indepCeonmdemnat nodf the 's powSeerc ctaiopna b6i.4li.t4y. 4(, \"Comma, nd Process eest\"c.) or its present ( or ). The is the sending the initial request and the is the replyingS hwaitllh the Di srceosvpeorn Isdee. nSetiet y Discover SVIDs Discover Mode.s Enter Mode Exit ModeCommand All Ports that support Modes support the,, the, the Table 6a.n3d2, \"Comman ds and Resps.onses\" ResponderMay Command CommandShall Not Responder NAK Should deCtoamilsm tahned responses a issue to each request. Responses not listed for a given be sent by a. A response be taken as an indication not to retry that particTulaabrl e6.32 Co.mmands and Responses Command Allowed Response Reference Discover Identity ACK NAK BUSY Section 6.4.4.3.1 Discover SVIDs ACK NAK BUSY Section 6.4.4.3.2,, Discover Modes ACK NAK BUSY Section 6.4.4.3.3,, Enter Mode ACK NAK Section 6.4.4.3.4,, Exit Mode ACK NAK Section 6.4.4.3.5, Attention Section 6.4.4.3.6, None Command Appendix C, \"VDM Command Examples\" Examples of usage can be found in. Discover IdentityCommand Initiator Port Partner Initiator VCONN Source Responder Cable Plug VPD Discover IdentityCommand The C able Plug is VpProDvided to enable an to idGeonotidfyC RitCs Message and for an ( ) to identify the ( or ). The is also used to deteDrmisicnoev werh Iedtheenrt iaty Command oSrh all is PD-Capable SbOy Plooking for a Expl icit Contr Racetsponse. The Discover Identity Command Shall only be sent to when there is an Cable Plug VP.D Section 8.3.3.21.1, \"Initiator Structured VDM Discover Identity State Diagram\" Section 8.3.3.25.3, \"Source Startup STthreu ctured VDM Discov er Identity of a Ca bbele u Psleudg tSot adteet eDrimagirnaem w\"hether a given Discover I doer ntity iCso PmDm Caanpdable (see SOP’Shall Not Soft Reset GoodCRCMessage and VPD ). In this case a request sent to cause a if a response is not returned since this can indicate a Nnoonte-P:D CapaCbalbel ec aPbluleg or VPD. CONN VCONN [USB Type-C 2.4] A or will not be ready for PD Communication until tV Stable after has been Cabaplep Plileudg (seVe PD ). Explicit Contract Discover IdentityCommand DiscoverIdentityTimer Section 6.6.15, \"DiscoverIdentityTimer\" nDDurisincog verIdentity oCro unt discovery, Swehcteino nth 6e.7re.5 i, s\" Danis cover Identity Co,u nter\" s are sent at a rate defined by the (see ) up to a maximum of Cable Plug timVPeDs (Ssheael l Discover IdentityCommandAC).K Discover Identity Command SOP’ A PD-Capable or return a in response to a Disco vreerq uIdeesnt tsietnytC toom man.dShall Capabilities Port Partner Shall Discover IdentityCommandACK Discover Identity TCohme mand SOP be used to determine the identity and/or of the. The following products return a in response to a - request sentU tFoP : Modal Operation - A PD-Capable that supports DFP. - A PD-Capable [pUroSBdu4c]t that has multiple s. SVIDA PD-CaDpaisbcloev er Iden ptirtoydCuocmt.mand Shall Section Table6.31, \"SVID Values\" The in the request be set to the PD SID (see Num).ber of Data Objects Message Header Discover IdentityCommand Shall Discover IdentityCommand Shall Not VDO The field in the in the request be set to 1 Dsiinscceo vtheer IdentityCommand ACK request Respon cdoenrtSahina allny s. ID Header VDO Cert Stat VDO Product VDO Product Type VDO Product Type Figure 6.16, \"Discover Identity CTohme mand response\" sent back by the Prod uct Ty cpoen VtaDiOn an, a, a and the s defined by the as shown in - Passive Cabl.e T VhDisO specifSiecacttiioonn 6d.e4f.i4n.3e.s1 t.6h,e \" Pfoalslosiwvein Cga ble VDO\" s: - Active Cable VDO (see Section 6.4.4.3.1.7, \"Active Cable VDOs\") - VCONN Powered UsS B(s Deee vice VPD VDO Section 6.4.4.3.1.9,) \"VCONN Powered USB Device VDO\" - UFP VDO Section 6.4.4. 3(.1.4, )\" UFP V(DseOe\" ) - DFP VDO (see Section 6.4.4.3.1.5, \"DFP VDO\") VDO (see ) Shall Discover IdentityCommand Product Type VDO Product Type VDO Shall No Discso ovtehre Ird tehnatnit tyhCoosme dmeafinnded in this specification VD bOe sent as part of thIen itiatorShall Ign ored response. Where there is no defined for a specific, no s be sent as part of the response. Any additional s received by the be. Figure 6.16 Discover Identity Command response Header VDM Header ID Header VDO Cert Stat VDO Product VDO 0..32Product Type VDO(s) No. of Data Objects= 4-71 1. Only Data objects defined in this specification can be sent as part of the Discover IdentityCommand. 2. The following sections define the number and content of the VDOs for each Product Type. Number of Data Objects Message Header Discover IdentityCommandNAK BUSY Shall Shall Not VDO The field in the in the and responses be set to 1 sinPcero tdhuecyt Type UFP contain Panroyd uct Ts.ype DFP Shall Product Type VDO UFP DFP UFP VDO If the product is a DRD both a D (FP VD) aOnd a Figur e( 6.17), a\"Drei sdceocvlearr Iedde innt itthye C IoDm Hmeaandde rr.e Tsphoenssee fporro ad uDcRtsD \" return s for both and beginning with the, then by a 32-bit Pad Object (defined as all '0's), followed by the as shown in. Figure 6.17 Discover Identity Command response for a DRD Header Product Tyyypppe VDO(((((s))) VDM Header ID Header VDO Cert Stat VDO Product VDO No. of Data Objects= 7 UFP Pad DFP ID Header VDO ID Header VDOShall Section Table6.33, \"ID Header VDO\" The contains information corresponding to the Power Delivery Product. The fields in the be as defined in Table6.33 ID Head.er VDO Bit(s) Description Reference USB Communications Capable as USB Host Section 6.4.4.3.1.1.1 - Shall USB Device B31 - Shall be set to one if the product is capable of enumerating s. USB Comm bu en sic ea t t ti oo n zes r C oa op ta hb erle w a iss e a. USB Device Section 6.4.4.3.1.1.2 - Shall USB Device be set to one if the product is capable of being enumerated as a B30 - Shall. SOP Produ bct e T sy ep t te o ( zU eF rP o) otherwise Section 6.4.4.3.1.1.3 - UFP - PDUSB Hub 000b – Not a - 001b – - 010b – PDUSB Peripheral - Reserved Shall Not 011b – PSD SOP’ Product Type (Cable Plug/VPD) 100b…111b –, be used. - Cable Plug VPD B29…27 - Reserved Shall Not 000b – Not a / - Passive Cable 001b…010b –, be used. - Active Cable 011b – - Reserved Shall Not 100b – - VCONN Powered USB Device VPD 101b –, be used. - Reserved Shall Not 110b – ( ) 111b –, be used. Table6.33 ID Header VDO (Continued) Bit(s) Description Reference Modal Operation Supported Section 6.4.4.3.1.1.4 - Shall UFP Cable Plug Modal Operation Alternate Mode be set to one if the product ( / ) is capable of B26 - Shall supporting ( s). SOP - Product Type (DFP) be set to zero otherwise. - DFP - PDUSB Hub 000b – Not a - PDUSB Host Section 6.4.4.3.1.1.6 001b – B25…23 - 010b – - Reserved Shall Not 011b – Power Brick SOP’ Reserved Shall Not 100b…111b –, be used. Connector Type :, be used. - Reserved - Reserved Shall Not Section 6.4.4.3.1.1.7 00b –, for compatibility with legacy systems. B22…21 - 01b – USB Type-,C be used. - USB Type-C 10b – Receptacle Reserved Shall Not 11b – Plug B20…16 USB Vend, or ID be used. Section 6.4.4.3.1.1.8 [USB 2.0] [USB 3.2] [USB4] B15…0 / / USB Communications Capable as USB Host Port USB Host The field is used to indicate whether or not the has a 6Ca.4pa.4bi.l3it.y1..1.2 USB Communications Capable as a USB Device USB Communications Capable as a USB Device Port USB Device The field is used to indicate whether or not the has a 6Ca.4pa.4bi.l3it.y1..1.3 Product Type (UFP) SOP Product Type (UFP) UFPData Role VDO VDO Product Type SOP Product Type (UFP) SThhae ll field indicates the type of Product when in UFPData R, wolheether a will be returned and if so the type of to be returned. The indicaStehda liln the Product T yfipeeld be UthFeP closest categorization of the maDiant fau RnoctleionTaalbitley 6o.f3 t4h, e\" PPrroodduucctt T inyp es ( UFP)\" or \"UndPerfoindeudc\"t wTyhpeen VthDeOre is no suSihtaabllle category for the product. For DRD Products this field always indicate the when in role regardless of the present. defines the s which be returned. Table6.34 Product Types (UFP) Product Type Description Product Type Reference VDO Shall UFP PUDnUdSeBfi nHeudb Shall be used when this is not a.PDUSB Hub NUFoPn eVDO Section 6.4.4.3.1.4 Shall be used when the Product is a PDUSB. UFP VDO Section 6.4.4.3.1.4 Device PDUSB Hub be used when the Product is a PDUSB Peripheral Shall other than a. be used when the Product is a PSD, e.g., PSD None power bank. SOP’ Product Type (Cable Plug/VPD) Cable Plug VPD VDO VDO Table6.35, \"Product Types (Cable Plug/ TVPhDe )\" Product Type VDO fieldS ihnadlilcates the type of Product when the Product is a or, whether a will be returned and if so the type of to be returned. defines the Tabsl we6hi.3ch5 Prod buec tr eTtyuprneesd (.Cable Plug/VPD) Product Type Description Product Type Reference VDO Shall Product Type be used where no other value Undefined None Active Cable iSsh aaplplropriate. Active Cable VDO Section 6.4.4.3.1.7 be used when the Product is a cable that Passive Cable Sinhcaolrlporates signal conditioning circuits. Passive Cable VDO Section 6.4.4.3.1.6 be used when the Product is a cable that VCONN Powered USB dShoeasll not incorporate signal conditioning circuits. VPD Section 6.4.4.3.1.9 Device VCONN Powered USB Device be used when the Product is a PDUSB VDO. Modal Operation Supported Cable Plug UFP Modal Operation Supported The DFP Alternate Mode C bonitt irso ullseerd to indicate whether or not the Product (either a or a device that can operate in the role) is capable of supporting Modes. The bit does not describe a 's Modal OperationSh faunllctionality. Discover SVIDsCommand SVID A product that supports respond to the with a list of s for all 6of. 4th.e4 M.3o.1de.1s.i6t is capable of su p Pproortdinugc wt hTeythpeer o(rD nFoPt t)hose Modes can currently be entered. SOP - Product Type (DFP) DFPData Role VDO VDO Product Type SOP - Product Type (DFP) TShhae ll field indicates the type of Product when in D FPData Ro, wlehether a will be returned and if so the type of to be returned. The indicatSehda inll the Product T yfipeeld be DthFeP closest categorization of the maDiant fau RnoctleionTaalbitlye 6o.f3 t6h, e\" PPrroodduucctt Tiny pes ( DFP)\" or \"UndPerfoindeudc\"t wTyhpeen VthDeOre is no suSihtaabllle category for the product. For DRD Products this field always indicate the when in role regardless of the present. defines the SOsP w’ Choicmhm unic abteio rnetuCranbeled.Plug VPD Reserved Shall In ( s andT ables6).t3h6is Pbirto fdieuldct i sT ypes (DFP a)nd be set to zero. Product Type Description Product Type Reference VDO Shall Product Type be used where no other value Undefined None PDUSB Hub iSsh aaplplropriate. PDUSB Hub DFP VDO Section 6.4.4.3.1.7 Shall be used when the Product is a PDUSB Host. PDUSB Host DFP VDO Section 6.4.4.3.1.6 be used when the Product is a Alternate Mode or a PDUSB host that supports one or more Charger Shall s as an AMC. Charger DFP VDO Section 6.4.4.3.1.9 be used when the Product is a. Connector Type Shall USB Type-C USB Type-C The field (B22…21) contain a value identifying it as either a receptacle or a plug. Shall USB Vendor ID Vendor ID USB Device Hub USB Communication USB Vendor ID Shall Manufacturers set the USB Device field to the va[lUueS Bof 2 t.h0e] [USB 3as.2s]igned to them by USB-IF. For s or s which support s the field be identical to the Vendor ID 6fie.4ld. 4de.3fi.n1e.d2 in the product ' sC ert Stat V DDeOscriptor (see and ). Cert Stat VDOShall Cert Stat VDOShall Table6.37, \"Cert Stat VDO\" The contain the XID assigned by USB-IF to the product before certification in binary format. The fields in the be as dTeafibnleed 6in.3 7 Cert Stat VDO. Bit(s) Description Reference B31 0 32-bit unsigned integer, XID Assigned by USB-IF Product VDO Product VDOShall Table6.38, \"Product VDO\" The contains identity information relating to the product. The fields in the be as defined in. Table6.38 Product VDO Bit(s) Description Reference [USB 2.0] [USB 3.2] [USB 2.0] [USB 3.2] B31 16 16-bit unsigned integer, USB Product ID / B15 0 16-bit unsigned integer, bcdDevice / Should Should Manufacturers set the USB Product ID field to a unique value identifying the product and set the b6c.d4D.4ev.3ic.e1 f.i4eld to a version UnuFmPb VerD rOelevant to the release version of the product. UFP VDO Shall UFP USB Hub Port UFP VDO Shall The definPerodd iunc tth Tisy speectUioFnP be retuIrDn eHde bayd ePro VrDtsO capable of operating as a includPiDngU StrBa dHiutibonal UTaSbBl epe6r.3ip9h, \"eUraFlPs,V DO\" 's upstreUaFmP VDO and DSRhDa lclapable host Ports. TheP roduct Ty dpeefined in this section be sent when the ( ) field in the is given as a PDUSB Peripheral or. [USB4]UFPShall defines thSet ructured VthDaMt Disco bvee rs eIndte bnatisteydC oonm tmhea nd. A support the Ta ble6.39 UFP VDO. Bit(s) Description Reference Version VDO Version UFP VDO Version - Number of the (not this specification ): Reserved Shall Not B31…29 Version 1.3 = 011b Reserved VSahlaulels 100b…111b are, be used. Bit Description B28 be set to zero. [USB 2.0]Device Device Capability 0 [USB 2.0] Device Capable B27…24 1 [USB 3.2] Device Capable (Billboard only) Connector Type (Legacy) Dep3recated Shall Capable B23…22 Reserved Shall, be set to 00b. B21…11 be set to zero. Table6.39 UFP VDO (Continued) Bit(s) Description Reference VCONN Required VCONN Power VCONN AMA When the field is set to “Yes” the Field indicates the power needed by the for - full functionality: - 000b = 1W - 001b = 1.5W VCONN Power - 010b = 2W - B10…8 011b = 3W - 100b = 4W - 101b = 5W Reserved Shall Not 110b = 6W VCONN Required VCONN Power 111b =, be used. Reserved Shall When the field is set to “No” the AMA VCONN field is and be set to zero. Indicates whether the requires in order to - function. VCONN Required - Alternate Modes B7 1 = Yes VCONN Required Reserved Shall When the field indicates no modes are supported, the field is and be AMA VBUS set to zero. - Indicates whether the requires in order to function. VBUS Required - 0 = Yes Alternate Modes B6 VBUS Required Reserved Shall When the field indicates no modes are supported, the field is and be Bit Description set to zero. [TBT3]Alternate Mode Alternate Modes [USB Type-C 2.4] Supports s that reconfigure the B5…3 1 signals on [ tT heB T3] connector – except forA lternate. Mode [USB Type-C 2.4] Supports s that do not reconfigure - [USB 2.0] the signals on the connector. - [USB 3.2] 000b = only, no SuperSpeed support - [USB 3.2] [USB4] USB Highest Speed 001b = Gen1 - [USB4] 010b = / Gen2 B2…0 - [USB4] 011b = Gen3 - Reserved Shall 100b = Gen4 101b…111b = and be set to zero. UFP VDO Version VDOVersion VDMVersion UFP VDO The field contains a for this number. This field indicates the expected c6o.n4t.e4n.t3 f.o1r. t4h.e2 s. Device Capability Field Device Capability UFP Capabilities PDUSB Device PDUSB Hub The bit-field describes the 's when operating as either a or. Shall USB Device Shall USB Device The bits in the bit-field be non-zero when the corresponding speed is supported and be set [toU SzBer 2o. 0w]hen the corresponding speed is not supported. Shall Not Connector Type (Legacy) UFP VDO Shall Cable Plug Shall Ignored Connector Type Th ID Header VDO Se cfiteioldn w6.a4s.4 p.3r.e1v.1io.7u, s\"lCyo unsneedc tfoorr Tthyep e Field\" 's Connector Type. be set to 00b by the and be by the receiver. The receiver can find this information in the f6ie.4ld. 4in. 3th.1e.4.4 ( VCONN Power Field ). VCONN Required VCONN VCONN Power Shall AMA VCONN Required VCONN Power WhReense trhvee d Shall field indicates that is required the field indicate how much power an needs in order to fully operate. When the field is set to \"No\" the field 6is. 4.4.3.1.4 a.n5d be set to VzeCrOo.NN Required Field VCONN Required Shall VCONN AMA VCONN Required Shall Alternate Modes Alternate Mode Alternate Mode The field Rese irnvdeidcate wShheathller is needed for the to operate. The field only be used if the field indicates that an is supported. If no s 6ar.e4 s.4up.3p.o1rt.4ed.6, this field is VBUS a Rnde quir ebde sFeti etold zero. VBUS Required Shall VBUS AMA VBUS Shall Alternate Modes Alternate Mode Alternate Mode The field Res einrdveicdate whShetahlelr is needed for the to operate. The required field only be used if the field indicates that an is supported. If no s a6r.e4 s.4up.3p.o1rt.4ed.7, this field is Alte rannda te M obde esest Ftoi ezeldro. Alternate Modes Shall Alternate Mode T6h.4e.4.3.1.4.8 field U bSeB u Hseidg tho eidsetn Stipfye aeldl t hFei etylpdes of s, if any, a device supports. USB Highest Speed Shall Port DFPShall DFP Valid The field indicate DthFeP 's highest speed capability. The consider all values indicated in this field that are higher than the highest value that the recognizes as being and functionally compatible with the highest speed that the supports. DFP VDOShall DFP Host Hub DFP VDOShall Product Type DFP ID Header VDO The PD UbeS Bre Htuorsnted bPyD UPoSrBt sH cuabpaTbalbel oef6 o.4p0e,r \"aDtiFnPg aVsD aO \" ; includinDg FthPo VseD iOmplemSehnatleld by s, s and Power Bricks. The be returned when the ( ) field in the is given as Power Brick, or. Table6.40 DFP VD Odefines the that be sent. Bit(s) Field Description Version VDO Version DFP VDO Version - Number of the (not this specification ): Reserved Shall Not B31…29 Version 1.2 = 010b Reserved VSahlaulels 011b…111b are and be used Host Capability Bit Description B28…27 be set to zero. B26…24 [USB 2.0]Host Capable Capable Connector Type Sha2ll Capable (Legacy) B23…22 Reserved Shall be set to 00b. Port Number Port Port Port B21…5 be set to zero. B4…0 Unique number to identify a specific on a multi- device. DFP VDO Version Shall VDOVersion VDMVersion DFP VDO The field contain a for this number. This field indicates the 6ex.p4e.4ct.e3d. 1co.5nt.2ent for the Ho.st Capability Field Host Capability Shall DFP PDUSB Host DFP Capabilities PDUSB Host The bit-field describe whether the can operate as a and the 's when oPpDeUrSaBti nHgu bas aS hall H. ost Capability P6o.4w.e4r. 3Br.1ic.k5s. a3nd s Conn seetc tthoer Type Field bits to zero. Connector Type (Legacy) UFP VDO Shall Cable Plug Shall Ignored Connector Type The ID Header VDO Sec tfiioenld 6 w.4a.4s.p3.r1e.v1i.7o,u \"sClyo nunseecdt oforr T tyhpee Field\" 's Connector Type. be set to 00b by the and be by the receiver. The receiver can find this information in the f6ie.4ld. 4in.3 th.1e.5.4 ( Port Number Field ). Port Number Shall Static [USB Type-C 2.4]DFP DRP The field be a unique number that unambiguously identifies each, iNnoctlued:ing s, on the device. Port This number is independent of the USB number. Passive Cable VDO Shall Product Type Passive Cable Table6.41, \"Passive Cable VDO\" Cable VDO Shall The defined in this section be sent when the is given as. Passive Cable defines the which beC asbelnet.Plug SOP’ Communication Passive CableShall Not A haPsa sas UivSeB C Pabluleg Sohna elalch end at lVe Ba Ust S one of whSichha ilsl a suppSoOrPt’i nCgo mmunication Passive. A Cable Shall inSctorrupcoturareted dVaDtMa bDuiss csoigvnearl IcdoenndtiittiyonCionmg mciarcnudits anSdh haelnlce has no coPnacsseipvte oCfa Sbulep eVrD SOpeed DDiirseccotvioern aIdlietyn. tAit yCommandA CK include a Tabl ew6ir.4e1 a, n\"Pda ssive Coanblyle r VesDpOo\"nd to. s support the and return the in a as showTnab inle 6.41 Passive Cable VDO. Bit(s) Field Description HW Version VID Firmware Version VID B31…28 0000b…1111b assigned by the owner Version VDO Version B27…24 0000b…1111b assigned by the owner VDO Version - Number of the (not this specification ): Reserved Shall Not B23…21 Version 1.0 = 000b Reserved VSahlaulels 001b…111b are and be used. B20 - be setR toe s ze er rv oe.d Shall Not USB Type-C plug to USB - Reserved Shall Not Type-C/Captive 00b = and be used (Passive Cable) - 01b = USB Type- C and be used B19…18 - 10b = EPR Capable (Passive - 11b = Captive EPR Capable Cable) - EPR Capable 0b – Cable is not B17 - 1b = CablR ee is se rved Shall Not - 0000b – and be used - 0001b – <10ns (~1m) - 0010b – 10ns to 20ns (~2m) Cable Latency (Passive - 0011b – 20ns to 30ns (~3m) Cable) - 0100b – 30ns to 40ns (~4m) B16…13 - 0101b – 40ns to 50ns (~5m) - 0110b – 50ns to 60ns (~6m) - 0111b – 60ns to 70ns (~7m) Note: Reserved Shall Not 1000b – > 70ns (>~7m) - 1001V bC …ON.1N 111b C a ab nl de Plug be used Discover Identity Command Shall Cable Termination Type 00b = not required. s that only support (Passive Cable) - VCONN s set these bits to 00b. B12…11 - Reserved Shall Not 01b = required VBUS 10b…11b = and be used - Maximum VBUS Voltage Ma - ximum Cable De pV ro el cta ag te ed: (Passive Cable) 00b – 20V - 1 Deprecated B10…9 01b – 30V ( ) - 10b – 40V ( ) Reserved Shall11b – 50V Shall B8…7 be set to zero. 1) EVPalRu Seisn nko longer allowed. WheSnh parlelsent the field be interpreted as if it was 00b. 2) s with a captive cable report 50V. Table6.41 Passive Cable VDO (Continued) Bit(s) Field Description - Reserved Shall Not VBUS Current Handling - Capability (Passive 00b = and be used Cable) - 01b = 3A B6…5 - Reserved Shall Not 10b = 5A Reserved Shall11b = and be used B4…3 - be set t[ oU zS eB r o2..0] - [USB 3.2] 000b = only, no SuperSpeed support USB Highest Speed - [USB 3.2] [USB4] 001b = Gen1 (Passive Cable) - [USB4] 010b = / Gen2 B2…0 - [USB4] 011b = Gen3 - Reserved Shall Not 100b = Gen4 Shall 101b…111b = and be used 1) EVPalRu Seisn nko longer allowed. WheSnh parlelsent the field be interpreted as if it was 00b. 2) s with a captive cable report 50V. HW Version VID T6h.4e.4.3.1.6.2 (B31…28) co n FtaWins V ae HrWsi ovenr sFioien ladssigned by the owner. Firmware Version VID T6h.4e.4.3.1.6.3 field (B 2V7D…O24 V) ecornstiaoinns Fai FeWld version assigned by the owner. VDO Version VDOVersion VDMVersion VDO The field (B23…20) contains a for this number. This field indicates the 6ex.p4e.4ct.e3d. 1co.6nt.4ent for this. USB Type-C plug to USB Type-C/Captive Field USB Type-C plug to USB Type-C/Captive (Passive Cable) Shall USB Type-C USB Type-C USB TTyhpee -C field (B19…18) contain a value indicating whether the opposite end from the plug is another plug (i.e., a detachable Standard 6.4.4. 3Ca.1b.l6e.A5ssembly) or is a CEaPpRtiv Me Coadbele CAasspeambbllye. EPR Capable (Passive Cable) Static Shall The bit is a bit which only be set when the cable is specifically designed 6fo.r4 s.a4f.e3 o.p1e.6ra.t6ion when carryi n Cg aubp lteo L48a tveolntsc ayt F5i aemldps. Cable Latency (Passive Cable) Shall The field (B16…13) contain a value corresponding to the signal latency t6h.r4o.u4g.h3 t.1he.6 c.a7ble which can b e Cuasebdl eas T aenr amppirnoaxitmioatnio Tn yfopre it Fs ileenlgdth. Cable Termination Type (Passive Cable) Shall Passive Cable VCONN Discover IdentityCommand The Passive Cable VCONN field (B12…11) contain a value indicating whetChaerb lteh Pe lug needs only initially in order to support the, after which it can be removed, 6or. 4th.4e.3.1.6.8 needs M taox biem counmtin VuoBuUsSl yV aoplptaliegde i Fn ioerldder to power some feature of the. Maximum VBUS Voltage (Passive Cable) Shall Shall Negotiated Fixed Supply Explicit Contract Shall The vSrcNew vSrc Vfiaelldid (B10…9) contain the maMxaimxiummu vmo lVta BUg Se Vthoaltta ge (P baes sive Cable) using a Fixed Supp olyver the cable as Npaergto otfia atne d Ex wplhiceitr eC othnetr macatximum voltage that be applied to the cable is max + max. For example, when the Maximum VBUS Voltage (Passive field is 20V, a of 20V can be as part of an where the absolute maximum voltage that can be applied to the cable is 21.55V. Similarly, when the Cable) Fixed Supply Negotiated Explicit Contract Maximum VBUS Voltage (Passive Cable) field is 50V, a of 4S8hVa claln be as part of an where the absolute maximum voltage that can be applied to the cable is 50.9V. field values of 061.4b.a4n.d3.110.b6 (.9formerly 30V an d V 4B0UVS) Curr been ttr eHataend difl tihnegy wCaerpea 0b0ibl i(t2y0 VF)i.eld VBUS Current Handling Capability (Passive Cable) Shall The field (B6…5) indicate whether the cable is capable 6of. 4ca.4rr.y3in.1g.36A.1 o0r 5A. USB Highest Speed Field USB Highest Speed (Passive Cable) Shall DFP Shall DFP The Valid field (B2…0) indicate the DhiFgPhest rate the cable supports. The consider all values indicated in this field that are higher than the highest value that the recognizes as being and functionally compatible with the highest speed that the supports. Active Cable Cable Plug SOP’ Communication Active CableShall May An has a USB Plug on each end Aatc tlievaes Ct aobnlee oMf awyhich is a VBUS supporting. An incorporate data bus signal conditioning circuits and have a concept of Super Speed DireAccttiiovne aClaitbyl eon its Super Speed wires. An include a wire. An - Shall : SOP’ Communication - May respond toS OP’’ Communication. - Shal lrespond to Structured VDMDis.cover IdentityCommand - sDuipspcoorvte trh Ied entityCommand ACK. In tShhe all Product Type ID H:eader VDO Active Cable  Shall set the Active Cab lien VthDeO Tab tloe 6.42, \"Active. Cable VDO1\" Table6.43, \"Active Cable VDO2\" return the s defined in and.. Table6.42 Active Cable VDO1 Bit(s) Field Description HW Version VID Firmware Version VID B31…28 0000b…1111b assigned by the owner Version VDO Version B27…24 0000b…1111b assigned by the owner VDO Version - Number of the (not this specification ): Reserved Shall Not B23…21 Version 1.0 = 000b Reserved VSahlaulels 001b…111b are and be used. B20 - be setR toe s ze er rv oe.d Shall Not USB Type-C plug to USB - Reserved Shall Not 00b = and be used Type-C/Captive - USB Type-C 01b = and be used B19…18 - 10b = EPR Capable (Active - 11b = Captive EPR Capable Cable) - EPR Capable 0b – Cable is not B17 - 1b = CablR ee is se rved Shall Not - 0000b – and be used - 0001b – <10ns (~1m) - 0010b – 10ns to 20ns (~2m) - 0011b – 20ns to 30ns (~3m) - 0100b – 30ns to 40ns (~4m) Cable Latency - 0101b – 40ns to 50ns (~5m) - B16…13 0110b – 50ns to 60ns (~6m) - 0111b – 60ns to 70ns (~7m) - 1000b –1000ns (~100m) - 1001b –2000ns (~200m) - Reserved Shall Not 1010b – 3000ns (~300m) Note: Active Cable 1001b ….1111b and be used - Includes laR tee ns ce yr v oe fd electrS oh na icl sl N ino t. Cable Termination Type (Active Cable) - 00b…01b = and be uV sC eO dNN - VCONN B12…11 10b = One end Active, one end passive, required Shall 11b = Both ends Active, required 1) EVPalRu Seisn nko longer allowed. WheSnh parlelsent the field be interpreted as if it was 00b. 2) s with a captive cable report 50V. Table6.42 Active Cable VDO1 (Continued) Bit(s) Field Description VBUS - Maximum Cable voltage : Maximum VBUS Voltage (Active Cable) - 00b – 20V Deprecated - 1 Deprecated B10…9 01b – 30V ( ) - 10b – 40V ( ) Reserved Shall11b – 50V B8…7 SBU Supported - be set to zero. - B8 SBU Type When SBU Supported = 1 this bit be - When SBU Supported = 0: B7 - VBUS Through Cable Shall Ignored VBUS Through Cable When is “No”, this field be. VBUS Current Handling - Reserved Shall Not Capability (Active When is “Yes”: Cable) - 00b = and be used B6…5 - 01b = 3A - Reserved Shall Not 10b = 5A VBUS Through Cable - 11b = and be used - B4 SOP’’ Controller Present - 1 = YesSOP’’ - SOP’’ B3 - 1 = [U cS oB n t2 r. o0 l] ler present - [USB 3.2] 000b = only, no SuperSpeed support USB Highest Speed - [USB 3.2] [USB4] 001b = Gen1 (Active Cable) - [USB4] 010b = / Gen2 B2…0 - [USB4] 011b = Gen3 - Reserved Shall Not 100b = Gen4 Shall 101b…111b = and be used 1) EVPalRu Seisn nko longer allowed. WheSnh parlelsent the field be interpreted as if it was 00b. 2) s with a captive cable report 50V. Table6.43 Active Cable VDO2 Bit(s) Field Description Maximum Operating Temperature The maximum internal operating temperature in °C. It might or might not reflect the B31…24 Shutdown Temperature plug’s skin temperature. The temperature, in °C, at which the cable will go into thermal shutdown so as not to B23…16 Reserved eSxhcaeleld the allowable plug skin temperature. B15 - be set to zero. - 000b: >10mW - 001b: 5-10mW - U3/CLd Power 010b: 1-5mW - 011b: 0.5-1mW B14…12 - 100b: 0.2-0.5mW - 101b: 50-200µW - Reserved Shall Not 110b: <50µW 111b: and be used Table6.43 Active Cable VDO2 (Continued) Bit(s) Field Description U3 to U0 transition - mode - 0b: U3 to U0 direct B11 Physical connection - 1b: U3 to U0 through U3S - 0b = Copper B10 Active element - 1b = Optical - 0b = Active Re-driver B9 USB4 Supported - 1b = [ AU cS tiB v4 e ] R e-timer - [USB4] 0b = supported B8 [USB 2.0] USB 2.0 Hub Hops 1b = not supported Consumed SNhuamllber of ‘hub hops’ cable consumes. B7…6 USB 2.0 Supported - bese[ tU toS B z e2 r. o0 ] if USB 2.0 not supported. - [USB 2.0] 0b = supported B5 USB 3.2 Supported - 1b = [USB 3.2] not supported - [USB 3.2] 0b = SuperSpeed supported B4 USB Lanes Supported - 1b = SuperSpeed not supported - 0b = One lane B3 Optically Isolated - 1b = Two lanes Active Cable - 0b = No B2 - 1b = Yes USB4 Asymmetric Mode - Supported 0b = No B1 Shall1b = Yes - be set to zero if asymmetry is not supported. USB Gen - 0b = Gen 1 Note: B0 1b = Gen 2 or higher See VDO1 USB Highest Speed for details of Gen supported. HW Version VID T6h.4e.4.3.1.7.2 field (B31…2 8 F) Wcon Vtaeinrss iao HnW F vieerlsdion assigned by the owner. Firmware Version VID T6h.4e.4.3.1.7.3 field (B 2V7D…O24 V) ecornstiaoinns Fai FeWld version assigned by the owner. VDO Version VDOVersion VDMVersion Active Cable VDO The field (B23…20) contains a for this number. This field indicates the 6ex.p4e.4ct.e3d. 1co.7nt.4ent for the Connectos.r Type Field USB Type-C plug to USB Type-C/Captive Shall USB Type-C USB Type-C USB Type-C The field (B19…18) contain a value indicating whether the opposite end from the plug is another plug (i.e., a detachable Standard Cable Assembly) o6r. 4is. 4a.C3a.p1t.i7ve.5 Cable Assembly. EPR Mode Capable EPR Capable (Active Cable) Static Shall The is a bit which only be set when the cable is specifically designed for s6a.f4e. o4p.3er.a1t.i7on.6 when carrying u pC atob 4l8e vLoalttse ant c5y a mFipesl.d Cable Latency Shall The field (B16…13) contain a value corresponding to the signal latency through the cable which can be used as an approximation for its length. Cable Termination Type (Active Cable) Shall Active Cable Cable Plug VCONN The field (B12…11) contain a value corresponding to whether the Maximum VBUS Voltage (Active Cable) Shall Shall Negotiated Explicit Contract Shall vSrcNew The vSrcValid field (B10…9) contain the maximum voltage that beA PDO as part of an where the maximum voltage that be applied to the cable is Mmaaxx i+m um VBUS V moaltxa. gWeh (eAnc tthivies fCiealbdl eis) set to 20V, the Fcaixbelde Swuipllp slayfely carry a ProNgreagmotmiaatebdle Power SuppElyx plicit oCfo n2t0rVa cwthere the absolute maximum voltage that can be applied to the cable is 21.55V. SMimaixlaimrlyu,m w Vhe Bn U St hVeo ltage (Active Cable) field is 50V, a oSfh 4a8llV can be as part of an where the absolute maximum voltage that can be applied to the cable is 50.9V. SBU Supported Shall T6h.4e.4.3.1.7.10 field (B8) SBU i nTdyicpaete F wiehledther the cable supports the SBUs in the cable. SBU Type Shall T6h.4e.4.3.1.7.1 fi1eld (B7) i nVdBicUaSt eC wuhrertehnert tHhea SnBdUlsi narge Cpaaspsiavbe iolri tayc tFiviee (led.g., digital). VBUS Current Handling Capability (Active Cable) Shall VBUS Current Handling Capability (Active Cable) Shall Valid VBUS TCuhrer ent Handling Capability (Active Cable) field (B6…5) inVd Bi Uc Sate whether the cable is capable of carrying 3A or 5A. The field only be when the VBUS Through Cable Shall VBUS T6h.4e.4.3.1.7.13 field ( BS4O)P '' Co inndtricoaltele wrh Petrheesre thnet cFaibelel dcontains an end-to-end wire. SOP’’ Controller Present Shall Cable Plug SOP’’ Communication NormativeSOP’ Communication The field (B3) indicate whether one of the s is capable of USB Highest Speed (Active Cable) Shall DFP Shall DFP The Valid field (B2…0) indicate the hiDgFhPest rate the cable supports. The consider all values indicated in this field that are higher than the highest value that the recognizes as 6be.4in.g4.3.1. 7an.1d5 functionally co mMpaaxtiibmleu wmith O thpee hriaghtienstg s pTeeemd tpheatr tahteu re F siueplpdorts. Maximum Operating Temperature Shall field (B31…24) report the maximum allowable operating temperature i6n.s4id.4e.t3h.e1 p.7lu.g1 i6n °C. Shutdown Temperature Field Shutdown Temperature Shall Active CableStatusMessage field (B23…16) indicate the temperature inside the plug, in °C, at which the plug will shut down its active signaling components. When this temperature is reached, it will be reported in the U3/CLd Power Shall [USB 3.2] [USB4] The field (B14…12) indicate the power the cable consumes while in U3 or C6L.4d..4.3.1.7.18 U3 to U0 Transition Mode Field U3 to U0 transition mode Shall The field (B11) indicate which U3 to U0 mode the cable supports. This does not include the power in U3S if supported. Physical connection Shall The field (B10) indicate the cable's construction, whether the connection between the 6ac.t4iv.4e.e3le.1m.e7n.t2s0 is copper or op tAiccatli.ve element Field Active element Shall The field (B9) indicate the cable's active element, whether the active element is a re-timer or 6a.r4e-.d4r.i3v.e1r..7.21 USB4 Supported Field USB4 Supported Shall [USB4] T6h.4e.4.3.1.7.22 field (B8 ) U SB 2 in.0di cHauteb w Hheothpesr Coro nnostu thme ecadb lfei esuldpports operation. USB 2.0 Hub Hops Consumed Shall The field (B7…6) indicate the number of USB 2.0 'hub hops' that are lost due 6to. 4th.4e.t3ra.n1s.m7.i2ss3ion time of the cUaSbBle. 2.0 Supported Field USB 2.0 Supported Shall [USB 2.0] T6h.4e.4.3.1.7.24 field ( B U5)S B 3.2 in Sduicpatpe owrhteetdhe Fr ioerl ndot the cable supports only signaling. USB 3.2 Supported Shall [USB 3.2] The field (B4), indicate whether or not the cable supports SuperSpeed 6si.g4n.a4li.n3g..1.7.25 USB Lanes Supported Field USB Lanes Supported Shall [USB 3.2] The field (B3) indicate whether the cable supports one or two lanes of 6Su.4pe.4rS.3pe.1ed.7 s.i2gn6aling. Optically Isolated Active Cable Field Optically Isolated Active Cable Shall Active Cable [USB Type-C 2.4] Active Cable Shall The field (B2) [US Bin 2d.i0ca]te whetheVr B t Uh Sis cable is an optically isolated or not (as defined in ). Optically Isolated s have a re-timer or linear re-driver 6(L.R4D.4).a3s. t1h.e7 a.2ct7ive element an d U dSoB n4ot A suspypmormt etric Mo odr eca Srruyp por.ted Field USB4 Asymmetric Mode Supported Shall Active Cable [USB4] [USB Type-C 2.4] The field (B1) indicate that the supports asymmetric mode a6s. 4de.4fi.n3e.d1 i.n7.28 and USB Gen.Field USB Gen Shall Shall [USB 3.2] May [USB 3.2] [USB4] The field (B0) indicate the signaling Gen the cable supports. Gen 1 only beU uSBse Hd ibgyh est Speed c(Aabctleivse a Cs ainbdleic)ated by the USBSh 3a.2ll Supported field. Gen 2 or higher be used by either or cables as indicated by their respective supported fields. When Gen 2 or higher is indicated the Alternate Mode Adapter AMA VDO Deprecated PDUSB Device Alternate Mode Shall Product Type UFP Shall Modal Operation Supported The ( ) has been. s which support one or more s set an appropriate ( ), and set the bit to '1'. VCONN Powered USB Device VPD VDO Shall Product Type VCONN Powered USB Device Table6.44, \"VPD VDO\" VPD Shall The ( ) defined in this section be sent when the is given as. Tabl ede6fi.4n4es VthPeD VD OVDO which be sent. Bit(s) Field Description HW Version VID Firmware Version VID B31…28 0000b…1111b assigned by the owner Version Version B27…24 0000b…1111b assigned by the owner VDO Version - Number of the VDO (not this specification ): - Reserved Shall Not B23…21 Version 1.0 = 000b Reserved ShallValues 001b…111b are and be used. B20 17 be seV tP tD o V zeB rU oS. - Maximum Voltage: Maximum VBUS Voltage - 00b – 20V Deprecated - 1 Deprecated B16…15 01b – 30V ( ) - 1 Deprecated 10b – 40V ( ) Charge Through1 Current Support 11b – 50V ( ) - bit=1b: Charge Through - Current Support 0b - 3A capable. B14 Charg1eb T -h 5rAo ucgapha Cbulerrent Support - Reserved Shall bit = 0b: Reserved Shall and be set to zero. B13 Charg e b eT sh er to tu og zh e rC ou.rrent Support VBUS VPD VBUS Impedance Reserved Shall Not bit = 1b: impedance through the in 2 B12…7 CmhΩa ringcer Temhreonutsg.h V Caluurerse lnets sS uthpapno 1rt0 mΩ are Reserved and Shall be used. Charge Through Current Support VPD bit = 0b: and be set to zero. Ground Impedance Reserved Shall Not bit = 1b: Ground impedance through the in Charge Through Current Support Shall B6…1 1 mΩ increments. Values less than 10 mΩ are and be used. Charge Through - VPD Charge b T ith =ro 0u bg :h be set to zero. Support - VPD Charge Through 1b – the supports B0 Shall 0b – the does not support 1) Values no longer allowed. When present the field be interpreted as if it was 00b. HW Version VID T6h.4e.4.3.1.9.2 field (B31…2 8 F) Wcon Vtaeinrss iao HnW F vieerlsdion assigned by the owner. Firmware Version VID T6h.4e.4.3.1.9.3 field (B 2V7D…O24 V) ecornstiaoinns Fai FeWld version assigned by the owner. VDO Version Version VDMVersion The field (B23…20) contains a VDO for this number. This field indicates the 6ex.p4e.4ct.e3d. 1co.9nt.4ent for this VDO. Maximum VBUS Voltage Field Maximum VBUS Voltage Shall SinkShallNegotiate VPDCharge Through Port Explicit Contract The field (B16…15) contain the maximum voltage that a tNhortoeu:gh the as part of an v.SrcNew vSrcValid Maximum VBUS Voltage Fixed Supply Negotiated The maximum voltage that will be applied to the cable is max + max. For example, when the field is 20V, a of 20V can be as part of an Explicit Contract Maximum VBUS Voltage Shall where the absolute maximum voltage that can be applied to the cable is 21.55V. field values of 01b and 10b (formerly 30V and 40V) be treated if they were 6.4.4.3.10.09b. 5(20V). VBUS Impedance Field VBUS Impedance Shall VPD Source Sink SinkShall VBUSIR Drop The field S(oBu1r2c…e7) contain Sthinek impedance the adIdRs Dinr osperiesV b Be Ut SweeMna tyhe and the. The take this value into account when requesting current so as to not to exceed the l6im.4it.4 o.f3 0..15V.9 b.6etween the G arnodu intsdel fI. mIf tphee dan ccean F tioelelrdate a larger on it do so. Ground Impedance Shall VPD Source Sink SinkShall IR DThroep field (B6S…ou1r)c e contain the impedance the adds in series between the and the. The take this value into account when requesting current so as to not to exceed the Ground Firmware Version Shall VPD Charge Through The field (B0) be set to 1b when the supports and 0b otherwise. Discover SVIDsCommand Initiator SVID Responder Discover SVIDsCommand Discover ModesCommand Discovery Process The is used by an toS dVeIDtermine the s for which a has ModeSsV.I TDhe is used in conjunction with the in the to deteSrmVIiDne whichD iMscoodveesr a S dVeIvDisceC osumpmpaonrtds.S Thhaell list of s is always termTinaabtleed6.w31it,h \" SoVnIeD o Vra tlwueos 0\"x0000 s. Initiator Responder Command The in the be set to the PD SID (see \" ) by both the Num abnedr tohfe D ata Objec tfsor this Mess.a ge Header Discover SVIDsCommand Shall Discover SVIDsCommand Shall Not The field in the in the request be set to Table6.45, \"Discover SVIDs Responder VDO\" TSVhIeD Discover S VIDsCom mand sent back by the S VID contain one or more s. The s are returned 2 per VDO (see SVID Discover SVIDs)C. oIfm tmhearned are an odd number of supported s, the SVID is returned ending with a Resp voanldueer oSfh 0axl0l000 in the lasStV pIDart of the last VDO. IDf itshceorvee arr Me oand eesvCenom nummanbder of supported SVIsD, the Alterna itse r Metoudrened ending with an additional VDO containing two s with values of 0x0000. A only return s for which a Responder request for tShVaItD Sha wllill return NatA lKeast one. A Number t ohfa Dt daotaes O nbojte csutspport any Mess sage H reeatduerrn a D.iscover SVIDsCommandNAK BUSY Shall Shall Not The field in the in the and responRseesps onder be set to 1 since they SVID contaDinis acnoyv eVrD SOVsI.DsCommandShall Discover SVIDs SVID If the supports 12 oSrV mIDore s then the SVID ACKM bees seaxgeecuted multiple times until a VDO is returSnVeIdD enSdhianlgl either withS Va ID valRuees opfo 0nxd0er00Sh0 ainll the last part of theS VlaIDst VDO or withD ai sVcDovOe cro Indteanintiitnyg Ctowmom ands with values of 0x0000. EachI Dniitsicaotvoerr, other than the one containing the terminating 0x0000, convey 12 s. The restart the list of s each tNimotee :a Cable Pl ug requesMt iess rseacgeeived froGmo othdeC RCMessa.ge Initiator Cable Plug Discover SVIDsCommandACK SSVinIcDe a does not retry s if the from the becomes corrupted the will consider the unsent and will send the same list of Figure 6.18, \"Exsa amgpailen.Discover SVIDs response with 3 SVIDs\" Discover SVIDs Command SVID Figure 6.19, \"Example Discover SVIDs response with 4 SVIDs\" shows aSnV IeDxample response to the reqFuiegsutr we i6t.h2 0tw, \"oE xVaDmOpsl ec oDnistcaoinvienrg S VthIDrese r esponss. e with 12 SVIDs followed by an empty response\" shows an example response with two VDOs ScoVnIDtaining four s followed by an empty VDO to terminate the response. SVID shows an example response with six VDOs containing twelve s followed by an additional request that returns an empty VDO indicating there are no moreT ables 6to.4 r5e t Durisnc.over SVIDs Responder VDO Bit(s) Field Description SVID Responder SVID 16-bit unsigned integer, assigned by the USB-IF or 0x0000 if this is the B31…16 n SVID last VDO and the supports an even number of s. Responder SVID 16-bit unsigned integer, assigned by the USB-IF or 0x0000 if this is the B15…0 n+1 last VDO and the supports an odd or even number of s. Figure 6.18 Example Discover SVIDs response with 3 SVIDs VDO 1 VDO 2 Header VDM Header No. of Data Objects= 3 SVID 0 SVID 1 SVID 2 0x0000 (B31..16) (B15..0) (B31..16) (B15..0) Figure 6.19 Example Discover SVIDs response with 4 SVIDs VDO 1 VDO 2 VDO 3 Header VDM Header No. of Data Objects= 4 SVID 0 SVID 1 SVID 2 SVID 3 0x0000 0x0000 (B31..16) (B15..0) (B31..16) (B15..0) (B31..16) (B15..0) Figure 6.20 Example Discover SVIDs response with 12 SVIDs followed by an empty response VDO 1 VDO 2 VDO 3 VDO 4 VDO 5 VDO 6 Header VDM Header No. of Data Objects= 7 SVID 0 SVID 1 SVID 2 SVID 3 SVID 4 SVID 5 SVID 6 SVID 7 SVID 8 SVID 9 SVID 10 SVID 11 (B31..16) (B15..0) (B31..16) (B15..0) (B31..16) (B15..0) (B31..16) (B15..0) (B31..16) (B15..0) (B31..16) (B15..0) VDO 1 Header VDM Header No. of Data Objects= 2 0x0000 0x0000 (B31..16) (B15..0) Discover ModesCommand Initiator Responder SVID The is used by an to determine the Modes a supports for a given S. VID Discover ModesCommandShall SVID Initiator Responder Command The in the be set to the for which Modes are being requested by both the Number a onfd D tahtea Objects for this Message.H eader Discover ModesCommand Shall Discover ModesCommand Shall Not The field in the in the request be set to ModesCommandACKShall Message Header Number of Data Objects The A sletnertn baatcek M boyd tehe contain one VoIrD more Modes. The contain a with the field set to a value of 2 to of the VDO is left to the Vendor. If the ID is a SID, the structure and content of the VDO is defined by the relevant staRnedspaordn’dse brody. Shall NAK A Number t ohfa Dt daotaes O nbojte csutspport any MoMdeesss age He raedtuerrn a D.i scover ModesCommandNAK BUSY Shall Shall Not The field in the in the and rFeigspuroen 6se.2s1, \"Exa bmep slee tD tios c1o vsienrc Me othdeeys response f ocro an tgaiivne nan SyV VIDD wOsit.h 3 Modes\" Discover ModesCommand Responder SVID shows an example of a Fi greusrpeo 6n.s2e1 f rEoxmam a ple Discov ewrh Micohd seusp preosrptso tnhsree ef oMro ad geisv feonr Sa VgIivDe wn ith 3. Modes Header VDM Header Mode 1 Mode 2 Mode 3 No. of Data Objects= 4 Enter ModeCommand Initiator DFP Responder UFP Cable Plug Alternate Mode DFPShall Enter Mode The iDsi sucsoevde rbyy Parno cess ( ) to command a ( or ) to enter a specified of operation. Only a initiate the Process which it starts after it has successfully completed the V.DM HeaderShall Alternate Mode Discover ModesCommand Figure 6.21, \"Example Discover Modes response for a given SVID with 3 MThoed evsa\"lue in the Object Position field in the Alternate M ode indicate to which iVnD tMhe H eader the VDOA rlteefernrsa t(es eMeo de ). The value 1 always indicates the first as it is the first object following the. The valueN u2m rebfeerrs o tfo D tahtea n Oebxjte cts M aensds asgoe f oHretahd.er Command Shall Enter ModeCommand Shall Not Enter Mode TCohme mand field in the in the Altern arteeq Mueosdte be set to either 1 or 2 since the request contain more than 1 VDO. When a VDO is included in an Numb reerq oufe Dsta tthae O cbojnetcetnsts of the 32-Cboitm VmDaOn ids defined byS hthaell. Enter ModeCommand ACK NAK Shall Not The field in the response be set to 1 since an response (, Alt)e rnate Mod econtain any VDOsE.nter ModeCommand Alternate Mode InitiatorShall Before enUtSeBr iSnagf ea State, by sendinAgl ttehren ate Mode request that requires the reconfiguring of aRneysp poinndse ornS henatlrly to that, the ensure that those pins being reconfigured aUrSeB p Slaacfeed iSntatote the. Before entering an that requires the reconfiguring of any pins, the ensure that those pins being reconfigured are placed into either USB operation or the. May Active Mode Modal AO pdeervaitcieo nSha slulpport multiple Modes withA lotneren oart em Moroed aective at any point in time. Any interactions between them are the responsibility of the Standard or Vendor. Where there are multiple s at the same time start on entry to the first. Enter ModeCommand ResponderShall ACK NAK Responder BUSY OEnnt reerc MeiovidnegC aonm mand Shall requests the respond wEnitthe re iMthoedre aCno mma onrd a response. The is not allowed to return a response. The value in the Object Position field of the Respon der response Enter c MonotdaeinC tohmem saamnde value as the receAivCeKd Responde rShall request. Alternate Mode ACK InitiatorShall Alternate Mode ACK If the responds to thMe essage Rreesqpuoensdt ewrith an In,i ttihaet or A ectnitveer M thoed e before sending the. The enter the on reception of the. SuccFeisgsufruel t8r.1an1s1m, \"iDssFiPo nto o Uf FthPe E nter Mod ceo\"nfirms to the that the will enter an. See Responder Enter Mo dfoerC momorme adnedtails. NAK Alternate Mode Modal Operation InitiatorShall Modal Operation If thRee sponderSh raelslponds to the reqUuSeBs tS wafieth S taa te, the is not entered. If not presently in the return to USB operation. If not presently in the Initiator remain in either USB operattiVonD MorW thaeit ModeEntry.Shall Not Alternate Mode If the fails to receive a response within it enter the but rFeigtuurrne 6to.2 U2S, \"BS uocpceersastfiuoln E.nter Mode sequence\" Alternate Mode Responder Alternate Mode Initiator Alternate Mode Figure s6h.2o3w, \"sU thnesu scecqeussefnucl eE notf eerv Menotdse d suerqiunegn tchee d turea ntosi NtioAnK \"between USB operation Raensdp oenndteerring an NAK. It illustrates Awltheernn athtee Mode 's chaRnegsepso anndde rwhen tInhiet iator 's changes. illustrates that when the returns a the transition to an do not take place and the and remain in their default UFSiBg urorele 6s..22 Successful Enter Mode sequence DFP (Initiator) UFP (Responder) USB USB or USB Safe State Enter Mode GoodCRC USB Safe State ACK New Mode New GoodCRC Mode Figure 6.23 Unsuccessful Enter Mode sequence due to NAK DFP (Initiator) UFP (Responder) USB USB or USB Safe State Enter Mode GoodCRC USB Safe State NAK GoodCRC USB Alternate Mode Shall Active Mode Exit ModeCommand Section 6.4.4.3.5, \"Exit Mode Command\" Once the is entered, the device remain in that until the is successful (see Shall Port Partner). Cable Plug Active Mode The- followingH eavredn Rtse set also cause the s and (s) to exit all s: - AEr ProDr Recovery. - Port Partne.r Cable Plug Detached - ThCea ble Reset s or Cab(lse) Palrueg Active M. ode - A Data Reset (only exits the 's Asc)ti.ve Mode Cable Plug InitiAa torShall (removing power briefly resettsV aDllM thEex itMode s in the Hard). ResetSignaling Error Recovery The return to USB Operation within of a disconnect, of being deteRcteesdp oonr derShall. USB Safe State tVDMExitMode Hard ResetSignaling Error Recovery The return to either USB operation or within of a disconnect, of DR_Swap MessageS bheailnl gN doettected or Modal Op.eration Port Partner Section 6.3.9, \"DR_Swap Message\" A be sent during between the s (see Exit ModeCommand Initiator DFP Responder UFP Cable Plug Active Mode DFPShall Exit Mode The is used by an ( ) to command a ( or ) to exit its and return to normal USB operaSthioanll. Only the A litneirtniaattee tMheo de Di Pscroovceesrs M. odesCommand Figure 6.21, \"Example Discover Modes response for a given SVID with 3 Modes\" Shall The value in the ObjecEt nPtoesrit Mioond feieCldo mman idndicate to whichA ctive Mode in the the VDO refers (see ) and have been used previously in an request for an. The value 1 always indicates the first Alternate Mode VDM Header Alternate Mode Shall Active Mode Shall as it is the first object following the. The value 2 refers to the next and so foNrtuhm. Ab evra loufe D oaf t1a1 O1bb jienc tthse Object PositionC foiemldm and indicate thaCto amll mand s AC KbeN eAxiKtedS.hall Exit ModeCommandShall Not The field in both the request and response (, ) be set to 1 sRienscpeo annd erShall Active Mode contain any VDOs. Message InitiatorShall Active Mode ACK ResponderShall Not BUSY Shall TNhAeK exit its before sendiAngct tihvee Mreosdpeonse Invalid. The eInxiitt iiattso r when it receAivCeKs the tV. TDhMeW aitMode Exit return aN AK aBcUkSnYowledgmenSth aanldl oAnclyti rveet Murond ae acknowledgment to a request not containing an (i.e., object position). An which failsF tiog urerece 8i.v1e1 a2n, \" DFP wtoi tUhFinP Exit Mode\" or receives a or response exit its. FSeigeu re 6.24, \"Exit Mode sequence\" for more details. Active Mode Responder Alternate Mode Initiator Alternate Mode shows the sequence of events during the transition between exiting an and USB operation. It illustrates when the 's changes and when the 's changes. Figure 6.24 Exit Mode sequence DFP (Initiator) UFP (Responder) Mode Mode Exit Mode GoodCRC USB Safe State ACK USB or USB Safe State GoodCRC USB AttentionCommandMay Initiator Responder The be usedS hbay ltlhe to notiAfyl ttehren ate Mode that iDt irsecqouvierre sM soedrveisceC.ommand Figure 6.21, \"Example Discover Modes response for a given SVID with 3 Modes\" Shall The value in the ObjecEt nPtoesrit Mioond feieCldo mman idndicate to whichA ctive Mode in the the AVlDteOr nreafteer Ms (osdeee VDM Header ) aAnldte rnate hMaovdee been used previously in an request for an Shall Not. The value 1 aAlwttaeynst iionndiCcoatmesm tahned first as it is the first object following the. The value 2 refers to the next and so forth. A value of 000b or 111b in the Object Position field be used by the. Number of Data Objects Message HeaderShall AttentionCommandShall Not AttentionCommand The Alternate Mode field in the be set to 1 or 2 since the contain more than 1 VDO. When a VDO is included in an the contents of the 32-bit VDO is dFiegfuinreed 6 b.2y4 t, h\"Ee xit Mode sequen.ce\" AttentionCommand Figure 6.s2h5o Awtst ethneti soenq uCeonmcem oafn edv ernetqsu wehste/nr eansp onse seq uence is received. Responder Initiator Command (Attention) GoodCRC Command Complete Message Command Command GoodCRCMessage GoodCRCMessage Command The flow of s during a ProRceesspso ins dae qruery followed by a response. Every SVID reFqiguuerset 6se.2n6t, h\"Caosm tom baen rde rsepqounedset/dr teos pwointshe a s equence\". The only indicates the GoodCRC reMqeusesastg weas received correctly; it does not mean that the understood or even supports a particular. shows the request/response sequence including the s. Figure 6.26 Command request/response sequence Initiator Responder Command (request) GoodCRC Command (response) GoodCRC Command Complete Initiator Command Responder Responder Command In order for the to know that the request was actually consumed, it needs an acknowledgment from the. There are three responses that indicate the received and processed the req- uest:ACK - NAK - BUSY ResponderShall The- Enter M ode complete: tVDMEnterMode - Exit Mode requests withintV DMExitMode. - requests witthViDnM ReceiverRespo.nse InitiaOtothrer requests within. Shall PE_SRC_Ready PE_SNK_Ready An not receiving a response within the following times timeout and return to either the - Enter M oord e statteV D(aMs WapapirtoMpordiaetEen):try - Exit Mode requests withintV DMWaitModeExit. - requests witthViDnM SenderResponse. RespOotnhdeer rrSeqhuaellsts within. The- ACK respond wiStVhI:D - NAK if it recognizes the and can process it at this time.  : SVID Command if it recognizes the but cannot process the request  SVID  or if it does not recognize thCeo mma nd  or if it does not support the Invalid - BUSoYr if a VDO contains a SfVieIlDd which isC omman.d Command ACK NAK if it BreUcSoYgnizes the Shal land the SbVuItD cannot pCroomcemsas nthde request at this time. 6Th.4e.4.4,.1 or r eDspisoncsoev ery cPornotacine tshse same as the request. Initiator DFP Discovery Process Discovery Process Discover SVIDsCommand Initiator SVID Responder The (usually the ) alwIanyitsi abteogrins the Discover Modes. CTohme mand has tSwVoID phases. In the first phasIen,i tthiaet or Responde r request is sent by the to get the list of s the supports. In the second phase, the sends a request for each supported by 6bo.4th. 4th.e4.2 and Enter. Vendor Mode / Exit Vendor Mode Processes Discovery Process Initiator Responder Initiator DFP Alternate Mode Enter ModeCommand TAlhtee rrneastuel tM oof dthee is that both the and identify the Modes they mutually support. The ( ), upon finding a suitable, uses the to enable the Responder.UFP Cable Plug Initiator Active Mode Active Mode The ( or ) anEdx it ModeC coomnmtinauned usingA cthtiev e ModeShall until the is exited. Section 6.4.4.3.5, \"Exit Mode Command\" In a managed termination, using the, the be exited in a controlled manner as described in. In a- n unmanaged terminatHioanrd, t Rriegsgeetred bHya:rd ResetSignaling Port Partner - A Power DDeetlaivcehry (i.e. sent by either ) or - By cEarbrloer Recove (rdyevice unplugged) or ActivBey M odeShall Shall Not USB Safe State the still be exited but there I bniet iaa ttorarnsitioRne stphornoduegrh the. [USB Type-C 2.4] Alternate Mode In both the managed and unmanaged terminations, the and return to USB operation as defined in Message following an exit fromF iagnu re 6.27, \"Enter/E.xit Mode Process\" The overall flow is illustrated in. Figure 6.27 Enter/Exit Mode Process Initiator (DFP) Responder (UFP or Cable Plug) Establish PD Contract Discover SVIDs USB List of SVIDs For every DFP supported SVID Discover Modes (SVID) USB or USB Safe State Modes for SVID Stay in USB mode N Modes Supported? USB or USB Safe Y State Enter Mode USB Safe State ACK (Responder switched to Mode) Alternate Mode Initiator and Responder operate using Mode N Alternate Mode Exit Mode or PD Hard Reset or cable unplugged or power removed? USB USB Y Return to USB mode VDM Message Shall AMS Shall Unstructured VDM Structured VDM The timing and interspersing of s between regular PD s be done without perturbing the PD s. This requirement apply to both s and s.", "tables": ["Table 6.28", "Table 6.2a", "Table 6.32", "Table 6a", "Table 6.33", "Table 6.38", "Table 6.39", "Table 6.41", "Table 6.41", "Table 6.42", "Table 6.43", "Table 6.43", "Table 6.45"], "figures": ["Figure 6.16", "Figure 6.18", "Figure 6.18", "Figure 6.19", "Figure 6.20", "Figure 6.23", "Figure 6.21", "Figure 6.21", "Figure 6", "Figure 6.26", "Figure 6.27"], "page_range": [162, 195]}
{"section_path": "6.4.5 Battery_Status Message", "start_heading": "6.4.5 Battery_Status Message", "content": "Structured VDM InitiatorShall Not Message Shall Initiator Responder AMS Negotiation Power Role Swap Data Role Swap The use of Unstructurse db yV DanM Shall N ot interfere with the nMoersmsaagl ePD timing requirements nor either the or interrupt a PD (e.g.,,, e6tc.4.)..T5he use of Battery_Stsa tus Me instesrafegree with normal PD timing. Battery_StatusMessageShall Get_Battery_StatusMessage Battery_Status Message Number oTfh Be atteries/Batter y Slots be sSeonut rince r_eCsappoanbseil ittoi eas _ExtendedMessage. The Shall contains oBnaet Bteartytery Status Data ObBjeacttt e(BryS DStOa)t fuosr Roenfe of the Batteries it suppGoertt_sB aast rteerpyo_rStteadt buys Message field in the. The returned BSDO correBsaptotenrdy t_oS ttahteu sMessa greequested in the Sha flileld contained in Fthigeu re 6.28, \"Battery_Sta tus. Message\" Table6.46, \"Battery Status Data Object (BSDO)\" Number of Data Objects TBhaett ery_StatusMes sageSha lrleturns a BSDO whose format be as shown in and. The field in the be set tFo i1g.ure 6.28 Battery_Status Message Header BSDO No. of Data Objects = 1 Table6.46 Battery Status Data Object (BSDO) Bit(s) Field Description Battery Present Battery Capacity Note: Battery ’s State of Charge (SoC) in 0.1 WH increments B31…16 Bit 0xFFFF = ’s SOC unknownDescription Invalid Battery Reference InvalidBattery Battery Present reference Battery Battery Charging Status is present when set Battery Present Shall Battery Battery Info - Battery When is ‘1’ contain the charging status: B15…8 - Battery 00b: is Charging. - Battery 01b: is Discharging. 3…2 - Reserved,Shall Not 10b: is Idle. 1B1abt:t ery Presen t be used. - Reserved,Shall Not When is ‘0’: Reserved,Shall Not 11b…00b: be used. Reserved Sh7a…ll4 be used. B7…0 be set to zero Battery Present Capacity Shall Battery Battery The field return either the 's State of Charge (SoC) in tenths of WH or indicate that the 's present State of Charge (SOC) is unknown. Battery Info Shall Battery Battery Info Shall Battery The field be used to report additional information about the 's present status. The Invalid Battery Reference Shall Get_Battery_StatusMessage Battery Battery Slot Section 6.5.1.13, \"Number of Batteries/Battery Slots Field\" The bit be set when the contains a reference to a 6.4.5. 2or.2 ( s Beea ttery Present ) that does not exist. Battery Present Shall Battery Shall Battery Present Shall BTahtet ery Attached bDite tache dbe set whenever the is present. It always be set for Batteries that are not Hot Swappable Batteries. For Hot Swappable Batteries, the bit indicate whether the 6.4.5. 2is. 3 or Batte.ry Charging Status Battery Charging Status Battery Shall Battery Present Battery TPhrees ent Battery b Cithsa inrgdiincagt eS twahtuesther thShe all is being charged, discharged or is idle (neither charging nor discharging). These bits be set when the bit is set. Otherwise, when the bit is zero the bits also be zero.", "tables": ["Table 6.46"], "figures": [], "page_range": [196, 197]}
{"section_path": "6.4.6 Alert Message", "start_heading": "6.4.6 Alert Message", "content": "AlertMessage Port Partner OCP OVP OTP TBhatet ery is provided to allow s to inform each other when there is a status change event. Some of the events are critical such as, and, while others are informational such as change in a Ale'rst sMtaetsussa fgreoSmh achllarging to neither chargiSnogu nrocer disScihnakrging. The Alert Message Shall only be sent when the or detects a status changeS. hall Figure 6.29, \"Alert Message\" Table6.47, \"Alert Data Object (ADO)\" The contain exactly one Alert Data Object (ADO) and the format be as shown in and Figure 6.29 Alert M. essage Header ADO No. of Data Objects = 1 Table6.47 Alert Data Object (ADO) Bit(s) Field Description Bit Description Reserved Shall Battery Status Change Event Battery Attach Detach OCP Event idle) OCP Source SinkReserved Shall OTP Event zero). Type of Alert OTP B31…24 Operating Condition Change event when set Source Input Change Event Operating Condition Change when set Source OVP Event Input Change Event when set OVP Extended Alert Event event when set Fixed Batteries Extended Alert Event when set Battery Battery When bit set indicates which have had B23…20 Battery Status Change Event Hot Swappable a status change. B20 corresponds to 0 and B23 corresponds to 3. Battery Batteries When Battery bit set indicates which Hot Swappable B19…16 Batteries have had a status change. B16 corresponds to 4 and B19 corresponds to 7. Table6.47 Alert Data Object (ADO) (Continued) Bit(s) Field Description Reserved Shall Extended Alert Event Type of Alert B15…4 be set to zero Extended Alert Event Type When the bit in the field equals ‘1’, then the - Reserved field indicates the event which has occurred: - DFP Extended Alert Event - UFP Type - UFP B3…0 - UFP - Reserved Extended Alert Event Type of Alert 5-15 = Extended Alert Event Type Reserved Shall When the bit in the field equals ‘0’, then the field is and be set to zero. Type of Alert Shall Source Sink AlertMessageShall May AlertMessage TAhleer tMessage field be uTsyepde t oo fr Aepleorrtt Sh aolrl status changes. Only one be generated for each Event or Change; however multiple Type of Alert bits be set in one. Once the Get _Battery _hSatas tbueseMn esessnatg tehSeh ould field be cleBaartetder.y AlertMessage A be sent in response to a status change in an to get the deGtaeitl_sS otaf tthues cMheasnsageg.eShould Battery AlertMessage A be sent in response to a non- status change in an from to get 6th.e4 d.6et.a1il.s1 of the change.Battery Status Change Battery Status Change Event Shall Battery Shall Battery Attached Detached The bit be set when any 's power state changes between charging, 6di.s4ch.6ar.g1in.2g, neither. Fo r OHovte Srw-aCpuparbrlee nBatt Pterrioest,e itc tion a Elsvo ebne stet when a is or. OCP Event Shall Source Reserved Sink The bit be set when a detects its output current exceeds its limits triggering its protection c6ir.4cu.i6tr.y1..T3his bit is Ove rfo-rT ae mp.erature Protection Event OTP Event Shall Source Sink The bit be set when a or shuts down due to over-temperature triggering its protection c6ir.4cu.i6tr.y1..4 Operating Condition Change Operating Condition Change Shall Source Sink The bit be set when a or detects its Operating Condition enters or exitsO epitehreart itnhge 'Cwoanrdniitniogn' o Crh 'oavnegre tempSheraaltlure' temperatureS sotuartcees. Constant Voltage CV Current Limit CL The bit be set when the operating in the Programmable Power Supply m6.o4d.e6 d.e1t.e5cts it has chan gSeodu itrsc oep eIrnatpinugt c oCnhdaitinong ebe Etwveeenn t ( ) and ( ). Source Input Change Event Shall Source Sink Source Sink The Source Sink bit be sBeat twtehreyn the / 's input chanSgoeusr. cFeorS ienxkample, when the AC input is removed, anBda tthteer y / continues tBoa btete pryowered from one or more of its batteries or when AC returns and the / transitions from to AC operation or when the / changes operation from one (or more) to another (or more). OVP Event Shall Sink The bit be set when the detects its output voltage exceeds its limits triggering its protection circuOitVrPy. E vent May Source The bit be set when the detects its output voltage exceeds its limits triggering its protection 6cir.4cu.i6tr.y1..7 Extended Alert Event Extended Alert Event Shall T6h.4e.6.2 Fixe bdit Bat tbee rseiet wshen the event is defined as an Extended Alert Type. Fixed Batteries Fixed Batteries Battery Battery The field indicates which have had a status change. B20 corresponds to 0 and B23 cAolrerretsMpoenssdasg teo 3. Fixed Batteries Shall O6n.4ce. 6th.e3 H ohats Sbewena spenpt athbel e Batteries field be cleared. Hot Swappable Batteries Battery Battery The field indicates which Hot Swappable Batteries have had a status change. B16 corresponAdlesr ttoM essage 0 and B19 correspHonodt sS wtoa ppable 3B.atteries Shall O6n.4ce. 6th.e4 E xhtaes bnedene sden At tlheer t Event Types field be cleared. Extended Alert Event Type AlertMessage Extended Alert Event Type Reserved Shall The field provides extensions to the available types for the. If the May DFP Shall StatusMessage MessageShould The Power state change event value be set when the transitions into a new power state. The new power state be communicated via the Power state change byte in the. This be sent b6y. 4th.6e h.4os.2t in response t oP aonwy seyrs tBemu tptoowner P straetes cshange. May UFP The Power button press event value be set when the power button on the is pressed. The press and release events are separated into two different events so that devices that respond differently to a long button press will see a long button press. On the host-side, the power button press event typically initiates the same b6e.h4a.v6io.4r.a3s a power bu t tPono pwreesrs oBf uthtet ohonst R's epolewaers ebutton. Shall UFP If a Power button press event was senSth, othueldn the Power button release event value be sent by the following the Power button press event. If a physical power button press initiated the Power button press event, t6h.e4n. 6th.e4 P.4ower button r eCleoanset ervoelnlte r Init biae tseendt wWhaenk tehe physical button is released. UFP The Controller initiated wake is used to communicate a wake event from the to the DPF such as Wake on LAN from a NIC or another controller. This event doesn't need the press/release form of the Power button press, because it only needs to communicate the presence of the event, and not the timing.", "tables": ["Table 6.47", "Table 6.47"], "figures": [], "page_range": [198, 200]}
{"section_path": "6.4.7 Get_Country_Info Message", "start_heading": "6.4.7 Get_Country_Info Message", "content": "Get_Country_InfoMessageShall Port Port Partner [ISO 3166] Port Partner Country_Info TMhees sage be sent by a to geGt ecot_uCnoturyn tsrpye_cInififco iMnfeosrsmagaetiSohna flrlom its Figu re 6u.s3i0n,g \" tGheet _cCoouunnttrryy'_sI nAflop hMae-s2s aCgoeu\"ntry CToadbele d6e.f4in8e, \"dC boyu ntry Code D.a Ttah eO bject (CCDO) \"responds with a that contains the country specific information. The be as shown in and. For example, if the request is for China information, then the Country Code Data Object (CCDO) would be CCDO [31:0] = 434E0000h for \"CN\" countryF icgoudree. 6.30 Get_Country_Info Message Header CCDO No. of Data Objects= 1 Table6.48 Country Code Data Object (CCDO) Bit(s) Description [ISO 3166] [ISO 3166] B31…24 First character of the Alpha-2 Country Code defined by B23…16 SReecsoenrdv cehdarSahcatlelr of the Alpha-2 Country Code defined by B15…0, be set to zero.", "tables": ["Table 6.48"], "figures": [], "page_range": [201, 201]}
{"section_path": "6.4.8 Enter_USB Message", "start_heading": "6.4.8 Enter_USB Message", "content": "Enter_USBMessageShall DFP UFPPort Partner Cable Plug Active Cable Explicit Contract Mode MessageShall The A cceptMe ssage be Wseantit bMy ethssea ge to iRtse ject Message aSnedc ttioo nth 6e. 9, \"Accept, (Rse)j eocf ta ann d Wait\", when in an, to enter a specified USB of operation. The recipient of the respond by sending an [USB4 ], a E nter_USB orM ae ssageS hall (see [USB4]PDUSB Hub DFP [US)B. 4] PDUSB Host DFP tEnterUSB When entering operation, the be sent by a 's (s) or - 's (s) within : - followinDga taa P RDe sCeotnnection.[USB4] - after a Data Role S twoa epnter operation is completed. Entearft_eUrS aB MessageMay is completPeDd.USB Hub DFP PDUSB Host DFP tEnterUSB Data Reset [USB 3.2] [USB 2.0] The be sent by a 's (s) or 's (s) within following a PDE Cnotnenr_eUctSiBonM oers saaftgeerS ah all to entPeDr USB Hub oDrF P operation. [DPTC2.1] [TBT3]Alternate Mode Host Present Shall The Conn beec tuesded byE an ter_USBMe'sss ageS(sh)a tlol speculatively trainH thoes tU PSrBe sliennkts or enter Enter_USB oMre ssage s prior to the presence of a host. In this case, the USB Host bit be Sclheaalrled. When the Host is theH ub be resent with the bit set. The 's Enter USB Data Object (EUDO), received from the Root Hub when the is connected, [U bSeB p Tryoppea-gCa t2e.d4 ]down thrHouubgh the tree. ® See Enter_USBMessa gUeSSBh4al l Connection FRiegquurier e6m.31en, \"tEs.nter_USB Message\" Table6.49, \"Enter_USB Data Object (EUDO)\" The be as shown in and. Figure 6.31 Enter_USB Message Header EUDO No. of Data Objects= 1 Table6.49 Enter_USB Data Object (EUDO) Bit(s) Field Description Reserved Shall B31 - be set to zero. - USB Mode 000b: - B30…28 - Reserved,Shall Not 010b: Reserved Shall111b…011b: be used. B27 USB4 DRD - be set to zero. [USB4]Device - [USB4]Device B26 USB3 DRD - 1b: Capable of operating as a [US B 3.2]Device - [USB 3.2]Device B25 Reserved Shall1b: Capable of operating as a B24 - be set[ tU oS zB e r2 o.0. ] - [USB 3.2] 000b: only, no SuperSpeed support - [USB 3.2] [USB4] Cable Speed 001b: Gen1 - [USB4] 2,3 010b: Gen2 and Gen2 B23…21 - [USB4] 011b: Gen3 - Reserved,Shall Not 100b: Gen4 - 101b…111b: be used. - Cable Type 00b: Passive - 2,3 01b: Active Re-timer B20…19 - 10b: Active Re-driver - 11b: OV pB tiU cS ally Isolated - Reserved Cable Current 00b = is not supported - B18…17 - 10b = 3A PCIe Support [USB41]1b = 5A B16 DP Support [USB4] PCIe tunneling supported by the host B15 TBT Support [TBT3] DP tunneling supported by the host B14 2 Host is supported by the host’s USB4® Connection Manager PCIe Support DP Support TBT Support Host Present A is present at the top of the USB tree. Host Capabilities Shall Hub B13 represent the ’s that be propagated down the Reserved tSrheea.ll [USB 3.2] [USB4] [USB 2.0] B12…0 be set to zero. 1) ESnhtarlyl intoIg nored and includCea belnet Prylu ignto SOP’.SOP’’ 2) D FbPe Shall when receCivaebdle b Pyl uag (e.g., or ). [USB Type-C 2.4] 3) The interpret the ’s reported capability as defined in in the USB4 Discovery and Entry Section. USB Mode Shall DFP Mode Port Partner T6h.4e.8.2 field USB be4 u®se dD bRy tDhe Fie ltdo direct the USB the is to enter. USB4 DRD Shall HostDFP [USB4]Device [USB4]HostDFP USB4 DRD Shall [USB 2.0]Device The field be set when the is capable of operating as a. A t6h.a4t s.8et.s3 the U SfiBeld3 DR Dals oF biee lcdapable of operating as a. USB3 DRD Shall HostDFP [USB 3.2]Device [USB 3.2]Host DFP USB3 DRD Shall [USB 2.0]Device The field be set when the is capable of operating as a. A Cable Speed Shall Cable Plug DFP [USB Type-C 2.4] The field be used to indicate the cable's maximum speed. The value is read from the a6n.d4 i.n8te.5rpreted by t h Ce abl aes dTeyfinpeed bFyi eld in the USB4 Discovery and Entry Section. Cable Type Shall TCahbel e Plug field be usedD tFoP indicate wheth[eUrS tBh eT cyapbel-eC i s2.p4a]ssive or active. Further if the cable is active, it indicates the type of active circuits in the cable and if the cable is optically isolated. The value is read from the Cable Current Shall Cable Plug VBUS Current Handling Capability (Passive Cable) VBUS Current Handling Capability T(Ahcet ive Cable) field be used to indicate the cable's current carrying capability. The value is reported by the in the / PCIe Support Shall HostDFP [USB4] The PCIe Support field May be set when the is caHpuabbleD oFfP tunneling PCIe over. [USB4] T6h.4e.8.8 fie lDd P S ubep speto spretc uFliaetivldely when the 's is capable of tunneling PCIe over. DP Support Shall HostDFP [USB4] The DP Support field May be set when the is caHpuabbleD oFfP tunneling DP over. [USB4] T6h.4e.8.9 field TBT b eS suetp sppeocurlta tFivieelyl wdhen the 's is capable of tunneling DP over. TBT Support Shall HostDFP [USB4] TM DThFeP [USB4]Hu bfield be set when the is capable of tunneling Thunderbolt over and that the Connection Manager (CM) supports discovery and configuration of Thunderbolt 3 devices connected to the ToBf T Supp ort s. May Hub DFP [USB4] The field be set speculatively when the 's is capable of tunneling Thunderbolt over 6.4.8..10 Host Present Field Host Present Shall Host The field be set to indicate that a is present upstream.", "tables": ["Table 6.49"], "figures": ["Figure 6.31"], "page_range": [202, 204]}
{"section_path": "6.4.9 EPR_Request Message", "start_heading": "6.4.9 EPR_Request Message", "content": "EPR_RequestMessageShall Sink EPR Mode Negotiation EPR_RequestMessageShall AEPnR _Source_Cap abilities Messa bgee sent bEyP Ra _Req,u oepsetrMateisnsga gine Shall, to reSqinukesRte pqouwesetr D, taytpai Ocabljleyc dtuRriDnOg the rSehqaullest phase of aP poowwere rD ata Object. The be sentP ionw reers pDoantase O tboj etchte most recent. The return a ( ) that Note: identify the Power Data b Oebinjegc rteMqauyested followed by a( cAo)PpDy Oof the (A)PDO being requested. EPR_RTehqeu reesqtuMeestsesadg eShall F bieg uerieth 6e.r3 2a,n \" EEPPRR_ Request o Mr eSsPsRag e\". The be as Fshigouwrne i6n. 32 EPR_Request Message. Header RDO Copy of PDO No. of Data Objects = 2 SourceShall PDO EPR_RequestMessage PDO EPR_Source_CapabilitiesMessage RDO The verify the in the exactly matches the in the latest SourceShall EPR p_Roeinqtueeds ttoM beys stahgee Object Position field in the. RequestMessage AcceptMessage RejectMessage Section 6.9, \"Accept, Reject and Wait\" Explicit Contract TNhege otiation respond to an in theS sPaRm Meo mdeanner as it responSdosu troc ae _Capabil itiesMes swaigthe an E, PoRr _aS ource_ Capabili (tsieese RequestMessage ). The EPR_RequestM essage process for EPR is the same as the process for except that the is reEpPlRa cSeodu brcye the SPR Mode and the EPR_Re questMe siss argeeplSahcaedll by the Hard Reset. An RDO operating in that receives a PDO initiatAeP aD O. Section 6.4.2, \"Request Message\" The takes a different form depending on the kind of power requested. The and formats are detailed in.", "tables": [], "figures": [], "page_range": [205, 205]}
{"section_path": "6.4.10 EPR_Mode Message", "start_heading": "6.4.10 EPR_Mode Message", "content": "EPR_ModeMessage EPR Mode EPR_ModeMessage The Mess iasg uesed to enter, acknEoPwR lMedogdee, and exit the. The Action field is used to describe the action that is to be taken by the recipient of the. The Data field provides additional inforEmPaRt_iMono fdoer Mthees sageSha lrlecipient in the Figure 6.3 D3,a \"tEaP ORb Mjeoctd e(E DROM MDeOs)s.age\" Table6.50, \"EPR Mode Data Object (EPRMDO)\" The be as shown in and. Figure 6.33 EPR Mode DO Message Header EPRMDO No. of Data Objects = 1 Table6.50 EPR Mode Data Object (EPRMDO) Bit(s) Field Description Value Action Sent By Reserved Shall Not Enter Sink 0x00 and be used. Enter Acknowledged Source Action 0x01 only Enter Succeeded Source 0x02 only B31…24 Enter Failed Source 0x03 only Exit Sink Source 0x04 only Reserved Shall Not 0x05 or Action Field Data Field Value 0x06…0xFF and be used. Enter Shall EPR Sink PDP Enter Acknowledged Shall be set to the Operational Enter Succeeded Shall be set to zero Shall be set to zero - be one of the following values: Data - EPR Capable 0x00 - Unknown cause B23 16 Enter Failed - 0x01 - S Co au br lece not VCONN Source - EPR Capable RDO 0x02 – failed to become. - Source EPR Mode 0x03 – bit not set in. - EPR Capable PDO 1 0x04 – unable to enter. Reserved Shall Not 0x05 - bit not set in. Exit Shall All other values are and be used Reserved Shall be set to zero May EPR Mode Enter Failed B15 0 be set to zero 1) The Sink retry entering after receiving this response. EPR SourceShall EPR Mode EPR Sink EPR Cable Source Capabilities Power Rules Table10.12, \"EPR Source Capabilities based on the Port AMna ximum PDP and u seinntge ar n EPR Capa ubpleo Cna rbelqeu\"est bTya abnl e10.13, \"E cPoRn nSoeuctrecde wCaitpha banili ties when P wohrte Pnr aebselen tt oP DofPfe irs ltehses than Port Maximum a sP DdePf iannedd u isni nthge a n EPR-capab (leS ecea ble\" and Port Partner EPR Mode ). For- SinksS thoa slulccessfully enter EPR, tMhoed feollowing conditions must be met: The request entry into the. - SourceShall EPR Capable - ThSein kShal l Not verCiofyn nthecet ceadble is Source. Charge ThroughVPD CT-VPD - A So urce S binek Shall to the throEuxgphli cai t Contract ( ). - The EPR Ca apnadb le Shal lalready be in aFnix SedP RS upply PDO. - The EPR Capable bit Shall be set in the RDO 5V. RequestMessage Source The EPR Cbaitp able haveE PbRee Sno usertc einS thhael l in the last receivSeedc btiyo nth 6e. 6.21.4,. \"tEPRSourceCableDiscovery\" To verify the cable is, the have already done the following (see - ): First Explicit Contract - Discover the cable pritoErP tRoS eonutrecreinCga bitlse Discovery First Explicit Contract Alternatively,V wCOitNhNin S ource of entry into the  If it is the VCONN Source, discoVvCeOrN tNh Sew caabple. If not the EPR Cap,a dbole a then di5scover6 the cable. Figure 6.34, \"Illustration of process to enter EPR Mode\" and can verify the cable is by completing steps and in the entry process in EPR Mode. Non-interruptible MessageAMS AMS Figure 6.34, \"Illustration of process to enter EPR Mode\" The entry process is a multi-. An illustration of this is shown in Note: Figure 6.34, \"Illustration of process to enter E. PR Mode\" Normative Informative is not but is only. Figure 6.34 Illustration of process to enter EPR Mode SPR Mode Sink Source Cable Abort EPR Entry #1 EPR_Mode #2.a N Send Entry Failed Start Enter Sink EPR Capable? – Sink not EPR Capable Y EPR Entry process Abort EPR Entry SPR contract in place #2.b N Source EPR Send Entry Failed Capable? – Source not EPR Capable Y Abort EPR Entry #2.c N Source EPR Send Entry Failed Capable Now? – Source unable to enter EPR Y Y Receiv# e3 d EPR Send# E2 P.d R Ack Is VCONN# 5 Source? N #5 VCONN Swap Ack? N N Y #4 Abort EPR Entry Error Known Cable? #5 N Send Send Entry Failed Soft Reset Is VCONN Source? – Source not Y VCONN Source Y N N #4 EPR Capable? Y Receiv# e8 d Enter EntE eP rR S_ uM ccO eD edE ed Send# 7 Enter Y #6.a-d N Abort EPR Entry EPR Cable? Send Entry Failed successful? Succeeded – Not EPR Cable Y EPR Mode Shall The entry prSoicnekssS hall follow tEhPesRe_ Mstoepdse iMn eosrsdaegre: Enter PDP EPR Source EPR_ModeMessage 1) TEnhete r S hall send the Soft Reset with the Action field set to 1 ( ) and the Data field set to its Operational. If the receives an with the Action field not set to So iut rceSh ainliltiate a. 2) The do the following: EPR Capable RDO SourceShall a) Verify the bit was set in the most recent. If not set, the do the following:EPR_ModeMessage Enter Failed i) Send an with the Action field set to 4 ( ) and the Data field set to ii) Abort theE PR Capab leentry process and remain in the exisFtiixnegd SSPuRp plyPDO. Source Shall b) Verify the bit was set in the most recent 5V. If not set, the do thEeP Rfo_lMloowdienMg:essage Enter Failed Fixed Supply PDO i) Send an with the Action field set to 4 ( ) and the Data field set to ii) Abort theS ource entry process andE rPeRm Mainod ien the existinSgo SuPrRce Shall. c) Verify theE PR_Mo ids estMille assbalge eto support. If not, theE nter Fa iled do the following: i) Send an with the Action field set to 4 ( ) and Data field set to 4 (\"Unable aEtP tRh iMs toidmee\"). Explicit Contract SinkMay EPR Mode ii) Abort the entry process and remain in the existing SPR. The at someE tPimR_eM inod theeM feustsuargee send another request to enter Enter Ack.nowledged d) SSeinnkd an M essage with the ActioEnP Rfi_eMldo sdeet Mtoe 2ss (age ). SinkShall Soft Reset 3) If the receives any, other than an with the Action Field set to 2, the EinPiRti Saoteu rac e. Discover IdentityCommand Cable Capabilities EPR Source 4) When the has used the to determine and remembers the or the EPR Capab lies coSnhnoeucltded with a captive cable: May a) If the cable is EPR Capa ibt le Sha gllo directly to Step 7, but continue to Step 5. b) If the cabElPe Ris_ Mnootd eMessage it do the following: Enter Failed c) Send an with the Action field set to 4 ( ) and the Data field set to d) ASboourrtc ethe VCO eNnNt rSyo uprrcoecessS ahnadll remain VinC OthNeN _eSxwisatpinMg SesPsRa ge. 5) If the So ius rncoet the, itV CONN Ssoeunrdc ea Shall a) If the EPR fa_Milso tdoe bMeceossmage ethe, it : Enter Failed VCONN Source i) Send an with the Action field set to 4 ( ) and the Data field set to ii)SoAurbcoerSt hthaell Di esncotrvye rp rIodceenstsi taynCdo rmemmaainnd in the existing SPR. 6) The use the to read the cable's e-Marker and verify the followCianbgl:e VDO Maximum VBUS Voltage (Passive Cable) Maximum VBUS Voltage (Active Cable) a) - / fCiaebldle i sV 1D1Ob (V5B0UVS) Current Handling Capability (Passive Cable) VBUS Current Handling Capability (Active Cable) b) - / Cable VDO EPR Capable ( fPiealsds iisv e1 0Cba b(5leA))EPR Capable (Active Cable) EPR Capable c) - Discove/r IdentityCommand EfiPeRld C iasp 1abb l(e Source) Shall d) If the cable fails to respond to the or is not, the do thEeP Rfo_lMloowdiengM:essage Enter Failed i) Send an with the Action field set to 4 ( ) and the Data field to1 (\"Cable not EPR capable\"). EPR Mode Explicit Contract ii)SouArbcoerSth thaell E PenRt_rMy opdreocMeessss aangde remain in the existing SPR Enter Succeede.d Shall EPR Mode 7) The send the with the Action field set to 3 ( ) and enter Sink. EPR_ModeMessage Enter Succeeded Shall EPR Mode Shall Soft Reset 8) If the receives an with the Action field set to 3 ( ) it enter EPR Mode, otherwise it initiate a. tEnterEPR GoodCRCMessage EPR_ModeMessage Enter SourceShall IEfP thRe_S ource_Ca penatbriyli ptireoscMesess ssuacgceessfully tcFoimrsptlSeotuesr cweiCthaipn of the last bit of the sent in response to the with the Action field set to 1 ( ), the send an EPR Mode within. tEnterEPR GoodCRCMessage EPR_ModeMessage Enter SinkShall If the Soft Re esenttry process has not been aborted or does not complete within of the last bit of the sent in response to the with the Action field set to 1 ( ), the i6n.it4ia.t1e 0a.2. Operation in EPR Mode EPR Mode SourceShall EPR_Source_CapabilitiesMessage Advertise Capabilities SinkShall EPR_RequestMessage NegotiateExplicit Contract EWPhRil_eR oepqeureasttinMge isns ageMay, the only send (A)PDO s to its power and the only respond with s to s. The Source So urce b_Cea fopra ebiitlhiteier sanM SePssRa goer EPR. SinkGet_Source_CapMessage SinkShall Hard Reset Sink RequestMessage SourceShall Hard Reset If the sends a, that is not in response to a, the Source inSihtiaaltle a C.C If the sends a, the initiate a SinkSha.ll EPR_KeepAliveMessage Message tSinkEPRKeepAlive The monitor the communications path to etnSsouurrec tehEaPt RthKeereep iAs lpievreiodic Storaufrfcice. SThhael l Hseanrdd Ranes et when it has not sent any s for more than to ensure there is timely periodic traffic. If there is no traffic for more than, the initiate a 6.4..10.3 Exiting EPR Mode EPR Mode Source SinkMay EPR Mode EPR_ModeMessage Exit While in, either the or exit by sending an with the Action field set toS 5h a(ll ). Explicit Contract (A)PDO EPR Mode The- ports Sou rbcee in an EPR_Sourc we_iCtha pana bSiPliRt iesMess apgreior to the EPR (A)PD Oexit process bSyP eRit (hAe)rP:DO The sending an with no s (e.g., only - s) orSink Explicit Contract RDO SPR (A)PDO The negEoPtRia Mtinodge a newN on-interruptible with bMite 3s1sa igne thAeM S seSth toa lzlero (e.g., only s)). The process Ptoo retx Pita rtner Sha ilsl a Explicit Con mtrualctti- ( Aa)nPdD O follow these steps in order: 1) The Sources Sink bSeh ian laln EPR_Mode wMitehs saang SePR. Exit EPR Mode 2) Either the or send an with the Action field set to 5 ( ) to exit the SourceSh all Source_CapabilitiesMessage tFirstSourceCap GoodCRCMessage EPR_ModeMessage Exit 3) The send a within of the in resSpionnkse to the S ource_Ca wpiatbhi tlhiteie AscMtieosns afigeeld set to t5T (ypeC)S.inkWaitCap GoodCRCMessage EPR_ModeMessage Exit Sink 4) ISfh tahlel does Hnaort dr eRceesievte a within of the last bit of the in response to the with the Action field set to 5 ( ), EPR ModeShall Power Role Swap Fast Role Swap VBUS vSafe5V Implicit Contract New Source bSoe uerxcitee_dC aaps athbeil sitiidees-eMffeescsta ogef the EPR_Source_ Canadp abilitiesMessag perocesses. This is because at the end of these processes will be at and the Ports will be in an. The will then send a (not an ) to begin the process of Explicit Contract Explicit Contract Source Sink EPR Mode negotiating an SPR. Once an SPR is entered, the and can then enter EPR Mode Shall Hard Reset Port Other critical errors can occur while in ; these errors result in being initiated by the that- detectsE tPhRe_ eMrroodre. SMoemssea ogfe these errors include: Exit EPR Mode Port Explicit Contract (A)PDO An with the Action field set to 5 ( ) to exit is received by a in an - Sink withE aPnR E_SPoRu rce_Cap.abilitiesMessage (A)PDO The receives an with an EPR in any of the first seven - objec(At p)PoDsiOtions. EPR_RequestMessage (A)PDO EPR_Source_CapabilitiesMessage RDO The in the does not match the in the latest - Source Req uestMes spaogineted to by the Object Position field in the. - The Sink receivesS ao urce_Cap abilities. Message Get_Source_CapMessage The receives a not in response to a.", "tables": ["Table 6.50"], "figures": ["Figure 6.34", "Figure 6.34"], "page_range": [206, 211]}
{"section_path": "6.4.11 Source_Info Message", "start_heading": "6.4.11 Source_Info Message", "content": "Source_InfoMessageShall Get_Source_InfoMessage Source_InfoMessage The be sent in response to a. The contSaoinusr ocen_eI nSfoouMrcees sInafgoermation Data Object (SIDO). Shall Figure 6.35, \"Source_Info Message\" Table6.51, \"Source_Info Data Object (SIDO)\" Number of Data Objects Source_InfoMessageShall The returns a SIDO whose format be as shown in and. The field in the be sePto trot 1M.aximum PDP Port Present PDP Port Reported PDP Port Type Capabilities Source Port The,, and the are used to identify of a. Figure 6.35 Source_Info Message Header SIDO No. of Data Objects = 1 Table6.51 Source_Info Data Object (SIDO) Bit(s) Field Description - Managed Capability Port Port Type - Guaranteed Capability Port B31 Reserved Shall Port Maximum PDP Port B30…24 be set to zero Port Present PDP Port B23 16 Power the is designed to supply Port Reported PDP Port B15…8 Power the is presently capable of supplying B7…0 Power the is actually advertising Port Type Static Shall Port is a field that be used to indicate whether the amount of power the can provide is fixed or caPno rcthange dynamically.Shared Capacity Group Port Type Shall Managed Capability Port For Ports that are part Sohfa ar ed Capacity Group,P tohret Type fMiealdy be set to Managed Capability Por.t Guaranteed Capability Port For s not part of a, the field be set to either or Port Maximum PDP Static Shall PDP Rating Port Guaranteed Capability Port Port Type Shall is a fieldM tahnaatg ed Ca rpeapboilritt yth Peo irntteger portion of the Port Type of the. A Shall (as indicated by the field being set to '1') always be capable of supplying this amount of power. A (as indicated by the field being set to '0') P obret a Mblaex tiom oufmfer P tDhiPs Sahmaolulnt of power at some time. SPR SourcePDP Rating EPR SourcePDP Rating Source_Capabilities_ExtendedMessage The be the same as the larger of the and the Port Present PDP Shall Port Cable Capabilities The field indicate the integer part of the amount of power the is presently capable of supplying including limitations due to or abnormal operating conditions (e.g., elevated temGupaerraantutereed, lCoawp ainbpiluitty v PooltratgSeh, aeltlc.). Port Present PDP Port Maximum PDP A always set its to be the same as its or the highest possible value when limited. Managed Capability Port Shared Capacity GroupShall Port Present PDP [USB Type-C 2.4] A that is part of a set its to Shared Port PoMwaenra Agveadi lCaabplea baisl idtye fPinoretd in Assu orre dto C aa ploawcietyr Gvaroluuep wShhaenll limitedP.ort Present PDP Port Maximum PDP A that is part of an set its to the Port Reported PDP Shall Port Source_Capabilities Message EPR_Source_CapabilitiesMessage Port Reported PDP May Static The Port field track the amount of power the is offeringE iPnR it Ms ode or. The field be dynamic or depending oNno tteh:e 's oPthoerrt cRheaproarctteedri sPtDicPs such as Managed/Guaranteed Capability, SPR/, its power policy etc. Fixed SupplyPDO Source_CapabilitiesMessage ETPhRe _Source_Capabilitie fsieMlde sissa cgoemputed as the integer part of, the largest of the products of the voltage times current of the s returned in the or s.", "tables": ["Table 6.51", "Table 6.51"], "figures": [], "page_range": [212, 213]}
{"section_path": "6.4.12 Revision Message", "start_heading": "6.4.12 Revision Message", "content": "RevisionMessageShall Get_RevisionMessage Port Partner Message Revision Port RevisionMessage TRheve isionMes sage be sent in response to the sent by the. This is used to identify the highest the is capable of operating at. The contains one Revis ionMess Dagatea Object (RMDO). Shall Figure 6.36, \"Revision Message Data Object\" Table6.52, \"Revision Message Data Object (RMDO)\" Number of Data Objects Revision MTheess ageShal l returns an RMDO whose format be as shown in and. The field in the be set to 1. Figure 6.36 Revision Message Data Object Header RMDO No. of Data Objects= 1 Table6.52 Revision Message Data Object (RMDO) Bit(s) Description Revision Revision B31…28.major Version B27…24.minor Version B23 20.major Reserved Shall B19 16.minor B15 0, be set to zero. E.g.-, for RReevviissiioonn 3.2, Version 1.1 the fields would be the following: - Revision.major = 0011b - Version.minor = 0010b - Version.major = 0001b.minor = 0001b", "tables": ["Table 6.52"], "figures": [], "page_range": [214, 214]}
{"section_path": "6.5 Extended Message", "start_heading": "6.5 Extended Message", "content": "Extended MessageShall Extended Message Header Extended Message Header MAne ssage Re vision contain an Shall Ignored (indicated by the field in the being set) and be followed by zero or more data bytes. Additional bytes that might be added to existing s in futureE xtended Mofe tshsaisg sepecification Mbeessage Hea.der Message Type Table6.53, \"Extended Message Types\" May Message TShoeu frocremSaint kof thCea ble Plug is defined Sbhya tlhl eN ot 's Messa fgieeld and is summarized in Message. The SenSt hbayl lcolumn indicates eSnOtiPt iPeas cwkehtich seMneds tshaeg egiven May (, SOP o* rP acket ); entities not listed issue the corresponding. The \"Valid Start of Packet\" column indicates the s which only be issued in s and the s which be issued in s. Table6.53 Extended Message Types Valid Bits Type Sent by Description Start of 4…0 Packet Reserved Reserved Shall Not All values not explicitly defined are and be used. Status Source Sink Cable Plug Section 6.5.2 SOP* Get_Battery_Cap Source Sink Section 6.5.3 SOP Get_Battery_Status Source Sink Section 6.5.4 Battery_Capabilities Source Sink Section 6.5.5 SOP Get_Manufacturer_Info Source Sink Section 6.5.6 SOP* Manufacturer_Info Source Sink Cable Plug Section 6.5.7 SOP* Security_Request Source Sink Section 6.5.8.1 SOP* Security_Response Source Sink Cable Plug Section 6.5.8.2 SOP* Firmware_Update_Request Source Sink Section 6.5.9.1 SOP* Firmware_Update_Response Source Sink Cable Plug Section 6.5.9.2 SOP* PPS_Status Source Section 6.5.10 SOP Country_Info Source Sink Section 6.5.12 SOP Country_Codes Source Sink Section 6.5.11 SOP Sink_Capabilities_Extended Sink Dual-Role Power Section 6.5.13 SOP Extended_Control Source Sink Section 6.5.14 SOP EPR_Source_Capabilities Source Dual-Role Power Section 6.5.15.2 SOP EPR_Sink_Capabilities Sink Dual-Role Power Section 6.5.15.3 SOP Reserved Shall Not Vendor_Defined_Extended Source Sink Cable Plug Section 6.5.16 SOP* Reserved Shall Not All values not explicitly defined are and be used.", "tables": ["Table 6.53"], "figures": [], "page_range": [215, 215]}
{"section_path": "6.5.1 Source_Capabilities_Extended Message", "start_heading": "6.5.1 Source_Capabilities_Extended Message", "content": "Source_Capabilities_ExtendedMessageShould Get_Source_Cap_ExtendedMessage Source_Capabilities_ExtendedMessage Source DRP Sink Capabilities STohuer ce be sent in response to a. The enables a or a to inform the about its as a So.urce_Capabilities_ExtendedMessageShall Shall Figure 6.37, \"Source_Capabilities_Extended Message\" Table6.54, T\"Shoeu rce Capabilities Extended Data B lock (SC EDB)\" return a 25-byte Source Capabilities Extended Data Block (SCEDB) whose format be as shown in and Figure 6.37 Source_.Capabilities_Extended Message Extended Header SCEDB Data Size= 25 (25-byte Data Block) Table6.54 Source Capabilities Extended Data Block (SCEDB) Offset Field Description VID Vendor ID PID XID FW Version HW Version Bit Description - - 00b: 150mA/µs Load Step (default) Voltage Regulation - Reserved Shall Not 1…0 01b: 500mA/µs Load Step - IoC 0b: 25% (default) 1b: 90% 3…7 and be used Holdup Time Output will stay with regulated limits for this number of milliseconds after removal of - the AC from the input. 0x00 = feature not supported SPR Mode A value of at least 3ms be used (see ). Bit Description Compliance in : LPS Compliance Reserved Shall Not Bit Description 3…7 and be used Touch Current Reserved Shall Not 3 7 and be used Table6.54 Source Capabilities Extended Data Block (SCEDB) (Continued) Offset Field Description Bit Description Peak Current1 Percent overload in 10% increments Values higher than 25 (11001b) are 0 clipped to 250%. 5 10 Overload period in 20ms VBUS 11 14 Duty cycle in 5% increments Bit Description Peak Current2 Percent overload in 10% increments Values higher than 25 (11001b) are 0 clipped to 250%. 5 10 Overload period in 20ms VBUS 11 14 Duty cycle in 5% increments Bit Description Peak Current3 Percent overload in 10% increments Values higher than 25 (11001b) are 0 clipped to 250%. 5 10 Overload period in 20ms VBUS 11 14 Duty cycle in 5% increments - [IEC 60950-1] Temperature conforms to: Touch Temp - [IEC 62368-1] - [IEC 62368-1] Note: Reserved Shall Not Bit Description All other values and be used. - - 0b: No external supply 1b: External supply present - Source Inputs If bit 0 is set: - 0b: External supply is constrained. 1b: External supply is unconstrained. If b- it 0 is not set Batte ary nd be set to zero - Battery 0b: No internal 1b: Internal present Number of Batteries/ 3 7 and be set toB za ett re ory Slot Battery Slots Fixed Batteries Upper Nibble = Number of Hot Swappable s (0…4) Rating Reserved Shall 0…6: ( ’s when operating in. 7: EPR So uarncde PDP R baet isnegt to zero Rating VID Shall Vendor ID VID Source VID VID Shall Device Shall The VID field contain the 16-bit ( ) assigned to [tUheS B 2.0] 's ve[nUdSoBr 3b.y2 t]he USB-IF. If the vendor does not have a, the field be set to 0xFFFF. s that have a USB data interface report the same as the idVendor in the Standard Device Descriptor (see and ). PID Shall Source Device Shall [USB 2.0] T[UhSeB 3.2 f]ield contain the 16-bit Product ID (PID) assigned by the 's vendor. s that have a USB data interface report the same PID as the idProduct in the Standard Device Descriptor (see and 6.5.1.3). XID Field XID Shall Shall [USB 2.0] [USB 3.2] The field contain the 32-bit XID provided by the USB-IF to the vendor who in turns assigns it to a product. 6If.t5he. 1ve.n4dor does no tF hiarvme awn XaIDre, t hVene rits ion r Fetiuernld zero in this field (see and ). FW Version Shall T6h.5e.1.5 fiel d Hard cowntaairne a nV 8e-brist ifiormnw Fariee vldersion number assigned to the device by the vendor. HW Version Shall T6h.5e.1.6 fiel d V olta cogneta Rine ang u8-lbaitt hiaorndw Fariee vledrsion number assigned to the device by the vendor. Voltage Regulation The Section 7.1.12.1, \"Volt faigeled R ceognutlaaitnios nb iFtise cldo\"vering Load Step Slew Rate and Magnitude. S6e.e5.1.6.1 Load Step Slew Rfoar tfuer ther details. SourceShall Voltage Regulation T6h.5e.1.6.2 report iLtso loaadd sStteep pre Mspoangsne citaupadbeility in bits 0…1 of the bit field. SourceShall IoC Voltage Regulation T6h.5e.1.7 rep o Hrt oitsl dlouadp s tTepi mmaegn Fituiedel drate as a percentage of in bit 2 of the field. Holdup Time Shall Source Section 7.1.12.2, \"Holdup Time Field\" T6h.5e.1.8 fie lCd omp cloinataninc teh eF ield's holdup time (see ). Compliance Static Shall Source Section 7.1.12.3, \"Compliance Field\" The is and contain the standards the is compliant with in SPR (see Touch Current Source ThSeo urceShall fieTldo ruecpho Crtusr wrehnetther the meets certain leakage current levels and if it has a grSoouunrdc epin. A set the bit (bit 0) when their leakage current is lesSsh tahlaln 65µA rms when 's maxim[IEuCm 6 c0a9p5ab0i-l1it]y is less than or equal to 30W, or when their leakage current is less than 100 µA rms when its power capability is between 30W and 100W. The total combined leakage current be measured in accordance wiStohu rce when teSshteadll at 250VAC rms at 50 Hz. A Source with a ground pin set the Ground pin bit (bit 1). Shall 6A.5.1.1 w0hose Grou nPde paink is C inuternrdeedn tto Fbei ecolndnected to a protective earth set both bit1 and bit 2. Peak Current1 Peak Current2 Peak Current3 Shall Source Section 7.1.12.4, \"Peak Current\" The / / fields contain the combinations of Peak Current that the supports (see Source ). Negotiated Peak Current provides a means for report its ability to provide current in excess of the amount for short periods. The Peak Current descriptor defines up to three combinations of% overload, duration and duty Peak Current1 Peak Current2 Peak Current3 Source SourceMay SourceShall cycle defined as, and that the supports. A offer no Peak Current capaPbielaitky.C Au rrent1 Peak p Couprurleantet 2unusePde Paeka Cku Crurrernetn3t bit fields with zero. The- Bit Fields within, and contain the following subfields: PerScehnatlalge Overload Negotiated IoC Source be the maximum peak current reported in 10% increments as a percentage of the - operating current ( ) offered by the. Values higher than 25 (11001b) are clipped to 250%. OveSrhloaaldl Period be the minimum rolling average time window in 20ms increments, where a value of 20ms is - recommended. DutSyh Caylclle Should be the maximum percentage of overload period reported in 5% increments. The values - VBUS be 5%, 10% and 50% for PeakCurrent1, PeakCurrent2, and PeakCurrent3, respectively.  Sh Darlolop VBUS vSrcPeak SourceShould V b Be U Sset to one to indivcSartceN tehwere is an additional 5% voltage droop on when the overload conditions occur as defined by. However, it is recommended that the pro 6.5.1.11vide iTn othue crahn gTee omf p Fiel wdhen overload conditions occur and set this bit to zero. Touch Temp Shall Source Source [IEC T60he9 50-1] [IEC 6fi2e3ld6 8-1] repoSrot uthrcee IEMCa sytandard used to determine the surface temperature of the 's enclosure. Safety limits for[ tIhEeC 62368's-1 to]uch temperature are set in applicable product safety standards (e.g., or ). The report when its touch temperature performance conforms to the TS1 6or. 5TS.21 l.i1m2its describ e Sdo inu rce Input.s Field Source Inputs Shall Source The- field S ioduerncteify the possible inputs that provide power to the : - When bit 0 is set, the caS no u br ec e sourced by an external power supply. When bits 0 and 1 are set, the can be sourced by an external power supply which is assumed to - be effectively \"infiniteS \"o u i.r ec.,e it won't run down over time. Battery Note: When biSt o2u irsc eset the can be sourBcaetdt ebryy an internal. AC Supply Some s are only powered by a (e.g., an automobile) rather than the more common Note: M. ay 6.5.1.1B3it 2 b Ne suetm inbdeepren odefn Btlya otft beitrsi 0e asn/dB 1a. ttery Slots Field Number of Batteries/Battery Slots Shall Fixed Batteries Battery Slot Source Shall Battery Slot The Fixed Batteries field report the number of and Hot Swappable s the supports. This field independently report the number of s and the nuSmoubrecre oSfh all. Fixed Batteries Battery Slot AFi xed Bat teries hSahvael lno more than 4 and no more than 4 s. Fixed BatteryShall Not Attach Detach be numbered consecutively from 0 to 3. The number assigned to a given Batt cehrya nSlgoet beSthwaellen and. Battery SlotShall Not Attach Detach s be numbered consecutively from 4 to 7. The number assigned to a given change between and. SPR Source SPR Source PDP Rating Shall PDP Rating Port For an EPR Source the SPR SourcePDP Rating fieldS hall report the integer portion of the of the. Port For an, the field report the integer portion of the maximum amount of poweSrP Rth Saot uthrec e PD Pis R daetsiinggned to deliver in SPR MSohdael.l Static T6h.e5.1.15 EPR S fioelud rthcaet iPs rDepPor Rteda ting b Fe ield. EPR Source EPR Source PDP Rating Shall PDP Rating Port For an SPR Source the Shall field report the integer portion of the of the. For aEnP R Source P DthPi sR faietlidn g be set to zero. Shall Static The field that is reported be.", "tables": ["Table 6.54", "Table 6.54"], "figures": ["Figure 6.37"], "page_range": [216, 220]}
{"section_path": "6.5.2 Status Message", "start_heading": "6.5.2 Status Message", "content": "StatusMessageShall Get_StatusMessage StatusMessage Get_StatusMessage SOP StatusMessage Port Port PTahret ner SOP b’e seSnOtP i’n’ respSotantsues toM ae ssage. The content of thAec tive Ca ble Cab ldee Ppleungds on the target of the. When sent to the returns the status of the 's 6.5.2.. 1When sent t o S OP o Sr tatu tsh eM essa ge returns the status of one of the 's s. StatusMessage Get_StatusMessage SOP Port Port Partner Source Sink Get_StatusMessage Port AAl ertMe ssage, sent in response to to OC, ePnOabVlPes a OTP to inform its about the present status oBf tahtete ry or. Typically, a will be sent by the after receipt of an. Some of the reported events are critical such as, and, while others are informational suchS atsa tcuhsanMgees sina gae 's status from charging to neither charging nor dSishcahlalrging. Figure 6.38, \"SOP Status Message\" Table6.55, \"SOP Status Data Block (SDB)\" The returns a 7-byte Status Data Block (SDB) whose format be as shown in and Figure 6.38 SOP Statu.s Message Extended Header SDB Data Size= 7 (7-byte block) Table6.55 SOP Status Data Block (SDB) Offset (Byte) Field Description Source Sink - Internal Temp or ’s internal temperature in °C - Bit Description 2-255 = temperature in °C. Reserved Shall Valid - Present Input External Power AC/DC ( when Bit 1 set) - 0: DC 1: AC Battery when Bit 1 is zero Battery Reserved Shall Present Input Shall 5 7 and be set to zero Battery When field bit 3 set contain the bit corresponding Present Battery - to the or Batteries providing power: Input - Fixed Battery Upper nibble = Hot Swappable Battery (b7…4) Lower nibble = (b3…0) Shall When field bit 3 is not set this field is and be set to zero. Table6.55 SOP Status Data Block (SDB) (Continued) Offset (Byte) Field Description Bit Flag Description Reserved Shall OCP Event OCP OTP Event OTP Event Flags 1 event when set OVP Event OVP PPS Mode CL CV In only: mode when set, mode when cleared Bit Description 5 7 and be set to zero Reserved Shall Temperature 0 - and be set to zero Status - 00 – Not Supported. 1 2 - Reserved Shall Bit Description 3 7 and be set to zero Reserved Shall Source Source Power Status power limited due to insufficient power available while sourcing other ports Source power limited due to Event Flags in place (Event Flags must also be set) Reserved Shall 6 7 and be set to zero Table6.55 SOP Status Data Block (SDB) (Continued) Offset (Byte) Field Description Bit Description New Power State Value Description 0 2 3 S3 Power State S5 (Off with battery, wake events Change supported) supported) New Power State indicator Value Description 3 5 1 On LED Reserved Shall Reserved Shall 4 7 and be set to zero 6 7 and be set to zero Internal Temp Source Sink T6h.5e.2.1.2 field Prerpeosrtes nthte I innsptauntta Fneieoulds temperature of a portion of the or. Present Input Source Sink The field indicates which supplies are presently powering the or. The- following bits are defined: - Bit 1: indicates that an external power source is present. - Bit 2: indicates whether the external unconstrainedB a pt ote wr ey r source is AC or DC. - Bit 3: indicates that power is being provided from. Battery Bit4: indicates an alternative internal source of power that is not a. Present Battery Input Battery Source Sink Present Battery Input Valid Present Input The Battery field indicates which or Batteries are presently supplying power to the or. The field is only when the field indicates that there is Internal Power from. Battery Battery Battery Section 6.5.3, T\"Gheet _uBpapteter rnyi_bCbalpe Mofe tshsea gfiee\"ld indSieccattieosn w 6h.5i.c4h, \"HGoett _SBwaattpeprayb_Sleta tus Mes/sBaagtet\"eries are supplying power with bit 4 in upper nibble corresponding to 4 and bit 7 in the upper nibble corresponding to 7 (see and Fixed Battery ). Battery Battery Section 6.5.3, T\"Gheet _loBwatetre rnyib_Cbalep oMf ethssea fgieel\"d indiSceactteiso wn 6h.i5c.h4, \"Get_Battery/_BStaatttuers iMese assraeg seu\"pplying power with bit 0 in lower nibble corresponding to 0 and bit 3 in the lower nibble corresponding to 3 (see and ). Event Flags OTP OVP OCP Shall Shall Get_StatusMessage The field returns event flags. The, and event flags be set when there is an event and only ObTe Pc lEevareendt when read wiTthe mthpe erature Sta tus.Shall WheCnL t/hCeV Mode flag is sVeta tlhide field also be set to over temSphearlaltureI.gnored Source CL/CV Mode Shall The Curr felnagt Lisi monitly CwLhen opSehraatlilng as a Programmable Power SCuopnpsltya annt dV oltag ebe CV otherwise. When the is operating as a Programmable Power Supply the flag be set when 6op.5er.a2ti.n1g. 5in Te mmopdee (rat) uanrde Stat bues c lFeaireeldd when operating in mode ( ). Temperature Status Temperature Status OTP Event Shall The field returns the current temperature status of the device either: normal, warning or over temperature. When the field is set to over temperature the flag also be s6e.t5..2.1.6 Power Status Field Power Status Source Advertise Source The field indicates the current status of a. A non-zero return of the field indicates d - power is being reduced for either: Source - The cS ao bu lr ec e does not support the full current. - The is supplying poS wo eu rr c toe other ports and is unable to provide its full power. - The external power to the is insuffiS co ieu nrc t e to support fullA pd ov wer et ri.se SinkShAanl Elvent has occurred that is causing the to reduce its d power. A set this field to zero. Power State Change New Power State New Power State indicator The field contains two status bytes; the and status b6y.5te.s2..1.7.1 New power state New Power State Shall The status byte indicates Sah poouwlder state change to one of the specified power states. Any device that supports the ACPI standard system power states use the ACPI states. For devices that do not support the ACP- I power states, the following mapping be used: - High power (on) state -> S0 - Sleep state -> S3 Low power (off) state -> S5 or G3 New Power State indicator The status byte defines the hNoeswt's P doewsierre dS tiandteic iantdoirc faotro trhe specified power state. This indicator allows several possibilities for predefined behaviors that the host can specify to indicate its system power state to the user via the downstream device. TheS hould is a \"best effort\" indicator. If the device cannot provide the requesteSdh ionudlidcator, then it provides the best indicator that it can. If a Breathing indicator cannot be provided, then a Blinking indicator be provided. If a Blinking indicator cannot be pNreowv iPdoewd,e trh eSnta at ec oinndstiacnatt oorn indicator be provided. - s in decreasing precedence: - Breathing - Blinking - Constant on No indicator StatusMessage Get_StatusMessage SOP’ SOP’’ Source Sink Cable Plug Get_StatusMessage USB Host USB DA evice, sent in respCoanbslee Ptolu ag toS tatus oMr essag,e enables a or to get the present status of the CSahballel's (s). FTiygpuircea l6ly.3, 9a, \"SOP'/SOP' ' Status M weislsl abgee u\"sed bTya tbhlee 6.56, \"“SO aPn’d/S/OorP ’’ Status Dtoa tmaa Bnlaogcke t(hSPe DCBa)b”l\"e's (s) temperature. The returns a 2-byte Status Data Block (SDB) whose format be as shown in and Cable Plug Shall N.ot Passive s indicatFei gTuhreer m6.a3l9 S hSuOtPd'o/wSOnP. '' Status Message Extended Header SPDB Data Size= 2 (2-byte block) Table6.56 “SOP’/SOP’’ Status Data Block (SPDB)” Offset (Byte) Field Value Description Cable Plug Internal - ’s internal temperature in °C. Temp - Bit Description 2…255 = temperature in °C. Flags Reserved Shall 1 7 and be set to zero Internal Temp Shall Cable PlugShall tACTempUpdate The field reports the instantaneous temperature of the plug in °C. The internal temperature b6e. 5m.o2n.o2t.o2nic. The The rma rle Sphorut titds oinwternn aFl iteemldperature every. Flags Shall Active Cable Shall Shall The flag also be set wheHna trhde R pelsuegt's internAaclt itveem Cpaebrlaeture exceeds the Internal Maximum Temperature rSehpaollr tNeodt in the Ca bVlDe OR.e Osentce this bit has been set, it remain set and the plug remain in Thermal Shutdown until there is a or the 's power is removed. The Thermal Shutdown flag be cleared by a.", "tables": ["Table 6.55", "Table 6.55", "Table 6.55", "Table 6.56"], "figures": [], "page_range": [221, 226]}
{"section_path": "6.5.3 Get_Battery_Cap Message", "start_heading": "6.5.3 Get_Battery_Cap Message", "content": "Get_Battery_Cap BatteryCapabilities Message Battery Port Partner PortShall Battery_CapabilitiesMessage Section 6.5.5, T\"Bhaet tery_Capabilities M (Gesesta ge\" ) is used to request the capability of a pBreastteenrty in its. The respond by returning a (see Get_Battery_CapMessage) containing a Battery Capabilities Data Block (BCDB) for the targeted Shall. Figure 6.40, \"Get_Battery_Cap Message\" Table6.57, \"Get Battery Cap Data Block (GBCDB)\" The Batt ery contains a 1-byte Get Battery Cap Data Block (GBCDB), whose format be as shown in and. This block definDeas tfao rS iwzehich tGheet _rBeqautteesrty i_sC baepinMge mssaadgee.Shall The field in the Figure 6.40 Ge t_Bat tbeer yse_Ct atop 1M.essage Extended Header GBCDB Data Size= 1 Table6.57 Get Battery Cap Data Block (GBCDB) Offset Field Description Battery - Fixed Batteries Battery Cap Ref Number of the indexed from zero: - Values 0…3 represent the. Values 4…7 represent the Hot Swappable Batteries. Values 8…255 are and be used. Get_Battery_Status Battery Message Battery Port Partner PortShall Battery_StatusMessage Section 6.4.5, \"Battery_Status TMhees sage\" (Get Status) is used to request theB sattatteursy of a present in its. The respond by returning a (see Get_B) actotnetrayi_nSitnagt ua sBMatetsesrayg Setatus Data Object (BSDO) for the targeted. Shall Figure 6.41, \"Get_Battery_Status Message\" Table6.58, \"Get Battery Status Data Block (GBSDB)\" The contaBinast tae r1y-byte GDeatt Ba aStitzeery Status DatGae Bt_lBocakt t(eGrByS_SDtBa)t uwshMoesses faogremSahta ll be as shown in and. This block contains details of the requested. The field in the be set to 1. Figure 6.41 Get_Battery_Status Message Extended Header GBSDB Data Size= 1 Table6.58 Get Battery Status Data Block (GBSDB) Offset Field Description Battery - Fixed Batteries Battery Status Ref Number of the indexed from zero: - Values 0…3 represent the. Values 4…7 represent the Hot Swappable Batteries. Values 8…255 are and be used.", "tables": ["Table 6.57", "Table 6.58"], "figures": ["Figure 6.40", "Figure 6.41"], "page_range": [227, 227]}
{"section_path": "6.5.4 Get_Battery_Status Message", "start_heading": "6.5.4 Get_Battery_Status Message", "content": "Get_Battery_Cap BatteryCapabilities Message Battery Port Partner PortShall Battery_CapabilitiesMessage Section 6.5.5, T\"Bhaet tery_Capabilities M (Gesesta ge\" ) is used to request the capability of a pBreastteenrty in its. The respond by returning a (see Get_Battery_CapMessage) containing a Battery Capabilities Data Block (BCDB) for the targeted Shall. Figure 6.40, \"Get_Battery_Cap Message\" Table6.57, \"Get Battery Cap Data Block (GBCDB)\" The Batt ery contains a 1-byte Get Battery Cap Data Block (GBCDB), whose format be as shown in and. This block definDeas tfao rS iwzehich tGheet _rBeqautteesrty i_sC baepinMge mssaadgee.Shall The field in the Figure 6.40 Ge t_Bat tbeer yse_Ct atop 1M.essage Extended Header GBCDB Data Size= 1 Table6.57 Get Battery Cap Data Block (GBCDB) Offset Field Description Battery - Fixed Batteries Battery Cap Ref Number of the indexed from zero: - Values 0…3 represent the. Values 4…7 represent the Hot Swappable Batteries. Values 8…255 are and be used. Get_Battery_Status Battery Message Battery Port Partner PortShall Battery_StatusMessage Section 6.4.5, \"Battery_Status TMhees sage\" (Get Status) is used to request theB sattatteursy of a present in its. The respond by returning a (see Get_B) actotnetrayi_nSitnagt ua sBMatetsesrayg Setatus Data Object (BSDO) for the targeted. Shall Figure 6.41, \"Get_Battery_Status Message\" Table6.58, \"Get Battery Status Data Block (GBSDB)\" The contaBinast tae r1y-byte GDeatt Ba aStitzeery Status DatGae Bt_lBocakt t(eGrByS_SDtBa)t uwshMoesses faogremSahta ll be as shown in and. This block contains details of the requested. The field in the be set to 1. Figure 6.41 Get_Battery_Status Message Extended Header GBSDB Data Size= 1 Table6.58 Get Battery Status Data Block (GBSDB) Offset Field Description Battery - Fixed Batteries Battery Status Ref Number of the indexed from zero: - Values 0…3 represent the. Values 4…7 represent the Hot Swappable Batteries. Values 8…255 are and be used.", "tables": ["Table 6.57", "Table 6.58"], "figures": ["Figure 6.40", "Figure 6.41"], "page_range": [227, 227]}
{"section_path": "6.5.5 Battery_Capabilities Message", "start_heading": "6.5.5 Battery_Capabilities Message", "content": "Battery_CapabilitiesMessage Get_Battery_CapMessage Battery_Capabilities Message TNhuem ber of Batteries/Bat tery Slot sis sent in resSpoounrscee t_oC aap abilities_Extend edMessa.g Tehe Sha ll contains oBnaet tBeartytery Capability DaBtaa Bttleorcyk C(BapC DRBe)f for one of the BatterieGs eitts_ Bsaupttpeorryt_sC aasp rMepeossrategde by field in the. The returned BCDB correBsaptotenrdy t_oC athpea bilities Mreeqsusaesgteed in the field containSehda inll the Figure 6.42,. \"Battery_Capabilities Message\" Table6.59, \"Battery Capability Data Block (BCDB)”\" The returns a 9-byte BCDB whose format be as shown in andF igure 6.42 Battery_Capabilities Message. Extended Header BCDB Data Size= 9 Table6.59 Battery Capability Data Block (BCDB)” Offset Field Description (Byte) VID Vendor ID PID Battery Note: Battery Design Capacity ’s design capacity in 0.1 WH - Battery - 0x0000 = not present Battery 0xFFFF = design capacity unknown Note: Battery Last Full Charge Capacity ’s last full charge capacity in 0.1 WH - Battery - 0x0000 = not present Bit Field Description 0xFFFF = last full charge capacity unknown InvalidBattery Battery Type Invalid Battery Reference reference when set. 1 7 -- VID Shall VID Battery VID The field contain the manufacturer associated with the, as assigned by the USB-IF, or 0xFFFF in the Bcaasttee trhya Ct anpo Rsuecfh exists.Get_Battery_CapMessage Invalid VID Shall I6f.t5he. 5.2 P fireoldd inu tchet ID (PID) is, the field be 0xFFFF. PID VID The following rules apply to the field. When the : - Battery PID Shall Battery Battery Belongs to the vendor the field contain the 's 16-bit product identifier - designated by tD he ev ice vendorP. ID Shall Battery Device Belongs to the vendor the field contain the 's 16-bit product identifier - designated by P thID e Sh va el nl dor. 6.5.5.I3s 0xFFFF th e B at ftieelrd y De bsei gsent t oC 0axp00a0c0i.ty Field Battery Design Capacity Shall Battery Battery Battery Design Capacity Shall Battery The fBiealdtt ery D eresitgunrn C tahpea city 's dSehsaiglln capacity in tenths of WH. If the is Hot Swappable and is not present, the field be set to zero. If the is unable to r6e.p5o.r5t i.t4s Design Cap aBciatyt, ttheer y Last Full Charge fi eClda pac ibtey s eFt itoe 0ldxFFFF. Battery Last Full Charge Capacity Shall Battery Battery Battery Last Full Charge Capacity Shall The Battery field contaiBn athttee ry Last' Fs ulalsl tC fhuallr cghea Crgaep caacpitaycity in Sthenatlhls of WH. If the is Hot Swappable and is not present, the field be set to zero. If the is unable to report its Design Capacity, the field be set to 60x.F5F.F5F..5 Battery Type Field Battery Type Battery Capabilities T6h.5e.5.5.1 field i sI unsveda ltiod r eBpoarttt aedrdyit iRoneafl einrfeornmcaetion about the 's. Invalid Battery Reference Shall Get_Battery_CapMessage Battery The bit be set when the contains a reference to a that does not exist.", "tables": ["Table 6.59"], "figures": [], "page_range": [228, 229]}
{"section_path": "6.5.6 Get_Manufacturer_Info Message", "start_heading": "6.5.6 Get_Manufacturer_Info Message", "content": "Get_Manufacturer_Info Message Port Port Partner Cable Plug Battery Port PortShall The Manufacturer_In (fGoeMt MesasnaguefacSteucrteior nIn 6f.o5).7, \"Manuf iasc stuenretr b_Iyn afo Mes stoa gree\"quest manufacturer specific information relating to its, or ofC aa ble Plug behOipntdi oan al N. oTrhme ative respond by returning a ( ) containing a Manufacturer Info GDeatt_aM Baloncukf a(MctIuDrBer)._ ISnufpopMorets sfoarg ethis feature by the is. Device Battery Battery The contains a 2-byte Get Manufacturer Info Data Block (GMIDB). This block defines whether it is the or manufacturer information being requested and for which the requGesett _iMs baeniunfga mctaudree.r_InfoMessage Shall Figure 6.43, \"Get_Manufacturer_Info Message\" Table6.60, \"Get Manufacturer Info Data Block (GMIDB)\" The returns a GMIDB whose format be as shown in Faingdu re 6.43 Get_Manufacturer_Info Message. Extended Header GMIDB Data Size= 2 Table6.60 Get Manufacturer Info Data Block (GMIDB) Offset Field Description - Port Cable Plug Manufacturer Info Target - Battery 0: / - Reserved Shall Not Manufacturer Info Target Battery Manufacturer Info 255…2: and be used. Ref Shall Battery IBfa tthtee ry field is (01b) the Manufacturer Info Ref field contain the number reference which is the number of the - Fixed Batteries indexed from zero: Values 0…3 represent the. Reserved Shall Values 4…7 represent the Hot Swappable Batteries. Otherwise, this field is and be set to zero.", "tables": ["Table 6.60"], "figures": [], "page_range": [230, 230]}
{"section_path": "6.5.7 Manufacturer_Info Message", "start_heading": "6.5.7 Manufacturer_Info Message", "content": "Manufacturer_InfoMessageShall Get_Manufacturer_InfoMessage Manufacturer_InfoMessage VID Battery The Battery be sent in response to a Max Extended. TMhseg LegacyLen contains the USB and the Vendor's PID to identify the device or and the devicMea onru facture'sr _mInafnouMfaecstsuargeer byte array in a variable length Data Block of up to Shall. Figure 6.44, \"Manufacturer_Info Message\" Table6.61, \"Manufacturer Info Data Block (MIDB)\" The returns a Manufacturer Info Data Block (MIDB) whose format be as shown in Figure 6 a.4n4d Manufacturer_Info Message. Extended Header MIDB Data Size= 5 Table6.61 Manufacturer Info Data Block (MIDB) Offset Field Description VID Vendor ID PID Manufacturer Info Target Manufacturer Info Vendor defined null terminated string of 0…21 characters. Manufacturer String Ref Get_Manufacturer_InfoMessage If the Shall field or unrecognized the field return a null terminated ASCII text string “Not Supported”. Manufacturer Info Target Get_Manufacturer_InfoMessage Port Cable Plug VID Shall If the in field in the is associated with this / -, the field contVaIiDn: Port Cable Plug - The manufacturer's associated with the / VID, as defined by the USB-IF, or M0xaFnFuFfFa cintu trheer c Iansfeo t Thaart gtheet vendor doeGse nt_oMt ahnavuefa ac ture.r_InfoMessage Device DeviceShall VID [IfU tShBe i2n.0 ] [USB 3.2] field in the is associated with a that has a USB data interface, the report the same as the idVendor in the Standard Device Descriptor (see M aanndu facturer I)n.fo Target Get_Manufacturer_InfoMessage Battery VID Shall If the in field in the is associated with a, the - field contain: VID Battery - The manufacturer associated with the sV pI eD cified, as defined by the USB-IF, or 0MxaFnFuFFfa icnt uthree rc aInsefo t hTaatr tgheet vendor doesG neot_tM haavneu faa ctu.rer_InfoMessage If th- e in Invalid VID Sha flileld in the : - Is Battery, this field Manu bfa ec 0t xu Fr Fe Fr FIn. fo Ref Invalid VID Shall 6.5.7.I2s (0 1 Pb)r aondd tuhce t ID (PID) field is, the field be 0xFFFF. VID PID Shall If the is 0xFFFF, the field contain 0x0000. Otherwise: - Manufacturer Info Target Get_Manufacturer_InfoMessage Port Cable Plug Shall If the in field in the is associated with this /, the PID field contain the device's 16-bit product identifier designated by the - device veM na dn ou r.facturer Info Target Get_Manufacturer_InfoMessage Battery If the in field in the is associated with a  : VID Battery PID Shall Battery Battery And the belongs to the vendor, the field contain the 's 16-bit product  identifierV IdDesignated by theD evice vendor. PID Shall Battery Device And the belongs to the vendor, the field contain the 's 16-bit product Manufacturer String Shall Battery The field contain the device’s or 's manufacturer string as defined by the vendoMr. anufacturer Info Target Manufacturer Info Ref Get_Manufacturer_InfoMessage Shall If the field or field in the is unrecognized the field return a null terminated ASCII text string \"Not Supported\".", "tables": ["Table 6.61"], "figures": ["Figure 6.44"], "page_range": [231, 232]}
{"section_path": "6.5.8 Security Messages", "start_heading": "6.5.8 Security Messages", "content": "Port Partner Port Cable Plug [USBTypeCAuthentication 1.0] Extended Message The authentication process between s or a and is fully described in. This specification describes two s used by the authentication process when applied to PD. [USBTypeCAuthentication 1.0] In the authentication process described in there are three basic exchanges that serv- e to: Port Cable Plug - Get the Port or Cable Plug 's certificates. - Get the orP ort Partner 's digC ea sb tl.e Plug Challenge the or. Port Partner Cable Plug Port Cable Plug Port Port Partner CCaerbtlief iPclautges are used to conAvtteayc hinefdormation, attested to by a signer, which attests to theA ttachment 'Pso orrt 's authenticity. The 's or 's certificates are needed when a encounters a Port or it has not been to before. To minimize calculations after the initial, a can also uPsoer ta digest consisting of hashes of the certificates Praotrht ePra trhtanner the certCifaicbalete Psl uthgemselves. Once the has the certificates and has calculated the hashes, it stores the hashes and uses the digest in future exchanges. After the gets the certificates or [dUigSeBsTt,y ipt ecChAaluletnhgeenst iictsa tion 1.0] or the to detect replay attacks. Security_RequestMessage Port Port Partner Cable Plug The Security_Request Message is used by a to pass a security data structure to its Sha ollr a. Figure 6.45, \"Security_Request Message\" T[UhSeB TypeCAuthentica tion 1.0] contains a Security Request Data Block (SRQDB) whose format be as shown in. The contents of the SRQDB and its use are defined in. Figure 6.45 Security_Request Message Extended Header SRQDB Data Size= 4 Security_ResponseMessage Port Cable Plug Port Security_RequestMessage The is used by a or to pass a security data structure to the that sent Stehceu rity_ResponseMe ssage. Shall Figure 6.46, \"Security_Response Message\" T[UhSeB TypeCAuthenticat ion 1.0] contains a Security Response Data Block (SRPDB) whose format be as shown in. The contents of the SRPDB and its use are defined in. Figure 6.46 Security_Response Message Extended Header SRPDB Data Size= 4", "tables": [], "figures": ["Figure 6.45", "Figure 6.46"], "page_range": [233, 233]}
{"section_path": "6.5.9 Firmware Update Messages", "start_heading": "6.5.9 Firmware Update Messages", "content": "Port Partner Port Cable Plug [USBPDFirmwareUpdate 1.0] Extended Message The firmware update process between s or a and is fully described in. This specification describes two s used by the firmware update 6pr.o5ce.9ss. 1when applie d F toir PmD.ware_Update_Request Firmware_Update_RequestMessage Port Port Partner Cable Plug The is used by a to pass a firmware update data structure to its Firm owr aa re_Update._RequestMessage Shall Figure 6.47, \"Firmware_Update_Request Message\" The [USBPDFirmwareUpd ate 1.0] contains a Firmware Update Request Data Block (FRQDB) whose format be as shown in. The contents of the FRQDB and its use are defined in Figure 6.4.7 Firmware_Update_Request Message Extended Header FRQDB Data Size= 4 Firmware_Update_ResponseMessage Port Cable Plug Port Firmware_Update_RequestMessage The is used by a or to pass a firmware update data structure to thFei rmw tahraet_ Usepndta tthee_ ResponseMessage. Shall Figure 6.48, \"Firmware_Update_Response Message\" The [USBPDFirmwa reUpdat eco 1n.0ta]ins a Firmware Update Response Data Block (FRPDB) whose format be as shown in. The contents of the FRPDB and its use are defined in Figure 6.48 Firmw.are_Update_Response Message Extended Header FRPDB Data Size= 4", "tables": [], "figures": [], "page_range": [234, 234]}
{"section_path": "6.5.10 PPS_Status Message", "start_heading": "6.5.10 PPS_Status Message", "content": "PPS_StatusMessageShall Get_PPS_StatusMessage PPS_StatusMessage Sink Source Get_PPS_StatusMessage The PPS_Sta tusMess ageSh bael lsent in response to a AlertM essage. The enables a to query the to get additional information about its operational state. The and PthPeS _StatusMes sageSha ll only be supported when the is also supporteSdh.all Figure 6.49, \"PPS_Status Message\" Table6.62, \"PPS Status Data Block (PPSSDB)\" The return a 4-byte PPS Status Data Block (PPSSDB) whose format be as shown in and Figure 6.49 PPS_Status Message. Extended Header PPSSDB Data Size= 4 (4-byte Data Block) Table6.62 PPS Status Data Block (PPSSDB) Offset (Byte) Field Description Source Output Voltage Source ’s output voltage in 20mV units. Output Current When set to 0xFFFF, the does not support this field. Source ’s output current in 50mA units. When set to 0xFF, the does not support this field. Reserved Shall PTF - - PTF: 00 – Not Supported Real Time Flags 1 2 - PTF: 01 – Normal - PTF: 10 – Warning OMF PTF: 11 – Over temperature Current Limit Constant Voltage OMF (Operating Mode Flag) is set when operating in mode and cleared when operating in Reserved Shall mode. 4 7 and be set to zero Output Voltage Shall Source Source Source The field return the 's output voltage at the time of the request. The output voltage is measured either at the 's receptacle or, if the has a captive cable, where the voltage is applied to the cable. Shall SPR PPS Mode The mSeoausrucreement accuracy bOeu +tp/u-3t% V orlotuangdeed to the neareSsht a2l0lmV in. I6f.t5he. 10.2 does no t O suupptporut tth eC urrent Fiel fdield, the field be set to 0xFFFF. Output Current Shall Source Source The field return the 's output current at the time of the request measured at the 's receptacle. Shall The mSeoausrucreement accuracy bOeu +tp/-u1t5 C0umrrAe. nt Shall If the does not support the field, the field be set to 0xFF. Source Rea- l Time flaPgTsF provide a real-time indicationS ohfa thlle 's operating state: Source The (Present Temperature Flag) provide a real-time indication of the 's internal thermal status. If the PTF is noSot usurcpeported, it will be set to zero:  Normal indicates that the Sourc eis operating within its normal thermal envelope.  Warning indicates that the is oSvoeurr-cheeating but is not in imminent danger of shutting down. OTP Event AlertMessage Over Temperature indicates that the is over heated and will shut down soon or has already - sOhuMtdFown and has sent the Shall flag in an. SPR PPSSource Source Current Limit Constant VTohlet age (Operating MoSdhea Flllag) provide a real-timSeP iRn PdPicSa tMioond eof the 's operating mode. When set, the is operating in mode; when cleared it is operating mode. This bit be set to zero when not in.", "tables": ["Table 6.62"], "figures": ["Figure 6.49"], "page_range": [235, 236]}
{"section_path": "6.5.11 Country_Codes Message", "start_heading": "6.5.11 Country_Codes Message", "content": "Country_CodesMessageShall Get_Country_CodesMessage Country_Codes Message Port Port Partner [ISO 3166] The Port Partn er be sent in response to a. The enables a to query its to get a list of alpha-2 country codes as defined in for whicCho tuhnet ry_CodesMe shsaasg ecoSuhnatlrly specific information. Shall Figure 6.50, \"Country_Codes Message\" Table6.63, \"Country Codes Data Block (CCDB)\" The contain a 4…26-byte Country Code Data Block (CCDB) whose format be as shown in Figure 6. 5a0n dC ountry_Codes Message. Extended Header CCDB Data Size= 4-26 (4-26 byte Data Block) Table6.63 Country Codes Data Block (CCDB) Offset Field Description Length Message Offset Field Description [ISO 3166] st First character of the Alpha-2 Country Code defined by [ISO 3166] Country Second character of the Alpha-2 Country Code defined by Code 3 2 [ISO 3166] nd First character of the Alpha-2 Country Code defined by Length * 2n 4 2 Country Code [ISO 3166] Second character of the Alpha-2 Country Code defined by … th Length * 2n n Country Code Country Code Shall Length [ISO 3166] The field contain Country Codes in the Alpha-2 Country Code defined by.", "tables": ["Table 6.63"], "figures": ["Figure 6.50"], "page_range": [237, 237]}
{"section_path": "6.5.12 Country_Info Message", "start_heading": "6.5.12 Country_Info Message", "content": "Country_InfoMessageShall Get_Country_InfoMessage Country_InfoMessage Port Port Partner The be sent in response to a. The enabCleosu an try_I ntofo gMete asdsadgiteioSnhaall clountry specific information from its. Shall Figure 6.51, \"Country_Info Message\" Table6.64, \"Country Info Data Block (CIDB)\" The contain a 4…26-byte Country Info Data Block (CIDB) whose format be as shown in Figure a 6n.d5 1 Country_Info Message. Extended Header CIDB Data Size= 4-26 (4-26 byte Data Block) Table6.64 Country Info Data Block (CIDB) Offset Field Size Get_Country_InfoMessage Country Code First character of the Alpha-2 Country Code received in the corresponding. Get_Country_InfoMessage Second character of the Alpha-2 Country Code received in the corresponding Country Specific Data 2…3 be set to zero. Country Code Shall Get_Country_Info Message The field contain the Alpha-2 Country Code received in the corresponding 6.5.12..2 Country Specific Data Field Country Specific Data Shall The field contain content defined by and formatted in a manner determined by an official agency of the country inGdeicta_Cteodu innt rthy_eI nCfoounMtersys aCgoede field. Shall If the Country Code field in the is unrecognized then Country Specific Data field return the null terminated ASCII text string \"Unsupported Code\".", "tables": ["Table 6.64"], "figures": ["Figure 6.51"], "page_range": [238, 238]}
{"section_path": "6.5.13 Sink_Capabilities_Extended Message", "start_heading": "6.5.13 Sink_Capabilities_Extended Message", "content": "Sink_Capabilities_ExtendedMessageShall Get_Sink_Cap_ExtendedMessage Sink_Capabilities_ExtendedMessage Sink DRP Source Capabilities Sink The be sent in response to a. The Sink_Capabilities_Exten dedMess eangaebSlhesa lal or a to inform the about its as a. Shall Figure 6.52, \"Sink_Capabilities_Extended Message\" Table6.65, \"Sink TCahpea bilities Extended Data Block (SKEDB)\" return a 24-byte Sink Capabilities Extended Data Block (SKEDB) whose format be as shown in and Figure 6.52. Sink_Capabilities_Extended Message Extended Header SKEDB Data Size= 24 (24byte Data Block) Table6.65 Sink Capabilities Extended Data Block (SKEDB) Size Offset (Byte) Field Type Description (Bytes) VID Vendor ID PID XID FW Version HW Version SKEDB Version - SKEDB Version (not the specification Version): Reserved Shall Not Bit Description Values 0 and 2-255 are and be used. - Load Step - 00b: 150mA/μs Load Step (default) Reserved Shall Not Reserved Shall 11b…10b: and be used. Bit Description 2 7 and be set to zero Percent overload in 10% increments. Sink Load 0 4 Values higher than 25 (11001b) are clipped to Characteristics 250%. 00000b is the default. 5 10 Overload period in 20ms when bits 0 4 non-zero. Duty cycle in 5% increments when bits 0 4 are 1 14 VBUS non-zero. Bit Description LPSSource Compliance Source Source Reserved Shall 3 7 and be set to zero Table6.65 Sink Capabilities Extended Data Block (SKEDB) (Continued) Size Offset (Byte) Field Type Description (Bytes) - Temperature conforms to: - [IEC 60950-1] Touch Temp 0 = Not applicable - [IEC 62368-1] Note: Reserved Battery Slot Battery Info All other values Fixed Batteries Upper Nibble = Number of Hot Swappable s (0…4) Lower Nibble = Number of (0…4) PPS VBUS AC Supply Sink Modes 1 powered Battery Battery AVS Reserved Shall Bit Description 6 7 and be set to zero PDP Source Sink SPR Sink Minimum PDP The of the that Bthaet tery requires to Reserved Shall consuming power from its if it has one. Bit Description SPR Sink PDP Source Sink Operational PDP The of the that the requires to operate at its normal functionality. Bit Description SPR Sink Maximum PDP Sink PDP Reserved Shall PDP Source EPR Sink EPR Sink Minimum 7 and be set to zero PDP TBhatet ery of the that the requires to operate at EPR Sink PDP Source EPR Sink if it has one. Operational PDP The of the that the requires to operate at its normal funcPtiDonPality. EPR Sink PDP VID Shall Vendor ID VID Sink VID VID Shall Device Shall The VID field contain the 16-bit ( ) assigned to[ tUhSeB 2.0']s vend[UoSr Bb y3.t2h]e USB-IF. If the vendor does not have a, the field be set to 0xFFFF. s that have a USB data interface report the 6sa.m5e. 13. a2s the idVe nPdroro idn tuhce tS tIaDnd a(rPd IDDev)i cFe iDeelsdcriptor (see and ). PID Shall Sink Device Shall [USB 2.0] [USB T3.h2e] field contain the 16-bit Product ID (PID) assigned by the 's vendor. s that have a USB data interface report the same PID as the idProduct in the Standard Device Descriptor (see and ). XID Shall Shall [USB 2.0] [USB 3.2] The field contain the 32-bit XID provided by the USB-IF to the vendor who in turns assigns it to a product. 6If.t5he. 1ve3n.d4or does no tF hiarvme awn XaIDre, t hVene rits ion r Fetiuernld zero in this field (see and ). FW Version Shall T6h.5e.13.5 fiel d Hard cowntaairne a nV 8e-brist ifiormnw Fariee vldersion number assigned to the device by the vendor. HW Version Shall T6h.5e.13.6 fiel d S KED coBnt aVine arns 8io-bnit hFairedwldare version number assigned to the device by the vendor. SKEDB Version T6h.5e.13.7 f iLelod acodn tSaitnes pth eF vieerlsdion level of the SKEDB. Currently only Version 1 is defined. Load Step Sink Section 7.1.12.1, \"Voltage Regulation Field\" The field contains bits indicating the Load Step Slew Rate and Magnitude that this prefers. See SinkShall Sink Load Characteristics Shall Not Capabilities Source_Capabilities_ExtendedMessage The report its preferred load characteristics in the field. Regardless of this 6va.l5ue.1, in3 o.p9eration it s Clooadm plian cexec eFeide thlde reported in the. Compliance Shall Source Sink Section 7.1.12.3, \"Compliance Field\" The field contain the types of s the has been tested and certified with (see Touch Temp Shall Sink Sink [IEC T60he9 50-1] [IEC 6fi2el3d6 8-1] reporSti nthkeM IEaCy standard used to determine the surface temperature of the 's enclosure. Safety limits for[ ItEhCe 6236's8 t-o1u]ch temperature are set in applicable product safety standards (e.g., or ). The report when its touch temperature performance conforms to the TS1 6or. 5TS.21 l3im.1its1 describ e Bd aint tery Info. Battery Info Shall Fixed Batteries Hot Swappable Battery Sink Shall Battery Slot Fixed Batteries The field B raepttoerrty t hInef onumbeSrh oafl l and Number of Bat tselorites st/hBea tter y Slots supports. TShoisu frieceld_ Capab iinlidteiepse_nEdxetenntldye rdepMoersts tahgee number of s and the number of. The information reported in the field match that reported in the fieSlidn okfS thhael l Fixed Bat teries. Battery Slot AFi xed B atter ihesavSeh anlol more than 4 and no more than 4 s. Fixed BatteryShall Not Attach Detach be numbered consecutively from 0 to 3. The number assigned to a given Batt cehrya nSlgoet beSthwaellen and. Battery SlotShall Not Attach Detach s be numbered consecutively from 4 to 7. The number assigned to a given change between and. Sink Modes Shall Capabilities Sink Sink PPSSource The bit field identify the charging and the power sources that can be used by the. When bit 0 is set, the Sin khas the ability to use a for fast charging. The- source of power a caSni nukse: VBUS - When bit 1 is set, the Sink has the ability to be sourced by AC. Supply - When bit 2 is set, the Sink has the ability to be sourced by anB attery. - When bit 3 is set, the Sink has the ability to be sourced by aB attery. When bit 4 is set, the has the ability to be sourced by a with essentially infinite energy (e.g., aM caayr battery). Sink Sink Battery Bits 1-4 AC S buep pselyt independeSnintlky of one another. The comVbi Bn Ua StionV i Cn Od Ni Ncates what sources of power the can utilize. For example, some s are only powered by a (e.g., an automobile battery) rather than the more common anSdin skome s are only powereAd VfrSom or. 6W.h5en.1 b3it.51 i3s set, the SPR h aSs itnhek a bMiliityn tiom suuppmor tP DP. SPR Sink Minimum PDP Shall SourcePDP Sink Battery TBhatet ery field contain the minimum pPoDwPeSrh ould needed by the, rounded up to the next integerS, PtoR o Spienrka tMe ianti imtsu lomw PeDstP level oSf hfuanllctionality without requiring pSoPwRe Sri fnrko mOp itesr ational i Pf pDrPesent. charging maSyo buer acen opportunistic feature, however this be designed for basic functionAaltittayc, hneodt Sfoinr kcharginSgi. nTkhe EPR Capable field be lePssD tPhan or equal to the Shall. The value is used by the to determine whether or not it has sufficient power to minimally support the. If the is and is unable to operate at s less than 100W, it set this field to the minimSuinmk power to sustain PD communication. Source Shall If theS PR S iins ks eMlfi-npiomwuemre dP,D sPuch that it doesn't needS hpaorweedr C faropmac iat y Charg, etrhen it set thSish foieulldd to zero. Sink The is used to indicate to s the power that be delivered to the to guarantSePe Rat S lienaks tM biansiimc fuumnc PtiDoPnality for the end user. Pos- sible examples of Charg ecrould be: The minimum power a wireless would require in order to detect, and deliver the minimum - required amount of power to the attached device. Battery Sink - The power requireB d a tt ot e hr ay ve basic functionality by a less, 6.5.13O.n1 a4 device w SitPh aR Sink, iOt cpane proawteiro tnhea ml iPniDmuPm functionality of the device SPR Sink Operational PDP Shall SourcePDP Sink PDP Rating Source TheS ink field Se ccotinotna i1n0 t.3h.e2, \"Norm ative t hSiantk t hReu lmesa\"nufactuSrPeRr Sreincokm Ompeernadtsio fnora tl hPeD P normSahl afullnctionality of the, roundedS uinpk to the next integer. This corresponds to the Sink Bat otef ry s that the Sink is designBeadtt teor yoperate SwPitRh S (iSneke O perational PDP Shall ). The PDP Rating Charge r field be suffSicinieknt to operate all the Ch'sa frugnecrtioPnDaPl mRaotdinegs normaSlliyn kANDE PcRh aCragpea tbhlee 's if present. FoPr DP s with a (s),S thhael l SPR Sink Minimum fi PelDdP correspond to the of the shipped with the or the recommended 's. If the is and is unable to operate at s less than 100W, it set the field to the minimum power to sustain PD commSuinnkication. Source Shall If theS PR S iinsk s eOlfp-eproawtieorneda,l sPuDcPh that it doesn't need pSohwaerre dfr Comap aa city Cha, rtgheern it set this field to zero. Sink The is used to indicate to s that at this power level the user is not expected to receive any performance warning related to the power being supplied to the. SPR Sink Maximum PDP Shall PDP Sink Battery SPR Sink Maximum PDP The Shall Not fiSePldR Sink Ocopnetraainti othnea hl iPgDhePst theM ay will ever request under any operating cSoonurdciteion, rounded up to the next integer, including charging its if pArtetascehnetd. TShinek Sink EPR Capable field be less than PthDeP Shall field, but be the same. The value is used by the to determine the maximum amount of power it has to budget for the. If the is and is unable to operate at s less than 100W, it set this field to the minimum power to sustain PD commSuinnkication. Source Shall I6f.t5he. 13. 1is6 self-pow eErPedR, s uScihn thka tM it idnoeismn'tu nmeed P pDowPe r from a, then it set this field to zero. EPR Sink Minimum PDP Shall SourcePDP EPR Sink Battery Battery The field contain the PDP Sho nueldeded by an, rounded up to the next integer, to opeErPatRe Saitn ikts M loiwniemstu lmev PelD oPf functSiohnaalllity without requiring power EfrPoRm S iitnsk Opera,t iiof npraels PeDntP. charging may be an opportunisStoiuc rfceeature, however this be designed for basic functionality, not for cAhttaarcghinegd. STinhke Sink EPR Cap afibelled be Sleinsks than or equal to the field Svoaulurec.e The value iSsh uasleld by the to determine whether or not it has sufficient power to minimally support the. If the is not, or if the is self-powered, such that it doesn't need power from a EP,R th Siisn fkie Mldi nimu mbe P sDePt to zero. Shared Capacity Charger Should Sink The is used to indicate to s the power that be delivered to the to guarantEeeP Rat S lienaks tM biansiimc fuumnc PtiDonPality for the end user. Pos- sible examples of could be: Battery Sink - The power requireB d a tt ot e hr ay ve basic functionality by a less, Note: OnE Pa Rd eSvinicke Mwiinthim a um PDP, it can power the minimSuPmR Sfuinnkct Mioinnailmityu mof PthDeP device. EPR Sink Operational PDP Shall SourcePDP Sink PDP Rating EPR Source The Sink field conSetacitnio tnh 1e 0.3.2, \"N orm athtiavte t hSien mk Ranuluefsa\"cturer ErePcRo mSimnke nOdpse froart itohne al nPoDrPmSahl afullnctionality of the, roundedS uinpk to the next integer. This corresponds to the Sink Bat otef ry s thatS tihnek is dBesaitgtneeryd to opSehraatlel with (See PDP Rating Charger ). The EPR Sink be suCfhfiacriegnetr toP oDpPe rRaattei nagll the Sin'sk functioEnPaRl mCaopdaebsl enormally ASNinDk charge the 's if present. For s with a Sour(cse), it cSohrraelslpond to the of the shipped with the or the recommended 's. If the is not, or if the is self-powered, such that it doesn't needE pPoRw Seinr kfr Oompe ar ational, tPhDisP field be set to zeSrhoa. red Capacity Charger Sink The is used to indicate to s that at this power level the user is 6no.t5 e.x1p3ec.t1ed8 to rece i vEe PanRy pSeirnfokrm Manacex wimarnuinmg r ePlaDtePd to the power being supplied to the. EPR Sink Maximum PDP Shall PDP EPR Sink Battery EPR Sink Maximum PDP The Shall Not fiEePldR Sink Obep ehrigahteiosnt al PD thPe May will ever request under any operatinSgo urce condition, rounded up to the next integer, including charging its Att aifc pheredsSeinntk. The Sink EPR Capable field Sink be less than the, but bSeo uthrcee same. The Svhalaulel is used by the to determine the maximum amount of power it has to budget for the. If the is not, or if the is self-powered, such that it doesn't need power from a, this field be set to zero.", "tables": ["Table 6.65", "Table 6.65"], "figures": ["Figure 6.52"], "page_range": [239, 243]}
{"section_path": "6.5.14 Extended_Control Message", "start_heading": "6.5.14 Extended_Control Message", "content": "Extended_ControlMessage Control Message Extended_ControlMessage Extended_ControlMessageShall Figure 6.53, \"Extended_Control Message\" TTahbel e6.66, \"Extended C ontrol Da etax tBelnodcsk t(hEeC DB)\" space. The includes one byte of data. The be as shown in and Figure 6.53 E.xtended_Control Message Extended Header ECDB Data Size= 2 (2-byte block) Table6.66 Extended Control Data Block (ECDB) Offset Field Value Description Extended Control Message Extended_ControlMessage Table6.67, \"Extended Control Message Types\" May Message TShoeu rce Sink Cable P lug types are speciSfhieadl li nN othte Type field of the ECDB aMneds asarge elisted in Mess. aTghee Sent byS choallulmn indicates entitSieOsP w Phaicckhe t send the given (, or ); entities not listed issue the corresponding. The \"Valid Start of Packet\" column indicates the Tables 6w.6hi7c h E xtend oendly C boen itsrsoule Md eins sage Typess. Valid Start Type Data Message Type Sent by Description of Packet Reserved Reserved Shall Not All values not explicitly defined are and be used. EPR_Get_Sink_Cap Source DRP Section 6.5.14.2 SOP EPR_KeepAlive Sink Section 6.5.14.3 SOP EPR_KeepAlive_Ack Source Section 6.5.14.4 SOP Reserved Shall Not All values not explicitly defined are 5 and be used. EPR_Get_Source_Cap Source Capabilities MessageShall Port Sink EPR Mode Source Capabilities Dual-Role Power Port TPahret ner Port (EPR Get EPR SourceShall) only be sEePnRt b_Syo au rce_C caappaabblieli toife ospMeersastaingge as a Sect iaonnd 6 t.5h.a1t5 s.2u,p \"pEoPrRt_sS ource_Cap taob rileitqieuse Mst etshsea ge\" Port and EPR M ocdaepabiliStyo uorfc ietsS hall. A Not_ tShuapt pcoanrt oepdeMraetses aags ean respond by returning an (see ). A that does not support as a retuErPnR t hCea pableSink Port. SPR ModeShall EPR_Source_CapabilitiesMessage Shall Not EPR_RequestMessage An that is operating in treat the as i6n.fo5r.m1a4ti.o2nal only a n Ed PR_Get r_eSspinonkd_ wCitahp an M essage. EPR_Get_Sink_Cap Sink Capabilities MessageShall Port Source EPR Mode Sink Capabilities Dual-Role Power Port PTahret ner Port E P(ERP CRa Gpaebt le )S inkShal l only be sent by a EP cRa_pSaibnlke_ Coaf oppaebrialittiinegs as a Messag aend thSaet cstuiopnp o6r.5ts.1 5.3, \"EPR_ Stoin rke_qCuapesatb tihlieti es Message\" P oarntd capaEbPilRit yM oofd iets Sink Shall. A thNaot ti_sS upportedMe ospsaegraeting as a respond by returning an (see ). A that does not support as a return the.", "tables": ["Table 6.66"], "figures": ["Figure 6.53"], "page_range": [244, 244]}
{"section_path": "6.5.15 EPR Capabilities Message", "start_heading": "6.5.15 EPR Capabilities Message", "content": "EPR_KeepAliveMessageMay Sink EPR Mode Source EPR Mode EPR_KeepAlive_AckMessage Sink STehcet ion 6.4.9, \"EPR_R equest M essag bee\" sent by a operating in to meet the requirement for periodic traffic. The operating on responds by returning an to the. See EPR_KeepAlive_AckMessageShall Source EPR Mode EPR_KeepAlive Message Section 6.4.9, \"EPR_Request Message\" The be sent by a operating in in response to an 6.5.15. See EPR Capabilities Me fsosr aadgdeitional information. EPR CapabilitiesMessage Extended CapabilitiesMessage Power Data Object PDO Section 6.4.1, \"Capabilities Message\" EPR_Source_CapabilitiesMessage TEPheR _Sink_Capabiliti esMessa gise anS ource mCaadpea obfi lities s ( ) defined in EPR_Source_CapabilitiesMessage S. Iint kis used to form s and EPR_Sink_Capabilities Messages. s expose their EPR power by sendingP aonw er Data Object Table6.7, \"Power Data Ob ject\". s expose their EPR power requirements by returning an when requested. Both are composed of a number of 32-bit s (see EPR CapabilitiesMessageSh)a.ll Fixed SupplyPDO Port PDO An have a 5V containing the sending 's information in the first 6ob.j5ec.t1 p5os.1ition follow EedP bRy uCpa top 1a0b aidldiittiioensal Mess.sage Construction EPR CapabilitiesMessage EPR_Source_Capabilities EPR_Sink_Capabilities Extended Message SPR (A)PDO SPR CapabilitiesMessage TShoeu rce_Capabilitie s Sinsk (_Capabilities and EPR (A)PDO ) are s with Fthigeu frires 6t.s5e4v, e\"nM paopspiitniogn SsP fRil lCeadp wabitilhit tihese tsoa EmPeR Capabilitiess\" returned by the s ( and ) followed by the s starting in the eighth position. See Figure 6.54 Mapping SPR Capa.bilities to EPR Capabilities Header SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO Capabilities 001b 010b 011b 100b 101b 110b 111b PDOs 20V1 PDOs > 20V2 EPR Capabilities 001b 010b 011b 100b 101b 110b 111b 1000b 1001b 1010b 1011b Extended Header SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO EPR PDO EPR PDO EPR PDO EPR PDO 1) See Section 10 “Power Rules” for rules, on which SPR (A)PDOs are allowed to be used for a given PDP. 2) See Section 10 “Power Rules” for rules, on which EPR (A)PDOs are allowed be used for a given PDP. Power Data Object EPR CapabilitiesMessage Shall SPR (As) PinD tOhe SPR Capsa bilitie bseM seesnsta gine the foNlluomwbinegr oorfd Dear:ta Objects Message Header EPR CapabilitiesMessage Number of Data Objects 1) TMheess age Headers as repSoPrRt eCda ipna tbhileit iesMessage. The field in the of the is the same as the field in the SPR Capab iolift itehseM essage. PDO Data Object Shall 2) If theE PR (A)PDO cSoencttiaoinn s6 f.4e.w1,e \"rC tahpaanb 7il ities sM, tehssea ugneu\"sSehda ll Dast a Obje bcet zero filled. Shall 3) The s as defined in start at position 8 andF ixed S buep psleynPt DinO the following order: Shall a) s that offer 28V, 36V or 48V, if present, be sent in voltage order; lowest to higheEsPtR. AVSAPDOShall b) One be sent. EPR_Source_Capabilities EPR CapabilitiesMessage Power Data Object EPR Source EPR Source Capabilities Sink EPR Source SThhae ll EPR_Source_Ca ipsa abni litiesMessage containing a list of s that the is capable of supplying. It is sent by an in order to convey its to a. An - send the EPR Mode : - When entE eP rR in M g ode Capabilities - While in E sP wR_ hG ee nt _ itS so urce_CapM ce hss aa ng ge e - In respoS no sft e R te os ae nt EPR Mode EPR SAifntker a EwPhRil eM iond eShall EPR_Source_CapabilitiesMessage Shall EPR_RequestMessage Source Capabilities ShallRenAeng otiate operating in So urce evaluate everyA dvertise Source Capabilit ies it receives and respond with a. If its power consumption exceeds the, it so as not tSoP Rex Mceoedde the EPR Sin'sk most recentlyE PR_Sourcde _CapabilitiesMess.age EPR_Get_Source_CapMessage Shall Not EPR_RequestMessage While operating in, an receiving an in response to an (A)PDO EPR _Sources_ Capabiliti reessMpoenssda gweitShh aanll. EPR_RequestMessage EPR Mode The s in an only be requested using the and only wShoeunr cine. EPR Mode SPR(A)PDO Shall EPR_Source_CapabilitiesMessage EPR (A)PDO SPR (A)PDO WheFnig ure 6.5 w5,a \"nEtPsR t_oS eoxuirtc e_Capabili, tiife ns omt easlsraegaed yw iinth p noow EePr Rc oPnDtOrasc\"t with an, it send an with no s (i.e. seven s including any zero padded ones). See Figure 6.55 EPR_Source_Capabilities messag.e with no EPR PDOs Header SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO Capabilities 001b 010b 011b 100b 101b 110b 111b PDOs 20V1 EPR Capabilities 001b 010b 011b 100b 101b 110b 111b Extended Header SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO 1) See Section 10 “Power Rules” for rules, on which SPR (A)PDOs are allowed to be used for a given PDP. EPR_Sink_Capabilities EPR CapabilitiesMessage Power Data Object EPR Sink EPR Sink EPR Source TEPhRe SinkShall isE aPnR _Sink_Capabiliti esMessa tgheat contains a list ofE PR_Get_Sink_CapsM tehsasta tghee requires to operate. It is sent by an in order to convey its power requirements to an. The only send the in response to an.", "tables": ["Table 6.7"], "figures": ["Figure 6.54"], "page_range": [245, 246]}
{"section_path": "6.5.16 Vendor_Defined_Extended Message", "start_heading": "6.5.16 Vendor_Defined_Extended Message", "content": "Vendor_Defined_ExtendedMessage VDEM Extended Message The ( ) is provided to allow vendors to exchange information outside of thVate dnedfoinr_eDde bfyin tehdis_ EsxpteecnifdiceadtiMones usasignegS thhael l formaVte.ndor Data Object VDM Header May A consist of at least one, the, and contain up to a maximum of 256 Vadendidtoiorn_Dale dfiantead b_yEtxetse.ndedMessage Vendor_Defined_ExtendedMessage Shall Valid Standard or Vendor ID SVID VDM Header To ensure vendor uniqueness of s, all s VDE cMontain a USB Messa g(e M)a yallocated by USB-IF in the. AVe ndor_ Ddoeefisn neodt_ Edxetfeinned aendyM setrsusacgtuereS ahnadll Not s be created in anNye mgoatnianteiorn that theM vaeyndor chooses. Local Policy Message Vendor_Defined_Extended Messages be used for direcSt opuorwceer. They however be used Stoo ualrtceer_ Capabilitie,s aMffeescstaingge what is offered or consumed via the normal PD s. For example, a could be used to enable the to offer additional power via a Vendor_Defined_Ext endedM.essage Shall Not s be used where equivalent functionality is contained in the PD SpecMifiecsastaiogen e.g., autShheanltlication or firmwFarigeu urpe d6a.5te6., \"Vendor_Defined_Extended Message\" The format be asF sihgouwren 6in.5 6 Vendor_Defined_Extended Message. Extended Header VDEDB VDM Header Data Size= 4 260 (0 256-byte Data Block) VDM HeaderShall Vendor Defined Extended Message VDM Header Command Message The be the first 4-bytes in a. The provides VDM H sepaadceer to allowV DveEnMdSohrsa tllo customizeU nstructusr feodr VthDeMir H oewand eprurposes. Section 6.4.4.1, \"Unstructured VDM\" The in the follow the format as defined in VDEM Shall. Explicit Contract VDEsM AMS oSnhlayl lb Ne ostent and received after anA MS has been established. A VDE M interrupt any other PD. VDM Header SVID Port Partner Cable Plug Shall The VD EdMoes not define the contents of bits BS1e4ct…io0n i 6n. 4th.4e.3.4, \"Enter Mo. dTeh eCiorm dmefainnidti\"on and use are the sole responsibility of the vendor indicated by the. The s and s exit any states entered using a according to the rules deVfiDnEedM inM essage. The- folloVwDiEnMg ruSlheas lal pNpolty to the use of s:  VDsE M Shall be initiated or responEdxepdl itcoit u Cnodnetrr aacnty other circumstances than the following:  s only be useEdx pwlihceitn C aonn tractVDEM Sha lils N ino tplace. Shall Ignored  PCaribolre tPol uegstaSbhliaslhl iNngo tan VDEM s be sent and be if received. s initiate s. - VDEM Shall Modal Operation Active Mode UFP Enter ModeCommand VDEM Active Mode s VD oEnMly bSeh aulsled during SVID in the context of an i.e., only after the has Ack'ed the can s be sent or received. The and the - V asD sE oM ciatM eda y s usS eO tP h* e P sa ac mke et. - s DFP be U usF eP d with V sD. EM VID Shall Not_SupportedMessage When a or does not support s or does not recognize the it return a Note: VDEM C.hunking Unstructured VDM Usage of s with is not recommended since this is less efficient than using s.", "tables": [], "figures": [], "page_range": [247, 248]}
{"section_path": "6.6 Timers", "start_heading": "6.6 Timers", "content": "All the following timers are defined in terms of bits on the bus regardless of where they are implemented in terms of the logical architecture. This is to ensure a fixed reference for the starting and stopping of timers. It is left to the i6m.p6le.m1enter to e n CsuRreC thRaet tchies itivmeinTg iism obeserrved in a real system. CRCReceiveTimerShall Protocol Layer Message Message GoodCRCMessage GoodCRC TMhees sage be used by the seMnedsesar'gse tRecei vteo ensure that a C hRaCsR neocet ibveeeTni mloesrt. Failure to receive an acknowledgment of a (a ) whether caused by a bad on the receiving end or by a garbled within is detected when the expires. Protocol Layer CRCReceiveTimer Shall nRetryCount TNhoete s:endeCr'asb le Plug responMsees swahgeen a Extended M eexspsairgees be to rCethruyn ked times. Section 6.7.2, \"Retry Counter\" s do not retry s and large s that are not are not retried (see ). MessageShall tRetry CRCReceiveTimer Sending of the Preamble corresponding to the retried start within of the expirCiRnCg.ReceiveTimerShall MessageEOP PHY Layer CRCReceiveTimerShall EOP GoodCRCMessage The PHY b Lea sytearrted when the last bit of the has been transmitted by the. The be stopped when the last bit of the corresponding to the has bPereonto rceocle Livaeyder by the Messa. geShall GoodCRCMessage tTransmit CRCReceiveTimer tTransmit Shall The Messa rgeecEeiOvPing a respondP HwYit Lha ay er within in ordGeoro tdoC RC eMnessusraeg ethat the sender's PHY L daoyeers not expire. The time be measured from when the last bit of the has been received by the until the first bit of the Preamble of the SenderResponseTimerShall Policy Engine Message Get_Source_CapMessage tSenderResponse The be used by the senSdeenrd'se rResponseTim toe ernsure that a requesting a response (e.g., ) is responded to within a bounded time of. Failure to receEivxete tnhdee edx Mpeecstseadg eresponse is deCtehcutnekd whenS tehned erResponseTimer expires. Chunking Section 8.3.3.1.1, \"SenderResponseTimer State Diagram\" SFeonr derResponseTimesr received as s, the will also be started and stopped by the Rx State Machine. See for more details of the Policy Engine operation. SenderResponseTimer Shall Message Section 8.3, \"Policy Engine\" The 's response when the expires be dependent on the sent (see SenderResponseTimerSha)l.l GoodCRCMessageEOP Message PHY Layer The be started from the time the last bit of the, corresponding to thSee nderRes rpeoqnuseesTtiinmge ar rSehsaplolnse, has been received by the EOP. GoodCRCMessage Message PHY Layer The be stopped when the last bit of the of the, corresponding to the expected reMspesosnasgee, has been tranSshmaliltted by the tRec.eiverResponse SenderResponseTimer The receiver of a requiring a response respond within in order to ensure that the steRnedceeri'vse rResponse Shall does not expire. GoodCRCMessageEOP Message PHY Layer The Message time be measured from theP tHimY eL athyee rlast bit of the, corresponding to the expected request, has been transmitted by the until the first bit of the 6re.s6po.n3se CPraeapmabble ihlaist bye eTn itmranesmristted by the. Source Sink Attachment Capabilities Attachment s and s use Capability Timers to determine of a PD Capable device. By periodically sending or requesting, it is possible to determine PD device when a response is received.", "tables": [], "figures": [], "page_range": [249, 249]}
{"section_path": "6.6.1 CRCReceiveTimer", "start_heading": "6.6.1 CRCReceiveTimer", "content": "All the following timers are defined in terms of bits on the bus regardless of where they are implemented in terms of the logical architecture. This is to ensure a fixed reference for the starting and stopping of timers. It is left to the i6m.p6le.m1enter to e n CsuRreC thRaet tchies itivmeinTg iism obeserrved in a real system. CRCReceiveTimerShall Protocol Layer Message Message GoodCRCMessage GoodCRC TMhees sage be used by the seMnedsesar'gse tRecei vteo ensure that a C hRaCsR neocet ibveeeTni mloesrt. Failure to receive an acknowledgment of a (a ) whether caused by a bad on the receiving end or by a garbled within is detected when the expires. Protocol Layer CRCReceiveTimer Shall nRetryCount TNhoete s:endeCr'asb le Plug responMsees swahgeen a Extended M eexspsairgees be to rCethruyn ked times. Section 6.7.2, \"Retry Counter\" s do not retry s and large s that are not are not retried (see ). MessageShall tRetry CRCReceiveTimer Sending of the Preamble corresponding to the retried start within of the expirCiRnCg.ReceiveTimerShall MessageEOP PHY Layer CRCReceiveTimerShall EOP GoodCRCMessage The PHY b Lea sytearrted when the last bit of the has been transmitted by the. The be stopped when the last bit of the corresponding to the has bPereonto rceocle Livaeyder by the Messa. geShall GoodCRCMessage tTransmit CRCReceiveTimer tTransmit Shall The Messa rgeecEeiOvPing a respondP HwYit Lha ay er within in ordGeoro tdoC RC eMnessusraeg ethat the sender's PHY L daoyeers not expire. The time be measured from when the last bit of the has been received by the until the first bit of the Preamble of the SenderResponseTimerShall Policy Engine Message Get_Source_CapMessage tSenderResponse The be used by the senSdeenrd'se rResponseTim toe ernsure that a requesting a response (e.g., ) is responded to within a bounded time of. Failure to receEivxete tnhdee edx Mpeecstseadg eresponse is deCtehcutnekd whenS tehned erResponseTimer expires. Chunking Section 8.3.3.1.1, \"SenderResponseTimer State Diagram\" SFeonr derResponseTimesr received as s, the will also be started and stopped by the Rx State Machine. See for more details of the Policy Engine operation. SenderResponseTimer Shall Message Section 8.3, \"Policy Engine\" The 's response when the expires be dependent on the sent (see SenderResponseTimerSha)l.l GoodCRCMessageEOP Message PHY Layer The be started from the time the last bit of the, corresponding to thSee nderRes rpeoqnuseesTtiinmge ar rSehsaplolnse, has been received by the EOP. GoodCRCMessage Message PHY Layer The be stopped when the last bit of the of the, corresponding to the expected reMspesosnasgee, has been tranSshmaliltted by the tRec.eiverResponse SenderResponseTimer The receiver of a requiring a response respond within in order to ensure that the steRnedceeri'vse rResponse Shall does not expire. GoodCRCMessageEOP Message PHY Layer The Message time be measured from theP tHimY eL athyee rlast bit of the, corresponding to the expected request, has been transmitted by the until the first bit of the 6re.s6po.n3se CPraeapmabble ihlaist bye eTn itmranesmristted by the. Source Sink Attachment Capabilities Attachment s and s use Capability Timers to determine of a PD Capable device. By periodically sending or requesting, it is possible to determine PD device when a response is received.", "tables": [], "figures": [], "page_range": [249, 249]}
{"section_path": "6.6.2 SenderResponseTimer", "start_heading": "6.6.2 SenderResponseTimer", "content": "All the following timers are defined in terms of bits on the bus regardless of where they are implemented in terms of the logical architecture. This is to ensure a fixed reference for the starting and stopping of timers. It is left to the i6m.p6le.m1enter to e n CsuRreC thRaet tchies itivmeinTg iism obeserrved in a real system. CRCReceiveTimerShall Protocol Layer Message Message GoodCRCMessage GoodCRC TMhees sage be used by the seMnedsesar'gse tRecei vteo ensure that a C hRaCsR neocet ibveeeTni mloesrt. Failure to receive an acknowledgment of a (a ) whether caused by a bad on the receiving end or by a garbled within is detected when the expires. Protocol Layer CRCReceiveTimer Shall nRetryCount TNhoete s:endeCr'asb le Plug responMsees swahgeen a Extended M eexspsairgees be to rCethruyn ked times. Section 6.7.2, \"Retry Counter\" s do not retry s and large s that are not are not retried (see ). MessageShall tRetry CRCReceiveTimer Sending of the Preamble corresponding to the retried start within of the expirCiRnCg.ReceiveTimerShall MessageEOP PHY Layer CRCReceiveTimerShall EOP GoodCRCMessage The PHY b Lea sytearrted when the last bit of the has been transmitted by the. The be stopped when the last bit of the corresponding to the has bPereonto rceocle Livaeyder by the Messa. geShall GoodCRCMessage tTransmit CRCReceiveTimer tTransmit Shall The Messa rgeecEeiOvPing a respondP HwYit Lha ay er within in ordGeoro tdoC RC eMnessusraeg ethat the sender's PHY L daoyeers not expire. The time be measured from when the last bit of the has been received by the until the first bit of the Preamble of the SenderResponseTimerShall Policy Engine Message Get_Source_CapMessage tSenderResponse The be used by the senSdeenrd'se rResponseTim toe ernsure that a requesting a response (e.g., ) is responded to within a bounded time of. Failure to receEivxete tnhdee edx Mpeecstseadg eresponse is deCtehcutnekd whenS tehned erResponseTimer expires. Chunking Section 8.3.3.1.1, \"SenderResponseTimer State Diagram\" SFeonr derResponseTimesr received as s, the will also be started and stopped by the Rx State Machine. See for more details of the Policy Engine operation. SenderResponseTimer Shall Message Section 8.3, \"Policy Engine\" The 's response when the expires be dependent on the sent (see SenderResponseTimerSha)l.l GoodCRCMessageEOP Message PHY Layer The be started from the time the last bit of the, corresponding to thSee nderRes rpeoqnuseesTtiinmge ar rSehsaplolnse, has been received by the EOP. GoodCRCMessage Message PHY Layer The be stopped when the last bit of the of the, corresponding to the expected reMspesosnasgee, has been tranSshmaliltted by the tRec.eiverResponse SenderResponseTimer The receiver of a requiring a response respond within in order to ensure that the steRnedceeri'vse rResponse Shall does not expire. GoodCRCMessageEOP Message PHY Layer The Message time be measured from theP tHimY eL athyee rlast bit of the, corresponding to the expected request, has been transmitted by the until the first bit of the 6re.s6po.n3se CPraeapmabble ihlaist bye eTn itmranesmristted by the. Source Sink Attachment Capabilities Attachment s and s use Capability Timers to determine of a PD Capable device. By periodically sending or requesting, it is possible to determine PD device when a response is received.", "tables": [], "figures": [], "page_range": [249, 249]}
{"section_path": "6.6.3 Capability Timers", "start_heading": "6.6.3 Capability Timers", "content": "All the following timers are defined in terms of bits on the bus regardless of where they are implemented in terms of the logical architecture. This is to ensure a fixed reference for the starting and stopping of timers. It is left to the i6m.p6le.m1enter to e n CsuRreC thRaet tchies itivmeinTg iism obeserrved in a real system. CRCReceiveTimerShall Protocol Layer Message Message GoodCRCMessage GoodCRC TMhees sage be used by the seMnedsesar'gse tRecei vteo ensure that a C hRaCsR neocet ibveeeTni mloesrt. Failure to receive an acknowledgment of a (a ) whether caused by a bad on the receiving end or by a garbled within is detected when the expires. Protocol Layer CRCReceiveTimer Shall nRetryCount TNhoete s:endeCr'asb le Plug responMsees swahgeen a Extended M eexspsairgees be to rCethruyn ked times. Section 6.7.2, \"Retry Counter\" s do not retry s and large s that are not are not retried (see ). MessageShall tRetry CRCReceiveTimer Sending of the Preamble corresponding to the retried start within of the expirCiRnCg.ReceiveTimerShall MessageEOP PHY Layer CRCReceiveTimerShall EOP GoodCRCMessage The PHY b Lea sytearrted when the last bit of the has been transmitted by the. The be stopped when the last bit of the corresponding to the has bPereonto rceocle Livaeyder by the Messa. geShall GoodCRCMessage tTransmit CRCReceiveTimer tTransmit Shall The Messa rgeecEeiOvPing a respondP HwYit Lha ay er within in ordGeoro tdoC RC eMnessusraeg ethat the sender's PHY L daoyeers not expire. The time be measured from when the last bit of the has been received by the until the first bit of the Preamble of the SenderResponseTimerShall Policy Engine Message Get_Source_CapMessage tSenderResponse The be used by the senSdeenrd'se rResponseTim toe ernsure that a requesting a response (e.g., ) is responded to within a bounded time of. Failure to receEivxete tnhdee edx Mpeecstseadg eresponse is deCtehcutnekd whenS tehned erResponseTimer expires. Chunking Section 8.3.3.1.1, \"SenderResponseTimer State Diagram\" SFeonr derResponseTimesr received as s, the will also be started and stopped by the Rx State Machine. See for more details of the Policy Engine operation. SenderResponseTimer Shall Message Section 8.3, \"Policy Engine\" The 's response when the expires be dependent on the sent (see SenderResponseTimerSha)l.l GoodCRCMessageEOP Message PHY Layer The be started from the time the last bit of the, corresponding to thSee nderRes rpeoqnuseesTtiinmge ar rSehsaplolnse, has been received by the EOP. GoodCRCMessage Message PHY Layer The be stopped when the last bit of the of the, corresponding to the expected reMspesosnasgee, has been tranSshmaliltted by the tRec.eiverResponse SenderResponseTimer The receiver of a requiring a response respond within in order to ensure that the steRnedceeri'vse rResponse Shall does not expire. GoodCRCMessageEOP Message PHY Layer The Message time be measured from theP tHimY eL athyee rlast bit of the, corresponding to the expected request, has been transmitted by the until the first bit of the 6re.s6po.n3se CPraeapmabble ihlaist bye eTn itmranesmristted by the. Source Sink Attachment Capabilities Attachment s and s use Capability Timers to determine of a PD Capable device. By periodically sending or requesting, it is possible to determine PD device when a response is received. First Explicit Contract SourceShall SourceCapabilityTimer Source_CapabilitiesMessage tTypeCSendSourceCap Prior to the a use the to periodically send out a - Port A ttached every while: - The Sour cise. Sink Port The isS nooutr cine Caanp aacbtiivliet ycoTnimneecrtion with a PDSo urceSha.ll Source_CapabilitiesMessage Shall SourceCapabilityTimer SourceCapabilityTimerShall Whenever there is a EOP timeGoouotd tChReC Messa ge send a PHY L ayer. It then re-initialize and restart the Source. The RequestMessage be stopped when the last bit of the corresponding to the has been received by the since a PD Ncoontnee:ction hasS obuerecne established. At this poiSnot,u trhcee _Capab wiliatiitess foMre ass age nCapsC oour nat rMesepsosangsee timeout. GoodCRCMessage Section 6.7.4, \"Capabilities Counter\" The can also stop sending after s have been Sectionse 8n.3t.w3.i2t,h \"oPuotl iac y Engine S ource Po rrte Sstpaotne sDei (asgerea m\" Source)_.Capabilities Message See for more details of when 6.6.3.2s are transm itSteind.kWaitCapTimer SinkShall SinkWaitCapTimer The Defa suultp Cpoonrtt rtahcet Implicit Contra.ct Sink Source_Capabilities Message VBUS tTypeCSinkWaitCap SinkMay Hard ResetSignaling While in a or aSno urce_Capabilitie swMheenss aa ge obserSvoeus racne absenSceec toiof n 6.7.4, \"Capabilities Counter\"s, after is present, for aU dSuBr Tatyipoen- Cof the issue in order to restart the sending of s by the (see S)i nokr continue tEoP oRp Meroadtee at current. EPR_Source_CapabilitiesMessage GoodCRC Message EPR_ModeMessage Enter Succeeded tWThypeneC aS inkW, eanitteCrainpg SinkSh,a ollbservesH aanr da bRseesnecteS oigf naling EPR Mode s, aSfetecrti othne 6.4.10, \"EPR_Mo adcek Mnoeswsalegdeg\"ing the with the Action field set to 3 ( ), for a duration of the issue in order to exit (see Sink E).PR Mode Source_CapabilitiesMessage GoodCRCMessage EPR_ModeMessage Exit tTypeCSinkWaitCap WheSnin ak Sha,l lexitingH ard Rese,t oSbisgenravleinsg an absence of S ource_Csa, paaftbeirl itthiee sMessage SaockunrcoewledgSinegct tihone 6.7.4, \"Capa bilities C owuinthte trh\"e Action field set to 5 ( ), for a duration of the issue in order to restart the sending of s by the Sec (tisoene 8.3.3.3, \"Policy Engine Sink Port State).Diagram\" SinkWaitCapTimer S6e.e6.3.3 tFirstSourceCap for more details of when the is run. Port Partner Attached Hard Reset Power Role Swap Fast Role Swap Source Shall Source_CapabilitiesMessage tFirstSourceCap VBUS vSafe5V After s are or after a or after a or after a a Ssoefntd R ietsse ftirstS ourceShall Sourc ew Citahpianb ilitiesMessage of tFi rrsetaScohuinrgc eCap. GoodCRCMessageEOP AcceptMessage After, a send its first within after last bit of the Si ncokrrespondinSgo tuor ce Capa bilitiesM.essage Sink SinkWaitCapTimer ThSiosu erncseures that tEhPeR Mod reecSehiavells a EPR_Sou rce_Capa bbeifloitriee sthMe essag'se tFirstSource Ceaxppires. GoodCRCMessage EPR_ModeMessage Enter Succeeded A entering send its first within of the Source EP aRc kMnoodwelSehdagilnlg the Sou rce_Capa wbiitlhit itehse MAcetsisoang efield set ttoF i3r s(tSourceCap ). GoodCRCMessage EPR_ModeMessage Exit A exiting send its first within of the acknowledging the with the Action field set to 5 ( ).", "tables": [], "figures": [], "page_range": [249, 250]}
{"section_path": "6.6.4 Wait Timers and Times", "start_heading": "6.6.4 Wait Timers and Times", "content": "SinkRequestTimer SinkRequestMessage WaitMessage Source SinkRequestMessage tSinkRequest STehcet ion 6.3.12, \"Wait Mes issa ugsee\"d to ensure that the time before the next, after a has been received from the in response to a, is a minimum of min (see SinkRequestTimerShall). EOP WaitMessage Shall Message Hard Reset The be started when the of a has been received and be stopped if anySi ontkhSehr all is receitvSeind koRr edquureinsgt a. EOP WaitMessage Sink RequestMessage RequestMessage SinkRequestTimer Sink TMhaey Req wuaeistt aMt elessaasgt e Shall, after receiving the of a SinkR equestT ismenetr in response to a, before sending a new. Whenever there is a timeout the PR_SwapMessage WaitMessage PR_Swap Message tPRSwapWait Section 6.3.12, \"Wait Message\" PortShall TtPhReS twimaep bWeafoitre the next E OP W, aafitteMr ae ssage has been recPeRiv_Sedw ianp rMesepsosangsee to a PR_ Sisw aa mpiMniemssuamge of min (see ). The wait at least after receiving the of a sent in response to a, before sending a 6ne.w6.4.3 tD. RSwapWait DR_SwapMessage WaitMessage DR_Swap Message tDRSwapWait Section 6.3.12, \"Wait Message\" PortShall TtDhRe Stwimaep bWeafoirte the next E OP W, aaftietrM ae ssage has been receDiRve_Sdw ina preMspeossnasgee to a DR is_S aw maipnMimeussma goef min (see ). The wait at least after receiving the of a sent in response to a, before sending 6a n.6ew.4.4 tVC. ONNSwapWait VCONN_SwapMessage WaitMessage VCONN_SwapMessage tVCONNSwapWait Section 6.3.12, \"Wait Message\" PortShall The time befotVre C Ot Nh NeS nwexatp Wait, aftEeOr Pa W aitMess haagse been received in respVon COse N Nto_S aw ap Message is a minimVu COm N o Nf_ SwapMessage min (see ). The wait at least after receiving the of a sent in response to a 6.6.4.5, before send itnVg Ca OneNwN SwapDel ayDFP. DFP VCONN Source VCONN Swap UFP VCONN_SwapMessage DFPShall tVCONNSwapDelayDFP EOP The timGeo oddeClaRyC foMre ssag aefter losing PS_RDY Mroelses daguee to an incoming request Vfr Co Om NN Swa apnAdM bSefore sending the next. The wait at least after sending the 6of. t6he.4.6 tV CinO rNesNpSonwsea tpo Delay UFP received at the end of the previous. UFP VCONN Source VCONN Swap DFP VCONN_SwapMessage UFPShall tVCONNSwapDelayUFP EOP The timGeo oddeClaRyC foMre ssag aefter losing PS_RDY Mroelses daguee to an incoming request Vfr Co Om NN Swa apnAdM bSefore sending the next. The wait at least after sending the 6of. t6he.4.7 tE nint reerspUonSsBe Wto ait received at the end of the previous. Enter_USBMessage WaitMessage Enter_USB Message tEnterUSBWait Section 6.3.12, \"Wait Message\" DFPShall TtEhnet teirmUeS BbeWfoariet the next E OP W, aaftietrM ae ssage has been receiEvnedte irn_ UreSsBpMonessesa tgoe a is a miEnnimteurm_U oSfB Message min (see ). The wait at least after receiving the of a sent in response to an, before 6se.n6di.n5g a new Powe r Sup.ply Timers Section 7.3, \"Transitions\" See for diagrams showing the usage of the timers in this section.", "tables": [], "figures": [], "page_range": [251, 251]}
{"section_path": "6.6.5 Power Supply Timers", "start_heading": "6.6.5 Power Supply Timers", "content": "SinkRequestTimer SinkRequestMessage WaitMessage Source SinkRequestMessage tSinkRequest STehcet ion 6.3.12, \"Wait Mes issa ugsee\"d to ensure that the time before the next, after a has been received from the in response to a, is a minimum of min (see SinkRequestTimerShall). EOP WaitMessage Shall Message Hard Reset The be started when the of a has been received and be stopped if anySi ontkhSehr all is receitvSeind koRr edquureinsgt a. EOP WaitMessage Sink RequestMessage RequestMessage SinkRequestTimer Sink TMhaey Req wuaeistt aMt elessaasgt e Shall, after receiving the of a SinkR equestT ismenetr in response to a, before sending a new. Whenever there is a timeout the PR_SwapMessage WaitMessage PR_Swap Message tPRSwapWait Section 6.3.12, \"Wait Message\" PortShall TtPhReS twimaep bWeafoitre the next E OP W, aafitteMr ae ssage has been recPeRiv_Sedw ianp rMesepsosangsee to a PR_ Sisw aa mpiMniemssuamge of min (see ). The wait at least after receiving the of a sent in response to a, before sending a 6ne.w6.4.3 tD. RSwapWait DR_SwapMessage WaitMessage DR_Swap Message tDRSwapWait Section 6.3.12, \"Wait Message\" PortShall TtDhRe Stwimaep bWeafoirte the next E OP W, aaftietrM ae ssage has been receDiRve_Sdw ina preMspeossnasgee to a DR is_S aw maipnMimeussma goef min (see ). The wait at least after receiving the of a sent in response to a, before sending 6a n.6ew.4.4 tVC. ONNSwapWait VCONN_SwapMessage WaitMessage VCONN_SwapMessage tVCONNSwapWait Section 6.3.12, \"Wait Message\" PortShall The time befotVre C Ot Nh NeS nwexatp Wait, aftEeOr Pa W aitMess haagse been received in respVon COse N Nto_S aw ap Message is a minimVu COm N o Nf_ SwapMessage min (see ). The wait at least after receiving the of a sent in response to a 6.6.4.5, before send itnVg Ca OneNwN SwapDel ayDFP. DFP VCONN Source VCONN Swap UFP VCONN_SwapMessage DFPShall tVCONNSwapDelayDFP EOP The timGeo oddeClaRyC foMre ssag aefter losing PS_RDY Mroelses daguee to an incoming request Vfr Co Om NN Swa apnAdM bSefore sending the next. The wait at least after sending the 6of. t6he.4.6 tV CinO rNesNpSonwsea tpo Delay UFP received at the end of the previous. UFP VCONN Source VCONN Swap DFP VCONN_SwapMessage UFPShall tVCONNSwapDelayUFP EOP The timGeo oddeClaRyC foMre ssag aefter losing PS_RDY Mroelses daguee to an incoming request Vfr Co Om NN Swa apnAdM bSefore sending the next. The wait at least after sending the 6of. t6he.4.7 tE nint reerspUonSsBe Wto ait received at the end of the previous. Enter_USBMessage WaitMessage Enter_USB Message tEnterUSBWait Section 6.3.12, \"Wait Message\" DFPShall TtEhnet teirmUeS BbeWfoariet the next E OP W, aaftietrM ae ssage has been receiEvnedte irn_ UreSsBpMonessesa tgoe a is a miEnnimteurm_U oSfB Message min (see ). The wait at least after receiving the of a sent in response to an, before 6se.n6di.n5g a new Powe r Sup.ply Timers Section 7.3, \"Transitions\" See for diagrams showing the usage of the timers in this section. PSTransitionTimer Policy Engine PS_RDYMessage Source Capabilities tPSTransition PS_RDYMessage The is used by the Hard Reset to timeout onU aS B Defaul t Operati.o Int is staPrtSeTdr wanhseint iao nreTqiumeesrt for new has bSeoeunr caeccepted and will timeout after if a Se chtaiosn n 7o.t1, b\"Seoeunr rceec Reeivqeudir. eTmhiesn ctos\"ndition leads to a and a return to. The relates to the time taken for the to transition from one voltage, or current level, to another (see PSTransitionTime).rShall GoodCRCMessageEOP AcceptMessage PHY Layer PSTransitionTimerShall The GoodCRCMessa geEO bPe started when the last PbSit_ RofD tYheM essage, correspondinPgH Yto L aany er, has been transmitted by the. The be stopped when the last 6bi.t6 of. 5th.e2 PSSo urc, ceoOrrfefsTpoinmdinegr to the, has been transmitted by the. PSSourceOffTimer Policy Engine Dual-Role Power Device Sink PS_RDYMessage Power Role SwapAMS USB Type-CError Recovery The is used by the in that is currently acting as a to timePoRu_St wona pa Message during a Dual-R ole P. oTwheisr cDoenvdicietion leads to Sou rce Sink. AcceptMessage GoodCRCMessageEOP AIfc ac eptMessa ge request has bSeiennk sePnHt bYy L tahyee r PSSourceOff cTuimrreenrtSlyh aacllting as a the can respond with an. When the last bit of the, corresponding to this transmitted PR_ SwapMe,s issa rgeeceived by the 's D, utahle-nR othlee P ower Device be startSeidn.k Source AcceptMessage GoodCRCMessageEOP AIfc ac eptMessa ge request has beenS sineknt bPyH tYh eL ayer PSSource cOufrfrTeinmtleyr aSchtianlgl as a the can respond with an. When the last bit of the, corresponding to this received PS SourceOf, fiTs itmraenrsSmhiattleld by the 's, then the GoodCRCMessageE OP be started. PS_RDYMessage PHY Layer The be stopped when the last bit of the, corresponding to the receiPvSeSdo urceOff Timer, is transmitted by the. Dual-Role Power Device Section 7.3.2.1, \"Sink Requested Power Role Swap\" Section 7.3.2.2, \"Source Requested Power Role TSwhea p\" Shall relates to theP tSim_ReD tYakMeens sfoarg ethe remote to stoDp usaulp-Rpolylein Pgo pwoewr er (Dseevei caelso tPSSourceOff and ). The timer time out if a has not been received from the remote PSSourceOffTimer Policy Engine Dual-Role Power Device Initial Sink vSafe5V PS_RDYMessage Fast Role SwapAMS USB TTyhpee -CError Recovery is used by the in that is the (currently providing ) to timeout on a during a. This condition leads to FR_SwapMe.ssage Initial Sink Initial SourceShall AcceptMessage GoodCRCMessageEOP AcceptMessage When tIhneit ial Sink PHY Laye rrequest hasP bSeSeonu rsceenOt fbfyT itmhee rShall, the respond with an. When the last bit of the, corresponding to this is received by thPeS SourceOffT'si merShall, then the be started. The GoodCR CMe sbsea gsetoEpOpPed when PS_RDYMessage PHY Layer the last bit of the, corresponding to the received, is transmitted by the P.SSourceOffTimer Initial Source VBUS vSafe5V Section 7.2.10, \"Fast Role Swap\" Section 7.3.4, \"Transitions Caused by Fast Role TSwhea p\" Shall relates to theP tSim_ReD tYakMeens sfoarg ethe to stop supplyinIgn iptioawl Seor uarncde for to trPevSeSrotu troc eOff (see also and ). The timer time out if a has not been received from the within PSSourceOnTimer Policy Engine Dual-Role Power Device PS_RDYMessage Power Role Swap The USB Type-CErr oisr uRseecdo vbeyr tyhe in that has just stopped sourcing power and is waiting to start sinking power to timeout on a during a. This condition leads to.", "tables": [], "figures": [], "page_range": [251, 252]}
{"section_path": "6.6.6 NoResponseTimer", "start_heading": "6.6.6 NoResponseTimer", "content": "PSSourceOnTimerShall The- Goo bdeC RstCarMteedss wagheenE:OP PS_RDYMessage PHY Layer The last bit of the, corresponding to the transmitted, is re - ceivePdS Sboyu thrcee OnTimerS.hall - The GoodC RCM ebses astgoepEpOedP when: PS_RDYMessage PHY Layer The last bit of the, corresponding to the received, is transmit PSStoeudr bceyO thneT imer. Dual-Role Power Device Section 7.3.2.1, \"Sink Requested Power Role Swap\" Section 7.3.2.2, \"Source Requested Power Role Swap\" The PS _rReDlaYteMs etoss tahgee time taken for the remote tPSSo tuor scteaOrtn sourcing power (see also and ) 6an.d6.w5il.l3 ti.m2e out if a Use durin ign dFicaastitn Rg tohlise h Saws naopt been received within. PSSourceOnTimer Policy Engine Dual-Role Power Device PS_RDYMessage Fast Role Swap ThUe SB Type-CError Rec iosv uesreyd by the in that has just stopped sourcing power and is waiting to start sinking power to timeout on a during a. This condition leads to PSSource OnTimerShall. The- Goo bdeC RstCarMteedss wagheenE:OP PS_RDYMessage PHY Layer The last bit of the, corresponding to the transmitted, is re PSScoeuirvceedO bnyT tihmee rShall. The- Goo bdeC RstCopMpeesdsa wgeheEnO:P PS_RDYMessage PHY Layer The last bit of the, corresponding to the received, is transmit PSStoeudr bceyO thneT imer. Dual-Role Power Device Section 7.2.10, \"Fast Role Swap\" Section 7.3.4, \"Transitions Caused by Fast Role Swap\" The PS_RDYMessage relates to the time taken for the remote tPSSourceOn to start sourcing power (see also and ) and will time 6ou.t6 if. a6 NoR iendsipcaotinng stheisT hiams neotr been received within. NoResponseTimer Policy Engine Source Port Partner Hard Reset NoResponseTimer Policy EngineShall nHardResetCount The Hard Reset is used by the iPno ar t Partne tro determine that its is not responding after a. When the times out, the issue up to additional s before determining that the is non-responsive to USB Power Delivery messaSgoiunrgc.e GoodCRCMessage Source_CapabilitiesMessage tNoResponse If the fails to receive a in response to a within of: - Hard ResetSignaling PHY Layer Hard ResetSignaling Sink The last bit of a being sent by the if the was initi - ated by the.Hard ResetSignaling PHY Layer Hard ResetSignaling Source The last bit of a being received by the if the was inSiotiuartceed Sbhya tlhle. Hard Reset nHardResetCount Section 6.8.3, \"Hard Reset\" Then the issue additiPoonliacly Engine s uSpou troc eMay times (see ). Source_CapabilitiesMessage FSoour rac neo_Cna-rpeasbpiolnitsiievseM deesvsiacgee, the in a either decide to continue sending s or to go to non-USB Power Delivery operation and cease sending tBISTCarrierMode UUT BIST Carrier Mode Tester is used to define the maximum time that a has to enter when requested by a.", "tables": [], "figures": [], "page_range": [253, 253]}
{"section_path": "6.6.7 BIST Timers", "start_heading": "6.6.7 BIST Timers", "content": "PSSourceOnTimerShall The- Goo bdeC RstCarMteedss wagheenE:OP PS_RDYMessage PHY Layer The last bit of the, corresponding to the transmitted, is re - ceivePdS Sboyu thrcee OnTimerS.hall - The GoodC RCM ebses astgoepEpOedP when: PS_RDYMessage PHY Layer The last bit of the, corresponding to the received, is transmit PSStoeudr bceyO thneT imer. Dual-Role Power Device Section 7.3.2.1, \"Sink Requested Power Role Swap\" Section 7.3.2.2, \"Source Requested Power Role Swap\" The PS _rReDlaYteMs etoss tahgee time taken for the remote tPSSo tuor scteaOrtn sourcing power (see also and ) 6an.d6.w5il.l3 ti.m2e out if a Use durin ign dFicaastitn Rg tohlise h Saws naopt been received within. PSSourceOnTimer Policy Engine Dual-Role Power Device PS_RDYMessage Fast Role Swap ThUe SB Type-CError Rec iosv uesreyd by the in that has just stopped sourcing power and is waiting to start sinking power to timeout on a during a. This condition leads to PSSource OnTimerShall. The- Goo bdeC RstCarMteedss wagheenE:OP PS_RDYMessage PHY Layer The last bit of the, corresponding to the transmitted, is re PSScoeuirvceedO bnyT tihmee rShall. The- Goo bdeC RstCopMpeesdsa wgeheEnO:P PS_RDYMessage PHY Layer The last bit of the, corresponding to the received, is transmit PSStoeudr bceyO thneT imer. Dual-Role Power Device Section 7.2.10, \"Fast Role Swap\" Section 7.3.4, \"Transitions Caused by Fast Role Swap\" The PS_RDYMessage relates to the time taken for the remote tPSSourceOn to start sourcing power (see also and ) and will time 6ou.t6 if. a6 NoR iendsipcaotinng stheisT hiams neotr been received within. NoResponseTimer Policy Engine Source Port Partner Hard Reset NoResponseTimer Policy EngineShall nHardResetCount The Hard Reset is used by the iPno ar t Partne tro determine that its is not responding after a. When the times out, the issue up to additional s before determining that the is non-responsive to USB Power Delivery messaSgoiunrgc.e GoodCRCMessage Source_CapabilitiesMessage tNoResponse If the fails to receive a in response to a within of: - Hard ResetSignaling PHY Layer Hard ResetSignaling Sink The last bit of a being sent by the if the was initi - ated by the.Hard ResetSignaling PHY Layer Hard ResetSignaling Source The last bit of a being received by the if the was inSiotiuartceed Sbhya tlhle. Hard Reset nHardResetCount Section 6.8.3, \"Hard Reset\" Then the issue additiPoonliacly Engine s uSpou troc eMay times (see ). Source_CapabilitiesMessage FSoour rac neo_Cna-rpeasbpiolnitsiievseM deesvsiacgee, the in a either decide to continue sending s or to go to non-USB Power Delivery operation and cease sending tBISTCarrierMode UUT BIST Carrier Mode Tester is used to define the maximum time that a has to enter when requested by a.", "tables": [], "figures": [], "page_range": [253, 253]}
{"section_path": "6.6.8 Power Role Swap Timers", "start_heading": "6.6.8 Power Role Swap Timers", "content": "UUTShall BIST Carrier Mode tBISTCarrierMode GoodCRCMessageEOP BISTMessage PHY Layer ABI ST Ca rrier Menotdeer within of the last bit Sohf athlle U UT, cBoISrrTe Mspoodneding to the received the used to initiate the test, being transmitted by the. In when transmitting a continuous carrier signal transmission start as soon as the enters 6.6.7.2. BISTContModeTimer BISTContModeTimer UUT Continuous BIST Mode BIST Carrier Mode UUT Continuous BIST ModeShall PTEh_eS RC_Transition_to_def iasu ulstePdE b_yS Na K_Tr taon esnitsiuorne_ ttoh_adt eaf ault PE_CBL_Ready (i.e., tBISTContMo)d ies exited in a timely fashion. A that has been put into a return to normal operation (either,, or ) within of s6ta.6rt.in7g. 3to transmit a tcBonItSinTuoSuhs acarreriderT siegnsatlM. ode tBISTSharedTestMode UUT BIST Shared Capacity Test Mode Tester is used to define the maximum time that a has to enter whUeUnT rSehqaulelsted byB aIS T Shar. ed Capacity Test Mode Source_CapabilitiesMessage Shared Capacity Group tBISTSharedTestMode GoodCRCMessageEOP A enter BISTMessage and send a new frPoHmY a Llla Pyeorrts within the within of the last bit of the, 6co.r6re.s8ponding to tPheo rweceeivre dR thoel e Sw ap T uismede tor isnitiate the test, being transmitted by the. SwapSourceStartTimerShall New Source Power Role Swap Fast Role Swap Source_CapabilitiesMessage New Sink Source_Capabilities MTheess age New SourceSha ll Not be used bSyo tuhrec e_Capabilit, iaefsteMre as sage toSrw apSourceStar, tto ensure that it does noEtO sePnd GoodCRCMessage before the PS_RDY iMs reesasadgye to receive theN ew Source. The SsiennkdS thhael l Source_ eCaarpliaerb itlhiatine sMessagetSwapSin akfRteera tdhye last bit of the of EOP senGto ino drCesRpCoMnsees staog tehe sent PbSy_ tRhDe YMessage indicating tNheawt iStso uprocweer supply is ready. The be ready to receive a after having sent the last bit of the of sent in response to the sent by the GoodCRCMessage Message tReceive nRetryCount Port Pair Connected Shall Source Sink ASo ffati_lRurees etot Mseees saa ge in respoSnhsae ltlo any within tSoftRes e(tafter CRCReceive rTeitmrieesr), when a is, is indicative of a communications failure. This cause the or to send a, transmission of which be completed within of the 6ex.p6ir.i9ng.2. tProtErrSoftReset Protocol Error Source Sink Soft_ResetMessage Soft_ResetMessageShall tProtErrSoftReset EOP GoodCRC If thMe essage occurs tPhraot tcoacuosl eEsr trhoer or to send a, the transmission of the be completed within of the of the sent in response to 6th.e6.10 that c a Dusaedt tah eR eset Tim.ers VCONNDischargeTimer Policy Engine DFP UFP VCONN UFP VCONN T[UhSeB Type-C 2.4] iPs Su_sReDd YbyM tehsesa ge S ienc tthioen 7.1.1 t5o, e\"nVs Cu Or Ne N tPhoew er C aycctliev\"ely discharges in a timely manner to ensure the cable will restore Ra. Once the has discharged below vRaReconnect (see DFP ) it sends a PS_RDY Message (see also UFP tVCONNSourceDischarg)e. GoodCRC AcceptMessage Data_ResetMessage VCONNDischargeTimer If the does not rePcoeilivcey aE ngineSh all fromE trhreo rRec wovitehriyn of the last bit of the acknowledging the in response to the, the will time out and the enter the State.", "tables": [], "figures": [], "page_range": [254, 254]}
{"section_path": "6.6.9 Soft Reset Timers", "start_heading": "6.6.9 Soft Reset Timers", "content": "UUTShall BIST Carrier Mode tBISTCarrierMode GoodCRCMessageEOP BISTMessage PHY Layer ABI ST Ca rrier Menotdeer within of the last bit Sohf athlle U UT, cBoISrrTe Mspoodneding to the received the used to initiate the test, being transmitted by the. In when transmitting a continuous carrier signal transmission start as soon as the enters 6.6.7.2. BISTContModeTimer BISTContModeTimer UUT Continuous BIST Mode BIST Carrier Mode UUT Continuous BIST ModeShall PTEh_eS RC_Transition_to_def iasu ulstePdE b_yS Na K_Tr taon esnitsiuorne_ ttoh_adt eaf ault PE_CBL_Ready (i.e., tBISTContMo)d ies exited in a timely fashion. A that has been put into a return to normal operation (either,, or ) within of s6ta.6rt.in7g. 3to transmit a tcBonItSinTuoSuhs acarreriderT siegnsatlM. ode tBISTSharedTestMode UUT BIST Shared Capacity Test Mode Tester is used to define the maximum time that a has to enter whUeUnT rSehqaulelsted byB aIS T Shar. ed Capacity Test Mode Source_CapabilitiesMessage Shared Capacity Group tBISTSharedTestMode GoodCRCMessageEOP A enter BISTMessage and send a new frPoHmY a Llla Pyeorrts within the within of the last bit of the, 6co.r6re.s8ponding to tPheo rweceeivre dR thoel e Sw ap T uismede tor isnitiate the test, being transmitted by the. SwapSourceStartTimerShall New Source Power Role Swap Fast Role Swap Source_CapabilitiesMessage New Sink Source_Capabilities MTheess age New SourceSha ll Not be used bSyo tuhrec e_Capabilit, iaefsteMre as sage toSrw apSourceStar, tto ensure that it does noEtO sePnd GoodCRCMessage before the PS_RDY iMs reesasadgye to receive theN ew Source. The SsiennkdS thhael l Source_ eCaarpliaerb itlhiatine sMessagetSwapSin akfRteera tdhye last bit of the of EOP senGto ino drCesRpCoMnsees staog tehe sent PbSy_ tRhDe YMessage indicating tNheawt iStso uprocweer supply is ready. The be ready to receive a after having sent the last bit of the of sent in response to the sent by the GoodCRCMessage Message tReceive nRetryCount Port Pair Connected Shall Source Sink ASo ffati_lRurees etot Mseees saa ge in respoSnhsae ltlo any within tSoftRes e(tafter CRCReceive rTeitmrieesr), when a is, is indicative of a communications failure. This cause the or to send a, transmission of which be completed within of the 6ex.p6ir.i9ng.2. tProtErrSoftReset Protocol Error Source Sink Soft_ResetMessage Soft_ResetMessageShall tProtErrSoftReset EOP GoodCRC If thMe essage occurs tPhraot tcoacuosl eEsr trhoer or to send a, the transmission of the be completed within of the of the sent in response to 6th.e6.10 that c a Dusaedt tah eR eset Tim.ers VCONNDischargeTimer Policy Engine DFP UFP VCONN UFP VCONN T[UhSeB Type-C 2.4] iPs Su_sReDd YbyM tehsesa ge S ienc tthioen 7.1.1 t5o, e\"nVs Cu Or Ne N tPhoew er C aycctliev\"ely discharges in a timely manner to ensure the cable will restore Ra. Once the has discharged below vRaReconnect (see DFP ) it sends a PS_RDY Message (see also UFP tVCONNSourceDischarg)e. GoodCRC AcceptMessage Data_ResetMessage VCONNDischargeTimer If the does not rePcoeilivcey aE ngineSh all fromE trhreo rRec wovitehriyn of the last bit of the acknowledging the in response to the, the will time out and the enter the State.", "tables": [], "figures": [], "page_range": [254, 254]}
{"section_path": "6.6.10 Data Reset Timers", "start_heading": "6.6.10 Data Reset Timers", "content": "UUTShall BIST Carrier Mode tBISTCarrierMode GoodCRCMessageEOP BISTMessage PHY Layer ABI ST Ca rrier Menotdeer within of the last bit Sohf athlle U UT, cBoISrrTe Mspoodneding to the received the used to initiate the test, being transmitted by the. In when transmitting a continuous carrier signal transmission start as soon as the enters 6.6.7.2. BISTContModeTimer BISTContModeTimer UUT Continuous BIST Mode BIST Carrier Mode UUT Continuous BIST ModeShall PTEh_eS RC_Transition_to_def iasu ulstePdE b_yS Na K_Tr taon esnitsiuorne_ ttoh_adt eaf ault PE_CBL_Ready (i.e., tBISTContMo)d ies exited in a timely fashion. A that has been put into a return to normal operation (either,, or ) within of s6ta.6rt.in7g. 3to transmit a tcBonItSinTuoSuhs acarreriderT siegnsatlM. ode tBISTSharedTestMode UUT BIST Shared Capacity Test Mode Tester is used to define the maximum time that a has to enter whUeUnT rSehqaulelsted byB aIS T Shar. ed Capacity Test Mode Source_CapabilitiesMessage Shared Capacity Group tBISTSharedTestMode GoodCRCMessageEOP A enter BISTMessage and send a new frPoHmY a Llla Pyeorrts within the within of the last bit of the, 6co.r6re.s8ponding to tPheo rweceeivre dR thoel e Sw ap T uismede tor isnitiate the test, being transmitted by the. SwapSourceStartTimerShall New Source Power Role Swap Fast Role Swap Source_CapabilitiesMessage New Sink Source_Capabilities MTheess age New SourceSha ll Not be used bSyo tuhrec e_Capabilit, iaefsteMre as sage toSrw apSourceStar, tto ensure that it does noEtO sePnd GoodCRCMessage before the PS_RDY iMs reesasadgye to receive theN ew Source. The SsiennkdS thhael l Source_ eCaarpliaerb itlhiatine sMessagetSwapSin akfRteera tdhye last bit of the of EOP senGto ino drCesRpCoMnsees staog tehe sent PbSy_ tRhDe YMessage indicating tNheawt iStso uprocweer supply is ready. The be ready to receive a after having sent the last bit of the of sent in response to the sent by the GoodCRCMessage Message tReceive nRetryCount Port Pair Connected Shall Source Sink ASo ffati_lRurees etot Mseees saa ge in respoSnhsae ltlo any within tSoftRes e(tafter CRCReceive rTeitmrieesr), when a is, is indicative of a communications failure. This cause the or to send a, transmission of which be completed within of the 6ex.p6ir.i9ng.2. tProtErrSoftReset Protocol Error Source Sink Soft_ResetMessage Soft_ResetMessageShall tProtErrSoftReset EOP GoodCRC If thMe essage occurs tPhraot tcoacuosl eEsr trhoer or to send a, the transmission of the be completed within of the of the sent in response to 6th.e6.10 that c a Dusaedt tah eR eset Tim.ers VCONNDischargeTimer Policy Engine DFP UFP VCONN UFP VCONN T[UhSeB Type-C 2.4] iPs Su_sReDd YbyM tehsesa ge S ienc tthioen 7.1.1 t5o, e\"nVs Cu Or Ne N tPhoew er C aycctliev\"ely discharges in a timely manner to ensure the cable will restore Ra. Once the has discharged below vRaReconnect (see DFP ) it sends a PS_RDY Message (see also UFP tVCONNSourceDischarg)e. GoodCRC AcceptMessage Data_ResetMessage VCONNDischargeTimer If the does not rePcoeilivcey aE ngineSh all fromE trhreo rRec wovitehriyn of the last bit of the acknowledging the in response to the, the will time out and the enter the State.", "tables": [], "figures": [], "page_range": [254, 254]}
{"section_path": "6.6.11 Hard Reset Timers", "start_heading": "6.6.11 Hard Reset Timers", "content": "DFPShall Data_Reset Section 6.3.14, \"Data_Reset Message\" tDataReset GoodCRCMessageEOP AcceptMessage The PH Y Lay ceormplete the process (as defined in ) within of the last bit of the, corresponding to the, being transmitted b6y. 6th.e1 0.3. DataResetFailTimer DataResetFailTimerShall DFP Policy Engine Data Reset tDataResetFail GoodCRC AcceptMessage DThaeta _ResetMessage DFP beD uastaedR ebsye tthFea ilTim'se r tDo FePnsSuhrael lthe Erro prrRoecceosvs ecroympletes within of the last bit of the acknowledging the in response to the DataResetFailUFPTimerShall UFP Policy Engine Data Reset tDataResetFailUFP GoodCRC AcceptMessage DThaeta _ResetMessage UF P Da btea Ruesesedt bFya itlhUeF PTim's er toU eFnPsSuhrea tllhe Err porroRceecsos vceormypletes within of the last bit of the acknowledging the in response to the HardResetCompleteTimer Protocol Layer PHY Layer Hard ResetSignaling PHY Layer Signaling Idle The PHY Layer is used by the Hard Rese tinSi gthnea lcinagse where it has asked tthHea rdResetCo tmo psleentde Protoc ol Layer and the is unable to senPdr othtoec ol Layer Swhiathllin a reasonaPboleli ctyim Een gdiunee to a non-Hard RcheasnenteSlig. Infa tlhineg does not indicate that the has been sent within of the requesting transmission, then the inform the that the PSHardResetTimer Policy Engine Source Sink Hard ResetSignaling VBUS The is used by the in a to ensure that the has had sufficient time to process Hard Reset bSeofourrece turning off its pVoCwOeNrN supply to R. CC VBUS vSafe0V When a occurs the, stops driving, removes p from the pin and starts to transition the - volttPagSeH taor dReset either: Hard ResetSignaling Sink - tPSHardReset after the last bit of the Hard Reset Signaling has been received froSmou trhcee or Section 7.1.5, \"Resp oanftseer t toh He alarsdt Rbeits eotfs \"the has been sent by the. S6e.e6.11.3 tDRSwapHardR. eset DR_SwapMessage Modal Operation Hard ResetShall DR_SwapMessage Hard ResetSignalingShall tDRSwapHardReset EOP If a GoodCR C is received duringD R_SwapMessage then a be initiated by the recipient of the unexpected ; be generated within of the 6of. t6he.1 1.4 sent itnP rersopotnEsre rtoH thaer dReset. Protocol Error Hard Reset Hard ResetSignalingShall tProtErrHardReset EOP GoodCRC Message IPfr ao tocol Error occurs that directly leads to a, the transmission of the be completed within of the of the sent in response to the that caused the VDMResponseTimerShall Initiator Policy Engine Structured VDMCommand Discover IdentityCommand TtVhDe MSenderResponse VD MbeR uesspedo nbsye tThiem erShall's toS etnruscutruer tehda Vt Da MCommand request needing a response (e.g. request) is responded to within a bounded time of. The be applied to all s except the", "tables": [], "figures": [], "page_range": [255, 255]}
{"section_path": "6.6.12 Structured VDM Timers", "start_heading": "6.6.12 Structured VDM Timers", "content": "DFPShall Data_Reset Section 6.3.14, \"Data_Reset Message\" tDataReset GoodCRCMessageEOP AcceptMessage The PH Y Lay ceormplete the process (as defined in ) within of the last bit of the, corresponding to the, being transmitted b6y. 6th.e1 0.3. DataResetFailTimer DataResetFailTimerShall DFP Policy Engine Data Reset tDataResetFail GoodCRC AcceptMessage DThaeta _ResetMessage DFP beD uastaedR ebsye tthFea ilTim'se r tDo FePnsSuhrael lthe Erro prrRoecceosvs ecroympletes within of the last bit of the acknowledging the in response to the DataResetFailUFPTimerShall UFP Policy Engine Data Reset tDataResetFailUFP GoodCRC AcceptMessage DThaeta _ResetMessage UF P Da btea Ruesesedt bFya itlhUeF PTim's er toU eFnPsSuhrea tllhe Err porroRceecsos vceormypletes within of the last bit of the acknowledging the in response to the HardResetCompleteTimer Protocol Layer PHY Layer Hard ResetSignaling PHY Layer Signaling Idle The PHY Layer is used by the Hard Rese tinSi gthnea lcinagse where it has asked tthHea rdResetCo tmo psleentde Protoc ol Layer and the is unable to senPdr othtoec ol Layer Swhiathllin a reasonaPboleli ctyim Een gdiunee to a non-Hard RcheasnenteSlig. Infa tlhineg does not indicate that the has been sent within of the requesting transmission, then the inform the that the PSHardResetTimer Policy Engine Source Sink Hard ResetSignaling VBUS The is used by the in a to ensure that the has had sufficient time to process Hard Reset bSeofourrece turning off its pVoCwOeNrN supply to R. CC VBUS vSafe0V When a occurs the, stops driving, removes p from the pin and starts to transition the - volttPagSeH taor dReset either: Hard ResetSignaling Sink - tPSHardReset after the last bit of the Hard Reset Signaling has been received froSmou trhcee or Section 7.1.5, \"Resp oanftseer t toh He alarsdt Rbeits eotfs \"the has been sent by the. S6e.e6.11.3 tDRSwapHardR. eset DR_SwapMessage Modal Operation Hard ResetShall DR_SwapMessage Hard ResetSignalingShall tDRSwapHardReset EOP If a GoodCR C is received duringD R_SwapMessage then a be initiated by the recipient of the unexpected ; be generated within of the 6of. t6he.1 1.4 sent itnP rersopotnEsre rtoH thaer dReset. Protocol Error Hard Reset Hard ResetSignalingShall tProtErrHardReset EOP GoodCRC Message IPfr ao tocol Error occurs that directly leads to a, the transmission of the be completed within of the of the sent in response to the that caused the VDMResponseTimerShall Initiator Policy Engine Structured VDMCommand Discover IdentityCommand TtVhDe MSenderResponse VD MbeR uesspedo nbsye tThiem erShall's toS etnruscutruer tehda Vt Da MCommand request needing a response (e.g. request) is responded to within a bounded time of. The be applied to all s except the Enter Mode Exit ModeCommand VDMModeEntryTimer VDMModeExitTimer VDMRespon asneTdi mer s which have their own timers ( and respectively). Failure to receive the expected response is detected when the Policy Engine expires. VDMResponseTimer Shall Message Section 8.3, \"Policy Engine\" The 's response when the expires be dependent on the sent (see VDMResponseTimerS)h. all GoodCRCMessageEOP VDMCommand PHY Layer VDMResponseTimerShall The be sEtOarPted fromG othoed CtiRmCeM theess laagset bit of the V, DcoMrrCeosmpomnadnidng to the requesting a respPoHnYs eL, ahyaesr been received by the. The be stopped when the last bit of the of the, corresponding to the expected response, has beeMn etsrsaangsemitted by the Sh.all tVDMReceiverResponse VDMResponseTimer The receiver of a requiring a response respond within in order to ensure that ttVhDe MseRnedceeri'sv erResponse Sha ldloes not expire. MessageEOP PHY Layer Message PHY TLahyee r time be measured from the time the last bit of the has been transmitted by the until the first bit of the response Preamble has been transmitted by the 6.6.1. 2.2 VDMModeEntryTimer VDMModeEntryTimerShall Initiator Policy Engine Structured VDMEnter ModeCommand ACK NAK ACK Alternate Mode The be used bytV thDeM WaitMo'sd eEntry to ensure that the response to a VDMMod reeEqnutersytT (imer or with indicating that the requested has been entered) arrives within a bounded time of. Failure to receive the expected response is detePctoeldic yw Ehnegni nthee VD MexMpoirdeesE. ntryTimer Device Policy Manager Section 8.3.3.23.1, \"DFP Structured VDM Mode Entry State Diagram\" The 's response when the expires is to inform the (see VDMModeEntryTimerShall ). EOP GoodCRCMessage VDMCommand PHY Layer VDMModeEntryTimer TShhae ll be startEeOd Pfrom theG toiomdeC tRhCe Mlaessts baigte of the of the Str,u ctured cVoDrMreCspoomnmdainngd to the ACK NAK reBquUeSsYt, has been received by the PHY La. Tyehre be stopped when the last bit of the of the, corresponding to the expected reMspesosnasgee (, or ), hSahsa blleen transmitted btVyD thMeE nterMode. VDMModeEntryTimer The receiver of a requiring a response respond within in order to ensure that the sendteVrD'sM EnterMode Shall does not expire. EOP GoodCRCMessage VDMCommand PHY Layer TMhees sage time be measured frPoHmY tLhaey teirme the last bit of the of the, corresponding to Request, has been transmitted by the until the first bit of the response VDMModeExitTimerShall Initiator Policy Engine ACK Structured VDMExit ModeCommand Alternate Mode The tVDMW aitM obdee uEsxeidt by the 's to ensure that the response to a VDMModeExitT imer, indicating that the requested has been exited, arrives within a bounded time of. Failure to receive the expected response is detected when the Policy Engine expires. VDMModeExitTimer Device Policy Manager Section 8.3.3.23.2, \"DFP Structured VDM Mode Exit State Diagram\" The 's response when the expires is to inform the (see VDMModeExitTimerShall ). GoodCRCMessageEOP VDMCommand PHY Layer VDMModeExitTimerShall The be sGtaorotdeCdR frCoMme tshsaeg teimEeO tPhe last bit of the Str uctu,r ceodr VreDsMponding tCoo mthme and A CrKequesting a response, has beenP rHecYe Livaeyde rby the. The be stopped when the last bit of the, corresponding to the expected responMsee ssag,e has been transmitted bSyh athlle. tVDMExitMode VDMModeExitTimer The receiver of a requiring a response respond within in order to ensure that the sendteVrD'sM ExitMode Shall does not expire. MessageEOP PHY Layer Message PHY Layer The time be measured from the time the last bit of the has been received by the until the first bit of the response Preamble has been transmitted by the.", "tables": [], "figures": [], "page_range": [255, 256]}
{"section_path": "6.6.13 VCONN Timers", "start_heading": "6.6.13 VCONN Timers", "content": "InitiatorShall tVDMBusy BUSYCommand Structured VDM The wait at least, after receiving a response, before repeating the VCONNOnTimer VCONN Swap The VCONNOnTimer iSsh uasleld during a. The- Goo dbCeR sCtaMrteesds awgheeEnO:P AcceptMessage PHY Layer The last bit of, corresponding to the, is transmitted or received VCObNyN OthneT imerShal.l The- Gboeo sdtoCpRpCeMd ewsshaegne:EOP PS_RDYMessage PHY Layer The last bit of the, corresponding to the, is transmitted by the. PS_RDYMessage PortShall VCONN 6Pr.i6or. 1to3 se.2nding the tVCON NSou,r tchee Off have turned On. tVCONNSourceOff VCONN Swap VCONN SourceShall VCONN tVCONNSourceOff GoodCRCMessageEOP PS_RDYMessage The PH tYi mLaey aeprplies during a. The initial cease sourcing within of the last bit of the, corresponding to the, being 6tra.6ns.m1it4ted by th et CableM. essage Revision 3.x Shall Not tCableMessage SOP’ Packet SOP’’ Packet [USBPD 2.0] Cable Plug Collision APovortids acnocmepliant with of the specification wait before sending an or even when communicating using with a. This specification defines Cable Plug mSehcahlalnisms thatt oCbavbilaetMe ethsesa ngeeed for this time. SOP’ Packet SOP’’ Packet [USBPD 2.0] [USBPD 2.0]Cable Plug Shall Not tCableMessage s oSnOlyP ’w Paaictk et SOP’’ Pack ebtefore sending an or when operating at. When operating at Revisions higher than s wait b6e.f6or.e1 s5ending an Discove orrI dentityT. imer DiscoverIdentityTimer Explicit Contract Cable Plug SOP’ Cable Discovery Explicit Contract Discover Identity CTohme mand Shall is used pritoDri stoco ovre druIdrienngt iatny nD wishceonv deirsIcdoevnetriitnygC owuhnetthDeirs cao ver Iisd ePnDt iCtaypMabeslesa ugseing. WhGeono pdeCrRfoCrMmeisnsga ge Sha dlluring an GoodCRCMe tshsaeg e nDis croevqeureIsdte ntity Cboeu snetnDt eisvceorvye r IdentityComma.n Ndo more than Port PortShall Not sS wOPit’hSoOuPt a’’ Message response be sent. If no response is received after requests have been sent by a, the 6se.n6d.a1ny6 further Co/llisi on Avso. idance Timers SinkTxTimer Protocol Layer Source Sink AMS The is used by the in a to allow the to complete its transmission before initiaStoinurgc aenS hall. tSinkTx R SinkTxOK SinkTxNG AMS Message The wait a minimum of after changing p from to before initiating an Sin bkyS sheanldling a. AMS R SinkTxOK A only initiate an when it has determined that p is set to.", "tables": [], "figures": [], "page_range": [257, 257]}
{"section_path": "6.6.14 tCableMessage", "start_heading": "6.6.14 tCableMessage", "content": "InitiatorShall tVDMBusy BUSYCommand Structured VDM The wait at least, after receiving a response, before repeating the VCONNOnTimer VCONN Swap The VCONNOnTimer iSsh uasleld during a. The- Goo dbCeR sCtaMrteesds awgheeEnO:P AcceptMessage PHY Layer The last bit of, corresponding to the, is transmitted or received VCObNyN OthneT imerShal.l The- Gboeo sdtoCpRpCeMd ewsshaegne:EOP PS_RDYMessage PHY Layer The last bit of the, corresponding to the, is transmitted by the. PS_RDYMessage PortShall VCONN 6Pr.i6or. 1to3 se.2nding the tVCON NSou,r tchee Off have turned On. tVCONNSourceOff VCONN Swap VCONN SourceShall VCONN tVCONNSourceOff GoodCRCMessageEOP PS_RDYMessage The PH tYi mLaey aeprplies during a. The initial cease sourcing within of the last bit of the, corresponding to the, being 6tra.6ns.m1it4ted by th et CableM. essage Revision 3.x Shall Not tCableMessage SOP’ Packet SOP’’ Packet [USBPD 2.0] Cable Plug Collision APovortids acnocmepliant with of the specification wait before sending an or even when communicating using with a. This specification defines Cable Plug mSehcahlalnisms thatt oCbavbilaetMe ethsesa ngeeed for this time. SOP’ Packet SOP’’ Packet [USBPD 2.0] [USBPD 2.0]Cable Plug Shall Not tCableMessage s oSnOlyP ’w Paaictk et SOP’’ Pack ebtefore sending an or when operating at. When operating at Revisions higher than s wait b6e.f6or.e1 s5ending an Discove orrI dentityT. imer DiscoverIdentityTimer Explicit Contract Cable Plug SOP’ Cable Discovery Explicit Contract Discover Identity CTohme mand Shall is used pritoDri stoco ovre druIdrienngt iatny nD wishceonv deirsIcdoevnetriitnygC owuhnetthDeirs cao ver Iisd ePnDt iCtaypMabeslesa ugseing. WhGeono pdeCrRfoCrMmeisnsga ge Sha dlluring an GoodCRCMe tshsaeg e nDis croevqeureIsdte ntity Cboeu snetnDt eisvceorvye r IdentityComma.n Ndo more than Port PortShall Not sS wOPit’hSoOuPt a’’ Message response be sent. If no response is received after requests have been sent by a, the 6se.n6d.a1ny6 further Co/llisi on Avso. idance Timers SinkTxTimer Protocol Layer Source Sink AMS The is used by the in a to allow the to complete its transmission before initiaStoinurgc aenS hall. tSinkTx R SinkTxOK SinkTxNG AMS Message The wait a minimum of after changing p from to before initiating an Sin bkyS sheanldling a. AMS R SinkTxOK A only initiate an when it has determined that p is set to.", "tables": [], "figures": [], "page_range": [257, 257]}
{"section_path": "6.6.15 DiscoverIdentityTimer", "start_heading": "6.6.15 DiscoverIdentityTimer", "content": "InitiatorShall tVDMBusy BUSYCommand Structured VDM The wait at least, after receiving a response, before repeating the VCONNOnTimer VCONN Swap The VCONNOnTimer iSsh uasleld during a. The- Goo dbCeR sCtaMrteesds awgheeEnO:P AcceptMessage PHY Layer The last bit of, corresponding to the, is transmitted or received VCObNyN OthneT imerShal.l The- Gboeo sdtoCpRpCeMd ewsshaegne:EOP PS_RDYMessage PHY Layer The last bit of the, corresponding to the, is transmitted by the. PS_RDYMessage PortShall VCONN 6Pr.i6or. 1to3 se.2nding the tVCON NSou,r tchee Off have turned On. tVCONNSourceOff VCONN Swap VCONN SourceShall VCONN tVCONNSourceOff GoodCRCMessageEOP PS_RDYMessage The PH tYi mLaey aeprplies during a. The initial cease sourcing within of the last bit of the, corresponding to the, being 6tra.6ns.m1it4ted by th et CableM. essage Revision 3.x Shall Not tCableMessage SOP’ Packet SOP’’ Packet [USBPD 2.0] Cable Plug Collision APovortids acnocmepliant with of the specification wait before sending an or even when communicating using with a. This specification defines Cable Plug mSehcahlalnisms thatt oCbavbilaetMe ethsesa ngeeed for this time. SOP’ Packet SOP’’ Packet [USBPD 2.0] [USBPD 2.0]Cable Plug Shall Not tCableMessage s oSnOlyP ’w Paaictk et SOP’’ Pack ebtefore sending an or when operating at. When operating at Revisions higher than s wait b6e.f6or.e1 s5ending an Discove orrI dentityT. imer DiscoverIdentityTimer Explicit Contract Cable Plug SOP’ Cable Discovery Explicit Contract Discover Identity CTohme mand Shall is used pritoDri stoco ovre druIdrienngt iatny nD wishceonv deirsIcdoevnetriitnygC owuhnetthDeirs cao ver Iisd ePnDt iCtaypMabeslesa ugseing. WhGeono pdeCrRfoCrMmeisnsga ge Sha dlluring an GoodCRCMe tshsaeg e nDis croevqeureIsdte ntity Cboeu snetnDt eisvceorvye r IdentityComma.n Ndo more than Port PortShall Not sS wOPit’hSoOuPt a’’ Message response be sent. If no response is received after requests have been sent by a, the 6se.n6d.a1ny6 further Co/llisi on Avso. idance Timers SinkTxTimer Protocol Layer Source Sink AMS The is used by the in a to allow the to complete its transmission before initiaStoinurgc aenS hall. tSinkTx R SinkTxOK SinkTxNG AMS Message The wait a minimum of after changing p from to before initiating an Sin bkyS sheanldling a. AMS R SinkTxOK A only initiate an when it has determined that p is set to.", "tables": [], "figures": [], "page_range": [257, 257]}
{"section_path": "6.6.16 Collision Avoidance Timers", "start_heading": "6.6.16 Collision Avoidance Timers", "content": "InitiatorShall tVDMBusy BUSYCommand Structured VDM The wait at least, after receiving a response, before repeating the VCONNOnTimer VCONN Swap The VCONNOnTimer iSsh uasleld during a. The- Goo dbCeR sCtaMrteesds awgheeEnO:P AcceptMessage PHY Layer The last bit of, corresponding to the, is transmitted or received VCObNyN OthneT imerShal.l The- Gboeo sdtoCpRpCeMd ewsshaegne:EOP PS_RDYMessage PHY Layer The last bit of the, corresponding to the, is transmitted by the. PS_RDYMessage PortShall VCONN 6Pr.i6or. 1to3 se.2nding the tVCON NSou,r tchee Off have turned On. tVCONNSourceOff VCONN Swap VCONN SourceShall VCONN tVCONNSourceOff GoodCRCMessageEOP PS_RDYMessage The PH tYi mLaey aeprplies during a. The initial cease sourcing within of the last bit of the, corresponding to the, being 6tra.6ns.m1it4ted by th et CableM. essage Revision 3.x Shall Not tCableMessage SOP’ Packet SOP’’ Packet [USBPD 2.0] Cable Plug Collision APovortids acnocmepliant with of the specification wait before sending an or even when communicating using with a. This specification defines Cable Plug mSehcahlalnisms thatt oCbavbilaetMe ethsesa ngeeed for this time. SOP’ Packet SOP’’ Packet [USBPD 2.0] [USBPD 2.0]Cable Plug Shall Not tCableMessage s oSnOlyP ’w Paaictk et SOP’’ Pack ebtefore sending an or when operating at. When operating at Revisions higher than s wait b6e.f6or.e1 s5ending an Discove orrI dentityT. imer DiscoverIdentityTimer Explicit Contract Cable Plug SOP’ Cable Discovery Explicit Contract Discover Identity CTohme mand Shall is used pritoDri stoco ovre druIdrienngt iatny nD wishceonv deirsIcdoevnetriitnygC owuhnetthDeirs cao ver Iisd ePnDt iCtaypMabeslesa ugseing. WhGeono pdeCrRfoCrMmeisnsga ge Sha dlluring an GoodCRCMe tshsaeg e nDis croevqeureIsdte ntity Cboeu snetnDt eisvceorvye r IdentityComma.n Ndo more than Port PortShall Not sS wOPit’hSoOuPt a’’ Message response be sent. If no response is received after requests have been sent by a, the 6se.n6d.a1ny6 further Co/llisi on Avso. idance Timers SinkTxTimer Protocol Layer Source Sink AMS The is used by the in a to allow the to complete its transmission before initiaStoinurgc aenS hall. tSinkTx R SinkTxOK SinkTxNG AMS Message The wait a minimum of after changing p from to before initiating an Sin bkyS sheanldling a. AMS R SinkTxOK A only initiate an when it has determined that p is set to.", "tables": [], "figures": [], "page_range": [257, 257]}
{"section_path": "6.6.17 Fast Role Swap Timers", "start_heading": "6.6.17 Fast Role Swap Timers", "content": "PE_SRC_Ready PE_SRC_Ready tSrcHoldsBus Protocol Error Soft Reset If a transitiAoMnS into the Message sAtMatSeM wailyl result in an immediate transition oRut of the state within e.g. it is due to a that has not resulted in a, then the notifications of 6th.e6 en.1d 7of an d F fiarsst t Role i nS awn ap Tim Noet rbse sent to avoid changing the p value unnecessarily. tFRSwap5V Shall The- time be measured from: The later of: GoodCRCMessageEOP AcceptMessage  TVBhUeS last bit of the vSafe5V, corresponding to the or - being within. PS_RDYMessage PHY Layer UFnatislt tRhoel efi rSswt abpit of thInei rtieaslp Soonusrec eShall P PSr_eRaDmYbMlee hssaasg beeen trantsFmRiStwteadp b5yV the. Dur- ing a Initial Sourc,e the Acc eptM esstsaargt ethe within after both: - TVBhUeS hvaSs asfeen5tV the, and Initial SinkShall PS_RDYMessage tFRSwapComplete PS_RDYMessage Initial Source tFRSwapComplete Shall During a fast-role swap, thGeo odCRCMes sage ErOesPpond with a the P S_RDYM ewsistahgine after it haPsH rYe cLeaiyveerd the from the PS_RDYMe.s sTahgee time be measuPrHeYd Lfraoymer the time the last bit of the, corresponding to the, has been transmitted by 6th.e6.17.3 until t h teF fiRrsSt bwit aofp thIne rietsponse Preamble has been transmitted by the. EOP FR_SwapMessageShall New Source tFRSwapInit Fast Role Swap Request Section 5.8.6.3, \"Fast Role Swap Detection\" That last bit of the of the be transmitted by the no later than 6aft.e6r.t1he8 Chunkin hga sT biemen edertsected (see ). ChunkingNotSupportedTimer Source Sink Chunking MessageChunk The is used by a or which does not support multi-chunk but has rCehcueinvkeidn ag NotSupp ortedT.imerShall The- GoodCRC Messa gbeeE sOtaPrted when: MessageChunk Message PHY Layer Policy EngineShall Not Not_SupportedMessage TheC lahsutn bkiti nogf Nthoet Supporte dTimer, corresponding to a of a multi-chunk, is transmitted by the. The send its before 6.6.18th.2e ChunkSenderR eexpqiruees.stTimer ChunkSenderRequestTimer ChunkedMessage The ChunkSenderRequestTimer iSsh uasleld during a Chun tkrainngsmission. Chunk tChunkSenderRequest The Ch unkSe bned uesreRde qbuy etshteT siemnedrer's state machine to ensure that a Response is responded to within a bounded time of. Failure to receive the expected respCohnsuen iksS deentdeectreRde qwuheesnt Tthime erShall expires. The- GoodCR CMes sbaeg estEaOrtPed when: Chunk Message PHY Layer The last bit of the, corresponding to the Response, is received by the.", "tables": [], "figures": [], "page_range": [258, 258]}
{"section_path": "6.6.18 Chunking Timers", "start_heading": "6.6.18 Chunking Timers", "content": "PE_SRC_Ready PE_SRC_Ready tSrcHoldsBus Protocol Error Soft Reset If a transitiAoMnS into the Message sAtMatSeM wailyl result in an immediate transition oRut of the state within e.g. it is due to a that has not resulted in a, then the notifications of 6th.e6 en.1d 7of an d F fiarsst t Role i nS awn ap Tim Noet rbse sent to avoid changing the p value unnecessarily. tFRSwap5V Shall The- time be measured from: The later of: GoodCRCMessageEOP AcceptMessage  TVBhUeS last bit of the vSafe5V, corresponding to the or - being within. PS_RDYMessage PHY Layer UFnatislt tRhoel efi rSswt abpit of thInei rtieaslp Soonusrec eShall P PSr_eRaDmYbMlee hssaasg beeen trantsFmRiStwteadp b5yV the. Dur- ing a Initial Sourc,e the Acc eptM esstsaargt ethe within after both: - TVBhUeS hvaSs asfeen5tV the, and Initial SinkShall PS_RDYMessage tFRSwapComplete PS_RDYMessage Initial Source tFRSwapComplete Shall During a fast-role swap, thGeo odCRCMes sage ErOesPpond with a the P S_RDYM ewsistahgine after it haPsH rYe cLeaiyveerd the from the PS_RDYMe.s sTahgee time be measuPrHeYd Lfraoymer the time the last bit of the, corresponding to the, has been transmitted by 6th.e6.17.3 until t h teF fiRrsSt bwit aofp thIne rietsponse Preamble has been transmitted by the. EOP FR_SwapMessageShall New Source tFRSwapInit Fast Role Swap Request Section 5.8.6.3, \"Fast Role Swap Detection\" That last bit of the of the be transmitted by the no later than 6aft.e6r.t1he8 Chunkin hga sT biemen edertsected (see ). ChunkingNotSupportedTimer Source Sink Chunking MessageChunk The is used by a or which does not support multi-chunk but has rCehcueinvkeidn ag NotSupp ortedT.imerShall The- GoodCRC Messa gbeeE sOtaPrted when: MessageChunk Message PHY Layer Policy EngineShall Not Not_SupportedMessage TheC lahsutn bkiti nogf Nthoet Supporte dTimer, corresponding to a of a multi-chunk, is transmitted by the. The send its before 6.6.18th.2e ChunkSenderR eexpqiruees.stTimer ChunkSenderRequestTimer ChunkedMessage The ChunkSenderRequestTimer iSsh uasleld during a Chun tkrainngsmission. Chunk tChunkSenderRequest The Ch unkSe bned uesreRde qbuy etshteT siemnedrer's state machine to ensure that a Response is responded to within a bounded time of. Failure to receive the expected respCohnsuen iksS deentdeectreRde qwuheesnt Tthime erShall expires. The- GoodCR CMes sbaeg estEaOrtPed when: Chunk Message PHY Layer The last bit of the, corresponding to the Response, is received by the.", "tables": [], "figures": [], "page_range": [258, 258]}
{"section_path": "6.6.19 Programmable Power Supply Timers", "start_heading": "6.6.19 Programmable Power Supply Timers", "content": "ChunkSenderRequestTimerShall The- EOP Go obde CsRtoCpMpeedss wagheen: Chunk Message PHY Layer The last bit of the of the, corresponding to the Request, is trans - miMtteesds abgye the C. hunk Protocol Layer A C houthnekr than a RequestC ihsu rnekceived fromSh tahlel RCxh.unk tChunkReceiverRequest ChunkSenderRequestTimer The receiver of a Response requiring a Request respond with a Request within tChunkReceiverRequ iens otrder tSoh eanllsure that the sender's EOP doeGs onoodt CexRpCirMee. ssage Chunk Message PHY Layer The Message time be measured fromP HthYe Ltiamyeer the last bit of the of the, corresponding to the Response, has been transmitted by the until the first bit of the 6re.s6po.1ns8e.3 Pr eCamhbulen hkasS beenend terarnRsmeisttpedo bny stheeT imer. ChunkSenderResponseTimer ChunkedMessage The ChunkSenderResponseTimer iSsh uasleld during a Chun tkrainngsmission. Chunk tChunkSenderResponse The Chu nkSen bdee ruRseedsp boyn tsheeT simenedrer's state machine to ensure that a Request is responded to within a bounded time of. Failure to receive the expected respCohnsuen iksS deentdeectreRde swphoenns ethTei merShall expires. The- GoodCRC Mess abgee sEtaOrPted when: Chunk Message PHY Layer The last bit of the, corresponding to the Request, is received by ChutnhkeS enderRes.ponseTimerShall The- GoodCRC Messa bgee EstOoPpped when: Chunk Message PHY Layer The last bit of the, corresponding to the Response, is transmitted - byM theses age. Chunk Protocol Layer A C houthnekr than a is receCivheudn kfrom the Shall. Chunk tChunkReceiverResponse ChunkSenderResponseTimer The receiver of a Request requiring a Response respond with a Response within tChunkReceiverRespo inns oerder tSoh eanlslure that the sender's EOP doesG nooot deCxRpiCre. Message Chunk Message PHY Layer The Message time be measured from PthHeY t Limayee trhe last bit of the of the, corresponding to the Request, has been transmitted by the until the first bit of 6th.e6 re.1sp9onse Pr oPrgearmabmle hmasa bbeelne t rPanosmwiteterd bSyu thpep ly Tim. ers SinkPPSPeriodicTimerShall Sink Policy Engine Sink Source tPPSRequest SPR PPS Mode The RequestMessage be usedSP bRy PthPeS APD'Os to ensure that communication between the and occurs within a bounded time of when in. In the absence of any other tSrianfkfiPcP, aS Periodic TimerSh raelqluesting an is sent periodically as a keepP HalYiv Lea myeerchanism. GoodCRCMessageEOP Message Sink PE_SNK_Ready be re-initialized and restarted on transmission, by the, of the last bit of the, corresponding to any received, that causes the to enter the stateS.inkShall SinkPPSPeriodicTimer PHY Layer GoodCRC MessageEOP Message Signaling PHY Layer STohuer ce stopS itnhke Sink on transPmE_isSsNioKn_R, beya dthye, of the last bit of the, corresponding to any, or the last bit of any is received, by the, from the SourcePPSCommTimerShall Source Policy Engine Sink Source tPPSTimeout SPR PPS Mode The RequestMessa ge be used by tShPeR PPSA'PsD O to ensure that communication between the and occurs within a bounded time of when in. In the absence of any other traffic, a requesting an is received periodically as a keep alive mechanism.", "tables": [], "figures": [], "page_range": [259, 259]}
{"section_path": "6.6.20 tEnterUSB", "start_heading": "6.6.20 tEnterUSB", "content": "SourcePPSCommTimerShall Message Source PE_SRC_Ready GoodCRCMessageEOP PHY Layer be re-initialized and restarted when, after receiving any that causes the to enter the state, the last bit of the corresponding is transmitted by the SourceSh.all SourcePPSCommTimer The- stop the Message wShoeunr:ce PE_SRC_Ready GoodCRCMessageEOP PHY Layer After receiving any that causes the to leave the state, the last bit of the - of the correspondiSnigg naling iPsH sYen Lta byye rthe Sink, or Source Source PE_SRC_Ready The last bit of any is received by the from the by the that causes the Sour ctoe PlePaSvCeo tmhem Timer state.SourceShall Hard ResetSignaling 6W.h6en.2 th0e tEnterUSB times out the issue. DFPShall Enter_USBMessage tEnterUSB The- send the GoodCRC within Data_R oefs eeitt_hCeorm: pleteMessage Data_ResetMessage The last bit of the acknowledging the in response to the - or GoodCRC Source_CapabilitiesMessage PE_SRC_Send_Capabilities A PD Connection, specifically the last bit of the acknowledging the - after the initiGalo eondtCrRy Cinto the AcceptMessag setate or DR_SwapMessage The lasDtF bPit of the acknowledging the in response to the [USB 4] AMS UFP Enter_USBMessage Enter_USB MFaeislusarge eby the[U SB4 t]o meet this timeout parameter can resuUltF iPn Sthheo uplodr tNso ntot transitionAinMgS into DF Poperation. Any initiated by thEen ter_ pUrSiBorM toes rseacgeeiving th ®e will delay reception of the and operation, therefore a USB4 -capable initiate any until the has been 6giv.6en. 2tim1e to sen d E thPe R Time rs. SinkEPREnterTimer EPR Mode tEnterEPR Sink Shall GoodCRCMessage EPR_ModeMessage The E nist uersed to eSnisnukrSeh tahlel entry process completes within.G Tohoed CRC Messa sgtearEtO tPhe timer when it sees the last bit EoPf tRh_eM odeMess age in response to the Ente r Succeed weidth the Action field set to 1 ( PH).Y T Lhaey er stop the timer wShiennk tShhea llalst bit ofS tohfet _cRoersreetspMoensdsaingge, corresponding to the received with the Action field set to 3 ( ), h6a.s6 b.e2e1n.t2ransmitted Sbyin thke EPRKee. Ipf tAheli tvimee Tr eixmpireers the send a. SinkEPRKeepAliveTimerShall Sink Policy Engine Sink Source tSinkEPRKeepAlive SinkShall The PE_SNK_R eady be used by theE PR M'so de Shall to ensure that communicatPiEon_S bNeKtw_Reeeand tyhe and EPR Mo odcecurs within a bounded time of. The initialize and run this timer upon entry into the State when in and stop it upon exit from the when in.EPR Mode SinkShall SinkEPRKeepAliveTimer Wh- ile operating in Goo, dthCeR CMe ssage sEtOopP the Message timerS wouhrecneever: PHY Layer The last bit of the, in response any from the, is transmitted by - the PHY Layer. GoodCRCMessageEOP Message Source The receives the last bit of the in response to any sent to the. SinkShall EPR_KeepAliveMessage 6If.t6he. 2tim1e.3r expires t h Se our ceE PseRndK aen epAlive Tim er. SourceEPRKeepAliveTimerShall Source Policy Engine Sink Source tSourceEPRKeepAlive SourceShall The be used by the 's to ensure that communication between the and occurs within a bounded time of. The initialize", "tables": [], "figures": [], "page_range": [260, 260]}
{"section_path": "6.6.21 EPR Timers", "start_heading": "6.6.21 EPR Timers", "content": "SourcePPSCommTimerShall Message Source PE_SRC_Ready GoodCRCMessageEOP PHY Layer be re-initialized and restarted when, after receiving any that causes the to enter the state, the last bit of the corresponding is transmitted by the SourceSh.all SourcePPSCommTimer The- stop the Message wShoeunr:ce PE_SRC_Ready GoodCRCMessageEOP PHY Layer After receiving any that causes the to leave the state, the last bit of the - of the correspondiSnigg naling iPsH sYen Lta byye rthe Sink, or Source Source PE_SRC_Ready The last bit of any is received by the from the by the that causes the Sour ctoe PlePaSvCeo tmhem Timer state.SourceShall Hard ResetSignaling 6W.h6en.2 th0e tEnterUSB times out the issue. DFPShall Enter_USBMessage tEnterUSB The- send the GoodCRC within Data_R oefs eeitt_hCeorm: pleteMessage Data_ResetMessage The last bit of the acknowledging the in response to the - or GoodCRC Source_CapabilitiesMessage PE_SRC_Send_Capabilities A PD Connection, specifically the last bit of the acknowledging the - after the initiGalo eondtCrRy Cinto the AcceptMessag setate or DR_SwapMessage The lasDtF bPit of the acknowledging the in response to the [USB 4] AMS UFP Enter_USBMessage Enter_USB MFaeislusarge eby the[U SB4 t]o meet this timeout parameter can resuUltF iPn Sthheo uplodr tNso ntot transitionAinMgS into DF Poperation. Any initiated by thEen ter_ pUrSiBorM toes rseacgeeiving th ®e will delay reception of the and operation, therefore a USB4 -capable initiate any until the has been 6giv.6en. 2tim1e to sen d E thPe R Time rs. SinkEPREnterTimer EPR Mode tEnterEPR Sink Shall GoodCRCMessage EPR_ModeMessage The E nist uersed to eSnisnukrSeh tahlel entry process completes within.G Tohoed CRC Messa sgtearEtO tPhe timer when it sees the last bit EoPf tRh_eM odeMess age in response to the Ente r Succeed weidth the Action field set to 1 ( PH).Y T Lhaey er stop the timer wShiennk tShhea llalst bit ofS tohfet _cRoersreetspMoensdsaingge, corresponding to the received with the Action field set to 3 ( ), h6a.s6 b.e2e1n.t2ransmitted Sbyin thke EPRKee. Ipf tAheli tvimee Tr eixmpireers the send a. SinkEPRKeepAliveTimerShall Sink Policy Engine Sink Source tSinkEPRKeepAlive SinkShall The PE_SNK_R eady be used by theE PR M'so de Shall to ensure that communicatPiEon_S bNeKtw_Reeeand tyhe and EPR Mo odcecurs within a bounded time of. The initialize and run this timer upon entry into the State when in and stop it upon exit from the when in.EPR Mode SinkShall SinkEPRKeepAliveTimer Wh- ile operating in Goo, dthCeR CMe ssage sEtOopP the Message timerS wouhrecneever: PHY Layer The last bit of the, in response any from the, is transmitted by - the PHY Layer. GoodCRCMessageEOP Message Source The receives the last bit of the in response to any sent to the. SinkShall EPR_KeepAliveMessage 6If.t6he. 2tim1e.3r expires t h Se our ceE PseRndK aen epAlive Tim er. SourceEPRKeepAliveTimerShall Source Policy Engine Sink Source tSourceEPRKeepAlive SourceShall The be used by the 's to ensure that communication between the and occurs within a bounded time of. The initialize PE_SRC_Ready EPR Mode Shall PE_SRC_Ready EPR Mode and run this timer upon entry into the State when in and disable it upon exit from the EStPaRte M wohdeen Source.Shall SourceEPRKeepAliveTimer Wh- ile operating in Goo, dthCeR CMessa geEO sPtop the Message Stiinmker whenever: PHY Layer The last bit of the, in response any from the, is transmitted by the - PHY La.yer GoodCRCMessageEOP Message Source The receives the last bit of the in response to any sent to the. SourceShall Hard ResetSignaling 6If.t6he. 2tim1e.4r expires t h teE PRS ourc seenCda bleDisc overy. Port Partner Attached Hard Reset Power Role Swap Fast Role Swap EPR SourceShall Cable Plug tEPRSourceCableDiscovery First Explicit Contract After s are or after a or after a or after a an EP R Sou rdciescSohvaelrl the Disco vweirth Iidne ntityREQCommand C oafb elen tPelurigng the. tEPRSourceCableDiscovery GoodCRCMessage PS_RDYMessage TExhpel icit Contrac tNego stieantdio tnhe, to the, within of receiving the acknowledging the as part of the Note: E PR Source. VCONN Source tEPRSourceCableDiscovery VCONN Swap If the is not the,, will also include the time needed for the.", "tables": [], "figures": [], "page_range": [260, 261]}
{"section_path": "6.6.22 Time Values and Timers", "start_heading": "6.6.22 Time Values and Timers", "content": "Table6.68, \"Time Values\" Shall Table6.69, \"Timers\" summarizes the values for the timers listed in this section. For each Timer Value, a given implementation pick a fixed value withTianb tlhee6 r.a6n8g eT simpeec iVfiaeldu. es lists the timers. Parameter Value Value Value Units Reference (min) (Nom) (max) tACTempUpdate Section 6.5.2.2.1 tBISTContMode 500 ms Section 6.6.7.2 tBISTCarrierMode 30 45 60 ms Section 6.6.7.1 tBISTSharedTestMode 300 ms Section 6.6.7.3 tCableMessage 1 s Section 6.6.14 tCapabilitiesMismatchResponse 750 µs Section 6.4.2.3 tChunkingNotSupported 2 s Section 6.6.18.1 tChunkReceiverRequest 40 45 50 ms Section 6.6.18.2 tChunkReceiverResponse 15 ms Section 6.6.18.3 tChunkSenderRequest 15 ms Section 6.6.18.2 tChunkSenderResponse 24 27 30 ms Section 6.6.18.3 tDataReset 24 27 30 ms Section 6.6.10.2 tDataResetFail 200 225 250 ms Section 6.6.10.3 tDataResetFailUFP 300 400 ms Section 6.6.10.4 tDiscoverIdentity 450 550 ms Section 6.6.14 tDRSwapHardReset 40 50 ms Section 6.6.11.3 tDRSwapWait 15 ms Section 6.6.4.3 tEnterUSB 100 ms Section 6.6.20 tEnterUSBWait 500 ms Section 6.6.4.7 tEnterEPR 100 ms Section 6.6.21.1 tEPRSourceCableDiscovery 450 500 550 ms Section 6.6.21.4 tFirstSourceCap 2 s Section 6.6.3.3 tFRSwap5V 250 ms Section 6.6.17.1 tFRSwapComplete 15 ms Section 6.6.17.2 tFRSwapInit 15 ms Section 6.6.17.3 tHardReset 15 ms Section 6.3.13 tHardResetComplete 5 ms Section 6.6.9 tSourceEPRKeepAlive 4 4.5 5 ms Section 6.6.21.3 tSinkEPRKeepAlive 0.750 0.875 1.000 s Section 6.6.21.2 tNoResponse 0.250 0.375 0.500 s Section 6.6.6 tPPSRequest 4.5 5.0 5.5 s Section 6.6.19.1 tPPSTimeout 10 s Section 6.6.19.2 tProtErrHardReset 12.0 13.5 15.0 s Section 6.6.11.4 tProtErrSoftReset 15 ms Section 6.6.9.2 tPRSwapWait 15 ms Section 6.6.4.2 tPSHardReset 100 ms Section 6.6.11.2 Table6.68 Time Values (Continued) Parameter Value Value Value Units Reference (min) (Nom) (max) tPSSourceOff SPR Mode Section 6.6.5.2 EPR Mode 750 835 920 ms tPSSourceOn SPR Mode 1120 1260 1400 Section 6.6.5.3 tPSTransition SPR Mode 390 435 480 ms Section 6.6.5.1 EPR Mode 450 500 550 ms tReceive 830 925 1020 Section 6.6.1 tReceiverResponse 0.9 1.0 1.1 ms Section 6.6.2 tRetry 15 ms Section 6.6.1 tSenderResponse 195 µs Section 6.6.2 tSinkDelay 27 30 33 ms Section 5.7 tSinkRequest 5 ms Section 6.6.4.1 tSinkTx 100 ms Section 6.6.16 tSoftReset 16 18 20 ms Section 6.8.1 tSrcHoldsBus 15 ms Section 8.3.3.2 tSwapSinkReady 50 ms Section 6.6.8.1 tSwapSourceStart 15 ms Section 6.6.8.1 tTransmit 20 ms Section 6.6.1 tTypeCSendSourceCap 195 µs Section 6.6.3.1 tTypeCSinkWaitCap 100 150 200 ms Section 6.6.3.2 tVCONNSourceDischarge 310 465 620 ms Section 6.6.10.1 tVCONNSourceOff 160 200 240 ms Section 6.6.13 tVcONNSourceOn 25 ms Section 6.3.11 tVCONNSourceTimeout 50 ms Section 6.6.13 tVCONNSwapWait 100 150 200 ms Section 6.6.4.4 tVCONNSwapDelayDFP 100 ms Section 6.6.4.5 tVCONNSwapDelayUFP 100 ms Section 6.6.4.6 tVDMBusy 500 ms Section 6.6.12.4 tVDMEnterMode 50 ms Section 6.6.12.2 tVDMExitMode 25 ms Section 6.6.12.3 tVDMReceiverResponse 25 ms Section 6.6.12.1 tVDMSenderResponse 15 ms Section 6.6.12.1 tVDMWaitModeEntry 24 27 30 ms Section 6.6.12.2 tVDMWaitModeExit 40 45 50 ms Section 6.6.12.3 Table6.69 Timers Timer Parameter Used By Reference BISTContModeTimer tBISTContMode Policy Engine Section 6.6.7.2 ChunkingNotSupportedTimer tChunkingNotSupported Policy Engine Section 6.6.18.1 ChunkSenderRequestTimer tChunkSenderRequest Protocol Layer Section 6.6.18.2 ChunkSenderResponseTimer tChunkSenderResponse Protocol Layer Section 6.6.18.3 CRCReceiveTimer tReceive Protocol Layer Section 6.6.1 DataResetFailTimer tDataResetFail Policy Engine Section 6.6.10.3 DataResetFailUFPTimer tDataResetFailUFP Policy Engine Section 6.6.10.4 DiscoverIdentityTimer tDiscoverIdentity Policy Engine Section 6.6.15 HardResetCompleteTimer tHardResetComplete Protocol Layer Section 6.6.9 NoResponseTimer tNoResponse Policy Engine Section 6.6.6 PSHardResetTimer tPSHardReset Policy Engine Section 6.6.11.2 PSSourceOffTimer tPSSourceOff Policy Engine Section 6.6.5.2 PSSourceOnTimer tPSSourceOn Policy Engine Section 6.6.5.3 PSTransitionTimer tPSTransition Policy Engine Section 6.6.5.1 SenderResponseTimer tSenderResponse Policy Engine Section 6.6.2 SinkEPREnterTimer tEnterEPR Policy Engine Section 6.6.21.1 SinkEPRKeepAliveTimer tSinkEPRKeepAlive Policy Engine Section 6.6.21.2 SinkPPSPeriodicTimer tPPSRequest Policy Engine Section 6.6.19.1 SinkRequestTimer tSinkRequest Policy Engine Section 6.6.4 SinkWaitCapTimer tTypeCSinkWaitCap Policy Engine Section 6.6.3.2 SourceCapabilityTimer tTypeCSendSourceCap Policy Engine Section 6.6.3.1 SourceEPRKeepAliveTimer tSourceEPRKeepAlive Policy Engine Section 6.6.21.3 SourcePPSCommTimer tPPSTimeout Policy Engine Section 6.6.19.2 SinkTxTimer tSinkTx Protocol Layer Section 6.6.16 SwapSourceStartTimer tSwapSourceStart Policy Engine Section 6.6.8.1 VCONNDischargeTimer tVCONNSourceDischarge Policy Engine Section 6.6.10.1 VCONNOnTimer tVCONNSourceTimeout Policy Engine Section 6.6.13.1 VDMModeEntryTimer tVDMWaitModeEntry Policy Engine Section 6.6.12.2 VDMModeExitTimer tVDMWaitModeExit Policy Engine Section 6.6.12.3 VDMResponseTimer tVDMSenderResponse Policy Engine Section 6.6.12.1", "tables": ["Table 6.68", "Table 6.68", "Table 6.69"], "figures": [], "page_range": [262, 264]}
{"section_path": "6.7 Counters", "start_heading": "6.7 Counters", "content": "MessageIDCounter nMessageIDCount Message MessageID Message Header Message The is a rolling counter, ranging from 0 to, used to detect duplicate Porst. SThhaisl lvalue is used for the Mess faiegledI Din the of ePaocrht Ptraarntnsmeritted. Hub Shall MessageID Port Port Each maintSaOinP *a P caocpkye tof Sthhea lllast value receiveMde fsrsoamg eitIsD. DevSicOePs* that support multiple ports, such as s, maintain copies of the last on a per basis. A which communicates usSihnagl l Mess sageID maintGaiono cdoCpRieCsM oef stshaeg least for each typMe eosfs age it uses. Shall MessageID Message The transmitter use the in a to verify that a particular was received 6co.r7re.c1tl.y1. The receiv e Tr ran sumse tihtet er Usage to detect duplicate s. Shall MessageID The- Transmitter use the Hard Reset Saisg nfoallliongws: Soft_ResetMessage Shall MessageIDCounter Upon receiving either, or a, the transmitter set its - GoodCRCMessag teo zero anMde rses-aigneitIiDalize its retry mMecehsasnaigsmeI.DCounter CRCReceiveTimer Shall Packet nRetryCount IMf eas sageID with a matching the is not received before the expires, it retry the same up to times using the same - GoodCR.CMessage MessageID MessageIDCounter CRCReceiveTimer Shall IMf eas sageIDCo unter is received with a matching the current before the expires, the transmitter re-initialize its retry mechanism and increment its - Message. Policy Engine Shall Message MessageIDCounter If the is aborted by the, the transmitter delete the from its transmit 6.7.1.b2uffer, re-ini t iRaleizce eitisv reetrry U mseachganeism and increment its. Shall MessageID The- Receiver use the Packet as follows: Shall MessageID When the first good is received after a reset, the receiver store a copy of the received - valuMe.essage MessageID Message Shall GoodCRCMessage MessageID Message For subsequent s, if Message value in a received is the same as the stored value, the receiver return a with that value and drop the (this is a Note: retry ofS ahna lal lNreoatdy received Soft_Re)s. etMessage MessageID - MTheisss ageID apply to the Messa ge which always has a value of zSehraol.l GoodCRCMessage MessageID MessageID If Messa vgaelue in the received is different than the stored value, the receiver return a with the new value, store a copy of the new value and pro 6.7.2cess the Retr.y Counter RetryCounter Port Message CRCReceiveTimer nRetryCount Shall Soft Reset The is used by a whenever there is a transmission failure (timeout of ). If the retry fails, thMeens stahgee link be reset using the Section 6m.1e2ch.2a.2n,i sm. \"Protocol Layer Message Transmission\" The following rules apply to retries when there is a transmission failure (see also - Cable Plug Shall Not Mes)s:age - Extended Mse ssage Dreattray Size Masx.ExtendedMsgLegacyLen Chunked Chunked Shall Not s of > that are not ( flag set to zero) be retried.", "tables": [], "figures": [], "page_range": [265, 265]}
{"section_path": "6.7.1 MessageID Counter", "start_heading": "6.7.1 MessageID Counter", "content": "MessageIDCounter nMessageIDCount Message MessageID Message Header Message The is a rolling counter, ranging from 0 to, used to detect duplicate Porst. SThhaisl lvalue is used for the Mess faiegledI Din the of ePaocrht Ptraarntnsmeritted. Hub Shall MessageID Port Port Each maintSaOinP *a P caocpkye tof Sthhea lllast value receiveMde fsrsoamg eitIsD. DevSicOePs* that support multiple ports, such as s, maintain copies of the last on a per basis. A which communicates usSihnagl l Mess sageID maintGaiono cdoCpRieCsM oef stshaeg least for each typMe eosfs age it uses. Shall MessageID Message The transmitter use the in a to verify that a particular was received 6co.r7re.c1tl.y1. The receiv e Tr ran sumse tihtet er Usage to detect duplicate s. Shall MessageID The- Transmitter use the Hard Reset Saisg nfoallliongws: Soft_ResetMessage Shall MessageIDCounter Upon receiving either, or a, the transmitter set its - GoodCRCMessag teo zero anMde rses-aigneitIiDalize its retry mMecehsasnaigsmeI.DCounter CRCReceiveTimer Shall Packet nRetryCount IMf eas sageID with a matching the is not received before the expires, it retry the same up to times using the same - GoodCR.CMessage MessageID MessageIDCounter CRCReceiveTimer Shall IMf eas sageIDCo unter is received with a matching the current before the expires, the transmitter re-initialize its retry mechanism and increment its - Message. Policy Engine Shall Message MessageIDCounter If the is aborted by the, the transmitter delete the from its transmit 6.7.1.b2uffer, re-ini t iRaleizce eitisv reetrry U mseachganeism and increment its. Shall MessageID The- Receiver use the Packet as follows: Shall MessageID When the first good is received after a reset, the receiver store a copy of the received - valuMe.essage MessageID Message Shall GoodCRCMessage MessageID Message For subsequent s, if Message value in a received is the same as the stored value, the receiver return a with that value and drop the (this is a Note: retry ofS ahna lal lNreoatdy received Soft_Re)s. etMessage MessageID - MTheisss ageID apply to the Messa ge which always has a value of zSehraol.l GoodCRCMessage MessageID MessageID If Messa vgaelue in the received is different than the stored value, the receiver return a with the new value, store a copy of the new value and pro 6.7.2cess the Retr.y Counter RetryCounter Port Message CRCReceiveTimer nRetryCount Shall Soft Reset The is used by a whenever there is a transmission failure (timeout of ). If the retry fails, thMeens stahgee link be reset using the Section 6m.1e2ch.2a.2n,i sm. \"Protocol Layer Message Transmission\" The following rules apply to retries when there is a transmission failure (see also - Cable Plug Shall Not Mes)s:age - Extended Mse ssage Dreattray Size Masx.ExtendedMsgLegacyLen Chunked Chunked Shall Not s of > that are not ( flag set to zero) be retried.", "tables": [], "figures": [], "page_range": [265, 265]}
{"section_path": "6.7.2 Retry Counter", "start_heading": "6.7.2 Retry Counter", "content": "MessageIDCounter nMessageIDCount Message MessageID Message Header Message The is a rolling counter, ranging from 0 to, used to detect duplicate Porst. SThhaisl lvalue is used for the Mess faiegledI Din the of ePaocrht Ptraarntnsmeritted. Hub Shall MessageID Port Port Each maintSaOinP *a P caocpkye tof Sthhea lllast value receiveMde fsrsoamg eitIsD. DevSicOePs* that support multiple ports, such as s, maintain copies of the last on a per basis. A which communicates usSihnagl l Mess sageID maintGaiono cdoCpRieCsM oef stshaeg least for each typMe eosfs age it uses. Shall MessageID Message The transmitter use the in a to verify that a particular was received 6co.r7re.c1tl.y1. The receiv e Tr ran sumse tihtet er Usage to detect duplicate s. Shall MessageID The- Transmitter use the Hard Reset Saisg nfoallliongws: Soft_ResetMessage Shall MessageIDCounter Upon receiving either, or a, the transmitter set its - GoodCRCMessag teo zero anMde rses-aigneitIiDalize its retry mMecehsasnaigsmeI.DCounter CRCReceiveTimer Shall Packet nRetryCount IMf eas sageID with a matching the is not received before the expires, it retry the same up to times using the same - GoodCR.CMessage MessageID MessageIDCounter CRCReceiveTimer Shall IMf eas sageIDCo unter is received with a matching the current before the expires, the transmitter re-initialize its retry mechanism and increment its - Message. Policy Engine Shall Message MessageIDCounter If the is aborted by the, the transmitter delete the from its transmit 6.7.1.b2uffer, re-ini t iRaleizce eitisv reetrry U mseachganeism and increment its. Shall MessageID The- Receiver use the Packet as follows: Shall MessageID When the first good is received after a reset, the receiver store a copy of the received - valuMe.essage MessageID Message Shall GoodCRCMessage MessageID Message For subsequent s, if Message value in a received is the same as the stored value, the receiver return a with that value and drop the (this is a Note: retry ofS ahna lal lNreoatdy received Soft_Re)s. etMessage MessageID - MTheisss ageID apply to the Messa ge which always has a value of zSehraol.l GoodCRCMessage MessageID MessageID If Messa vgaelue in the received is different than the stored value, the receiver return a with the new value, store a copy of the new value and pro 6.7.2cess the Retr.y Counter RetryCounter Port Message CRCReceiveTimer nRetryCount Shall Soft Reset The is used by a whenever there is a transmission failure (timeout of ). If the retry fails, thMeens stahgee link be reset using the Section 6m.1e2ch.2a.2n,i sm. \"Protocol Layer Message Transmission\" The following rules apply to retries when there is a transmission failure (see also - Cable Plug Shall Not Mes)s:age - Extended Mse ssage Dreattray Size Masx.ExtendedMsgLegacyLen Chunked Chunked Shall Not s of > that are not ( flag set to zero) be retried.", "tables": [], "figures": [], "page_range": [265, 265]}
{"section_path": "6.7.3 Hard Reset Counter", "start_heading": "6.7.3 Hard Reset Counter", "content": "- Extended Message Data Size MaxExtendedMsgLegacyLen Chunked Shall s of ≤ ( flag set to zero or one) - Ebext reentdreiedd M. essage Data Size MaxExtendedMsgLegacyLen Chunked Chunked Shall s of > that are ( flag set to Moenssea)g iendividual Chunks be rReettrrieydC.ounter Message GoodCRCMessage When s are not retried, then the is not used. Higher layer protocols are expected to a6c.c7om.3modate Har ddel ivReerys faeiltu rCe ooru faniltuerer to receive a. HardResetCounter Hard Reset Section 6.6.6, \"NoResponseTimer\" Hard Reset nHardResetCount Shall The is used to retry the whenever there is no response from the remote device (see ). Once the has been retried times then it be 6as.s7um.4ed that the rCemaoptea dbeviilciet iise nson C-roesuponnstiever. CapsCounter Source_CapabilitiesMessage Source Hard Reset CapsCounter Optional May Source The is used to count the number ofS ource_CapabilitiesM essages which have been sent by a at power up or after a. Implementation of the is but be used by any which wishCeasp tsoC opurensteerrve power by not sending Source Sink Atst aafctheerd a period of tnimCaep. sCount Source_CapabilitiesMessage SourceShall Sink SWohuernce t_hCea pabilitiesMe sissa igmeplemented and the detects that a is then after s have been sent the decide that the is non-responsive, stop sending SinkShall S inkWaitsC aanpdT idmisearble PD. Source_CapabilitiesMessage Source Source_CapabilitiesMessage Sink AAt tach ed use the Source_C taop tarbigiglietrie tshMe reesssaengdeinShg aolfl Hard ResetSig naling s by a USB Power DSienlkivWerayi tcCaappabTliem er which has previously stoppSeodu rsceending SourceShal l s. Any Cap swChouicnht iesr and does not deteScotu ar ce_CapabilitiesMess age, issue when the times out in order to reset the. Resetting the also reset the 6an.d7 r.e5start the se nDdiinsg coof ver Identity C ountse. r Discover IdentityMessage Cable Plug PortShall Message DiscoverIdentityCounter nDiscoverIdentityCountDiscover IdentityMessage Shall WhePno rstending Good CRCMesss taog ea aV CONN Swa pmSahinatllain a countD oifs coverIdesn steitnytC ounter ( ). No more than s be sent by 6th.e7.6 without r eVceDivMingB a usyCou nter response. A reset the. ResponderBUSY Vendor_DefinedMessage UFP Cable PlugShall Message VDMBusyCounter nBusyCountResponderBUSY WShhaelnl sending VDMBu syCou rnetseproSnhseasll to a Structured BUSY a or m[UaSiBn tTayinp ae -cCo 2u.n4t] of s sent (Alternate Mode ). NSoh mouorlde than nBusyCoun t responses be sent. The be reset on sending a non- response. Products wishing to meet requirements for entry use an of 1.", "tables": [], "figures": [], "page_range": [266, 266]}
{"section_path": "6.7.4 Capabilities Counter", "start_heading": "6.7.4 Capabilities Counter", "content": "- Extended Message Data Size MaxExtendedMsgLegacyLen Chunked Shall s of ≤ ( flag set to zero or one) - Ebext reentdreiedd M. essage Data Size MaxExtendedMsgLegacyLen Chunked Chunked Shall s of > that are ( flag set to Moenssea)g iendividual Chunks be rReettrrieydC.ounter Message GoodCRCMessage When s are not retried, then the is not used. Higher layer protocols are expected to a6c.c7om.3modate Har ddel ivReerys faeiltu rCe ooru faniltuerer to receive a. HardResetCounter Hard Reset Section 6.6.6, \"NoResponseTimer\" Hard Reset nHardResetCount Shall The is used to retry the whenever there is no response from the remote device (see ). Once the has been retried times then it be 6as.s7um.4ed that the rCemaoptea dbeviilciet iise nson C-roesuponnstiever. CapsCounter Source_CapabilitiesMessage Source Hard Reset CapsCounter Optional May Source The is used to count the number ofS ource_CapabilitiesM essages which have been sent by a at power up or after a. Implementation of the is but be used by any which wishCeasp tsoC opurensteerrve power by not sending Source Sink Atst aafctheerd a period of tnimCaep. sCount Source_CapabilitiesMessage SourceShall Sink SWohuernce t_hCea pabilitiesMe sissa igmeplemented and the detects that a is then after s have been sent the decide that the is non-responsive, stop sending SinkShall S inkWaitsC aanpdT idmisearble PD. Source_CapabilitiesMessage Source Source_CapabilitiesMessage Sink AAt tach ed use the Source_C taop tarbigiglietrie tshMe reesssaengdeinShg aolfl Hard ResetSig naling s by a USB Power DSienlkivWerayi tcCaappabTliem er which has previously stoppSeodu rsceending SourceShal l s. Any Cap swChouicnht iesr and does not deteScotu ar ce_CapabilitiesMess age, issue when the times out in order to reset the. Resetting the also reset the 6an.d7 r.e5start the se nDdiinsg coof ver Identity C ountse. r Discover IdentityMessage Cable Plug PortShall Message DiscoverIdentityCounter nDiscoverIdentityCountDiscover IdentityMessage Shall WhePno rstending Good CRCMesss taog ea aV CONN Swa pmSahinatllain a countD oifs coverIdesn steitnytC ounter ( ). No more than s be sent by 6th.e7.6 without r eVceDivMingB a usyCou nter response. A reset the. ResponderBUSY Vendor_DefinedMessage UFP Cable PlugShall Message VDMBusyCounter nBusyCountResponderBUSY WShhaelnl sending VDMBu syCou rnetseproSnhseasll to a Structured BUSY a or m[UaSiBn tTayinp ae -cCo 2u.n4t] of s sent (Alternate Mode ). NSoh mouorlde than nBusyCoun t responses be sent. The be reset on sending a non- response. Products wishing to meet requirements for entry use an of 1.", "tables": [], "figures": [], "page_range": [266, 266]}
{"section_path": "6.7.5 Discover Identity Counter", "start_heading": "6.7.5 Discover Identity Counter", "content": "- Extended Message Data Size MaxExtendedMsgLegacyLen Chunked Shall s of ≤ ( flag set to zero or one) - Ebext reentdreiedd M. essage Data Size MaxExtendedMsgLegacyLen Chunked Chunked Shall s of > that are ( flag set to Moenssea)g iendividual Chunks be rReettrrieydC.ounter Message GoodCRCMessage When s are not retried, then the is not used. Higher layer protocols are expected to a6c.c7om.3modate Har ddel ivReerys faeiltu rCe ooru faniltuerer to receive a. HardResetCounter Hard Reset Section 6.6.6, \"NoResponseTimer\" Hard Reset nHardResetCount Shall The is used to retry the whenever there is no response from the remote device (see ). Once the has been retried times then it be 6as.s7um.4ed that the rCemaoptea dbeviilciet iise nson C-roesuponnstiever. CapsCounter Source_CapabilitiesMessage Source Hard Reset CapsCounter Optional May Source The is used to count the number ofS ource_CapabilitiesM essages which have been sent by a at power up or after a. Implementation of the is but be used by any which wishCeasp tsoC opurensteerrve power by not sending Source Sink Atst aafctheerd a period of tnimCaep. sCount Source_CapabilitiesMessage SourceShall Sink SWohuernce t_hCea pabilitiesMe sissa igmeplemented and the detects that a is then after s have been sent the decide that the is non-responsive, stop sending SinkShall S inkWaitsC aanpdT idmisearble PD. Source_CapabilitiesMessage Source Source_CapabilitiesMessage Sink AAt tach ed use the Source_C taop tarbigiglietrie tshMe reesssaengdeinShg aolfl Hard ResetSig naling s by a USB Power DSienlkivWerayi tcCaappabTliem er which has previously stoppSeodu rsceending SourceShal l s. Any Cap swChouicnht iesr and does not deteScotu ar ce_CapabilitiesMess age, issue when the times out in order to reset the. Resetting the also reset the 6an.d7 r.e5start the se nDdiinsg coof ver Identity C ountse. r Discover IdentityMessage Cable Plug PortShall Message DiscoverIdentityCounter nDiscoverIdentityCountDiscover IdentityMessage Shall WhePno rstending Good CRCMesss taog ea aV CONN Swa pmSahinatllain a countD oifs coverIdesn steitnytC ounter ( ). No more than s be sent by 6th.e7.6 without r eVceDivMingB a usyCou nter response. A reset the. ResponderBUSY Vendor_DefinedMessage UFP Cable PlugShall Message VDMBusyCounter nBusyCountResponderBUSY WShhaelnl sending VDMBu syCou rnetseproSnhseasll to a Structured BUSY a or m[UaSiBn tTayinp ae -cCo 2u.n4t] of s sent (Alternate Mode ). NSoh mouorlde than nBusyCoun t responses be sent. The be reset on sending a non- response. Products wishing to meet requirements for entry use an of 1.", "tables": [], "figures": [], "page_range": [266, 266]}
{"section_path": "6.7.6 VDMBusyCounter", "start_heading": "6.7.6 VDMBusyCounter", "content": "- Extended Message Data Size MaxExtendedMsgLegacyLen Chunked Shall s of ≤ ( flag set to zero or one) - Ebext reentdreiedd M. essage Data Size MaxExtendedMsgLegacyLen Chunked Chunked Shall s of > that are ( flag set to Moenssea)g iendividual Chunks be rReettrrieydC.ounter Message GoodCRCMessage When s are not retried, then the is not used. Higher layer protocols are expected to a6c.c7om.3modate Har ddel ivReerys faeiltu rCe ooru faniltuerer to receive a. HardResetCounter Hard Reset Section 6.6.6, \"NoResponseTimer\" Hard Reset nHardResetCount Shall The is used to retry the whenever there is no response from the remote device (see ). Once the has been retried times then it be 6as.s7um.4ed that the rCemaoptea dbeviilciet iise nson C-roesuponnstiever. CapsCounter Source_CapabilitiesMessage Source Hard Reset CapsCounter Optional May Source The is used to count the number ofS ource_CapabilitiesM essages which have been sent by a at power up or after a. Implementation of the is but be used by any which wishCeasp tsoC opurensteerrve power by not sending Source Sink Atst aafctheerd a period of tnimCaep. sCount Source_CapabilitiesMessage SourceShall Sink SWohuernce t_hCea pabilitiesMe sissa igmeplemented and the detects that a is then after s have been sent the decide that the is non-responsive, stop sending SinkShall S inkWaitsC aanpdT idmisearble PD. Source_CapabilitiesMessage Source Source_CapabilitiesMessage Sink AAt tach ed use the Source_C taop tarbigiglietrie tshMe reesssaengdeinShg aolfl Hard ResetSig naling s by a USB Power DSienlkivWerayi tcCaappabTliem er which has previously stoppSeodu rsceending SourceShal l s. Any Cap swChouicnht iesr and does not deteScotu ar ce_CapabilitiesMess age, issue when the times out in order to reset the. Resetting the also reset the 6an.d7 r.e5start the se nDdiinsg coof ver Identity C ountse. r Discover IdentityMessage Cable Plug PortShall Message DiscoverIdentityCounter nDiscoverIdentityCountDiscover IdentityMessage Shall WhePno rstending Good CRCMesss taog ea aV CONN Swa pmSahinatllain a countD oifs coverIdesn steitnytC ounter ( ). No more than s be sent by 6th.e7.6 without r eVceDivMingB a usyCou nter response. A reset the. ResponderBUSY Vendor_DefinedMessage UFP Cable PlugShall Message VDMBusyCounter nBusyCountResponderBUSY WShhaelnl sending VDMBu syCou rnetseproSnhseasll to a Structured BUSY a or m[UaSiBn tTayinp ae -cCo 2u.n4t] of s sent (Alternate Mode ). NSoh mouorlde than nBusyCoun t responses be sent. The be reset on sending a non- response. Products wishing to meet requirements for entry use an of 1.", "tables": [], "figures": [], "page_range": [266, 266]}
{"section_path": "6.7.7 Counter Values and Counters", "start_heading": "6.7.7 Counter Values and Counters", "content": "Table6.70, \"Counter Parameters\" Table6.71, \"Counters\" lists the counters used in this section and shows the corresponding parameters. Table6.70 Counter Parameters Parameter Value Reference nBusyCount 5 Section 6.7.6 nCapsCount 50 Section 6.7.4 nDiscoverIdentityCount 20 Section 6.7.5 nHardResetCount 2 Section 6.7.3 nMessageIDCount 7 Section 6.7.1 nRetryCount 2 Section 6.7.2 Table6.71 Counters Counter Max Reference CapsCounter nCapsCount Section 6.7.4 DiscoverIdentityCounter nDiscoverIdentityCount Section 6.7.5 HardResetCounter nHardResetCount Section 6.7.3 MessageIDCounter nMessageIDCount Section 6.7.1 RetryCounter nRetryCount Section 6.7.2 VDMBusyCounter nBusyCount Section 6.7.6", "tables": ["Table 6.70", "Table 6.71"], "figures": [], "page_range": [267, 267]}
{"section_path": "6.8 Reset", "start_heading": "6.8 Reset", "content": "Resets are a necessary response to protocol or other error conditions. USB Power Delivery defines four different type- s of Sroefste Rt:eset - Data Rese,t which resets protUocSoBl.Communication - Hard Reset which resets the s. - Cable Reset which resets both the power supplies and protocol Soft_ResetMessage Soft Reset Shall Not Protocol Error A Ato mic Mes sias gues eSdeq tuoe cnacueseA aM S So oftf RpreosetotcMoal cyommunication when thPiso hrta sP abrrtonkeern down in some wayP. rIto tocol Erro rhave any impact on power supply operation but is used to correct a occurring during an ( ). The be triggered by either in response to tPhreo tocol Error. Message AMS Message AMS Protocol Layer Policy Engine GoodCRCMessage Message s are any unexpectePdr otocol Er rdourring an.P Iof ltichye Efinrgstin eShall N ino tan hSaosf tb Reeesne tpasseSdh taol lthe P Eb_yS tNhKe _Ready PE_ bSuRtC h_Rase andoty yet been sent (i.e., a M aecsksangoewledging the hMaess snaogte been rUecneeixvpeedc)t ewdh Menes tshaeg e ocPcuEr_sS,N thKe_R eady PE_S RC_Ready issue a Policy E bnugti neSh all return tSoo ftth Ree set Protoc oorl Error state anAdM tShen pSrohcaellss the incoSmofitn Rge set. If the incoming Polic yis E anng ine recSeeivcetido nin 8 t.3h.e3.4, \"SOP Soft Res oetr and Protocol Er rsotar tSet,a tthee D iagrams\" issue a. If the oPcrcoutrosc doul rEirnrgo arnS hall this H laeradd Rtoe sae t Sec tiino onr 6d.6er.1 t1o. 4r,e -synchronize \"thtPer otErrHardRes setta\"te maScehcitnioens 8(s.3e.e3.2, \"Policy Engine Source Port State Diagram\" AMS ) except whSeenc ttihoen v8o.3lt.2a.g1e.3 i,s \" tArtaonmsiitci oMne wsshaegne Sae quences\" lead to a (see and ). Details of 's can be found in Unrecognized Message Unsupported Messa.ge PE_SNK_Ready PE_SRC_Ready Shall Not Soft_ResetMessage Not_SupportedMessageShall An or received in the or states, So cfta_uRsees ae tMessageS hall to be generated but inRstead a SinkTxOK Sink TxNG be generated. A be sent regardless of the p value either or if it is the correct rNeostpeo:nse in that state. Soft_ResetMessage AMS R SinkTxOK SinkTxNG Protocol Error This means that a can be sent during an regardless of the p value either or when responding to a.", "tables": [], "figures": [], "page_range": [268, 268]}
{"section_path": "6.8.1 Soft Reset and Protocol Error", "start_heading": "6.8.1 Soft Reset and Protocol Error", "content": "Resets are a necessary response to protocol or other error conditions. USB Power Delivery defines four different type- s of Sroefste Rt:eset - Data Rese,t which resets protUocSoBl.Communication - Hard Reset which resets the s. - Cable Reset which resets both the power supplies and protocol Soft_ResetMessage Soft Reset Shall Not Protocol Error A Ato mic Mes sias gues eSdeq tuoe cnacueseA aM S So oftf RpreosetotcMoal cyommunication when thPiso hrta sP abrrtonkeern down in some wayP. rIto tocol Erro rhave any impact on power supply operation but is used to correct a occurring during an ( ). The be triggered by either in response to tPhreo tocol Error. Message AMS Message AMS Protocol Layer Policy Engine GoodCRCMessage Message s are any unexpectePdr otocol Er rdourring an.P Iof ltichye Efinrgstin eShall N ino tan hSaosf tb Reeesne tpasseSdh taol lthe P Eb_yS tNhKe _Ready PE_ bSuRtC h_Rase andoty yet been sent (i.e., a M aecsksangoewledging the hMaess snaogte been rUecneeixvpeedc)t ewdh Menes tshaeg e ocPcuEr_sS,N thKe_R eady PE_S RC_Ready issue a Policy E bnugti neSh all return tSoo ftth Ree set Protoc oorl Error state anAdM tShen pSrohcaellss the incoSmofitn Rge set. If the incoming Polic yis E anng ine recSeeivcetido nin 8 t.3h.e3.4, \"SOP Soft Res oetr and Protocol Er rsotar tSet,a tthee D iagrams\" issue a. If the oPcrcoutrosc doul rEirnrgo arnS hall this H laeradd Rtoe sae t Sec tiino onr 6d.6er.1 t1o. 4r,e -synchronize \"thtPer otErrHardRes setta\"te maScehcitnioens 8(s.3e.e3.2, \"Policy Engine Source Port State Diagram\" AMS ) except whSeenc ttihoen v8o.3lt.2a.g1e.3 i,s \" tArtaonmsiitci oMne wsshaegne Sae quences\" lead to a (see and ). Details of 's can be found in Unrecognized Message Unsupported Messa.ge PE_SNK_Ready PE_SRC_Ready Shall Not Soft_ResetMessage Not_SupportedMessageShall An or received in the or states, So cfta_uRsees ae tMessageS hall to be generated but inRstead a SinkTxOK Sink TxNG be generated. A be sent regardless of the p value either or if it is the correct rNeostpeo:nse in that state. Soft_ResetMessage AMS R SinkTxOK SinkTxNG Protocol Error This means that a can be sent during an regardless of the p value either or when responding to a. Table6.72, \"Response to an incoming Message (except VDM)\" Table6.73, \"Response to an incoming VDM\" Shall Message VDM and summarize the responseTs athbalet 6.72 bRee mspaodnes teo taon a innc ionmcoinmgi ng Mess aingcel u(deixncge pt VDs.M) Recipient’s Recipient’s Incoming Message Power Role state Recognized Unrecognized Supported Unsupported Expected Unexpected Source Not_SupportedMessage Soft_Reset Not_Supported VDM 3 PE_SRC_Ready Message Message Message Section 6.4.4.1 (except for ) Process 2 3 Section 6.4.4.1 See for UVDM. AMS See for SVDM Message Soft_ResetMessage During (power not Process AMS1 transitioning ) Message Hard ResetSignaling During (power Process Sink transitioning1 ) Not_SupportedMessage Soft_Reset Not_Supported VDM 3 PE_SNK_Ready Message Message Message Section 6.4.4.1 (except for ) Process 2 3 Section 6.4.4.1 See for UVDM. AMS See for SVDM Message Soft_ResetMessage During (not power Process AMS transitioned) Message Hard ResetSignaling During (power Process Policy Engine PE_SRC_Transition_Supply PE_SNK_Transition_Sink transitioned) PE_FRS_SNK_SRC_Start_AMS 1) “Power transitioning” means the is in State or State or Soft_ResetMessageShall State. SOP* Message 2) The Not_Suppo rtedMes sageS bhea sllent using the S oOf Pth*e incoming Mes.sage 3) The be sent using the of the incoming. Table6.73 Response to an incoming VDM Recipient's Unstructured VDM Structured VDM Role Supported Unsupported Unrecognized Supported Unsupported Unrecognized DFP UFP Not_Supported Not_Supported Not_Supported NAKCommand Message Message Section 6.13.5 Message or Defined by See Cable Plug vendor Message Message Message NAKCommand Ignored Ignored Section 6.13.5 Ignored Defined by See vendor GoodCRCMessage Message tReceive nRetryCount Port Pair Connected Soft Reset Section 6.6.9.1, A failure to see a in response to any within (after retries), when \"tSoftReset\" a is, is indicative of a communications failure resulting in a (see Soft ResetShall ). A - PHY Layer impact the USB Power DeliveryP HlaYy eLrasy ienr the following wPaaycsk:et - Protocol La: yReerset not rMeqesusiraegde IsDinCcoeu tnhtee r RetryCo urensteetrs on each transmission/reception. : Reset, and state machines.", "tables": ["Table 6.72", "Table 6.73"], "figures": [], "page_range": [268, 269]}
{"section_path": "6.8.2 Data Reset", "start_heading": "6.8.2 Data Reset", "content": "- Policy Engine Explicit ContractNegotiation - : RSehsaeltl sNtaotte dependent behavior by performing an. Note: Power suppSlPyR: Mode Schouanrcgee. Source_CapabilitiesMessage EPR Mode Source EPR_Source_CapabilitiesMessage When in the sends a and when in the Soft Resestends an AMS T able8.8,.\"AMS: Soft Reset\" Message Shall Soft_Reset AcceptMessage A is performed using an (see ). numbers be set to zero Soft_ResetMessageShall MessageIDCounter RetryCounter MessageShall prior to sending the / since the issue might be with the counters. The sender of a MessageIDCounter RetryCounter AcceptMessage Soft reset its and, the receiver of the reset Reset Hard Reset SOP Packet Cable Reset DFP its and before sending the response. Any failure in the SOP* Packet GoodCRCMessage Soft Reset Section process will trigger a when s are being used or, sent by the only, for 6.8.3, \"Hard Reset\" Section 6.8.4, \"Cable Reset\" any other s; for example a is not received during the process (see and ). Data_ResetMessage Port Alternate Mode Port Partner Cable Plug A is used by a to reset its USB data connection and to exit all s both with its - D aantda iRne tsheet Ma(sy). Port Partner Data_ResetMessage Data RTehseet process be initiated by either sending a. A - Shal li mNoptacts USB PowPeorr tDPeoliwveerry R ionl etheS fooullrocweinSgin wkays:PortData Role DFP UFP - Shall Not change the Explicit sC (ontract/ ) or s ( / ). - Shall changAec ttihvee eMxoisdteing. - Shall cause all s to be exiteVdC.ONN - D rFePsSeth tahlel cable by PowVCeOrN cNy cSloinugr ce. - The Da ta Res ebtecome the P.ortShall ErrorRecovery [USB Type-C 2.4] If the process fails, then the enter the State as defined in Section 6.3.14, \"D. ata_Reset Message\" Data Reset See for details of operation. Hard Reset Section 5.6.4, \"Hard Reset\" Shall Section 7.3.3.1, \"Source Initiated Hard Reset\" Sections 7a.r3e.3 s.2ig, n\"Sailnedk Ibnyi taiant oedrd Hearerdd Rseets eats\" defined in. Both the sender and recipient Proto ccoalu Lsaey tehreiSr hpaolwler supplies to retuSronf tto R tehseetir default states (sAeteta ched and Hard Res efotr details of voltangHe atrradnRseitsieotnCso)u. Innt addition, their reSsepcteicotniv 6e.6.6, \"NoResponseTism er\" be Sreecsteito ans 6 f.o7r.3 t,h \"eH ard Reset. CTohuins taelrlo\"ws the devices to be in a state where they can re-establish USB PD communication. is retried up to times (see also Note: andV BUS vSafe0V Hard). Reset Sink Even though drops to during a a will not see this as a disconnect since this Hard Resise teSxhpeacllt eNdo btehavior. R R A Data c Rauoslee Sawnya pchangHea trod eRiethseetr Sthhea llp/ d resistPoor rbte Dinagt aa sRsoerleted. DFP Port R UFP Port R If there has been a the cause the to be changed back to for a wVitChO tNhNe p resistor assert[eUdS aBn Tdy pe-C f o2r. 4a] wHiatrhd t Rhees edt Srehsaislltor assertePdo. rt R VCONN Port R VCONN When is supported (see ) the cause the with the p resistor asserted to supply Har da nRde stehte with the d resistor asserted to turn off. CC VCONN Cable Plug SOP’ SOP’’ In effect the wVi Cl Ol Nre Nvert th[Ue SPBo rTtysp teo- tCh 2ei.4r ]default state based on their line resistors. Removing and reapplying from the s also ensures that they re-establish their configuration as either or based on the location of (see ).", "tables": [], "figures": [], "page_range": [270, 270]}
{"section_path": "6.8.3 Hard Reset", "start_heading": "6.8.3 Hard Reset", "content": "- Policy Engine Explicit ContractNegotiation - : RSehsaeltl sNtaotte dependent behavior by performing an. Note: Power suppSlPyR: Mode Schouanrcgee. Source_CapabilitiesMessage EPR Mode Source EPR_Source_CapabilitiesMessage When in the sends a and when in the Soft Resestends an AMS T able8.8,.\"AMS: Soft Reset\" Message Shall Soft_Reset AcceptMessage A is performed using an (see ). numbers be set to zero Soft_ResetMessageShall MessageIDCounter RetryCounter MessageShall prior to sending the / since the issue might be with the counters. The sender of a MessageIDCounter RetryCounter AcceptMessage Soft reset its and, the receiver of the reset Reset Hard Reset SOP Packet Cable Reset DFP its and before sending the response. Any failure in the SOP* Packet GoodCRCMessage Soft Reset Section process will trigger a when s are being used or, sent by the only, for 6.8.3, \"Hard Reset\" Section 6.8.4, \"Cable Reset\" any other s; for example a is not received during the process (see and ). Data_ResetMessage Port Alternate Mode Port Partner Cable Plug A is used by a to reset its USB data connection and to exit all s both with its - D aantda iRne tsheet Ma(sy). Port Partner Data_ResetMessage Data RTehseet process be initiated by either sending a. A - Shal li mNoptacts USB PowPeorr tDPeoliwveerry R ionl etheS fooullrocweinSgin wkays:PortData Role DFP UFP - Shall Not change the Explicit sC (ontract/ ) or s ( / ). - Shall changAec ttihvee eMxoisdteing. - Shall cause all s to be exiteVdC.ONN - D rFePsSeth tahlel cable by PowVCeOrN cNy cSloinugr ce. - The Da ta Res ebtecome the P.ortShall ErrorRecovery [USB Type-C 2.4] If the process fails, then the enter the State as defined in Section 6.3.14, \"D. ata_Reset Message\" Data Reset See for details of operation. Hard Reset Section 5.6.4, \"Hard Reset\" Shall Section 7.3.3.1, \"Source Initiated Hard Reset\" Sections 7a.r3e.3 s.2ig, n\"Sailnedk Ibnyi taiant oedrd Hearerdd Rseets eats\" defined in. Both the sender and recipient Proto ccoalu Lsaey tehreiSr hpaolwler supplies to retuSronf tto R tehseetir default states (sAeteta ched and Hard Res efotr details of voltangHe atrradnRseitsieotnCso)u. Innt addition, their reSsepcteicotniv 6e.6.6, \"NoResponseTism er\" be Sreecsteito ans 6 f.o7r.3 t,h \"eH ard Reset. CTohuins taelrlo\"ws the devices to be in a state where they can re-establish USB PD communication. is retried up to times (see also Note: andV BUS vSafe0V Hard). Reset Sink Even though drops to during a a will not see this as a disconnect since this Hard Resise teSxhpeacllt eNdo btehavior. R R A Data c Rauoslee Sawnya pchangHea trod eRiethseetr Sthhea llp/ d resistPoor rbte Dinagt aa sRsoerleted. DFP Port R UFP Port R If there has been a the cause the to be changed back to for a wVitChO tNhNe p resistor assert[eUdS aBn Tdy pe-C f o2r. 4a] wHiatrhd t Rhees edt Srehsaislltor assertePdo. rt R VCONN Port R VCONN When is supported (see ) the cause the with the p resistor asserted to supply Har da nRde stehte with the d resistor asserted to turn off. CC VCONN Cable Plug SOP’ SOP’’ In effect the wVi Cl Ol Nre Nvert th[Ue SPBo rTtysp teo- tCh 2ei.4r ]default state based on their line resistors. Removing and reapplying from the s also ensures that they re-establish their configuration as either or based on the location of (see ).", "tables": [], "figures": [], "page_range": [270, 270]}
{"section_path": "6.8.4 Cable Reset", "start_heading": "6.8.4 Cable Reset", "content": "Hard Reset PortShall USB Type-CErrorRecovery [USB Type-C 2.4] If the is insufficient to clear the error condition, then the use as deSfiinnkedS hina ll.Hard ResetSignaling R Section 5.7, \"Collision Avoidance\" A be able to send regardless of the value of p (see Cable Plug Shall Not Hard ResetSignaling Shall Hard ResetSignaling Port Partner Shall Section 8.3.3.25.2.2, \"Cable Plug Hard Reset State Diagram\" Cable Plugs Shall generate but monitor for between the Port Parst annerd reset when this is detected (see ). The s perform the equivalent of a power cycle returning to their initial power up state. This allows the Hard ResetShall EPR Mode Active Mode Port Partner Cable Plug Section 6.4.4.3.4, \"Enter Mode Command\" A cause and all s to be exited by both s and any s (see Cable Reset Section 5.6.5, \"Cable Reset\" Cable ResetSignalingShall Protocol Layer Cable Plug Shall s are signaled by an ordered set as defined in Port Partn. eBroth the sender and recipient of reset their respective s. The s perform the equivalent of a power cycle returning to their initial power up state. This allows the s to be in a state where they can rDeF-ePstablish USB PD comVmCOuNnNication. Cable Reset VCONN DFPShall VCONN Cable ResetSignaling VCONN Swap UFP VCONN TheD FPS mhuasllt be supplyiVn Cg O NN Sw apprior to a. If VCO Nh Nas been turned off theC able Rese ttuSrignn oanli ng prior to generating. If there has been a and the is currently supplying, the D FPSh aplelrform a Cable Res estuScihg nthaalitn igt is sDuFpPplSyhinagll prior to Cgeanbelera Rtiensge tSignaling. Explicit Contract Only a generate. A only generate within an Cable ResetSha.ll Active Mode Cable Plug Section 6.4.4.3.4, \"Enter Mode Command\" A cause all s in the s to be exited (see ).", "tables": [], "figures": [], "page_range": [271, 271]}
{"section_path": "6.9 Accept, Reject and Wait", "start_heading": "6.9 Accept, Reject and Wait", "content": "Request EPR_Request PR_Swap DR_Swap VCONN_Swap Enter_USBMessageShall The recipient of a,,,,, or respond by s- ending Aonccee opft tMhee sfsoallgoewing responses:Valid Section 6.3.3, \"Accept Message\" An in response to a request which can be serviced immediately (see - WaitMessage ). Valid Section 6.3.12, \"Wait Message\" A in response to a request which cannot be serviced immediately but could be ser - vicReedje actt aM laetsesar gtieme (see Invalid ). Capabilities Section 6.3.4, \"Reject Message\" A in response to an request or a request which is outside of the device's design (see ).", "tables": [], "figures": [], "page_range": [272, 272]}
{"section_path": "6.10 Collision Avoidance", "start_heading": "6.10 Collision Avoidance", "content": "Message Messaging Sink Source R SinkTxOK Sink AMS Source AMS R SinkTxNG To avoid Sink collisionsR due to asynScinhkroTnxoOuKs May sent frAoMmS the, theS ink sets p toR to iSnindikcTaxteN tGo thSeh all N tohtat it is OK toA iMniStiate aSnh all. When theM essage wishes to initiate anA MS, it sSeotsu rcp e to. When the detects that p is set to it initiate an. When the detects that p is set to Note: it initiate an S aOnPd* AMS only send Port s tPhoartt are pParotr tof anC able tPhlue g has initiated. This restrictiPoEn_ SaRppCl_iRees atod y 's i.e., for both to and to PE_ ScoRmC_mReuandicyations. tSrcHoldsBus Protocol Error Soft Reset If a transitiAoMnS into the Message sAtMatSeM wailyl result in an immediate transition oRut of the state within e.g. it is due to a that has not resulted in a, then the notifications of Nthoet een:d of Sin aknd first Ha irnd a Rne set Signa lNinogt be sent to avoid changing the p value unnecessarily. A can still send at any time.", "tables": [], "figures": [], "page_range": [273, 273]}
{"section_path": "6.11 Message Discarding", "start_heading": "6.11 Message Discarding", "content": "Message SOP Protocol LayerShallDiscard SOP*Message Message SOP’ SOP’’Shall Not SOP*Message Discarded On receiving a received on, the any pending s. A received on / Mess age caSuOsPe’ aSnOyP p’’ending s to be A. MS Cable Plug SOP*Message Discarded AItM isS assumed thatP ort Partnse ursing / constitute a simpleC raebqlue ePsltu/gresponse, with theM essage proSvOidPing the response so tMheersesa igs eno reason forS aO pPe*nding Disca rded to be. There can only be one between the s, and these also take priority over communications so a received Tona ble6.w74il,l \" aMlwesasyasg cea Duissec aar ding\" pending on Me stsoa bgee Shall. Shall Not Discarded for detTaialsb olef t6h.7e 4 Messasg teh Dati scard/i ng be. Message pending transmission Message received Message to be Discarded SOP SOP Message SOP SOP’ SOP’’ Outgoing Message SOP’ S/OP Incoming Message SOP’ SOP’ Outgoing Message SOP’ SOP’’ Incoming Message SOP’’ SOP Incoming Message SOP’’ SOP’ Outgoing Message SOP’’ SOP’’ Incoming Message Incoming", "tables": [], "figures": [], "page_range": [274, 274]}
{"section_path": "6.12 State behavior", "start_heading": "6.12 State behavior", "content": "Section 6.12, \"State behavior\" Normative Shall Protocol Layer The state diagrams defined in are and define the operation of the PNoowtee:r Delivery. Figure 6.57T,h \"eOsuet slitnaet eo fd Siatagtreasm\"s are not intended to replace a well written and robust design. shows an outline of the states defined in the following sections. At the top there is the name of the state. This is followed by \"Actions on entry\" a list of actions carried out on entering the state and in some states \"Actions on exit\" a list of acFtiiognusr ec a6r.r5ie7d O ouuttl ionne e oxfi tSintagt tehse state. <Name of State> Actions on entry: “List of actions to carry out on entering the state” Actions on exit: “List of actions to carry out on exiting the state” Transitions from one state to another are indicated by arrows with the conditions listed on the arrow. Where there are multiple conditions, these are connected using either a logical OR \"|\" or a logical AND \"&.\" The inverse of a condition is shown with a \"NOT\" in front of the condition. In some cases, there are transitions which can occur from any state to a particular state. These are indicated by an arrow which is unconnected to a state at one end, but with the other end (the point)F cigounrnee 6c.t5e7d, t\"oO uthtlein fein oafl Ssttaattees.\" In some state diagrams it is necessary to enter or exit from states in other diagrams. indicates how such references are made. The reference is indicated with a hatched box. The box contains the name of the referenced state. Figure 6.58 References to states <Name of reference state> (<DFP | UFP>) Timers are included in many of the states. Timers are initialized (set to their starting condition) and run (timer is counting) in the state it is referenced. As soon as the state is exited then the timer is no longer active. Timeouts of the timers are listed as conditions on state transitions. Conditions listed on state transitions will come from one of three sources:", "tables": [], "figures": ["Figure 6.57T"], "page_range": [275, 275]}
{"section_path": "6.12.1 Introduction to state diagrams used in Chapter 6", "start_heading": "6.12.1 Introduction to state diagrams used in Chapter 6", "content": "Section 6.12, \"State behavior\" Normative Shall Protocol Layer The state diagrams defined in are and define the operation of the PNoowtee:r Delivery. Figure 6.57T,h \"eOsuet slitnaet eo fd Siatagtreasm\"s are not intended to replace a well written and robust design. shows an outline of the states defined in the following sections. At the top there is the name of the state. This is followed by \"Actions on entry\" a list of actions carried out on entering the state and in some states \"Actions on exit\" a list of acFtiiognusr ec a6r.r5ie7d O ouuttl ionne e oxfi tSintagt tehse state. <Name of State> Actions on entry: “List of actions to carry out on entering the state” Actions on exit: “List of actions to carry out on exiting the state” Transitions from one state to another are indicated by arrows with the conditions listed on the arrow. Where there are multiple conditions, these are connected using either a logical OR \"|\" or a logical AND \"&.\" The inverse of a condition is shown with a \"NOT\" in front of the condition. In some cases, there are transitions which can occur from any state to a particular state. These are indicated by an arrow which is unconnected to a state at one end, but with the other end (the point)F cigounrnee 6c.t5e7d, t\"oO uthtlein fein oafl Ssttaattees.\" In some state diagrams it is necessary to enter or exit from states in other diagrams. indicates how such references are made. The reference is indicated with a hatched box. The box contains the name of the referenced state. Figure 6.58 References to states <Name of reference state> (<DFP | UFP>) Timers are included in many of the states. Timers are initialized (set to their starting condition) and run (timer is counting) in the state it is referenced. As soon as the state is exited then the timer is no longer active. Timeouts of the timers are listed as conditions on state transitions. Conditions listed on state transitions will come from one of three sources:", "tables": [], "figures": ["Figure 6.57T"], "page_range": [275, 275]}
{"section_path": "6.12.2 State Operation", "start_heading": "6.12.2 State Operation", "content": "- Message PHY Layer - s received from the Protocol La.yer - EMveesnsatsg etriggered within the e.g., timPeorli ctiym Eenoguintse Protocol Layer Message Message and related indications passed up to the from the ( sent; Protocol Layer SOP* Packet The followSOinPg’ Cseocmtimonu ndiectaatiilosn State Operation Swhhaelnl sending andP rreocteoicvoiln Lga yer s. Protocol Layer Hard Reset For eacChh unking beingS sheanltl and receivedC hthuenrkee d Cbheu snekpeadrate Chunked Transmission and Reception and State Machine instances, with their own counter and timer instances. When is supported there be separate Tx, Tx, and Message Router State MSoaftc hRiensee tinSshtaalnlces. SOP* Packet Soft_ResetMessage Hard Reset Cable Reset Shall Protoco l Lay eornly apply to the State Machine instanceDsF iPt isU tFaPrgetedC aatb blea Pseludg on the type of used to send the. The State Machine (including ) apply simultaneously to 6all. 12.2.1 Sta tPe Mroacthoinceo inl sLtaanyceesr a cCtihveu inn tkhei ng, and (if present). Chunking Protocol Layer Policy Engine Figure 6.59, \"Chunking architecture Showing Message and Control Flow\" The component resides in the between the and Protocol Tx/Rx. Chunking Layer illustrates the relationship between components. The- Chunked comprises three related state machines: - Chunked Rx. - Chunked Tx. Note: Message Router. Policy Engine UnchunkedMessage Message The consequence of this architecture is that the deals entirely in s. It will noCt arebclee iPvleu (gand might not respond to) a M eusnstaigl eall the related chunks haveC bheuennk collated. Extended Message May Chunking Layer Shall ICfh au PnDk idnegvNicoet Sour pportedTim hears no requirement to handle any requiring more than Cohnuen king of aSneyc tion 6.6.18.1, \"Chunking, Nit otSup opmoritte tdhTei mer\" Section. I 8n. 3th.3is.6 c, a\"Nseo itt S uppo ritmedp lMemesesnatg eth Set ate Diagrams\" to ensure compatible operation with partners which support (see and ). Figure 6.59 Chunking architecture Showing Message and Control Flow Policy Engine Protocol Layer AMS Notification Chunked Rx Chunked Tx Chunked Message Router Chunking Protocol Layer Rx Hard Reset Protocol Layer Tx Rp Control or PHY Layer Detection ChunkedMessage Message Optional Long s bring with them the potential problem that they could prevent urgent s from being transmitted in a timely manner. An AboMrta myechanism is provided to remPoeldicyy tEhnisg ipnreoblem. The Abort Flag referred to in the diagrams below be set and examined by the. The specific means 6ar.e1 l2ef.t2 t.o1 t.1he.2 implementer. Aborting Sending a Long-Chunked Message ChunkedMessage May Optional MessageShall Chunked A long- being sent be aborted by setting the Abort Flag. The be 6co.n1s2id.2er.1ed.1 a.b3orted when t h Ae bAboorrtti Fnlgag R ise acgeaiivni cnlega rae dL obyn tgh-eC hunke dT xM steastes amgaechine. Optional Message ChunkedMessage Policy Engine Message If the Discarded Abort mMeecshsaangiesm has been implPeomliceyn tEendg, ianney sent while a receive is in progress wChilul rnekseudltM ines asnag eerror report being received by the, to inCdhicuantkee tdhat the request has been M. Iefs tshaeg e was urgent the might set the Abort Flag, which will result in the incoming being aborted. The Abort Flag being cleared by the Rx state machine indicates t6h.a1t 2th.e2 u.1rg.e2nt cCahn unonwk beed s eRntx. State Diagram Figure 6.60, \"Chunked Rx State Diagram\" Chunked Chunked Message Mess ashgeows the stateC bheuhnakviniogr for the Rx State Machine. This recognizes whether received s are involved and deals with requesting chunks when they are. It also performs validity checks on all s related to. Figure 6.60 Chunked Rx State Diagram Soft Reset occured | Exit from Hard Reset Start Any Message Received and RCH_Wait_For_Message_From_Protocol_Layer RCH_Report_Error orn Rot C in H _s Wtat ae i tR _FC oH r__ MW ea sit sin ag g_ eC _Fhu ron mk _ Reported Actions on entry: Protocol_Layer Message Passed A C Cl lc e et a aio r rn E As x b o t oen rn te d Fn e lt adr g y R: x Buffer C Ch hu un nk ke ind g ! 1= R I tf he a ep M Po or et ls iE s ca yrr g Eo e nr w g t io a n sP e ro.el cic ey iv E en dg, i pn ae s. s it to Received Non-Extended Message | (Received Extended Message & Other Message Received (Chunking1 = 0 & Chunked = 0) ) from Protocol Layer | ChunkSenderResponseTimer timeout RCH_Pass_Up_Message Abort Flag Set Unexpected frT or man Psm roi ts os ci oo ln L E ar yr eo rr | A Pact si so Mns e o ssn a e gn e t tr oy P: olicy Engine Ex (te Cn hdR ue ne d kc ie M ni gv e 1e s d =sa 1g e & & Chunk Number fM roe ms s Pa rg oe to R coe lc Le aiv ye ed r Chunked = 1) Message is Complete (Num bytes received >= specified Data Size)2 RCH_Processing_ RCH_Requesting_Chunk RCH_Waiting_Chunk Extended_Message Actions on entry: Message Actions on entry: Actions on entry: Send notification SRT_Stop to Transmitted Start ChunkSenderResponseTimer3 If first chunk: set SenderResponseTimer State received from C Nh uu mn k by_N teu sm reb ce er i_ vE ex dp e =c 0ted = 0 and Message Machine. Protocol Layer S Se en nd d en ro Rt eif si pca ot nio sen T S iR mT e_ rS Sta tart t et o not Send Chunk Request to Protocol Machine.3 If expected Chunk Number: Append Complete Layer with Chunk Number = data to Extended_Message_Buffer; Chunk_Number_Expected. Increment Chunk_Number_Expected and adjust Num bytes received. Chunk Response Received from Protocol Layer 1) Chunking is an internal state that is set to 1 if the ‘Unchunked Extended Messages Supported’ bit in either Source Capabilities or Request is 0. It defaults to 1 and is set after the first exchange of Source Capabilities and Request. It is also set to 1 for SOP’ or SOP’’ communication. 2) Additional bytes received over specified Data Size will be because of padding in the last chunk. 3) This state is responsible for starting two timers of similar length. The implementor Should mitigate against more than one of these timers resulting in recovery action. Chunked Shall RCH_Wait_For_Message_From_Protocol_Layer The- Rx State Machine enter the state: - At startup. Soft Reset - As a result of a Hard Reset occurring. On exit fRrCoHm_ Wa ait_For_Me. ssage_From_Protocol_Layer Chunked Optional On entry to the state the Rx state machine clears the ExtendReCdH R_xW Bauitff_eFro ra_nMd ecslesaargse t_hFer om_Proto cAoblo_Lrat yFelarg. Chunked Chunked Message In the state the Rx state machine waits until the MessCahguen Rkoeduter passes up a recSehivaelld. RCH_Pass_Up_Message The- REx xStteantdee Md aMcehsisnaeg e transition to the Chunked state when: - A noEnxt-ended Message is passed up from tChheu nked Message Router. Policy Engine Chunking Message Chunked An is passed up from the Message Router, and the has Chudnekteedrmined that we areS nhoatl ldoing, anRdC Hth_eP rocessin gh_aEsx ittesn ded_Mes sbaitg seet to 0b. The- Ex Rtexn Sdteadte M Mesascahgiene transition to thCeh unked Policy sEtnagtien ewhen: Chunking Message Chunked An is passed up from the Message Router, and the has 6.12.2.d1e.t2er.2mined that we RarCeH do_Pinags s_Up_M, eansds athgee State has its bit set to 1b. RCH_Pass_Up_Message Chunked Shall Message Policy Engine On entry to the state the Rx state machine pass the received to the Chunked. Shall RCH_Wait_For_Message_From_Protocol_Layer The- M Rexs sSatgaete Machine transition to the state when: The has been passed. RCH_Processing_Extended_Message Chunked Shall On e- ntry to the state the Rx state machine : If this is the first chunk:  Set Chunk_Number_Expected = 0. - Set Num bytes received = 0.Chunk Number If chunk contains the expected :  Append its data to the Extended_Message_Buffer.  Increment Chunk_Number_Expected. ChunkeAddjust Num bytes reScheaivlled. RCH_Pass_Up_Message The- M Rexs sSatgaete Machine transition to the Data S iszteate when: Note: The is complete (i.e., Num bytes received >= specified. Extended Message The inequality allows for padding bytes in the last chunk, which are not actually part of the Chunked ). Shall RCH_Requesting_Chunk The- M Rexs sSatgaete Machine transition to the state when: ChuTnhkeed is not yet cSohmalpllete. RCH_Report_Error The- Rx State MCahcuhinnke Numb terransition to the state when: ChuAnkne udnexpected Shall is received. RCH_Wait_For_Message_From_Protocol_Layer The- O Rpxt iSotnaatel Machine transition to the state when: 6.12.2.T1h.e2.4 Abor t RFlCaHg i_sR seetq. uesting_Chunk State RCH_Requesting_Chunk Chunked Shall On e- ntry to the Se nstdaetreR tehsep onseTim Rexr state machine S:ection 8.3.3.1.1, \"SenderResponseTimer State Diagram\" Send notification SRT_Stop to state machine (see - Chunk Protocol Layer). Chunk Number ChuSneknedd Request to Shall with RCH_Waiting _=C Chhuunnkk_Number_Expected. The- Messa Rgxe State Machine transition to tPhreo tocol Layer state when: Chunked Transmitted isS rheaclelived from the RCH_Repor.t_Error The- Rx State Machine transition toP trhoeto col Layer state when: - TrManessmsaigsesion Error is received Pfrroomto ctohle L ayer, or 6.12.2.A1.2.5 is receiv e Rd CfrHom_W thaei ting_Chunk. State RCH_Waiting_Chunk Chunked Shall On e- ntry to the ChunkSenderRespo sntsaetTe itmhee r Rx state machine : - Start the SenderRe.sponseTimer Section 8.3.3.1.1, \"SenderResponseTimer State Diagram\" Send notification SRT_Start to state machine (see S Chunked Shall ). RCH_Processing_Extended_Message The- Chu Rnxk State Machine tPrraontsoictiooln L atoy etrhe state when: A is received from the. Chunked Shall RCH_Report_Error The- Me sRsaxg Setate Machine Chun tkransition to the Protocol Laye rstate when: - A Chunk, Soethnedre rthRaens pao nseTi,m ise rreceived from the, or 6.12.2.T1h.e2.6 RCH_Report e_xEprirreosr. State Chunked Shall RCH_Report_Error The- Rx StaMtee sMsaagcehine enter the Chunked state: RCH_Waiting_Chunk RCH_Wait_For_Message_From_Protocol_Layer When any is received and the Rx State Machine is not in one of the states RCH_Report_E orrr or Chunked Shall. On e- ntry to the Poli csyta Eten gthinee Rx state machine : - Report the error to the Me.ssage MessageShall Policy Engine If the state was entered because a was received, this be passed to the Chunked. Shall RCH_Wait_For_Message_From_Protocol_Layer The- Rx State Machine transition to the state when: - The eMrersosra hgaes been reported. Policy Engine Any received was passed to the. Figure 6.61, \"Chunked Tx State Diagram\" Chunked Chunked Message shows the state behavior for the Messa Tgxe State MachiCnheu. nTkhiinsg recognizes whether transmitted s are involved and deals with sending chunks and waiting for chunk requests when they are. It alsFoi pgeurrfeo r6m.6s1 v Calhiduintyk echde Tckxs S otant ael lD riealgatreadm s related to. Soft Reset occured | Exit from Hard Reset Start TCH_ Wait_ For_Message_Request_From_Policy_Engine Actions on entry: Clear Abort Flag Informed Non-Exten Nde od t CM he us ns ka ing ge Request | (Rx Chunking Abort Flag SetExtendedC h Mu en sk sin ag g e& Request M toe s Cs ha ug ne k p ea ds Rse xd State != (Rx Chunking A PacT t si soC MnH s e_ o sP sna a e gs n es t_ trD oy P:o rw otn o_ cM ole Ls as ya erge P AMR r boC e otsH o rs tc_ a o W Sg l_e ua L_ pit aF p_ yr oF o e ro m r te)r _ _ d& Reported AcT tiC oCH nsh_ oP u nr n ee nkp te ra yd :r _e M_T eo ss_S ae gn e d _ AP bMR oroC e rttsH o NsS c_ a oot W ga tl _et Sae L_i ut aF! _= pyrF p o eo om r)r r _ t_ & ed A CT lc et aC io rH n Es x_ o tM en n e e dns ets dr a y M:g ee ss_ aR gee Bc ue fi fv ere sd 'Chunk Number To Send' = 0 Pass Message to Chunked Rx Message Passed TranT sC mH i_ sW ioa ni _t C_F oo mr p_ lete PT rx o tE or cr oo lr Lfr ao ym er TCH_Report_Error Chunk Number Set Actions on entry: A Rc et pi oo rn ts E o rn r oe rn tt ory P: olicy Engine Any Message Received and not in state TCH_Wait_Chunk_Request TCH_Construct_ Chunked_Message Message Transmitted Actions on entry: Other received from Construct Message Chunk and pass Message Protocol Layer (Chunk Request Rcvd & to Protocol Layer Received Chunk Number != Chunk Number to Send) | (ChunkSenderRequestTimer TCH_Message_Sent timeout & Chunk Number > 0) Transmission Chunk A Inc ft oio rmns Po on l ie cn yt Ery n: gine of Message Error Passed Sent Chunk Request Rcvd & TCH_Sending_ Chunk Number = Chunked_Message Chunk Number to Send Message Transmitted Actions on entry: received from Protocol Layer & Last Chunk ChunkSenderRequestTimer timeout & Chunk Number = 0 Message Transmitted from Protocol Layer & Not Last Chunk TCH_Wait_Chunk_Request Actions on entry: Increment Chunk Number to Send Start ChunkSenderRequestTimer Chunked Shall TCH_Wait_For_Message_Request_From_Policy_Engine The- Tx State Machine enter the state: - At startup. Soft Reset - As a result of a Hard Reset occurring. On exit TfrCoHm_ Wa ait_For_Me. ssage_Request_From_Policy_Engine Chunked Optional On entry to the state the Tx state machine clears the TCH_W Aabito_rFto Frl_aMge.ssage_Request_From_Policy_Engine Chunked Policy Engine Message In the state the Tx State Machine waits until the Chunked sends it a S hRaelqluest. TCH_Pass_Down_Message The- TEx xStteantdee Md aMchesinsaeg e transition to the Policy Engine state when: - A nMoens-sage Request is recePivoelidc yfr Eonmg itnhee, or Chunking A Request is received from the and the link is not. Chunked Shall TCH_Prepare_To_Send_Chunked_Message The- Ex Ttexn Sdteadte M Mesascahginee transition to the Policy Engine Chunking state when: ChuAnkne d RSehquaellsDt iiss craercdeived Mfreosmsa tghee, and the link is. TCH_Wait_For_Message_Request_From_Policy_Engine The Tx State Machine the Request and remain in the - Chunked RCH_Wa sitt_aFtoe rw_Mheenss: age_From_Protocol_Layer Optional The Rx state is any other than, and the Chunked Abort Flag haSs hnaoltl bDeiescna irmdplemMenetsesadg.e TCH_Report_Error The- C Thxu nSktaetde Machine thRe CH_Wait _RFeoqru_Mesets asnadg ee_nFtreorm th_eP rotocol_Layer state when: Optional The Rx state is any other than and the TCH_Pass_Down_Message Chunked Shall Message Protocol Layer On entry to the state the Tx State Machine pass the to the Chunked. Shall TCH_Wait_For_Transmision_Complete The- M Texs sSatgatee Machine transitioPnro ttoo cthoel Layer state when: 6.12.2.T1h.e3.3 has be eTnC pHas_sWeda tiot _thFeo r_Transmis.ion_Complete State Chunked Shall TCH_Message_Sent The- Messa Tgxe State Machine transition to the Protocol Layer state when: Chunked Transmitted hSahs ablelen received from TthCeH _Report_Error. The- Tx State Machine transition to the Protocol Layer state when: 6.12.2.T1ra.3n.s4mission Erro r ThaCsH b_eMene rsesceaigveed_ Sfreonmt tShtea te. TCH_Message_Sent Chunked Shall On e- ntry to the Policy Engine state tMhees sage Tx State Machine : ChunInkfeodrm the Sh athllat the haTs CbHee_Wn saeint_tF.or_Message_Request_From_Policy_Engine The Tx State Machine transition to the state whe- n: Policy Engine 6.12.2.T1h.e3.5 h aTs CbHee_nP inrefoprmareed._To_Send_Chunked_Message State TCH_Prepare_To_Send_Chunked_Message Chunked Shall On e- ntry to the state the Tx State Machine : ChuSnekte 'dChunk Number To SShenadll' to zero. TCH_Construct_Chunked_Message The- Tx State Machine transition to the state when: 6.12.2.‘C1h.3un.6k Number To STeCndH' _hCaso bnesetnr suect tt_oC zheruon. ked_Message State TCH_Construct_Chunked_Message Chunked Shall On e- ntry to the MessageChunk stParteo ttohceo l Layer Tx State Machine : ChuCnoknedstruct a Shal alnd pass it to the TCH_Sending_.Chunked_Message The- M Texs sSatgateeC Mhuanchkine transition to thPer otocol Layer state when: ChunTkheed haSs hbaeleln passed to the TCH_Wait_Fo.r_Message_Request_From_Policy_Engine The Tx State Machine transition to the state when: - Optional 6.12.2.T1h.e3.7 Abor t TFlCaHg i_sS seent.ding_Chunked_Message State Chunked Shall TCH_Wait_Chunk_Request The- Messa Tgxe State Machine transitionP troo tthoeco l Layer state when: Chunked Transmitted isS rheaclelived from TCH_Me asnsda gthei_sS ewnats not the last chunk. The- Messa Tgxe State Machine transitionP troo tthoeco l Layer state when: Chunked Transmitted isS rheaclelived from TCH_Re panodrt t_hEirsr woras the last chunk. The- Tx State Machine transition to the Protocol Layer state when: 6.12.2.T1ra.3n.s8mission Erro r ThaCsH b_eWena rietc_eCivheud nfrkom_R tehqe uest State. TCH_Wait_Chunk_Request Chunked Shall On e- ntry to the state the Tx State Machine : - IncremCheunnt kCSheunndke NrRumeqbueers ttoT iSmenedr. ChuSntkaerdt Shall. TCH_Report_Error The- Chu Tnxk State Machine transition to theC hunk Number state when: - ACh unkSe RnedqeureRsetq huaess btTeeimn erreceived and the Chunk Numbe droes not equal Chunk Number to Send or Chunked Shall has expired and TCH_Message_S eisn gtreater than zero. The- Chun kTSxe Sntdateer RMeaqcuheinsetT imer transition to the Chunk Number state when: Note: has expired and Port Partner equCaalsb zlee rPolu. g Chunking Layer Policy Engine Message Port Partner Cable Plug TGhoiso idsC tRhCe Mmeescshaagneism which allows the remote Chunk or to omit the Port Partner. The Not_Suppo rwteildl rMeceesisvaeg ae Ca Sbelne tP sliuggnal if tIghen oreremote ChunkedMes soarg e is present ( received) but does not send a Request. After this the remote will Chunkseednd a Sh all, or the TCH_M weislls age_Re ctheeiv ed. The- Tx StaMtees Msaagcehine Chun tkransition to the state when: 6.12.2.A1n.y3 o.9ther t ThaCnH _Mes Rseaqguee_stR ies creecievievedd.State Chunked Shall TCH_Message_Received The- Tx StaMtee sMsaagcehine enter the Chunked state: TCH_Wait_Chunk_Request When any is received, and the Tx State Machine is not in the TCH_Message_Rece sivtaetde. Chunked Shall On e- ntry to the Extended Message state the Tx State Machine : - Clear the Message BCuhffuenrsk.ed ChunPkaessd the received Sha ltlo Rx EngTiCnHe._Wait_For_Message_Request_From_Policy_Engine The Tx State Machine transition to the state whe- n: Message Chunked 6.12.2.T1h.e3 r.1ec0eived TC hHas_ bReeepn oparsts_eEdr troo trh eS tate Rx Engine. TCH_Report_Error Chunked Shall On e- ntry to the Poli sctya Eten gthinee Tx State Machine : Report the error to the. Chunked Shall TCH_Wait_For_Message_Request_From_Policy_Engine The Tx State Machine transition to the state whe- n: 6.12.2T.h1e. 4error has b e eCnh ruepnokrteedd. Message Router State Diagram Figure 6.62, \"Chunked Message Router State Diagram\" Chunked Message Chunked Chunked Policy Engine shows the state behavior for the Message Router. This determines to which state machine an incoming is routed to ( Rx, Tx or direct to ). Figure 6.62 Chunked Message Router State Diagram Start Soft Reset occured | RTR_Wait_for_Message_From_Protocol_Layer Exit from Hard Reset Actions on entry: Sent Sent Message Received from Message Received from Protocol Layer & Protocol Layer & Not Doing Tx Chunks1 Doing Tx Chunks1 RTR_Rx_Chunks RTR_Tx_Chunks Actions on entry: Actions on entry: Send message to Rx Chunk Machine Send message to Tx Chunk Machine 1) Doing Tx Chunks means that Chunked Tx State Machine is not in the TCH_Wait_For_Message_Request_From_Policy_Engine state. 2) Messages are taken to include notification about transmission success or otherwise of Messages. RTR_Wait_for_Message_From_Protocol_Layer Chunked Protocol Layer Message In the state the Message Router waits until the C hsuennkdesd it a received Sha.ll RTR_Rx_Chunks The- Me sMsaegsesage Router tranPsriotitoonc otol L tahyee r stateC hwuhneknin: g Chunk ChuAnk ed is received Sfrhoamll the R,T aRn_dT txh_eC hcoumnkbsined is not doing Tx s. The- Me sMsaegsesage Router tranPsriotitoonc otol L tahyee r stateC hwuhneknin:g Chunk 6.12.2.A1.4.2 is receiv e Rd TfrRom_R thxe_ Chunks Stat,e and the combined is doing Tx s. RTR_Rx_Chunks Chunked Shall On e- ntry to the Message Csthautnek tehde Message Router : - Send the R toT Rth_We ait_for_M Rexs Ssatagtee_ MFraocmhi_nPer.otocol_Layer Transition to the state. RTR_Tx_Chunks Chunked Shall On e- ntry to the Message Csthautnek tehde Message Router : - Send the R toT Rth_We ait_for_M Texs Ssatagtee_ MFraocmhi_nPer.otocol_Layer Transition to the state. Figure 6.63, \"Common Protocol Layer Message Transmission State Diagram\" Source Sink Protocol Layer Message shows the state behavior, common between the Fig aunrde t6h.6e 3 Co,m fomr othne P rotocol Layer w Mheesns targaen sTmraitntisnmg ias sion Sta.t e Diagram Start Soft Reset Message from PHY Layer | Protocol Layer Exit from Hard Reset message reception in PRL_Rx_Store_MessageID state | Fast Role Swap signal transmitted | PRL_Tx_Discard_Message Fast Role Swap signal detected PRL_Tx_PHY_Layer_Reset Actions on entry: A Rc et si eo tn Ps H o Yn Le an yt ery r: D ci os mca pr ld ei tn eg I t inf r aa cn rn esy mm m eise nss tis o Ma ng e e D s si is s a c gc a eu r Ir d Dr 4e C an ont ul dy n a tew raiting PRL_Tx_Layer_Reset_for_Transmit PHY Layer reset complete Actions on entry: Reset MessageIDCounter. Protocol Layer message reception transitions to PRL_Rx_Wait_for_PHY_Message state. Soft Reset Message request received Layer Reset Complete PRL_Tx_Wait_for_Message_Request from Policy Engine PRL_Tx_Construct_Message Actions on entry: Actions on entry: Message request received Construct message Reset RetryCounter from Policy Engine (except Soft Reset) Pass message to PHY Layer P oo f l Tic ry a nE sn mgi in se si oin nf o Erm rroe rd (Re st mry aC lno l o Eu tn x Ct te ear n b d(cid:148) l e en d R P Mle ut egry s &C sao gu en 3t) & Me Pss Ha Yg e L as ye en rt to mPo eil n sic sfoy a r gE m en e g sdi en ne t A I I TP n n rcR c f at ori nL o re smn_ m mT s e P ix o n so_ n st lT i iMe ocr n nyea t s E En r sy n rs a r: gm g oie n ri I es D s oCi fo o un n_ tE errror Ex> t( enR C nRe a det b er lty al dr eC y r g MC Po elou euun sg snt e a|t)r g | e3 P A I RfR c e Dt tL i rFo y_ PnT C s o ox ro u_ n U nC tFh e ePne r t ic r nk y c:_ rR emet er ny t C ao ndu n cht ee cr k MessC agR eC T dR ii sme cc e ae o riv due et T d|i m bue sr Idle2 P A InR c it tL i io a_ nT lis zx eo_ nW a nea dni t rt r u_ yf n:o Cr R_P CRH eY ce_r ive es Tp imon ers 1e GoodCRC response MessageID mismatch received from PHY Layer PRL_Tx_Message_Sent PRL_Tx_Match_MessageID Actions on entry: MessageID match Actions on entry: Increment MessageIDCounter Match MessageIDCounter and Inform Policy Engine message sent response MessageID 1) The CRCReceiveTimer is only started after the PHY has sent the message. If the message is not sent due to a busy channel, then the CRCReceiveTimer will not be started (see Section 6.6.1 “CRCReceiveTimer”). 2) This indication is sent by the PHY Layer when a message has been Discarded due to CC being busy, and after CC becomes idle again (see Section 5.7 “Collision Avoidance”). The CRCReceiveTimer is not running in this case since no message has been sent. 3) A “small” Extended Message is either an Extended Message with Data Size (cid:950)(cid:3)MaxExtendedMsgLegacyLen bytes or an Extended Message with Data Size > MaxExtendedMsgLegacyLen bytes that has been Chunked. A “large” Extended Message is an Extended Message with Data Size > MaxExtendedMsgLegacyLen bytes that has not been Chunked. 4) See Section 6.11 “Message Discarding” for details of when Messages are Discarded. Protocol LayerShall PRL_Tx_PHY_Layer_Reset The- enter the state: - At startup. Soft Reset PHY Layer - As a result of a Hard Reset request being received by the. On exit PfrRoLm_T ax _PHY_Laye.r_Reset Protocol LayerShall PHY Layer Message On entry to the state the reset the (clear any outstanding Protso aconld L eanyaebrlSeh caolml munications). PRL_Tx_Wait_for_Message_Request The- P HY La tyrearnsition to the state when: 6.12.2.W2h.1en.2 the P rResLe_t Tisx c_oWmapliett_ef.or_Message_Request State PRL_Tx_Wait_for_Message_Request Protocol Layer Policy Engine Message In the state the waits until the directs it to send a -. PRL_Tx_Wait_for_Message_Request Protocol LayerShall RetryCounter On entry to the state the reset the. Protocol LayerShall PRL_Tx_Construct_Message The- Message transition to the Policy Engine stateS wofhte_Rn:esetMessage ProtAo col Layer rSehqaulelst is received fromP RthLe_T x_Layer_Res ewt_hfiocrh_ Tisr naonts ma it. The- Message transition to the Policy Engine Soft_R setsaetteM wehsesang:e 6.12.2.A2.1.3 request i sP rRecLe_ivTexd_ fLroamye trh_eR eset_for_T wrahnicshm is iat State. PRL_Tx_Layer_Reset_for_Transmit Protocol LayerShall MessageIDCounter Protocol LayerShall Protocol LayerMessage PRL_Rx_Wait_for_PHY_Message On enStercyt itoon t 6h.e1 2.2.3.1, \"PRL_Rx_Wait_for_PHY_Messa sgtea tset athtee\" reset theM essageID. The transition reception to the state (see Protocol LayerShall PRL_Tx_Construct_)M ine sosradgeer to reset the stored. The- transition to the state when: 6.12.2.T2h.e1 l.a4yer reset acti o PnRs iLn_ tThxis_ sCtaotne shtarvue cbte_eMn ceosmspalgeete dS.tate PRL_Tx_Construct_Message Protocol LayerShall Message Policy Engine Message Message PHY Layer On entry to the state the construct the requested by the Protocol L, oary erresSehnadl la previously constPrRuLct_eTdx _Wait_fo,r a_PnHd Yth_Rene sppaosns stehis to the. The- Messag e transition to the PHY Layer state when: 6.12.2.T2h.e1.5 has be ePnR sLen_tT txo_ tWhea it_for_P.HY_Response State PRL_Tx_Wait_for_PHY_Response Message Protocol LayerShall CRCReceiveTimer Section 6.6.1, \"CRCReceiveTimer\" On entry to the state, once the has been sent, the initiaPlrizoeto acnodl Lrauyne trhSeh all (sPeRe L_Tx_Match_MessageID ). The- GoodCRC Mess atrgaensition to the PHY Layer state when: ProtAo col LayerS hall response is rePcReLiv_eTdx _fCrohmec kth_Re etryCounte.r The- CRCRe ceiveT tirmanesrition to the state when: - The PHY Layer times out.Message Discarded Idle Section 5.7, \"Collision Avoidance\" Or the indicates that a has been due to the channel being busy but the 6.12.2.c2ha.1n.n6el is now (PseReL _Tx_Match_MessageID Sta).te PRL_Tx_Match_MessageID Protocol LayerShall MessageIDCounter MessageID GoodCRCMessage On entry to the state the compare the and the Protoco ol Lf athyee rreScheaivlled PRL._Tx_Message_Sent The- Messa geIDC toruanntseitrion to theM essageID staGteo wodhCeRn:CMessage ProtTohceo l LayerShall and the PRL_Tx_Ch oefc kth_Re ertercyeCivoeudn ter match. The- Messa geIDC toruanntseitrion to theM essageID Goo sdtCaRteC wMheesnsa:ge 6.12.2.T2h.e1.7 PRL a_nTdx t_hMe essage_Se onf tth Set raetceeived do not match. PRL_Tx_Message_Sent Protocol LayerShall MessageIDCounter Policy Engine Message On entry to the state the increment the and inform the Protocol Laye trhSaht athlle has beePnR sLe_nTtx._Wait_for_Message_Request The- Policy E ngine transition to the Message state when: The has been informed that the has been sent. PRL_Tx_Check_RetryCounter Protocol Layer DFP UFPShall RetryCounter Message On entry to the state the in a or increment the value of tNhoet e: Cable Plu agnd then check iMt iens soargdeer to determine whetherR iett irsy nCeocuensstearry to retry sending the. Protocol LayerSsh adlol not retry PsR aLn_dT xs_oC doon sntortu ucts_eM theses age. Message The transition to the state in order to retry sending whe- n: RetryCounter nRetryCount - Ca ≤b le Plug and - This is notE ax tended Mes saangde Data Size MaxExtendedMsgLegacyLen - This is an Extended Message with C h≤u nked or ProtTohciosl iLsa ayne rShall that hPaRs Lb_eTexn_ Transmi.ssion_Error The- RetryCoun ter n trRaentsriytCioonu tnot the state when: - Cable P> lug or - This is a Extended,M wehsiscahg edoes noDta rteat rSyiz.e MaxExtendedMsgLegacyLen Chunked 6.12.2.T2h.i1s.i9s an PRL_T xw_iTthr ansmiss >io n_Error State that has not been. PRL_Tx_Transmission_Error Protocol LayerShall MessageIDCounter Policy Engine On entry to the state the increment the and inforPmro tthoec ol LayerShall of the transmissioPnR Ler_Troxr_.Wait_for_Message_Request The- Policy E ngine transition to the state when: 6.12.2.T2h.e1.10 h aPs RbeLe_nT ixn_foDrmisecda orfd t_hMe terasnssamgies sSiotna teerror. Protocol LayerMessage Shall PRL_Tx_Discard_Message - Protoc ol LayerM treasnsasgmeission enter the Message state whenever: - Fast Role S wap Req ureescteption receives an incominSge ction 5.8.o5r.6, \"Fast Role Swap Transmission\" - The Fast Role Swap Request is being transmiStteecdti (osne 5e.8.6.3, \"Fast Role Swap Detection\" ) The PRL_Tx_Discard_Me isss adegteected (see Message ). Protocol LayerShallDiscard Message Section 6.11, \"Message Discarding\" MOne sesnatgrye ItDo Cthoue nter state, if there is a queued awaiting transmission, the the according to the rules in and increment the Protocol LayerS.hall PRL_Tx_PHY_Layer_Reset The- transition to tMhee ssage state when: Discarding is complete i.e., the queue is empty. Figure 6.64, \"Source Protocol Layer Message Transmission State Diagram\" Protocol Layer Source Message shows the state behavior for the in a wFhigeunr ter a6n.6sm4 iStotiunrgc ae Protoco.l Layer Message Transmission State Diagram PRL_Tx_Src_Sink_Tx Actions on entry: Set Rp = SinkTxOk Rp set End of AMS notification received from Policy Engine PRL_Tx_Wait_for_Message_Request Start of AMS notification received from Policy Engine PRL_Tx_Src_Source_Tx Actions on entry: Set Rp = SinkTxNG Message request from Policy Engine PRL_Tx_Src_Pending Actions on entry: Start SinkTxTimer Soft Reset Message pending & Message pending (except Soft Reset) & SinkTxTimer timeout SinkTxTimer timeout PRL_Tx_Layer_Reset_for_Transmit PRL_Tx_Construct_Message PRL_Tx_Src_Sink_Tx Source R SinkTxOK Sink Atomic Message Sequence AMS In the state the sets p to allowing the to start an Proto (col La).y er SourceShall PRL_Tx_Wait_for_Message_Request PRL_Tx_Src_Sink_Tx The in a transition from the state to the - state when: Policy Engine AMS A notificPaRtiLo_nT xis_ Srrecc_eSivinekd_ fTrxom the Protocol L atyheart Sthhea lelnd of an PhHasY bLeaeyne rreacRhed.SinkTxOK On ePnrtroyto tcoo tlh Lea yerShall state PthReL _Tx_Wait_for_M essa rgeeq_uReesqtu tehset to p to. The- R transition to the state when: 6.12.2.2p.h2a.s2 been set. PRL_Tx_Src_Source_Tx State PRL_Tx_Src_Source_Tx Source R SinkTxNG Source Atomic Message Sequence AMS In the state the sets p to allowing the to start an Proto (col La).y er SourceShall PRL_Tx_Wait_for_Message_Request PRL_Tx_Src_Source_Tx The in a transition from the state to the - state when: Policy Engine AMS A notificPaRtiLo_nT xis_ Srrecc_eSivoeudr cfreo_Tmx the Protoco lt hLaaty earnS hal lwill bRe staSritninkgT.xNG On ePnrtroyto tcoo tlh Lea yerShall staPteR tLh_eT x_Src_Pending set p to. The- Message transition to the Policy Engine state when: 6.12.2.A2.2.3 request i sP rRecLe_ivTexd_ fSrrocm_ Ptheen ding State. PRL_Tx_Src_Pending Protocol Layer Message In the PRL_Tx_Src_ sPteanted itnhge SinkT hxaTsi ma erShall buffered ready for transmission. On ePnrtroyto tcoo tlh Lea yerShall stateP tRhLe_ Tx_Construct _Mess baeg einitialized and run. The- Mes staragnesition to the Policy Engine So sftta_Rtee wsehteMne:ssage - The pSiennkdTinxgT imer request from the is not a and ProtTohceo l LayerShall times out. PRL_Tx_Layer_Reset_for_Transmit The- Mes staragnesition to the Policy Engine Soft_ResetM esstasateg ewhen: - The pSiennkdTinxgT imer request from the is a and The times out. Figure 6.65, \"Sink Protocol Layer Message Transmission State Diagram\" Protocol Layer Sink Message shows the state behavior for the in a whenF itgruanresm 6i.6tt5in Sgi na k Protoc.ol Layer Message Transmission State Diagram PRL_Tx_Wait_for_Message_Request First Message in AMS notification received from Policy Engine PRL_Tx_Snk_Start_of_AMS Actions on entry: Message Request from Policy Engine PRL_Tx_Snk_Pending Actions on entry: Message pending (except Soft Reset) & Soft Reset Message pending Rp = SinkTxOk PRL_Tx_Layer_Reset_for_Transmit PRL_Tx_Construct_Message PRL_Tx_Snk_Start_of_AMS Protocol Layer Message Sink AMS In thPer otocol Layer SinkShall state the PRL w_Taxi_tWs faoirt t_hfoer f_iMrsets sage_Re iqnu ae st initiated. PRL_Tx_Snk_Start_of_AMS The in a transition from the state to the - state when: Policy Engine Message Sink AMS A notification is received from the that the next the will send is the start of Protaonc ol La.yerShall PRL_Tx_Snk_Pending The- Message transition to the Policy Engine state when: A request is received from the. PRL_Tx_Snk_Pending Protocol Layer Message Sink AMS R SinkTxOK Message In the state the has the first in a initiated ready to send and is waPirtiontgo cfoolr Lapy teor tSrhaanlslition to P bReLf_oTrex _sCeonndsitnrgu tchte_M essage. The- Message transition to the Soft_ResetMessage state when: - AR iSsi PneknTdxiOnKg that is not a and Protopc iosl sLeaty teor Shall. PRL_Tx_Layer_Reset_for_Transmit The- Soft_Rese tMes straagnesition to the state when: A is pending. Figure 6.66, \"Protocol layer Message reception\" Protocol Layer Message shows the state behavior for the when receiving a. Figure 6.66 Protocol layer Message reception PRL_Rx_Layer_Reset_for_Receive Actions on entry: Reset MessageIDCounter and clear stored MessageID value Soft Reset request from Policy Engine | Protocol Layer message transmission transitions to Exit from Hard Reset PRL_Tx_PHY_Layer_Reset state. Start Soft Reset Message received Soft Reset complete from PHY Message received from PHY (except Soft Reset) PRL_Rx_Wait_for_PHY_message PRL_Rx_Send_GoodCRC Actions on entry: Message discarded bus Idle1 A Sec nti do n Gs o o on d Ce Rn Ctr my: essage to PHY Message passed to Mes s Ma eg se sID ag = e Is Dtored (GoodCRC sent | Message discarded bus Idle1) Policy Engine PRL_Rx_Store_MessageID PRL_Rx_Check_MessageID Actions on entry: MessageID <> stored Actions on entry: Protocol Layer message transmission transitions to PRL_Tx_Discard_Message state2. MessageID | If there is a stored value compare Store new MessageID no stored value MessageID with stored value. Pass message to Policy Engine3 1) This indication is sent by the PHY when a message has been Discarded due to CC being busy, and after CC becomes idle again (see Section 5.7 “Collision Avoidance”). Two alternate allowable transitions are shown. 2) In the case of a Ping message being received, in order to maintain robust communications in the presence of collisions, the outgoing message Should Not be Discarded. 3) See Section 6.11 “Message Discarding” for details of when Messages are discarded. Protocol LayerShall PRL_Rx_Wait_for_PHY_Message The- enter the state: - At startup. Soft Reset Policy Engine - As a result of a Hard Reset request from the. PROLn_ Rexxi_tW fraoimt_ fao r_PHY_Mes.s age Protocol Layer PHY Layer Message In the state the waits until the passes up a received Prot.ocol LayerShall PRL_Rx_Send_GoodCRC The- Message transition to theP HY Layer state when: ProtAo col Layer iSsh paalslsed up from the PRL_Rx_L.ayer_Reset_for_Receive The- Soft_Rese tMes straagnesition to the PHY Layer state when: A is received from the. PRL_Rx_Layer_Reset_for_Receive Protocol LayerShall MessageIDCounter MessageID Protocol LayerShall Protocol LayerMessage OPRn Le_nTtxr_yW toa tiht_ef or_Message_Request Se csttiaotne 6th.1e2.2.2.1.2, \"PRL_T x_Wa irte_fsoert_ tMhees sage_Request State\" and clear the stored. The transition transmission to the Protocol LayerShall stateP (RseLe_ Rx_Send_GoodCRC ). The- Soft Re set transition to the State when: 6.12.2T.h3e. 3 a c tPioRnLs i_nR txhi_sS setanted h_aGveo boedenC cRoCm pslteatetde. PRL_Rx_Send_GoodCRC Protocol LayerShall GoodCRCMessage PHY Layer On entry to the state the construct a and request the Protocol L atoy etrraSnhsamllit it. PRL_Rx_Check_MessageID The- GoodC RCMe tsrsaangseition to the PHY Layer state when: ThPeH Y Layer has beMenes psaagsseed to the Discarded. CC CC Idle Section 5.7, \"Collision Avoidance\" Protocol LayerShall When the indicates that a has been due to being busy but is now (see - PRL_Rx)_,C thhee ck_MessageID either: - Transition to the PRL_Rx_Wait_for_PHY_Mes sstaagtee or 6.12.2T.r3a.n4sition to th e P RL_Rx_Check_MessageI sDta tset.ate PRL_Rx_Check_MessageID Protocol LayerShall MessageID Message On entry to the state the compare the of the received Prot owciotlh L iatsy esrtoSrheadl lvalue if a value hasP RprLe_vRixo_uWslayi bt_efeonr_ sPtHorYe_dM. essage The- Messa geID transition to thMee ssage MessageI sDtate when: Message Shall Discarded The of the received equals the stored value since this is a retry Protwohcoicl hL ayerS hbea ll. PRL_Rx_Store_MessageID The- Messa geID transition to thMe essage state Mwehsesna:geID Message The of the received does not equal the stored value since this is a new - or Message MessageID 6.12.2T.h3i.s5 is the first r ePcReivLe_dR x_Stor aen_dM noe ssageID svtaalutee is currently stored. PRL_Rx_Store_MessageID Protocol LayerShall Protocol LayerMessage PRL_Tx_Discard_Message MessageID OMne sesnatgrye ItDo the Message state thMee ssage Polic ytr Eanngsiitnieon transmission to the state, replace the stored value of with the value of Protoco iln L athyee rreScheaivlled and paPsRsL t_hRex _Wait_fo urp_P tHo Yth_Me essage. The- Messag e transition to the Policy Engine state when: 6.12.2T.h4e hHasa breden R peassseedt u op ptoe trhea tion. Figure 6.57, \"Outline of States\" Protocol Layer Hard Reset Cable Reset Policy Engine Hard ResetSignaling Cable ResetSignaling PHY Layer Section 6.8.3, \"Hard Reset\" sSheocwtiso nth 6e. 8s.t4a,t \"eC baebhlea vRieosre fto\"r the when receiving a or request from the or or from the (see also and ). Figure 6.67 Hard/Cable Reset Hard Reset request received from Policy Engine2 | Cable Reset request received from Policy Engine4 | Hard Reset signalling received By PHY Layer | Cable Reset signalling received By PHY Layer3 PRL_HR_Reset_Layer Actions on entry: Reset MessageIDCounter. Protocol Layer message transmission transitions to PRL_Tx_Wait_For_Message_Request state. Protocol Layer message reception transitions to PRL_Rx_Wait_for_PHY_Message state. Protocol Layer reset complete & Protocol Layer reset complete & (Hard Reset was Initiated by Policy Engine |(Hard Reset was initiated by Port Partner | Cable Reset was Initiated by Policy Engine) Cable Reset received by Cable Plug) PRL_HR_Request_Hard_Reset PRL_HR_Indicate_Hard_Reset Actions on entry: Actions on entry: Request PHY to perform a Hard Reset or Inform the Policy Engine of the Hard Cable Reset Reset or Cable Reset PHY Hard Reset request sent | PHY Cable Reset request sent PRL_HR_Wait_For_PHY_Hard_Reset_Complete Actions on entry: Start HardResetCompleteTimer Wait for Hard Reset or Cable Reset complete indication from PHY Policy Engine informed Hard Reset complete from PHY | Cable Reset complete from PHY | HardResetCompleteTimer timeout1 PRL_HR_PHY_Hard_Reset_Requested Actions on entry: Inform Policy Engine Hard Reset or Cable Reset request has been sent Policy Engine informed PRL_HR_Wait_For_PE_Hard_Reset_Complete Actions on entry: Wait for Hard Reset or Cable Reset complete indication from Policy Engine. Hard Reset complete from Policy Engine | Cable Reset complete from Policy Engine PRL_HR_PE_Hard_Reset_Complete Actions on entry: Inform Physical Layer Hard Reset or Cable Reset is complete Physical Layer informed Exit from Hard Reset 1) If the HardResetCompleteTimer timeout occurs this means that the PHY is still waiting to send the Hard Reset due to a non-idle channel. This condition will be cleared once the PE Hard Reset is completed. 2) Cable Plugs do not generate Hard Reset signaling but are required to monitor for Hard Reset signaling between the Port Partners and respond by resetting. 3) Cable Reset signaling is only recognized by a Cable Plug. 4) Cable Reset signaling cannot be generated by Cable Plugs. PRL_HR_Reset_Layer Protocol Layer Hard Reset Cable Reset Hard Reset TMhees sage State defiHneasr tdh Re emseotdSei gonf aolipnegration of both the transmission and reception state machines during a PHY La yoerr. During Hard R ensoe tUSB PoweCra bDleel iRveesreyt Protocol s are sent or receMiveesds;a ognely is presenCta abfltee Pr lwughich the communication channel is assumed to haveM baeyen disabled by the until completion of the. During no USB Power Delivery Protocol s are sent to or received by the but other USB Power Delivery commPruontoiccaotli oLna yerSh caolnltinue. PRL_HR_Reset_Layer The- Hard Res et enter the Policy sEtnagtein ferom any other state when: - AH ard ResetS iRgenqaluinegst is received from theP HY Layer or is received from the or - Cable Reset Policy Engine - ACa ble ResetS iRgenqaluinegst is received from theP HY Layer or PRL_H R_Reset i_sL raeyceerived from Pthroet ocol Layer.Shall MessageIDCounter Shall Protocol Layer Protocol OLany eenrtry to the Sh astlalte the PRL _Tx_W reasiet_tf tohre_ Message_Request. It aPlrsoot roecsoelt Lthaey esrtates of the S thraanllsmission and recePpRtiLo_nR sxt_aWtea mita_fcohri_nPeHs Yto_M theesisra sgtaerting points. The transmission state machine transition to the state. The P rroetcoecpotli oLnay setratSeh malalchine transiPtRioLn_ HtoR t_hRee quest_Hard_Reset state. The- Protoc ol Lay etrransition to the state when: - The Hard Reset 's reset is complete and Policy Engine - The Cable Reset request has originated from the Policy Engine or ProtTohceo l LayerShal lrequest has originPaRteLd_ HfrRo_mIn tdhiec ate_Hard_Res.et The- Protoc ol Lay etrransition to the state when: - The Hard Reset 's reset is complete and PHY Layer - ThCea ble Reset request has been passed up from thPeH Y Layer C oarble Plug 6.12.2A.4.2 re q PueRstL h_aHs Rbe_eInn pdaiscseadt eup_ Hfroamrd th_eR eset sta (te only). PRL_HR_Indicate_Hard_Reset Protocol LayerShall Policy Engine Hard ResetSignaling Cable ResetSignaling On entry to the state the indicate to the that eithePrr otocol Layer Shall or P RL_HR_W haasit b_feoern_ PrEec_Heiavredd_.Reset_Complete The- transPiotiloicny tEon tghien e state when: 6.12.2T.h4e. 3indication t o P thReL _HR_Requ heass tb_eHena srednt_.Reset state PRL_HR_Request_Hard_Reset Protocol LayerShall PHY Layer Hard ResetSignaling Cable ResetSignaling On entry to the state the request the to send either Protoco l LayerS hoarl l PR.L_HR_Wait_for_PHY_Hard_Reset_Complete The- PHY La yerH atrradn Rsietsioent Stoig nthaeli ng state when: - The PHY Layer Cable Reset Signaling request has been sent or 6.12.2T.h4e. 4 PRL_HR _Wait_ froeqru_ePstH hYas_ Hbeaenr dse_nRt.eset_Complete state PRL_HR_Wait_for_PHY_Hard_Reset_Complete Protocol LayerShall HardResetCompleteTimer PHY Layer Hard Reset Cable Reset In the state the start the and wait for the to indicate that the or has been compPlreotteodc.ol LayerShall PRL_HR_PHY_Hard_Reset_Requested The- Hard Res et transition to the PHY Layer state when: - A Cable Reset complete indication is received from the PHY Layer or - A HardRes ectoCmopmleptlee tienTdiicmaetiron is received from the or 6.12.2T.h4e. 5 PRL_HR_PH tYim_eHs aourtd._Reset_Requested state PRL_HR_PHY_Hard_Reset_Requested Protocol LayerShall Policy Engine PHY Layer Hard Reset Cable Reset On entry to the state the inform the that the Protocol L ahyaesr bSeheanl lrequested to perfoPrRmL _aH R_Wait_fo ro_rP E_Hard_Re.set_Complete The transition to the state when: - Policy Engine 6.12.2T.h4e. 6Indication t o P thReL _HR_Wait h_faos rbe_ePnE s_eHnta. rd_Reset_Complete state PRL_HR_Wait_for_PE_Hard_Reset_Complete Protocol LayerShall Policy Engine Hard Reset Cable Reset In the state the wait for the to indicPartoet tohcaotl tLhaey erShall or P hRaLs_ bHeRe_nP cEo_Hmaprledt_eRde.set_Complete The- Hard Res et transition to the Policy Engine state when: - A Cable Reset complete indication is received from the Policy Engine or 6.12.2A.4.7 co m PpRleLte_ HindRic_aPtiEon_H is arercde_ivRede sfreotm_ Cthoem plete. PRL_HR_PE_Hard_Reset_Complete Protocol LayerShall PHY Layer Hard Reset Cable Reset On entry to the state the inform the that the Protoc oolr L ayerShall is complete. Hard Reset The- PHY La yer exit from the aHndar rde tRuersne tto normal operation when: Hard ResetSignaling Idle Shall The has been informed that the is complete so that it will re-enable the communications channel. If is still pending due to a non- channel this be - clearPeHdY a nLady neort sent or Cable Reset The has been informed that the is complete.", "tables": [], "figures": ["Figure 6.59", "Figure 6.60", "Figure 6.60", "Figure 6.61", "Figure 6.62", "Figure 6.63", "Figure 6.64", "Figure 6.65", "Figure 6.66", "Figure 6.57", "Figure 6.67"], "page_range": [276, 297]}
{"section_path": "6.12.3 List of Protocol Layer States", "start_heading": "6.12.3 List of Protocol Layer States", "content": "Table6.75, \"Protocol Layer States\" lists Tthaeb sleta6te.7s5 u s Perdo btyo cthoel Lvaayrieoru Sst sattaetse machines. State Name Section Protocol Layer Message Transmission Common Protocol Layer Message Transmission PRL_Tx_PHY_Layer_Reset Section 6.12.2.2.1.1 PRL_Tx_Wait_for_Message_Request Section 6.12.2.2.1.2 PRL_Tx_Layer_Reset_for_Transmit Section 6.12.2.2.1.3 PRL_Tx_Construct_Message Section 6.12.2.2.1.4 PRL_Tx_Wait_for_PHY_Response Section 6.12.2.2.1.5 PRL_Tx_Match_MessageID Section 6.12.2.2.1.6 PRL_Tx_Message_Sent Section 6.12.2.2.1.7 PRL_Tx_Check_RetryCounter Section 6.12.2.2.1.8 PRL_Tx_Transmission_Error Section 6.12.2.2.1.9 PRL_Tx_Discard_Message Section 6.12.2.2.1.10 Source Protocol Layer Message Transmission PRL_Tx_Src_Sink_Tx Section 6.12.2.2.2.1 PRL_Tx_Src_Source_Tx Section 6.12.2.2.2.2 PRL_Tx_Src_Pending Section 6.12.2.2.2.3 Sink Protocol Layer Message Transmission PRL_Tx_Snk_Start_of_AMS Section 6.12.2.2.3.1 PRL_Tx_Snk_Pending Section 6.12.2.2.3.2 Protocol Layer Message Reception PRL_Rx_Wait_for_PHY_Message Section 6.12.2.3.1 PRL_Rx_Layer_Reset_for_Receive Section 6.12.2.3.2 PRL_Rx_Send_GoodCRC Section 6.12.2.3.3 PRL_Rx_Check_MessageID Section 6.12.2.3.4 PRL_Rx_Store_MessageID Section 6.12.2.3.5 Hard Reset Operation PRL_HR_Reset_Layer Section 6.12.2.4.1 PRL_HR_Indicate_Hard_Reset Section 6.12.2.4.2 PRL_HR_Request_Hard_Reset Section 6.12.2.4.3 PRL_HR_Wait_for_PHY_Hard_Reset_Complete Section 6.12.2.4.4 PRL_HR_PHY_Hard_Reset_Requested Section 6.12.2.4.5 PRL_HR_Wait_for_PE_Hard_Reset_Complete Section 6.12.2.4.6 PRL_HR_PE_Hard_Reset_Complete Section 6.12.2.4.7 Table6.75 Protocol Layer States (Continued) State Name Section Chunking Chunked Rx RCH_Wait_For_Message_From_Protocol_Layer Section 6.12.2.2.1.1 RCH_Pass_Up_Message Section 6.12.2.2.1.1 RCH_Processing_Extended_Message Section 6.12.2.2.1.1 RCH_Requesting_Chunk Section 6.12.2.2.1.1 RCH_Waiting_Chunk Section 6.12.2.2.1.1 RCH_Report_Error Section 6.12.2.2.1.1 Chunked Tx TCH_Wait_For_Message_Request_From_Policy_Engine Section 6.12.2.1.3.1 TCH_Pass_Down_Message Section 6.12.2.1.3.2 TCH_Wait_For_Transmision_Complete Section 6.12.2.1.3.3 TCH_Message_Sent Section 6.12.2.1.3.4 TCH_Prepare_To_Send_Chunked_Message Section 6.12.2.1.3.5 TCH_Construct_Chunked_Message Section 6.12.2.1.3.6 TCH_Sending_Chunked_Message Section 6.12.2.1.3.7 TCH_Wait_Chunk_Request Section 6.12.2.1.3.8 TCH_Message_Received Section 6.12.2.1.3.9 TCH_Report_Error Section 6.12.2.1.3.10 Chunked Message Router RTR_Wait_for_Message_From_Protocol_Layer Section 6.12.2.1.4.1 RTR_Rx_Chunks Section 6.12.2.1.4.2 RTR_Tx_Chunks Section 6.12.2.1.4.3", "tables": ["Table 6.75", "Table 6.75"], "figures": [], "page_range": [298, 299]}
{"section_path": "6.13 Message Applicability", "start_heading": "6.13 Message Applicability", "content": "Message Port The folloMweisnsga gtaebles outline the s supportAeMd Sby a given, dMeepsesnadgienSgh oanl lits capability. Table6.76, \"Message Applicability Abbreviations\" When a is supported the feature and the implied by the also be supported. The abbreviations in are used in this section to denote the level of support required. Table6.76 Message Applicability Abbreviations Abbreviation Meaning Description N Normative Shall Port Cable Plug CN Conditional Normative Shall be supported by this Port/Cable Plug. supported by a given / based on R Sfehaotuurldes. Port Cable Plug O ROp ecti oo mna ml ended May be supported by thPiso rt Ca/ble Plug. NS Shal lbe supporteNdo bt_yS tuhpisp orte/dMessage. Port Cable Plug result in a response by this Not Supported I Ignore Shal/l Ignored w hen recPeoivretdC.able Plug NK NAK P boer t Cable Plbuyg tShhisa ll / Respon dwehreNnA rKeceived. Command This / return to this NA Shall Not when received. Port Cable Plug DR Not allowed Sha blle transmitted by this / G. oodCRC Port Cable Plug There be no response at all (i.e., not even a Don’t Recognize Message) from this / when received. Conditional Normative For the case of a note has been added to indicate the condition. \"CN/\" notation is used to indicate the level of support when the condition is not present. OptionalMessage \"R/\" and \"O/\" notation is used to indicate the response when the Recommended or is not sNuoptpeo:rted. Message Shall PE_CBL_Ready PE_SNK_Ready PE_SRC_Ready Message AMS ProtWochoelr Eer NroSr/R/NK Sise cintidoinc a6t.8ed.1,f o\"Sr oRfte cReeisveetd a nd Protosc othl iEsr ror\" apply to the, or states only since unexpected s received during an are Cos n(tsreoel Message Data Message Sourc)e. Sink Cable Plug VDM Command DFP UFP Cable Plug This section covers and support for s, and s. It also covers support for s, s and s.", "tables": ["Table 6.76"], "figures": [], "page_range": [300, 300]}
{"section_path": "6.13.1 Applicability of Control Messages", "start_heading": "6.13.1 Applicability of Control Messages", "content": "Table6.77, \"Applicability of Control Messages\" Control Message Shall Should Shall Not Source Sink Cable Plug VPD Dual-Role Power Port Dual-Role Data Port Shall Source details Sink s that / / be transmitted and received by a,, or. Requirements for s and s override any requirementsT faobr le6.77- o Anplyp loirc abili-tOyn olyf CPoonrttsr.ol Messages Message Type Source Sink Dual-Role Dual-Role Cable Plug VPD Power Data Transmitted Message Accept Data_Reset N N N N DR_Swap CN10 /R CN10 /R NA NA FR_Swap O O N NA NA Get_Country_Codes NA NA R NA NA Get_PPS_Status CN7 /NA CN7 /NA NA NA Get_Sink_Cap NA CN6 NA NA Get_Sink_Cap_Extended R NA N NA NA Get_Source_Cap R NA R NA NA Get_Source_Cap_Extended NA R N NA NA Get_Source_Info NA R R NA NA Get_Revision NA R R NA NA Get_Status R R NA NA GoodCRC R R NA NA GotoMin (Deprecated) N N N N Not_Supported NA NA NA NA Ping (Deprecated) N N NA NA PR_Swap NA NA NA NA PS_RDY NA NA N NA NA Reject N CN1 /NA N NA NA Soft_Reset N O O O CN10 /NA NA VCONN_Swap N N NA NA Wait R R NA NA Shall Port VCONN O NA O O NA NA Shall Source_Capabilities_Extended 1) be supported by any that can supply. Shall Source Alert 2) be supported products that support the Message. Shall Fast Role Swap Request 3) be supported by s that support the Message. Shall VCONN Swap 4) be supported when the is supported. Shall SPR PPS Mode 5) be supported when is supported. Shall 6) be supported when is supported. Shall Active Cable 7) be supported when required by a country authority. VPD CT-VPD Connected Charger CT-VPDShall 8) be supported by s. Connected Charger 9) includes s when not to a. PD communication with a only take Shall [USB4] place when not to a. Shall Source PortSPRCharger Invariant PDOs 10) be supported by products that support. 11) be supported by all s except single s with. Table6.77 Applicability of Control Messages (Continued) Message Type Source Sink Dual-Role Dual-Role Cable Plug VPD Power Data Received Message Accept Data_Reset N N N N I I DR_Swap CN10 /R CN10 /R I I FR_Swap O/NS O/NS N I I Get_Country_Codes NS NS CN4 /NS I I Get_PPS_Status CN7 /NS CN7 /NS I I Get_Sink_Cap CN6/ NS NS I I Get_Sink_Cap_Extended NS N N I I Get_Source_Cap NS N N I I Get_Source_Cap_Extended N NS N I I Get_Source_Info CN2 /NS NS CN2 /NS I I Get_Revision CN11 NS N I I Get_Status N N O/I O/I GoodCRC CN3 /NS CN3 /NS CN3 /NS CN8 /I I GotoMin (Deprecated) N N N N Not_Supported NS NS I I Ping (Deprecated) N N CN8 /I I PR_Swap NS NS/I I I PS_RDY NS NS N I I Reject CN1 /NS N N I I Soft_Reset CN5 /NS N N N I I VCONN_Swap N N N N Wait CN1 / NS CN1 / NS I I Shall CN5P /o Nrt S N VCONN N N I I Shall Source_Capabilities_Extended 1) be supported by any that can supply. Shall Source Alert 2) be supported products that support the Message. Shall Fast Role Swap Request 3) be supported by s that support the Message. Shall VCONN Swap 4) be supported when the is supported. Shall SPR PPS Mode 5) be supported when is supported. Shall 6) be supported when is supported. Shall Active Cable 7) be supported when required by a country authority. VPD CT-VPD Connected Charger CT-VPDShall 8) be supported by s. Connected Charger 9) includes s when not to a. PD communication with a only take Shall [USB4] place when not to a. Shall Source PortSPRCharger Invariant PDOs 10) be supported by products that support. 11) be supported by all s except single s with.", "tables": ["Table 6.77", "Table 6.77"], "figures": [], "page_range": [301, 302]}
{"section_path": "6.13.2 Applicability of Data Messages", "start_heading": "6.13.2 Applicability of Data Messages", "content": "Table6.78, \"Applicability of Data Messages\" Data Message VDMCommand Shall Should Shall Not Source Sink Cable Plug VPD Dual-Role Power Port Shall Source details Sink s (except for s) that / / be transmitted and received by a,, or. Requirements for s override any requirements fTora ble6.7-8o n Alyp oprl icabi-lOitnyl yo fP Dorattsa. Messages Message Type Source Sink Dual-Role Cable Cable VPD Power Plug SOP’ Plug SOP’’ 6 Transmitted Message Source_Capabilities Request N NA N NA NA NA Get_Country_Info NA N NA NA NA BIST CN5 /O CN5 /O NA NA NA Sink_Capabilities N1 N1 NA NA NA Battery_Status NA N N NA NA NA Alert CN2 CN2 NA NA NA Enter_USB CN11 /R CN11 /R NA NA NA EPR_Request CN7 /O CN7 /O NA NA NA EPR_Mode NA CN9 NA NA NA Source_Info CN9 CN9 NA NA NA Revision CN10 NA N NA NA NA Received Message 12 N N CN /O/I NA O Source_Capabilities Request NS N N I I I Get_Country_Info N NS I I I BIST CN5 /NS CN5 /NS I I I Sink_Capabilities 1 1 1 1 1 N N N N N Battery_Status CN4 NS CN4 I I I Alert CN3 /NS CN3 /NS I I I Enter_USB R/NS R/NS I I I B7IST Mode B7IST Shall 8 Section 58.9 Section 6.4.3 CN /O CN /O CN /I CN /I I Shall 1) For details of which s and Messages be supported see and. Shall Get_Battery_Status 2) be supported by products that contain batteries. Shall Get_Sink_Cap 3) be supported by products that support the Message. Shall 4) be supported by products that support the Message. VPD CT-VPD Connected Charger CT-VPDShall 5) be supported when required by a country authority. Connected Charger 6) includes s when not to a. PD communication with a only take Shall [USB4] place when not to a. Shall Active Cable [USB4] 7) be supported by products that support. Shall Source EPR Mode 8) be supported by s that support. Shall Source Port PortSPRCharger Invariant PDOs 9) be supported by products that support operation in. Shall SPR PPS Mode 10) be supported by all s except single s with. Shall Active Cable 11) be supported when is supported. 12) be supported by s. Table6.78 Applicability of Data Messages (Continued) Message Type Source Sink Dual-Role Cable Cable VPD Power Plug SOP’ Plug SOP’’ 6 EPR_Request EPR_Mode CN9 NA I I I Source_Info CN9 CN9 I I I Revision NA N N I I I BIST Mode BIST Shall Section 5.9 Section 6.4.3 N N I I I Shall 1) For details of which s and Messages be supported see and. Shall Get_Battery_Status 2) be supported by products that contain batteries. Shall Get_Sink_Cap 3) be supported by products that support the Message. Shall 4) be supported by products that support the Message. VPD CT-VPD Connected Charger CT-VPDShall 5) be supported when required by a country authority. Connected Charger 6) includes s when not to a. PD communication with a only take Shall [USB4] place when not to a. Shall Active Cable [USB4] 7) be supported by products that support. Shall Source EPR Mode 8) be supported by s that support. Shall Source Port PortSPRCharger Invariant PDOs 9) be supported by products that support operation in. Shall SPR PPS Mode 10) be supported by all s except single s with. Shall Active Cable 11) be supported when is supported. 12) be supported by s.", "tables": ["Table 6.78", "Table 6.78"], "figures": [], "page_range": [303, 304]}
{"section_path": "6.13.3 Applicability of Extended Messages", "start_heading": "6.13.3 Applicability of Extended Messages", "content": "Table6.79, \"Applicability of Extended Messages\" Extended Message VDEMCommand Shall Should Shall Not Source Sink Cable Plug VPD Dual Role Power Port Shall detailsS ource Sinks (except for s) that / / be transmitted and received by a,, or. Requirements for s overrideT aanbyl ere6q.u7i9r e Ampepnltisc afobri lity of E-oxntleyn odre d Me-Ossnalyg ePsorts. Message Type Source Sink Dual-Role Cable Cable VPD Power Plug SOP’ Plug SOP’’ 13 Transmitted Message Battery_Capabilities Country_Codes CN /NA CN /NA NA NA NA Country_Info CN /NA CN /NA NA NA NA EPR_Source_Capabilities CN /NA CN /NA NA NA NA EPR_Sink_Capabilities CN /NA NA CN /NA NA NA NA Extended_Control NA CN /NA CNSec /ti Non A 6.13.4 NA NA NA Firmware_Update_Request See for details Firmware_Update_Response CN /NA CN /NA NA NA NA Get_Battery_Cap CN /NA CN /NA CN /NA O NA Get_Battery_Status R R NA NA NA Get_Manufacturer_Info R R NA NA NA Manufacturer_Info R R NA NA NA PPS_Status R R R NA NA Security_Request CN /NA NA NA NA NA Security_Response CN /NA CN /NA NA NA NA Sink_Capabilities_Extended CN /NA CN /NA CN /NA NA NA Source_Capabilities_Extended NA N N NA NA NA Shall R NA R NA NA NA Shall Get_Source_Cap_Extended 1) be supported by products that contain batteries. Shall Get_Status 2) be supported by products that can transmit the Message. Shall Get_Battery_Cap 3) be supported by products that can transmit the Message. Shall Get_Manufacturer_Info 4) be supported by products that can transmit the Message. Shall [USBTypeCAuthentication 5) be supported by products that can transmit the Message. 1.0] 6) be supported by products that support USB security communication as defined in Shall. [USBPDFirmwareUpdate 1.0] 7) be supported by products that support USB firmware update communication as defined in Shall. Shall Get_PPS_Status 8) be supported when PPS is supported. Shall 9) be supported by products that can transmit the Message. Shall Get_Sink_Cap_Extended 10) be supported when required by a country authority. Shall Active Cable 11) be supported by products that can transmit the Message. VPD CT-VPD Connected Charger CT-VPDShall 12) be supported by s. Connected Charger 13) includes s when not to a. PD communication with a only take place Shall EPR Mode when not to a. Shall Source Alert 14) be supported by products that support operation in. 15) be supported by s that support the Message. Table6.79 Applicability of Extended Messages (Continued) Message Type Source Sink Dual-Role Cable Cable VPD Power Plug SOP’ Plug SOP’’ 13 Status Vendor_Defined_Extended CN /R CN /R CN /R CN /NA CN /NA NA Received Message O O O O O Battery_Capabilities Country_Codes CN /NS CN /NS I I I Country_Info CN /NS CN /NS I I I EPR_Source_Capabilities CN /NS CN /NS I I I EPR_Sink_Capabilities NS CN /NS CN /NS I I I Extended_Control CN /NS NS CNSect /i Non S 6.13.4 I I I Firmware_Update_Request See for details Firmware_Update_Response CN /NS CN /NS CN /I O I Get_Battery_Cap CN /NS CN /NS I I I Get_Battery_Status CN /NS CN /NS I I I Get_Manufacturer_Info CN /NS CN /NS I I I Manufacturer_Info R/NS R/NS R/I I I PPS_Status CN /NS CN /NS I I I Security_Request NS CN /NS I I I Security_Response CN /NS CN /NS CN /I I I Sink_Capabilities_Extended CN /NS CN /NS I I I Source_Capabilities_Extended CN /NS NS CN /NS I I I Shall 2 2 NS CN /NS CN /NS I I I Shall Get_Source_Cap_Extended 1) be supported by products that contain batteries. Shall Get_Status 2) be supported by products that can transmit the Message. Shall Get_Battery_Cap 3) be supported by products that can transmit the Message. Shall Get_Manufacturer_Info 4) be supported by products that can transmit the Message. Shall [USBTypeCAuthentication 5) be supported by products that can transmit the Message. 1.0] 6) be supported by products that support USB security communication as defined in Shall. [USBPDFirmwareUpdate 1.0] 7) be supported by products that support USB firmware update communication as defined in Shall. Shall Get_PPS_Status 8) be supported when PPS is supported. Shall 9) be supported by products that can transmit the Message. Shall Get_Sink_Cap_Extended 10) be supported when required by a country authority. Shall Active Cable 11) be supported by products that can transmit the Message. VPD CT-VPD Connected Charger CT-VPDShall 12) be supported by s. Connected Charger 13) includes s when not to a. PD communication with a only take place Shall EPR Mode when not to a. Shall Source Alert 14) be supported by products that support operation in. 15) be supported by s that support the Message. Table6.79 Applicability of Extended Messages (Continued) Message Type Source Sink Dual-Role Cable Cable VPD Power Plug SOP’ Plug SOP’’ 13 Status Vendor_Defined_Extended CN /NS CN /NS I I I Shall O/NS O/NS O/I O/I O/I Shall Get_Source_Cap_Extended 1) be supported by products that contain batteries. Shall Get_Status 2) be supported by products that can transmit the Message. Shall Get_Battery_Cap 3) be supported by products that can transmit the Message. Shall Get_Manufacturer_Info 4) be supported by products that can transmit the Message. Shall [USBTypeCAuthentication 5) be supported by products that can transmit the Message. 1.0] 6) be supported by products that support USB security communication as defined in Shall. [USBPDFirmwareUpdate 1.0] 7) be supported by products that support USB firmware update communication as defined in Shall. Shall Get_PPS_Status 8) be supported when PPS is supported. Shall 9) be supported by products that can transmit the Message. Shall Get_Sink_Cap_Extended 10) be supported when required by a country authority. Shall Active Cable 11) be supported by products that can transmit the Message. VPD CT-VPD Connected Charger CT-VPDShall 12) be supported by s. Connected Charger 13) includes s when not to a. PD communication with a only take place Shall EPR Mode when not to a. Shall Source Alert 14) be supported by products that support operation in. 15) be supported by s that support the Message.", "tables": ["Table 6.79", "Table 6.79", "Table 6.79"], "figures": [], "page_range": [305, 307]}
{"section_path": "6.13.4 Applicability of Extended Control Messages", "start_heading": "6.13.4 Applicability of Extended Control Messages", "content": "Table6.80, \"Applicability of Extended Control Messages\" Extended Control Message Shall Should Shall Not Source Sink Cable Plug VPD Dual-Role Power Port Dual-Role Data Port Shall detaiSlso urce Sink s that / / be transmitted and received by a,, or. Requirements for s and s Ta obvleer6ri.8de0 a Anpy preliqcuaibrielmitye notfs E foxrte nded -Coonnlytr oorl Mes-sOangleys Ports. Message Type Source Sink Dual-Role Dual-Role Cable Plug VPD Power Data Transmitted Message EPR_Get_Source_Cap EPR_Get_Sink_Cap NA CN CN NA NA EPR_KeepAlive CN NA CN NA NA EPR_KeepAlive_Ack NA CN NA NA CN NA NA NA EPR_Get_Source_Cap EPR_Get_Sink_Cap CN NS CN I I EPR_KeepAlive NS CN CN I I EPR_KeepAlive_Ack CN NS I I Shall 1 EPR Mode NS CN I I VPD CT-VPD Connected Charger CT-VPDShall 1) be supported by products that support. Connected Charger 2) includes s when not to a. PD communication with a only take place when not to a.", "tables": ["Table 6.80"], "figures": [], "page_range": [308, 308]}
{"section_path": "6.13.5 Applicability of Structured VDM Commands", "start_heading": "6.13.5 Applicability of Structured VDM Commands", "content": "Table6.81, \"Applicability of Structured VDM Commands\" Structured VDMCommand Shall Should Shall Not DFP UFP Cable Plug VPD Structured VDM DFP UFP VDMCommandShall Not_ dSeutpapilos rted s that / / be transmitted and received by a,, or. If s are not supported, the or receiving a T able6.81 Appli sceanbdil ait y of Structured M VeDsMsa gCeo min mreasnpdonsse. Command Type DFP UFP Cable Plug Cable Plug VPD4 SOP’ SOP’’ Transmitted Command Request Discover Identity 1,6 2 Discover SVIDs CN /R R NA NA NA Discover Modes CN /O O NA NA NA Enter Mode CN /O O NA NA NA Exit Mode CN /NA NA NA NA NA Attention CN /NA NA NA NA NA Received Command Request/Transmitted Command Response O O NA NA NA Discover Identity 5,6 1,6 CN /R/ CN /R/ N I N Discover SVIDs NK NK Discover Modes O/NK CN /NK CN /NK I NK Enter Mode O/NK CN /NK CN /NK I NK Exit Mode NK CN /NK CN /NK O NK Attention NK CN /NK CN /NK O NK Shall 3 Modal Ope3ration O/I O/I I I I May UFP Source Section 6.4.4.3.1, \"Discover 1) be supported when is supported. Identity\" Section 8.3.3.25.3, \"Source Startup Structured VDM Discover Identity of a 2) Cable b Pel turga nStsamteit Dteida gbrya am \" / during discovery (see and Structured VDM DFP UFP VDMCommandShall ). Not_Supported 3) If s are not supported, the or receiving a VPD CT-VPD Connected Charger CTsend a Message in response. VPDShall Connected Charger 4) includes s when not to a. PD communication with a Shall DFP only take place when not to a. Shall [USB4] 5) be supported by products with more than one. 6) be supported by products that support.", "tables": ["Table 6.81"], "figures": [], "page_range": [309, 309]}
{"section_path": "6.13.6 Applicability of Reset Signaling", "start_heading": "6.13.6 Applicability of Reset Signaling", "content": "Table6.82, \"Applicability of Reset Signaling\" Shall Should Shall Not DFP UFP Cable Plug details the Reset that / / be transmitted and received by a / or Tab.le6.82 Applicability of Reset Signaling Reset Type DFP UFP Cable Plug Cable Plug VPD SOP’ SOP’’ 2 Transmitted Message/Signaling Soft_Reset Hard Reset N N NA NA NA Cable Reset N N NA NA NA CN NA NA NA NA Soft_Reset Hard Reset N N N N N Cable Reset N N N N N Shall SOP’ Packet Port DR DR N N N VCONN 1) be supported when transmission of s are supported, and the VPD CT-VPD Connected Charger can supply. CT-VPDShall Connected Charger 2) includes s when not to a. PD communication with a only take place when not to a. Table6.83, \"Applicability of Fast Role Swap Request\" Fast Role Swap Request Shall Should Shall Not Source Sink details the that / / be transmitted and receivTeadb bley 6a.83 Ap polri cabi.lity of Fast Role Swap Request Command Type Source Sink Dual-Role Power Transmitted Message/Signaling Fast Role Swap Received Message/Signaling NA NA R Fast Role Swap NA NA R", "tables": ["Table 6.82", "Table 6.83"], "figures": [], "page_range": [310, 310]}
{"section_path": "6.13.7 Applicability of Fast Role Swap Request", "start_heading": "6.13.7 Applicability of Fast Role Swap Request", "content": "Table6.82, \"Applicability of Reset Signaling\" Shall Should Shall Not DFP UFP Cable Plug details the Reset that / / be transmitted and received by a / or Tab.le6.82 Applicability of Reset Signaling Reset Type DFP UFP Cable Plug Cable Plug VPD SOP’ SOP’’ 2 Transmitted Message/Signaling Soft_Reset Hard Reset N N NA NA NA Cable Reset N N NA NA NA CN NA NA NA NA Soft_Reset Hard Reset N N N N N Cable Reset N N N N N Shall SOP’ Packet Port DR DR N N N VCONN 1) be supported when transmission of s are supported, and the VPD CT-VPD Connected Charger can supply. CT-VPDShall Connected Charger 2) includes s when not to a. PD communication with a only take place when not to a. Table6.83, \"Applicability of Fast Role Swap Request\" Fast Role Swap Request Shall Should Shall Not Source Sink details the that / / be transmitted and receivTeadb bley 6a.83 Ap polri cabi.lity of Fast Role Swap Request Command Type Source Sink Dual-Role Power Transmitted Message/Signaling Fast Role Swap Received Message/Signaling NA NA R Fast Role Swap NA NA R", "tables": ["Table 6.82", "Table 6.83"], "figures": [], "page_range": [310, 310]}
{"section_path": "6.14 Value Parameters", "start_heading": "6.14 Value Parameters", "content": "Table6.84, \"Value Parameters\" contains vTaalubele p6ar.8a4m eVtearlus eu sPeadr ianm theitse rsesction. Parameter Description Value Unit Reference MaxExtendedMsgLen Extended Message Section 6.2.1.2 Data Size Maximum length of an as 260 Byte MaxExtendedMsgChunkLen expressed in the Exte n fid ee ldd. Message Section 6.2.1.2 Chunk Maximum length of an 26 Byte MaxExtendedMsgLegacyLen Extended Message Section 6.2.1.2. Chunking Maximum length of an 26 Byte that can be sent without.", "tables": ["Table 6.84"], "figures": [], "page_range": [311, 311]}
{"section_path": "7 Power Supply", "start_heading": "7 Power Supply", "content": "PDUSBSource A - S hall exhib[UitsS Bth Tey fpoell-oCw 2i.n4g] bUeShBa Tvyiopres-:C VBUS Default Contract Implicit Contract ® supply current to while in a or - Shall. Section 7.1.5, \"Response to Hard Resets\" Hard Reset Signaling follow the requirements as specified in when - Shall is recVeBivUeSd. control voltage transitions as bound by undershoot, overshoot and transition time 7.1.2requirem e Sntos.urce Bulk Capacitance Source Shall Not Source Figure 7.1, \"Placement of Source Bulk TCahpea citance b\"ulk capacitance be placed between the transceiver isolation impedance and the USB receptacle. The bulk capacitance consists of C1 and C2 as shown in Source VBUS. The Ohmic InterconneScet cmtiiognh 7t.c1o.7n.s5i,s \"tO ouf tPpCuBt Vtroaltcaegse f oLrim piotw\" er distribuStoiounrc oerS phoawller switching devices. ThSein OkhSmhaicl lInterconnectS minikghOtV aPlso be part of the Sciercctuioitn i m7.2p.l9e.m2, e\"nIntepdu tb Oy vtehre Voltage t Por loimteictt iitosn \" Output Voltage Limit (OVVL) B Ua Ss described in. Though a limit its output voltage, a implement as described in to protect caSgracinBsutl ekxScheasrseivde input voltage. The capacitance might bPeo ar tsingle capacitor, a capacitor bank or distributed ccaSprcaBciutalknce. If the power supply is shared across multiple ports, the bulk capacitance is defined as. If the power supply is dedicated to a single, the minimum bulk capacitance is defined as Sourc.e Negotiated Shall Source Power Role Swap Initial Source TShhae ll bulk capSawcaitpa nSctaen isd balylowed to change for a newNlyew Sink power level. The capacitance change occur before tPhoew er Role i sS rweaapdyS htoa lolperate at the nSewwa pp oSwtaenrd lbeyvel. During a, the transition to before operating as the. Any change in bulk capacitance required to complete the Figur eo 7cc.1u rP dlaucreinmg ent of Source.Bulk Capacitance Ohmic VBUS Interconnect C2 GND SHIELD Power Data Object Section 6.4.1, \"Capabilities Message\" Source Consistent with the s discussed in, the power supply types that- are avaiFlaixbeled aSsu pplyPDsO in a USB Power Delivery System are: Source Shall Fixed Supply vSafe5V Fixed SupplyShall The exposes well-regulated fixed voltage power supplies. s support at least one capable of supplying. The output voltage of a remain VBUS Data Lines GND SHIELD SOURCE CABLE Power Supply Data C1 OVL Lines Source Bulk Capacitance", "tables": [], "figures": [], "page_range": [312, 312]}
{"section_path": "7.1 Source Requirements", "start_heading": "7.1 Source Requirements", "content": "PDUSBSource A - S hall exhib[UitsS Bth Tey fpoell-oCw 2i.n4g] bUeShBa Tvyiopres-:C VBUS Default Contract Implicit Contract ® supply current to while in a or - Shall. Section 7.1.5, \"Response to Hard Resets\" Hard Reset Signaling follow the requirements as specified in when - Shall is recVeBivUeSd. control voltage transitions as bound by undershoot, overshoot and transition time 7.1.2requirem e Sntos.urce Bulk Capacitance Source Shall Not Source Figure 7.1, \"Placement of Source Bulk TCahpea citance b\"ulk capacitance be placed between the transceiver isolation impedance and the USB receptacle. The bulk capacitance consists of C1 and C2 as shown in Source VBUS. The Ohmic InterconneScet cmtiiognh 7t.c1o.7n.s5i,s \"tO ouf tPpCuBt Vtroaltcaegse f oLrim piotw\" er distribuStoiounrc oerS phoawller switching devices. ThSein OkhSmhaicl lInterconnectS minikghOtV aPlso be part of the Sciercctuioitn i m7.2p.l9e.m2, e\"nIntepdu tb Oy vtehre Voltage t Por loimteictt iitosn \" Output Voltage Limit (OVVL) B Ua Ss described in. Though a limit its output voltage, a implement as described in to protect caSgracinBsutl ekxScheasrseivde input voltage. The capacitance might bPeo ar tsingle capacitor, a capacitor bank or distributed ccaSprcaBciutalknce. If the power supply is shared across multiple ports, the bulk capacitance is defined as. If the power supply is dedicated to a single, the minimum bulk capacitance is defined as Sourc.e Negotiated Shall Source Power Role Swap Initial Source TShhae ll bulk capSawcaitpa nSctaen isd balylowed to change for a newNlyew Sink power level. The capacitance change occur before tPhoew er Role i sS rweaapdyS htoa lolperate at the nSewwa pp oSwtaenrd lbeyvel. During a, the transition to before operating as the. Any change in bulk capacitance required to complete the Figur eo 7cc.1u rP dlaucreinmg ent of Source.Bulk Capacitance Ohmic VBUS Interconnect C2 GND SHIELD Power Data Object Section 6.4.1, \"Capabilities Message\" Source Consistent with the s discussed in, the power supply types that- are avaiFlaixbeled aSsu pplyPDsO in a USB Power Delivery System are: Source Shall Fixed Supply vSafe5V Fixed SupplyShall The exposes well-regulated fixed voltage power supplies. s support at least one capable of supplying. The output voltage of a remain VBUS Data Lines GND SHIELD SOURCE CABLE Power Supply Data C1 OVL Lines Source Bulk Capacitance", "tables": [], "figures": [], "page_range": [312, 312]}
{"section_path": "7.1.1 Behavioral Aspects", "start_heading": "7.1.1 Behavioral Aspects", "content": "PDUSBSource A - S hall exhib[UitsS Bth Tey fpoell-oCw 2i.n4g] bUeShBa Tvyiopres-:C VBUS Default Contract Implicit Contract ® supply current to while in a or - Shall. Section 7.1.5, \"Response to Hard Resets\" Hard Reset Signaling follow the requirements as specified in when - Shall is recVeBivUeSd. control voltage transitions as bound by undershoot, overshoot and transition time 7.1.2requirem e Sntos.urce Bulk Capacitance Source Shall Not Source Figure 7.1, \"Placement of Source Bulk TCahpea citance b\"ulk capacitance be placed between the transceiver isolation impedance and the USB receptacle. The bulk capacitance consists of C1 and C2 as shown in Source VBUS. The Ohmic InterconneScet cmtiiognh 7t.c1o.7n.s5i,s \"tO ouf tPpCuBt Vtroaltcaegse f oLrim piotw\" er distribuStoiounrc oerS phoawller switching devices. ThSein OkhSmhaicl lInterconnectS minikghOtV aPlso be part of the Sciercctuioitn i m7.2p.l9e.m2, e\"nIntepdu tb Oy vtehre Voltage t Por loimteictt iitosn \" Output Voltage Limit (OVVL) B Ua Ss described in. Though a limit its output voltage, a implement as described in to protect caSgracinBsutl ekxScheasrseivde input voltage. The capacitance might bPeo ar tsingle capacitor, a capacitor bank or distributed ccaSprcaBciutalknce. If the power supply is shared across multiple ports, the bulk capacitance is defined as. If the power supply is dedicated to a single, the minimum bulk capacitance is defined as Sourc.e Negotiated Shall Source Power Role Swap Initial Source TShhae ll bulk capSawcaitpa nSctaen isd balylowed to change for a newNlyew Sink power level. The capacitance change occur before tPhoew er Role i sS rweaapdyS htoa lolperate at the nSewwa pp oSwtaenrd lbeyvel. During a, the transition to before operating as the. Any change in bulk capacitance required to complete the Figur eo 7cc.1u rP dlaucreinmg ent of Source.Bulk Capacitance Ohmic VBUS Interconnect C2 GND SHIELD Power Data Object Section 6.4.1, \"Capabilities Message\" Source Consistent with the s discussed in, the power supply types that- are avaiFlaixbeled aSsu pplyPDsO in a USB Power Delivery System are: Source Shall Fixed Supply vSafe5V Fixed SupplyShall The exposes well-regulated fixed voltage power supplies. s support at least one capable of supplying. The output voltage of a remain VBUS Data Lines GND SHIELD SOURCE CABLE Power Supply Data C1 OVL Lines Source Bulk Capacitance", "tables": [], "figures": [], "page_range": [312, 312]}
{"section_path": "7.1.2 Source Bulk Capacitance", "start_heading": "7.1.2 Source Bulk Capacitance", "content": "PDUSBSource A - S hall exhib[UitsS Bth Tey fpoell-oCw 2i.n4g] bUeShBa Tvyiopres-:C VBUS Default Contract Implicit Contract ® supply current to while in a or - Shall. Section 7.1.5, \"Response to Hard Resets\" Hard Reset Signaling follow the requirements as specified in when - Shall is recVeBivUeSd. control voltage transitions as bound by undershoot, overshoot and transition time 7.1.2requirem e Sntos.urce Bulk Capacitance Source Shall Not Source Figure 7.1, \"Placement of Source Bulk TCahpea citance b\"ulk capacitance be placed between the transceiver isolation impedance and the USB receptacle. The bulk capacitance consists of C1 and C2 as shown in Source VBUS. The Ohmic InterconneScet cmtiiognh 7t.c1o.7n.s5i,s \"tO ouf tPpCuBt Vtroaltcaegse f oLrim piotw\" er distribuStoiounrc oerS phoawller switching devices. ThSein OkhSmhaicl lInterconnectS minikghOtV aPlso be part of the Sciercctuioitn i m7.2p.l9e.m2, e\"nIntepdu tb Oy vtehre Voltage t Por loimteictt iitosn \" Output Voltage Limit (OVVL) B Ua Ss described in. Though a limit its output voltage, a implement as described in to protect caSgracinBsutl ekxScheasrseivde input voltage. The capacitance might bPeo ar tsingle capacitor, a capacitor bank or distributed ccaSprcaBciutalknce. If the power supply is shared across multiple ports, the bulk capacitance is defined as. If the power supply is dedicated to a single, the minimum bulk capacitance is defined as Sourc.e Negotiated Shall Source Power Role Swap Initial Source TShhae ll bulk capSawcaitpa nSctaen isd balylowed to change for a newNlyew Sink power level. The capacitance change occur before tPhoew er Role i sS rweaapdyS htoa lolperate at the nSewwa pp oSwtaenrd lbeyvel. During a, the transition to before operating as the. Any change in bulk capacitance required to complete the Figur eo 7cc.1u rP dlaucreinmg ent of Source.Bulk Capacitance Ohmic VBUS Interconnect C2 GND SHIELD Power Data Object Section 6.4.1, \"Capabilities Message\" Source Consistent with the s discussed in, the power supply types that- are avaiFlaixbeled aSsu pplyPDsO in a USB Power Delivery System are: Source Shall Fixed Supply vSafe5V Fixed SupplyShall The exposes well-regulated fixed voltage power supplies. s support at least one capable of supplying. The output voltage of a remain VBUS Data Lines GND SHIELD SOURCE CABLE Power Supply Data C1 OVL Lines Source Bulk Capacitance", "tables": [], "figures": [], "page_range": [312, 312]}
{"section_path": "7.1.3 Types of Sources", "start_heading": "7.1.3 Types of Sources", "content": "PDUSBSource A - S hall exhib[UitsS Bth Tey fpoell-oCw 2i.n4g] bUeShBa Tvyiopres-:C VBUS Default Contract Implicit Contract ® supply current to while in a or - Shall. Section 7.1.5, \"Response to Hard Resets\" Hard Reset Signaling follow the requirements as specified in when - Shall is recVeBivUeSd. control voltage transitions as bound by undershoot, overshoot and transition time 7.1.2requirem e Sntos.urce Bulk Capacitance Source Shall Not Source Figure 7.1, \"Placement of Source Bulk TCahpea citance b\"ulk capacitance be placed between the transceiver isolation impedance and the USB receptacle. The bulk capacitance consists of C1 and C2 as shown in Source VBUS. The Ohmic InterconneScet cmtiiognh 7t.c1o.7n.s5i,s \"tO ouf tPpCuBt Vtroaltcaegse f oLrim piotw\" er distribuStoiounrc oerS phoawller switching devices. ThSein OkhSmhaicl lInterconnectS minikghOtV aPlso be part of the Sciercctuioitn i m7.2p.l9e.m2, e\"nIntepdu tb Oy vtehre Voltage t Por loimteictt iitosn \" Output Voltage Limit (OVVL) B Ua Ss described in. Though a limit its output voltage, a implement as described in to protect caSgracinBsutl ekxScheasrseivde input voltage. The capacitance might bPeo ar tsingle capacitor, a capacitor bank or distributed ccaSprcaBciutalknce. If the power supply is shared across multiple ports, the bulk capacitance is defined as. If the power supply is dedicated to a single, the minimum bulk capacitance is defined as Sourc.e Negotiated Shall Source Power Role Swap Initial Source TShhae ll bulk capSawcaitpa nSctaen isd balylowed to change for a newNlyew Sink power level. The capacitance change occur before tPhoew er Role i sS rweaapdyS htoa lolperate at the nSewwa pp oSwtaenrd lbeyvel. During a, the transition to before operating as the. Any change in bulk capacitance required to complete the Figur eo 7cc.1u rP dlaucreinmg ent of Source.Bulk Capacitance Ohmic VBUS Interconnect C2 GND SHIELD Power Data Object Section 6.4.1, \"Capabilities Message\" Source Consistent with the s discussed in, the power supply types that- are avaiFlaixbeled aSsu pplyPDsO in a USB Power Delivery System are: Source Shall Fixed Supply vSafe5V Fixed SupplyShall The exposes well-regulated fixed voltage power supplies. s support at least one capable of supplying. The output voltage of a remain VBUS Data Lines GND SHIELD SOURCE CABLE Power Supply Data C1 OVL Lines Source Bulk Capacitance", "tables": [], "figures": [], "page_range": [312, 312]}
{"section_path": "7.1.4 Source Transitions", "start_heading": "7.1.4 Source Transitions", "content": "vSrcNew vSrcValid Table7.23, \"Source Electrical Parameters\" Section 7.1.8, \"Output Voltage Tolerance wanitdh Rina nthgee \"range defined by the relative tolerance and the absolute band as listed in and described in - Variabl.e Supply Battery PDO Source Variable Supply Battery Shall The (non- ) exposes leVssa rwiaeblll-er eSguuplpaltyePdD O s. The output voltage of a (non- ) remain within the absolute maximum output voltage and the - absoBluattete mryi nSiumpuplmy PoDuOtput voltage exposed in the. Source VBUS Battery SupplyShall The exposes BBaatttteerriey sS tuhpapnl ycaPnD bOe connected directly as a to. The output voltage of a remain within the absolute maximum output voltage and the absolute - minimum output exposed in the Augme nted.Power Data Object APDO Source The Programmable Power SupplyS (hPaPlSl) ( ) exposes a with avnP posuNtpeuwt voltage that can be adjuvPstpesdV parloidgrammatically over a defined range. The output voltage of the Programmable Power Supply remain within a range defined by the relative tolerance - Adjus taanbdle t hVeo latabgsoe lSuutep pblayndA VS Augme.nted Power Data Object APDO Source TAhVeS Shall ( ) v A(vsNew) exposes a with an ovAutvpsuVta vliodltage that can be adjusted programmatically over a defined range. The output voltage of the remain within a range defined by the relative tolerance and the absolute band SourceShall VBUS Negotiated vSrcNew TheS ourceS hould transition from thSei nskta Srttainngd bvyoltage to the higher new voltage in a controlled manner. The newV v Bo Ul Stage (e.g., 5V, 9V, 15V, …) defines the nomiSnhaal lvl aNluoet for vSrcS. lDeuwrPinogs the positive transition tShoeu rce be aSbhlae ltlo supply the vSrcNew tcSurrcrSeenttt alend theS toruarncseieSnhta clulrrent to charge the toNtaelg boutilakt ed capacitance on. The slew ratet Sorfc tRheea pdoysitive transition exceedS hall. The tvrSarncsVitailoinding outputE vxopllitcaigt eC ontra cstettle within vSrcValid by. TheE xplicit Contra bcet aFbilgeu tore s 7u.p2p, \"lyT rthaen sition pEonwveelor pleev feolr aPto tshitei vnee Vwo vltoalgtae gTer abnys itions\". The positSihvea lvloltage travnSsrictiNoenw remtSaricnS aebttolvee min of the prFeivgiuorues 7.2, \"Transition En avnedlo bpee lfoowr P ositive Vo lmtaagxe oTfr tahnes intieown s\" tSrcTran (sition EOP GoodCRCMessage ). The voltage Sour cseettle to within. The starting time, t0, in starts after the last bit of the of the Figure h7a.2s bTereann rseitcieoinve Edn bvye tlohpe e for P.ositive Voltage Transitions Upper bound of valid Source range vSrcValid(max) vSrcNew(max) vSrcNew(typ) vSrcNew(min) Lower bound of valid Source range (cid:167) vSrcSlewPos Startingvoltage vSrcValid(min) beyond min/max limits of starting voltage (cid:167) t0 tSrcSettle tSrcReady VBUS Shall Not vSrcValid vSrcNew VBUS vSafe5V vSafe5V At the start of the positive voltage transition the voltage level droop min below either (i.e., if the starting voltage level is not ) or as applicable. Section 7.1.14, \"Non-application of VBUS Slew Rate Limits\" vSrcSlewPos lists transitions that are exempt from the l7im.1it..4.1.2 Fixed Supply Negative Voltage Transitions Figure 7.3, \"Transition Envelope for Negative Voltage Transitions\" Figure 7.3, \"Transition Envelope Nfoerg Naetigvaet ivvoel tVaogleta tgrae nTsriatinosnitsi oanres\" defined as shown ivnS afe0V Shall Not and avrSer cspSleecwifiNeedg in a similar manner to positive voSlhtaaglel transitions. vSrcValid Explicit Contract vSrcV daolieds not apply to Explic ittr Canonsittriaocnts. The slew rateF oigf uthree 7n.3eg, \"aTtirvaen tsritainosni tion Envelope f eoxrc Neeegda tive Voltage T. rTahnes intieognast\"ive voltage transitioSno urce remain below Shall maxv oSrf cthNee wprevious tSrcSettle and above Fig umrien 7 o.3f,t \"hTer nanewsit ion Envelope for,N aesg sahtoivwe nV oinlt aFge Transitions\" tSrcTransition EOP. The traGnosoitdioCnRiCngM essage output voltage settleS toou rce within. The starting time, t0, in starts after thFeig lausrte b 7it. 3o fT trhaen sitio onf Ethnev elope for Negativ eh aVso blteaegne r Tecreainvseidt iboyn tshe. vSrcValid(max) Startingvoltage vSrcSlewNeg (cid:167) Upper bound of valid Source range vSrcNew(max) vSrcNew(typ) vSrcNew(min) vSrcValid(min) Lower bound of valid Source range (cid:167) t0 tSrcSettle tSrcReady Negotiated vSafe5V vSrcValid Shall SourceShall vSafe5V tSrcSettle If the newly voltage is, then the limits determine the transition window and tSheec ttiroann 7s.i1ti.o14n,i n\"Ng on-app licatio nse otft lVeB wUSit Shlienw t hRea te Limits \"limits by. vSrcSlewNeg lists transitions that are exempt from the l7im.1it..4.2 SPR Programmable Power Supply (PPS) Shall VBUS RDO The Programmable Power Supply (PPSSh) all transition over the definevdP vposlNtaegwe rantgPep isnS ar ccTornatrnoslSlemda ll manner. The Output Voltage vavlPupes iSnm thaell PStreopgrammable defines the nominal vvaPlupes Nofe twhe PPS output voltage taPftpesrS crocmTrpalentsinLga rag veoltage change and settle within the limits defined by CL by for vstPeppssN semwalSlehra tllh Nano tor equal vtoP psValid, or else, within the limits defivnPepds bNye wShall N obty vPpsValid, but onlCyL in case the Programmable PoweMr aSyupply is not in mode. Any overshoot beyond exceed Shall a Nt oatny time. vAPnpys uSnledwerPsohsoot beyond vPpsSl eewxcNeeegd for currents not resulting in mode. The PPS output voltage chanSghea inll a step-wise or linear manner andL SthBe slew rate of eLiSthBer type of change exceed v Pfoprs vSoteltpage increSahsaelsl or for voltage Ndeecgroetaiasteesd. The nominal requested voltage of all linear voltage changes equate to an integer numberS hoaf ll changes. An change of the PPS output voltage is defined as. A PPS be able to supply the current level as it changes its output voltage to the requested level. All PPS voltage increases Shall result in a voltage that is greater than or equal to the previous PPS output voltage. Likewise, all PPS voltage decreasSeisn k result in a voltage that iNs elegsost itahtaend oArP eDqOual to the previous PPS output voltage. CL Sink SiBnacett ae ry can draw cVu Br Ure Snt up to the current level in case of a voltage steBpa,t ttheery voltage might not increase to the requested level due to theS opuorwceer supply operating in modSeo. uLrikceewise, since a can have a coVn Bn USected to, the voltage might not decrease to the requested PleSv_eRlD dYueM teos stahgee voltage being higher than the output voltage set point the is transitioning to. Were the to rely on checking the voltage on, in either case, to determineP wS_hReDn YitsM peosswaegre sSuhpapllly is ready a would never be sent. Wh- en thteP PpPsSSr vcoTlrtaagnes Lstaerpgse up or down, a GoodCR CMes sbaeg seent within: AcceptMessage vPpsSmallStep after the last bit of the following the for steps - tlaPrpgseSrr tchTarna nsSmall. GoodCRCMessage AcceptMessage vPpsSmallStep VBUS vPpsNew aftCeLr the last bit of the following the for steps less than or equal to provided that either the voltage on has reached or vPthpes Npeowwer supply is in mBaotdteer.y Source SinkShall Battery VBUS WSinhken is lower than the vSoeclttaiogne,7 o.2r.t1h, e\"B ehavio'sr aplr Aimspaercyt sp\"owerS iesc ctuiotn o 7ff. 2th.9e, \"Rob ust Sin k iOmpmereadtiioante\"ly disconnect its from. In these situations, the output current could reverse polarity and the is not allowed to source current (see and Figure 7.4, )\".PPS Positive Voltage Transitions\" Figure 7.5, \"PPS Negative Voltage Transitions\" vPpsMinVoltage andv PpsMaxVoltage below show the output voltage behaviorT oafb ale P1r0o.g1r1a,m \"SmPaRb Pler oPgorwamerm Saubplpe lPyo iwn erre sSpuopnpslye Vtoo lptaogsiet iRvaen agneds \"negative voltage change rvePqpuseMstins.V Tohltea pgaerameters Minim aunmd Voltage defineA tPhDe Olowerv aPnpds uMpapxeVro llimtaigtse of the PPS ranMgaex riemspuemct Vivoelltya (gseee APDO Sink APDO for required ranges). APDO coSrrheaslplonds to the Section 7.f3ie.1ld, \" iTnr athnes iPtiPoSn s cause adn bdy a Request Messag ceo\"rresponds to field in the PPS. If the negotiates for a new PPS, then the transition between the two PPS s occur asF digesucrreib 7e.d4 iPnP S Positive Voltage Transitions. egatloVniMspPv egatloVniMspPv + = )2(V (cid:167) (cid:167) vPpsMinVoltage V(1) egnaR tuptuO ylppuS rewoP elbammargorP vPpsSlewPos (cid:167) egatloVniMspPv + n+1 = )3(V (cid:167) (cid:167) egatloVxaMspPv V(4) > V(3) vPpsMaxVoltage V(4) vPpsSlewPos (cid:167) vPpsValid V(3) > V(2) (cid:167) Nominal V(3) vPpsNew (cid:167) vPpsValid vPpsSlewPos (cid:167) (cid:167) vPpsValid V(2) > V(1) (cid:167) Nominal V(2) vPpsNew (cid:167) vPpsValid (cid:167) (cid:167) (cid:167) (cid:167) Figure 7.5 PPS Negative Voltage Transitions Section 7.1.14, \"Non-application of VBUS Slew Rate Limits\" vPpsSlewNeg vPpsSlewPos lists transitions that are exempt from the and Section 7.1.8.1,l \"imAVitSs/.PPS Output Voltage Ripple\" See Section 7.1.8.2, \"AVS/PPS DNL Errors and Output fVoorl toaugtep/uCtu vrorletnatg eT orlieprpalne cleim\"its. DNL See for output voltage and current 7.1. s4te.2p.a2djustments. SPR Programmable Power Supply Current Limit SPR PPS ModeShall Operating Current RDO Sink Operating Current The Programmable Power Supply operating in liiPmpits CitLsS otuetpput current to the field valueS ihna tlhle when the Ope artatetminpgt Cs utor rdernatw more current thatnP tphseC LProgramSettle fieSlPdR PvaPlSue level. The programming step size for the OpeCrautrirnegn Ct uLirmreintt is iP.p AsCllL pNreowgramming changes of the Operating CurreCnutr rent L simetittle to thei nPepwsC LMin Source field valueS PwRi tPhPinS ModeShall Cur. rTehnet Limit Operating Current reguiPlaptsioCnL Macicnuracy during is defined as SPR PPSAPD. TOhe mSoinuirmceum programmable level is iPpsCLMin. SAh ould that supports Source support programmabiliitPyp bseCtLwMeienn Shall and the Maximum Current value in the. A which receives a request for current below reject the request. A that accepts a request for current below SPR PP S set its current limit at 1A. SPR PPS SPR PPS The response of an to a load change depends on the Operating mode of the and the magnitude of the load change. These dependencies lead to one of four possible responses of an to any load change. They are - differentiated by the value of the PPS Status OMF before and after the load chanSgPeR: PPS SPR PPS Shall vPpsValid ISfP tRh eP PPSPS Status OMF is cleared both Sbheafolrle and after the loavdP pchsNanegwe, the responds solely by mtPapisnTtarianninsige tnhte output voltage. The Sha olultput voltage remain within range. The SPR PPS response to the load change settle within the tolerance band by the time. The Operating Mode Flag remain cleared during the load change response of the -. SPR PPS SPR PPS SPR PPS SIfh tahlel PPS Status OMFi Pisp cslCeVaCreLdT rbaenfosriee nthte load change and set afteirP tphseC VloCaLdT crhaannsgiee,n tthe SPR responds by reducing its output voltage to limit the output current. The output current stay within the range once it reaches the range. The egatloVniMspPv + = )c(V egatloVniMspPv (cid:167) (cid:167) vPpsMinVoltage V(d) egnaR tuptuO ylppuS rewoP elbammargorP (cid:167) egatloVniMspPv + n + = )b(V (cid:167) (cid:167) egatloVxaMspPv vPpsMaxVoltage V(a) vPpsSlewNeg (cid:167) vPpsValid (cid:167) V(b) < V(a) vPpsNew Nominal V(b) (cid:167) vPpsValid vPpsSlewNeg (cid:167) (cid:167) vPpsValid (cid:167) V(c) < V(b) vPpsNew Nominal V(c) (cid:167) vPpsSlewNeg vPpsValid V(d) < V(c) (cid:167) (cid:167) (cid:167) (cid:167) PPS Shall iPpsCLNew tPpsCVCLTransient Shall SPR PPS response to the load change settle within the tolerance band by the time. The Operating Mode Flag be set when the load change response - settles. SPR PPS SPR PPS Shall IiPf tphseC PLTPrSa Sntastieuns tOMF is set boSPthR bPePfoSre and after the load change, Sthhea ll responds biPyp asdCjuLsNteinwg its output voltage to maintatiPn pthsCeL oSuettptulet current. The outpSuht acullrrent stay within the rangeS. TPRhe P PS response to the load change settle within the tolerance band by the time. The Operating Mode Flag remain set during the load - change response of the. vPpsNew SPR PPS If the PPS StatuSs hOaMllF is set before thveP lopasdC LchCaVnTgrea annsdie cnlteared after thSPe Rlo PaPdS change, the PPS responds to the loSahda cllhange by increasivnPg pitssN oeuwtput voltage to andtP thpesnC LmCaViTnrtaainnsiniegn itt. The output voltSahgae ll stay within the range. The response to the load change settle within the tolerance band by the time. The Operating SPRM PoPdSeS oFulargc eShal lbe cleared when the PPS load change response settles. RDO Current Limit The Cu rrent L mimaiitntain its output voltage at tShPeR v PaPluSe requested in the PPS forv Palpl ssSthatuictd aonwd n dSoyunracmeiMc aloyad conHdaitriodn Rse esxecteSpigt nwahliengn in Shall opeVra Bt Ui Son. IvnS raefsep0oVnse to any statiUc SoBr Ddyenfaaumlti cO ploearda tion cvoSnadfeit5iVon during operation that causes the output voltage to drop below the send and discharge to then resumes at. Sink RDO SourceShall Source Current Limit Shall iPpsCLNew Sink WMahye nN tohte attempts to draw more current than thReD OOperating Current in the, the limit its output current. The current available from the during mode meet. The reduce Siths aOlplerating Current requeSsPtR i nP PthSeS ource wShiennk the PPS Status OMF is set. Shall Section 7.2.9, \"Robust Sink Operation\" SourceShall Not Current limiting be performCeudrr beyn tt hLeim it. s that rely on PPS Current Limiting mSeecetti othne 7re.1q.7u,i r\"eRmobeunstts Soofu rce Operation\". TheS ource shutdown or otherwise disrupt the available output power while in mode unless another protection mechanism as outlined in SPR PPSSource is engaCguerdr etnot p LriomteitcSt hthaell Not from damage. iPpsCLLoadStepRate iPpsCLLoadReleaseRate An that is operating in change its set-point in a manner that exceeds or SPR PPS. SPR PPS Current LimitShall Figure 7.6, \"SPR PPS Programmable Voltage and Current Limit\" Constant TVohlet argeelationship betweCeunr rent Limi tprogrammable output voltage and programmable Shall be as shown in Current Limit. The transition between the SourceS mhaoldle and the iPpsCLNew mode occurs between points a and b. The PPS Status OMF be set or cleared within this region. In mode when the load resistance changes, the output current of the stay within. The proper behavior is represented by point c. Figure 7.6 SPR PPS Programmable Voltage and Current Limit Current SourceMay Source PDP Rating Sink May RDO Shall In SCeocntisotann 7t. 2P.o9w, \"eRro mbuosdt eS i(nwkh Oepne trhaeti PonP\"S Power Limited bit is set) the supply power that exceeds the 's. s limit their Operating Current request in the and meet the requirements of. Shall Not Figure 7.7, \"SPR PPS Constant Power\" The tolerances along the Constant Power Curve extend into the Guaranteed Capability Area of. Voltage PPS APDO Max Voltage vPpsNew Programmable Voltage & Current Limit Flag cleared Programmable Current Limit Region PPS RDO a Output Voltage b Current Limit Flag set iPpsCLNew Programmable Voltage Only Region PPS APDO Min Voltage (max) c c c vPpsShutdown (min) Valid Current Limit Response Invalid Current Limit Response Source Disconnect Region iPpsCLMin PPS RDO PPS APDO Operating Current Max Current Point arepresents entry into the transition region between Constant Voltage mode and Current Limit mode. Point brepresents exit from the transition region between Constant Voltage mode and Current Limit mode. Point c represents the exit from the iPpsCLNewregion as the voltage drops below the PPS APDO Min Voltage. The Source Maydisconnect at any point inside the tolerance range of the minimum voltage defined in the PPS APDO. Figure 7.7 SPR PPS Constant Power Capabilities when the Power Limited bit is set e The figure shows only the steady state after the transition g a t PDP constant power ol curve V iPpsCLNew vPpsNew Max APDO Voltage vPpsNew (X = PDP/PPS APDO Max Current, Y = PPS APDO Max Voltage) Coordinate applies when PPS Power Limited is set Example: - PDP = 27 W - PPS APDO Max Voltage = 11 V Coordinate = (2.45, 11) (X = PPS APDO Max Current, Y = Prog Voltage) Coordinate applies when PPS Power Limited is set Example: - PDP = 27 W - Prog Voltage = 9V - PPS APDO Max Current = 3 A Coordinate = (3, 9) vPpsNew Min APDO Voltage vPpsNew Valid Current Limit Range 0V 0A iPpsCLMin(1A) PPS APDO Current Min Current Limit Max Current Nominal limits as pr. the APDO Guaranteed operating capability as pr. the APDO Tolerance area for actual voltages (only static tolerances are shown) Adjustable Voltage Supply AVS Shall VBUS AVSRDO AVS The Shall ( ) transition ovvAevrs tNheew definteAdv svSorlctaTgrea rnasnSgme ainll a controlled manner. The Outputv VAovlstaSgmea vlalSluteep in the defines the nominal vavlAuev soNf ethwe tA ovustSprucTt vraolntsaLgae ragfteer completing a voltagveA cvhsSamngael laSntde p settle within the limvitAsv dseNfienwedS hbya ll Not by vAvsValid for steps smaller than or equalv tAov sNewShall Not, or else, vwAitvhsiVna tlhide limits defined byA VS by May for steps larger than. Any overshoot beyond Shall No etxceed vAvsSlew aPt oansy time. Any undershoot bvAeyvosSnlde wNeg exceed at any time. The output voltage change iSnh aa slltepwise or linear manner and LthSBe slew rate of eLiSthBer type of chanAgeV S exceed vA fvosrS vtoelptage iAnVcrSeSahseasll or for vNoeltgaogtei adteecdreases. The nominal requested voltage of all linear voltage changes equate to an integer number of changes. An vA cvhsaSnmgael olSf ttehpe outpuvt AvvosltNaegwe is deAfiVnSed as. AnS hal l be able to supply the current level as it changAeVsS its output voltage to the requAesVtSed level if the changSeh oafl l output voltage is less than or equal to relatiAveV Sto. All voltage incSroeuarscees resuAltV inS a voltage that is greater than or equal to the previous output voltage. Likewise,v aAllv sSm vaolllStategpe decreases result in a voltage that is less than or equal to the previous output voltage. Any time the enters the range of opAeVrSation that voltage transition iPs Sc_oRnDsiYdeMreesds aag veoSlthaaglel step larger than. Wh- en thteA vsSr vcoTlrtaagnes Lsaterpgse up or down, a GoodCR CMes sbaeg seent within: AcceptMessage vAvsSmallStep after the last bit of the following the for steps - tlaArvgseSrr tchTarna nsSmall. GoodCRCMessage AcceptMessage vAvsSmallStep VBUS vAvsNew after the last bit of the following the for steps Figure 7l.8es, s\"A thVaSn P oorsi etiqvue aVl otlot age Transitions\" provFidigeudr teh 7e. 9v,o \"lAtaVgSe Noeng ative h Vaosl traegaec hTerda nsitions\". AVS vAvsMinVoltage vAvsMaxVoltage and AVS below show the output voltage behavior of an in response to positive and negative voltage change requests. The parameters - SPR A VanSdS ource define the lower and upper limits of tvhAev sMin rVanogltea rgeespectively: vAvsMaxVoltage Source PDP Table10.9, \"SPR Adjustable FVoorlt age Supp ly (AVSs) t hVeorltea agree R twanog peos\"ssible voltage ranges where the is always 9V and is either 15V or 20V depending on the 's. See - EPR AVSSource vAvsMinVoltage. Minimum Voltage EPR AVSAPDO vAvsMaxVoltage Maximum Voltage EPR AVSAPDO FToarb le10.15, \"EPR Ads justable Voltage S ucopprrlye s(pAoVnSd) sV toolt age Ranges\" field (always 15V) in the and corresponds to field in the. See for required ranges. Figure 7.8 AVS Positive Voltage Transitions Figure 7.9 AVS Negative Voltage Transitions Section 7.1.8.1, \"AVS/PPS Output Voltage Ripple\" See Section 7.1.8.2, \"AVS/PPS DNL Errors and Output fVoorl toaugtep/uCtu vrorletnatg eT orlieprpalne cleim\"its. DNL See for output voltage step adjustments. egatloVniMsvAv egatloVniMsvAv + = )2(V (cid:167) (cid:167) vAvsMinVoltage V(1) egnaR tuptuO ylppuSegatloV elbatsujdA vAvsSlewPos (cid:167) egatloVniMsvAv + n+1 = )3(V (cid:167) (cid:167) egatloVxaMsvAv V(4) > V(3) vAvsMaxVoltage V(4) vAvsSlewPos (cid:167) vAvsValid V(3) > V(2) (cid:167) Nominal V(3) vAvsNew (cid:167) vAvsValid vAvsSlewPos (cid:167) (cid:167) vAvsValid V(2) > V(1) (cid:167) Nominal V(2) vAvsNew (cid:167) vAvsValid (cid:167) (cid:167) (cid:167) (cid:167) egatloVniMsvAv + = )c(V egatloVniMsvAv (cid:167) (cid:167) vAvsMinVoltage V(d) egnaR tuptuO ylppuSegatloV elbatsujdA (cid:167) egatloVniMsvAv + n + = )b(V (cid:167) (cid:167) egatloVxaMsvAv vAvsMaxVoltage V(a) vAvsSlewNeg (cid:167) vAvsValid (cid:167) V(b) < V(a) vAvsNew Nominal V(b) (cid:167) vAvsValid vAvsSlewNeg (cid:167) (cid:167) vAvsValid (cid:167) V(c) < V(b) vAvsNew Nominal V(c) (cid:167) vAvsSlewNeg vAvsValid V(d) < V(c) (cid:167) (cid:167) (cid:167) (cid:167)", "tables": ["Table 7.23"], "figures": ["Figure 7.3", "Figure 7.4", "Figure 7.5", "Figure 7.6", "Figure 7.6", "Figure 7.7", "Figure 7l", "Figure 7.8", "Figure 7.9"], "page_range": [313, 321]}
{"section_path": "7.1.5 Response to Hard Resets", "start_heading": "7.1.5 Response to Hard Resets", "content": "AVSShall AVSRDO RDO SPR PPS AVS The maintainM iatsy output voltage at the vaPluDeP requested in the for all static and dynamic load conditions that do not exceed the Operating Current in the. Unlike the programmable current, the programmable power range from zero to the. The- maximuSmP Ro pSoeurartcieng current: SPRSource_CapabilitiesMessage Maximum Current 15V Maximum Current 20V For s, the maximum operating current is defined in the - EPR Source / fields. PDP Output Voltage Table10.12, \"EPR Source Capabilities based on the FPoorr t Maximum Ps,D tPh ea nmda uxisminugm an o EpPerRa Ctianpga cbulerr Ceanbt lhea\"s to be calculated as the lower of the field value/ or 5A whichever is lower. See Hard ResetSignaling SourceShall VCONN Shall R VCONN Shall VBUS vSafe0V Figure 7.10, \"Source VBUS and VCONN Respo nse to Ha ridn dRiecsaette\"s a communication failMuraey has occurred anHda trhde R eset stVo Bp U d Sriving, remvoSvaef e5p Vfrom the pin and drive to as svhSoawfen0 iVn VBUS SourceShall tSrcRecover. The USB connectioVn C ONN reset during aV BUS vSaf es5inVce thSoeu rceS vhoalltlage will be lessV th COa Nn N for an extende[dU SpBer Tioydp eo-fC t i2m.4e]. After establishing the voltage condition on, the wait before re-applying and restoring to. A conform to thSei nk timing aHsa srpde Rciefsieedt in cSnkBulkPd. VBUS vSafe0V SourceShall A that enters can have present until drops below. The take this into consideration. Hard Reset Dev- ice operation during and aSfhteoru al d Not is defined as follows: Hard Reset Section 9.1.2, \"Mapping to USB Device States\" Self-powered devices disconnect from USB during a (see - ). vSafe5VMay Not Hard Reset Self-powered devices operating at more than maintain full functionality after a -. Hard Reset Bus powered devices will disconnect from USB during a due to the loss of their power Hsoaurrdc Re.eset SourceShall VCONN Shall R VCONN Shall VBUS vSafe0V When a occurs the stop driving, remove p from the pin and start to tr- ansittPioSnH tahred Rese tvoltage to eitheHr:ard ResetSignaling Sink - tPSHardReset after the last bit of the Hard Reset Signaling has been received froSmou trhcee or SourceShall after ttShaef ela5sVt bit oft Sthaefe 0V has been sent by the. Figure 7.10, \"Source VBUS and VCONN Response to Hard Reset\" The meet both and relative to the start of the voltage transition as shown in.", "tables": [], "figures": [], "page_range": [322, 322]}
{"section_path": "7.1.6 Changing the Output Power Capability", "start_heading": "7.1.6 Changing the Output Power Capability", "content": "Figure 7.10 Source VBUS and VCONN Response to Hard Reset Old voltage (cid:167) vSafe5V(max), VCONN(max) vSafe0V(max) vVconnDischarge 0V t0 vSrcNeg(max) tVconnDischarge tVconnOn tSafe5V tSrcRecover tSafe0V tSrcTurnOn VCONN Figure 7.10, \"Source VBUS and VCONN Response to Hard Reset\" Cable Plug VCONNShall will mVBe Ue St tVCONNDivsSchaafer5geV relative to the start of the voltage transition as shown in due to the discharge circuitry in the. meet tVCONNOn rNeolateti:ve to reaching. [USB Type-C 2.4] Negotiation Source SourceShall tSSormcRe eUaSdBy Power Delivery s will require the to adjust its output power capability without changing the output voltage. In this case the be able to supply a higher or lower load current within Source Shall Source Source s implemSehnatl olver current protection to prevent damage from output current that exceeds the current handling capability of the. The definition of curreHnatr hda Rnedsleitng cEaprraobri lRiteyc oisv leerfyt to Sthhea ldl iNscortetion of the iNmepgloetmiaetendtaVt Bio Un S and take into consideration the current handling capability of the connector contacts. If the over current protection implementation does not use a or, it interfere with the current level. SourceShall ErrorRecovery SAoftuerrc ethrSeheo cuolndsecutive over curHreanrtd e Rveenstest Signalin g go to. Alert Message OCP Explicit Contract s May attempt to send Port when over current protection engages followed by an Should indicating an UevSeBn Dt eofnacuel ta Onp eration has been established. The over current protection response M aenygage at either the oPr osrytstem level. Systems or ports that have engaged over current protection attempt to resume Sourc eafter determining that the cause of over current is no longer present and latch off to protect the or system. The definition of how to detect if the cause of over current is stiSllo purrecseeSnhta isll lRefet- ntoe gthotei adtiescretion ofS tihnek implementation. USB Default Operation Re-negotiate Source The with the after choosing to resume. The decision of how to SourceSha lalfter an over current event is lePfotr tto the discretion of the implementation. USB Default Operation Re-negotiation Port The prevent continual system or cycling if over current protection continues to engage after initially resuming either or. Latching off the or system is an acceptable response to recurring over current. Port Source VBUS vSafe5VShall VBUS vSafe5V tSafe5V vSafe0V tDSuarfien0gV the over current response and subsequent system or shutdown, all affected ports operating with greater than discharge to by the time and by the time.", "tables": [], "figures": ["Figure 7.10"], "page_range": [323, 323]}
{"section_path": "7.1.7 Robust Source Operation", "start_heading": "7.1.7 Robust Source Operation", "content": "Figure 7.10 Source VBUS and VCONN Response to Hard Reset Old voltage (cid:167) vSafe5V(max), VCONN(max) vSafe0V(max) vVconnDischarge 0V t0 vSrcNeg(max) tVconnDischarge tVconnOn tSafe5V tSrcRecover tSafe0V tSrcTurnOn VCONN Figure 7.10, \"Source VBUS and VCONN Response to Hard Reset\" Cable Plug VCONNShall will mVBe Ue St tVCONNDivsSchaafer5geV relative to the start of the voltage transition as shown in due to the discharge circuitry in the. meet tVCONNOn rNeolateti:ve to reaching. [USB Type-C 2.4] Negotiation Source SourceShall tSSormcRe eUaSdBy Power Delivery s will require the to adjust its output power capability without changing the output voltage. In this case the be able to supply a higher or lower load current within Source Shall Source Source s implemSehnatl olver current protection to prevent damage from output current that exceeds the current handling capability of the. The definition of curreHnatr hda Rnedsleitng cEaprraobri lRiteyc oisv leerfyt to Sthhea ldl iNscortetion of the iNmepgloetmiaetendtaVt Bio Un S and take into consideration the current handling capability of the connector contacts. If the over current protection implementation does not use a or, it interfere with the current level. SourceShall ErrorRecovery SAoftuerrc ethrSeheo cuolndsecutive over curHreanrtd e Rveenstest Signalin g go to. Alert Message OCP Explicit Contract s May attempt to send Port when over current protection engages followed by an Should indicating an UevSeBn Dt eofnacuel ta Onp eration has been established. The over current protection response M aenygage at either the oPr osrytstem level. Systems or ports that have engaged over current protection attempt to resume Sourc eafter determining that the cause of over current is no longer present and latch off to protect the or system. The definition of how to detect if the cause of over current is stiSllo purrecseeSnhta isll lRefet- ntoe gthotei adtiescretion ofS tihnek implementation. USB Default Operation Re-negotiate Source The with the after choosing to resume. The decision of how to SourceSha lalfter an over current event is lePfotr tto the discretion of the implementation. USB Default Operation Re-negotiation Port The prevent continual system or cycling if over current protection continues to engage after initially resuming either or. Latching off the or system is an acceptable response to recurring over current. Port Source VBUS vSafe5VShall VBUS vSafe5V tSafe5V vSafe0V tDSuarfien0gV the over current response and subsequent system or shutdown, all affected ports operating with greater than discharge to by the time and by the time. Source Shall OTP Source s implement Over Temperature Protection ( ) to prevenSto duarmceage from temperature that exceeds the thermal capability of the. The definition of thermal capability and the monitoring locations used to trigger the over temperature pOrToPtection aSroeu lrecfet toM tahye discretion of the implementation. Sink Source In order to avoid reaching an event, s Sou prrcoeaSchtiovuelldy reduce thAe laevratiMlaebslsea pgoewer being offered to the, even though these offers might be lower than the SO wPoSutaldt ubse Mexepsseacgteed to offer during normal thermal operating conditions. Prior to reducing power, the generate indicating an Operating CSoounrdcietioSnh Cohualdnge and set the TeHmapredr aRteusreet SStiagtnuasl binigt in the OTP to WarniAnlge r(t1M0be)s.sage OTP Explicit Contract OTP May Port s attempt to send OTP wShhoeunl d engages followedU SbBy aDne fault O peration indicaMtianyg an event once an Port has been established. The response engage at either the or system level. Systems or ports that have engaged attempt to resume and latchS oofufr tcoe pSrhoatlelcRt eth-nee gotia oter system. Sink USB Default Operation Re-negotiate Source The with the after choosing to resume. The decision of how to SourceSha lalfter an over temperature evePnotr its left to the discretion of the implementation. USB Default Operation Re-negotiation Port The prevent continual system or cycling if over temperature protection continues to engage after initially resuming either or. Latching off the or system is an acceptable response toO rTePcurring over temperature. Port Source VBUS vSafe5VShall VBUS vSafe5V tSafe5V vSafe0V tSafe0V During the and subsequent system or shutdown, all affected ports operating with greater 7th.a1n.7.3 d ivscShaarfgee5 V E tox terna lblyy t hAep tipmlei ed to Panodr ts Sup bpy tlhyei ntimge v Safe5. V Source Shall vSafe5V VBUS VBUS Shall vSafe5V SvaSfaef eo5pVeration mandates that Power Delivery s be tolerant of being present on when simultaneously applying power to. Normal USB PD communication be supported when this to Detach CC USB Type-C Source Detached SourceShall vSafe0V tSafe0V Detach A UvSSBa fe0V isV d Be Ut Sected elecSthraiclallly using vS daeftee5cVtion on thteS afe5V connector. WhenD ethtaec h is the Shall N ot transivtSioanf eto5 V by relative to when the event occurred. During the transition to the voltage be below max by relative to when the event occurred aSnoudr ce exceedE PR Mode max after this time. [USB Type-C 2.4] Source EPR Mode s operating in Sh anleled to avoid creating large differentialV v Bo Ul Stages at the connectoMra. Syee Appendix H in the spSeocuifricceation for background informSahtoiounld. To achieve this, s operating in, upoSno duertceecting a disconnect, stop sourcing current aSnodu mrcienimize capacitance. There continue to be current sourced frSoomur tchee bulk capacitFaingcuer,e b 7u.t1 t, h\"Palta cement a olfs oS obuer mcei nBiumlki zCeadp bayc idtaisnccoen\"necting as much of the bulk capacitance as possible. For example, the can stop sourcing from the Power Supply and the C1 portion of the bulk capacitance in by disabling the OhmSico uInrcteerSchoonunledct switch. VBUS CC VBUS The detect the disconnect, stop sourcing current, and minimize the capacitance as quickly as practical. If this is done after the contacts disconnect and before the contacts disconnect there is less risk Nofo ltaer:ge differential voltages at the conneScotourr.ce Source A USB-PD transmission by the during a disconnect event will delay disconnect detection by the Source Shall vSrcNew vSrcValid vPpsNew vPpsValid vAvsNew vAvsValid NegotiatedVBUS Source Shall The output voltage of s account for, or, or, as determined by the value. s meet applicable safety and regulatory requirements.", "tables": [], "figures": ["Figure 7.10"], "page_range": [323, 324]}
{"section_path": "7.1.8 Output Voltage Tolerance and Range", "start_heading": "7.1.8 Output Voltage Tolerance and Range", "content": "tSrcReady Source Shall vSrcNew vSafe5V vSrcNew vASftaefre 5a Vvoltage transition is complete (i.e., after ) and during static load conditions the output voltage remain within the tSrcRead oyr limits as applicable. The ranges dSoeufirnceed by anSdh all Not account for DC regulation accvuSrraccVya, lliidne regulation, load regulatSioonu racned output ripple. After a voltage transition is comvpSrlectNee (wi.e., avftSearf e5V vS)r acnVda ldidurSihnag ltlr Nanostient loadtS crocnTdriatinosnise nthte oTuatbpluet7 v.o2l3t,a \"gSeo urce Elec tgroic bael yPoanrdam theete rrasn\"ge specified by. The amount of time thFeig ure 7.1 1o,u \"tAppupt lvicoalttaiogne ocaf nvS brecN ine wth aen bda nd bvSertcwVeaelnid e liitmhietrs after tSrcR oera dy\" and v SerxccNeeedw vSrcValid. Refer to for the output voltage tolerance specifications. illustrates the application of and after the voltage transition is compvlSertceN.ew vSrcValid Shall Not VBUS VBUS Fast Role Swap Section 7.1.13, \"Fast Role Swap\" The and limits apply to during the discharge and switchover that occurs during a Figur ea s7 d.1e1sc Aripbpeldic iant ion of vSrcNew and vSrcValid. limits after tSrcReady vSrcValid(max) vSrcNew(max) vSrcNew(typ) vSrcNew(min) tSrcTransient window vSrcValid(min) iLoadStepRate Sink Load I1 tSrcReady Source Shall SourceShall The output voltage be measured at the connector receptSaeccleti. oTnh 7e. 2s.t6a,b \"iTlirtayn osfi etnhte L oad Be havio rb\"e tested in 25% load step iSnhcarellments from minimum load to maximum load and also from maximum load to minimum load. The transient behavior of theS olouardce current is defined in. The time between each step be sufficient to allow for the output voltage to settle between load steps. In some systems it might be necessaryS toou drceesign the to compensate for the voltage drop between the output stage of the power supply electronics and the receptacle contact. The determination of whether compensation is necessary i7s.l1ef.t8 to. 1the discretio nA oVf Sth/e PPS O imuptlpemuetn Vtaotiolnta. ge Ripple AVS PPS LSB Figure 7.12, \"Expected AVS/PPS Ripple Relative to an LSB\" The / output voltage ripple is expected to exceed the magnitude of one or more as show in the. (cid:1091)(cid:3)(cid:3) tSrcTransient windows (cid:1091)(cid:3)(cid:3) (cid:1091)(cid:3)(cid:3) Sink Load I2 iLoadReleaseRate Figure 7.12 Expected AVS/PPS Ripple Relative to an LSB time LSB DNL Figure 7.13, \"Allowed DNL errors and tolerance of Voltage and Current in AVS/PPS mode\" LSB The PPS voltage and current discrvePtep sSte sptevpAsv hsaSvtee pa tolerance aisP pshsoCwLSnt einp ValidLSB Figure 7.13, \"Allowed DNL b eerlroowrs. aInn da btosolelruaten ctee romf Vs othltea gsete apn sdi zCeu orrf etnhte in AV fSo/rP bPoSt h vmooltdaeg\"e and current is defined by / for voltage and for current. Several examples of steps are shown in - : DNL LSB - The upper end of the DNL error (+1L SB ) shows the case where one step is effectively skipped. The lower end of the error (-1 ) shows the case where the voltage or current set-point remained the sameD.NL The ideal scenDaNriLo for the error (=0) matches the typical step size for the voltage or current. The intent of is to guarantee that changes to the voltage/current have the correct directionality, and that the mNoatxeim: um stepS soiuzrec iesS chleoaurlldy defined. DNL The avoid scenarios where multiple consecutive steps have errors close to the Maximum and Minimum. egatlov +1 LSB +1 LSB Figure 7.13 Allowed DNL errors and tolerance of Voltage and Current in AVS/PPS mode Code Range tPpsSrcTransSmall tPpsSrcTransLarge Source Shall vPpsNew After a voltage transition of av PPprosgNreawmmable Power Supply is complete (i.e. after or ) and during static load conditions the tPp soSurtcpTurt avnosltSamgea ll t rPepmsSarinc TwriathnisnL tahreg e limits. The range defined by So aucrccoeunts for DC reguSlhataiolln N aoctcuracy, line regulation, load regulavtPiopns aVnadli d output ripple. After a voSltoaugrec teransition is complete (i.e. after vPpsNe wor vPpsValidShall )N aontd during ttrPapnssTiernatn lsoiaedn tconditions the output voltage go beyond the range specified by. The amount of time the output voltage can be in the band between and e7x.c1ee.8d.4 A.djustable Voltage Supply Output Voltage tolerance and Range AVS tAvsSrcTransSmall tAvsSrcTransLarge Source Shall vAvsNew vAAftvesrN ae vwoltage transition of an is complete (i.e. after or ) and during static load conditions the t AovustSpructT vroaltnasgSem all retAmvasiSnr wcTitrhainns tLhaer ge limits. The range defined by Source accounts for DC Srehgaulll aNtiootn accuracy, line regulation, load revgAulvastVioanli adnd output ripple. After a vSoolutargcee transition is complete (i.e. after vAvsNew or vAvsValidShall N)o atnd durintgA vtrsaTnrsaiennstie lonatd conditions the output voltage go beyond the range specified by. The amount of time the output voltage can be in the band between and exceed. Voltage, Current Max DNL = 1 LSB vPpsNew,vAvsNew, iPpsNew (max) DNL < 0 LSB DNL = -1 LSB vPpsNew,vAvsNew, iPpsNew (min) vPpsNew,vAvsNew, iPpsNew", "tables": [], "figures": ["Figure 7.12", "Figure 7.13"], "page_range": [325, 327]}
{"section_path": "7.1.9 Charging and Discharging the Bulk Capacitance on VBUS", "start_heading": "7.1.9 Charging and Discharging the Bulk Capacitance on VBUS", "content": "SourceShall VBUS Source Negotiated Shall Not STohuer ce charget aSnrcdR deiascdhyarge the bulk capacitance on whenever the voltage is to a different value. The charging or discharging occurs during the voltage transition and interfere with the 7.1.1's0 ability to mSweeta p Stan.dby for Sources Source Sink Dual-Role Power PortShall Swap Standby Swap Standby Source Source VBUS vSafe0V Power Role Swap s and s of a support. occurs for the after the power supply has discharged the bulk capacitance on to as part of the transitionS.wap Standby Wh- ile in SourceSha:ll Not VBUS vSafe0V - The drive that is therefore veSxapfeec0teVdS thoa rlelmain at. VBUS - Any Ddiusaclh-Raroglee Pciorwcueirt rPyo rthtaSth walals used to achieve Sink be removed from. - The Shall Not be configured asv aS afe5.V VBUS Section 9.1.2, \"Mapping to USB Device States\" The USB connection reset even though is no longer present on (see PS_RDYMessage ). Source Swap StandbyShall VBUS Source Swap StandbyShall Not tSrcSwapStdby STwhea p Standb y Sou arscseociated with the Po wbeeirn Rgo ilne Source be sent after the New dSrinivke is removed. The time foSrw tahpe Standb yto transition tNo ew SinkShall exceedtN ewSnk New. U Spinokn Menatyering, the hSaosu rrecleinquished itPsS _RDYMess aagse and is ready to become the. The transition time from to being the be no more than. The start u7s.i1ng. 1po1wer afte r Sthoe nuerwc e Pe saeknd Cs tuher rent Opera. tion Source Fixed SupplyPDO AVSAPDO Shall Capabilities Table6.10, \"Fixed Power Source Peak Current Capability\" ATa ble6.1 6th, \"aEt PhRas A tVhSe Power Source Pea ko Cr urre nt Cap aPbeialikty C\"urrent bits set to 01b, 10b and 11b be designed to support one of the overload definTeadb lien 6.10, \"Fixed Power Source Peak Current Capability\" or Table6.16, \"EPR AVS Power Source Peak Current Capability\" rSeosupreccetively. The overload conditions are bound in magnitude, duration and duty cycle as listed in Source vSrcPeak or vSrcNew Figure 7.14, \"So. urce Pesa ka rCeu nrroetn rte Oqvueirreloda tdo\" support continuous overload operation. When oSovuerrlcoead conditions occur, the is allowed the range of (instead of ) relatSiovue rtcoe the noSmouirncael Mvaaluye (see Source_CapabilitiesMessage ).F Wixehde nS utphpel oyvPeDrOload AVS AcaPpDaObility is exceeded, the is expected take whatever action is necessary to prevent electrical or thermal Ndaemgoatgiaet teod the S.i nTkhe send a new with the or Peak Current bits set to 00b to prohibit overload operation even if an overload capability was previously with the.", "tables": ["Table 6.16"], "figures": [], "page_range": [328, 328]}
{"section_path": "7.1.10 Swap Standby for Sources", "start_heading": "7.1.10 Swap Standby for Sources", "content": "SourceShall VBUS Source Negotiated Shall Not STohuer ce charget aSnrcdR deiascdhyarge the bulk capacitance on whenever the voltage is to a different value. The charging or discharging occurs during the voltage transition and interfere with the 7.1.1's0 ability to mSweeta p Stan.dby for Sources Source Sink Dual-Role Power PortShall Swap Standby Swap Standby Source Source VBUS vSafe0V Power Role Swap s and s of a support. occurs for the after the power supply has discharged the bulk capacitance on to as part of the transitionS.wap Standby Wh- ile in SourceSha:ll Not VBUS vSafe0V - The drive that is therefore veSxapfeec0teVdS thoa rlelmain at. VBUS - Any Ddiusaclh-Raroglee Pciorwcueirt rPyo rthtaSth walals used to achieve Sink be removed from. - The Shall Not be configured asv aS afe5.V VBUS Section 9.1.2, \"Mapping to USB Device States\" The USB connection reset even though is no longer present on (see PS_RDYMessage ). Source Swap StandbyShall VBUS Source Swap StandbyShall Not tSrcSwapStdby STwhea p Standb y Sou arscseociated with the Po wbeeirn Rgo ilne Source be sent after the New dSrinivke is removed. The time foSrw tahpe Standb yto transition tNo ew SinkShall exceedtN ewSnk New. U Spinokn Menatyering, the hSaosu rrecleinquished itPsS _RDYMess aagse and is ready to become the. The transition time from to being the be no more than. The start u7s.i1ng. 1po1wer afte r Sthoe nuerwc e Pe saeknd Cs tuher rent Opera. tion Source Fixed SupplyPDO AVSAPDO Shall Capabilities Table6.10, \"Fixed Power Source Peak Current Capability\" ATa ble6.1 6th, \"aEt PhRas A tVhSe Power Source Pea ko Cr urre nt Cap aPbeialikty C\"urrent bits set to 01b, 10b and 11b be designed to support one of the overload definTeadb lien 6.10, \"Fixed Power Source Peak Current Capability\" or Table6.16, \"EPR AVS Power Source Peak Current Capability\" rSeosupreccetively. The overload conditions are bound in magnitude, duration and duty cycle as listed in Source vSrcPeak or vSrcNew Figure 7.14, \"So. urce Pesa ka rCeu nrroetn rte Oqvueirreloda tdo\" support continuous overload operation. When oSovuerrlcoead conditions occur, the is allowed the range of (instead of ) relatSiovue rtcoe the noSmouirncael Mvaaluye (see Source_CapabilitiesMessage ).F Wixehde nS utphpel oyvPeDrOload AVS AcaPpDaObility is exceeded, the is expected take whatever action is necessary to prevent electrical or thermal Ndaemgoatgiaet teod the S.i nTkhe send a new with the or Peak Current bits set to 00b to prohibit overload operation even if an overload capability was previously with the.", "tables": ["Table 6.16"], "figures": [], "page_range": [328, 328]}
{"section_path": "7.1.11 Source Peak Current Operation", "start_heading": "7.1.11 Source Peak Current Operation", "content": "SourceShall VBUS Source Negotiated Shall Not STohuer ce charget aSnrcdR deiascdhyarge the bulk capacitance on whenever the voltage is to a different value. The charging or discharging occurs during the voltage transition and interfere with the 7.1.1's0 ability to mSweeta p Stan.dby for Sources Source Sink Dual-Role Power PortShall Swap Standby Swap Standby Source Source VBUS vSafe0V Power Role Swap s and s of a support. occurs for the after the power supply has discharged the bulk capacitance on to as part of the transitionS.wap Standby Wh- ile in SourceSha:ll Not VBUS vSafe0V - The drive that is therefore veSxapfeec0teVdS thoa rlelmain at. VBUS - Any Ddiusaclh-Raroglee Pciorwcueirt rPyo rthtaSth walals used to achieve Sink be removed from. - The Shall Not be configured asv aS afe5.V VBUS Section 9.1.2, \"Mapping to USB Device States\" The USB connection reset even though is no longer present on (see PS_RDYMessage ). Source Swap StandbyShall VBUS Source Swap StandbyShall Not tSrcSwapStdby STwhea p Standb y Sou arscseociated with the Po wbeeirn Rgo ilne Source be sent after the New dSrinivke is removed. The time foSrw tahpe Standb yto transition tNo ew SinkShall exceedtN ewSnk New. U Spinokn Menatyering, the hSaosu rrecleinquished itPsS _RDYMess aagse and is ready to become the. The transition time from to being the be no more than. The start u7s.i1ng. 1po1wer afte r Sthoe nuerwc e Pe saeknd Cs tuher rent Opera. tion Source Fixed SupplyPDO AVSAPDO Shall Capabilities Table6.10, \"Fixed Power Source Peak Current Capability\" ATa ble6.1 6th, \"aEt PhRas A tVhSe Power Source Pea ko Cr urre nt Cap aPbeialikty C\"urrent bits set to 01b, 10b and 11b be designed to support one of the overload definTeadb lien 6.10, \"Fixed Power Source Peak Current Capability\" or Table6.16, \"EPR AVS Power Source Peak Current Capability\" rSeosupreccetively. The overload conditions are bound in magnitude, duration and duty cycle as listed in Source vSrcPeak or vSrcNew Figure 7.14, \"So. urce Pesa ka rCeu nrroetn rte Oqvueirreloda tdo\" support continuous overload operation. When oSovuerrlcoead conditions occur, the is allowed the range of (instead of ) relatSiovue rtcoe the noSmouirncael Mvaaluye (see Source_CapabilitiesMessage ).F Wixehde nS utphpel oyvPeDrOload AVS AcaPpDaObility is exceeded, the is expected take whatever action is necessary to prevent electrical or thermal Ndaemgoatgiaet teod the S.i nTkhe send a new with the or Peak Current bits set to 00b to prohibit overload operation even if an overload capability was previously with the.", "tables": ["Table 6.16"], "figures": [], "page_range": [328, 328]}
{"section_path": "7.1.12 Source Capabilities Extended Parameters", "start_heading": "7.1.12 Source Capabilities Extended Parameters", "content": "Figure 7.14 Source Peak Current Overload Operating range for supply that DOES Source Port Voltage NOT support overload capability Additional operating range for vSrcNew(max)/ Fixed Supply that supports vSrcPeak(max) overload capability Nominal Voltage vSrcNew(min) vSrcPeak(min) Sink Port Current I level % level with respect to I OC OC as requested in the Operating as advertised in the Peak Current Current field of an RDO field of Fixed Supply PDO PDUSBSource Static Implementers can choose to make availaSbtalet iccertain characteristics of a Sectio ans 6 a.5 s.1e,t of and/or d\"Syonuarmcei_cC paapraabmileittieerss_ Etoxt iemndperdo vMe eisnstaegreo\"perability betwFiegeunr ee x6t.e3r7n, a\"Sl opuorwcee_rC saopuarbcielist iaensd_E pxoterntadbelde Mcoemsspaugeti\"ng devices. The complete list of reportable parameStoeurrsc eis C daepsacbriiblietide sin full in and listed in. The subset of parameters listed below directly represent and are described in the rest of this sect- ion. - Voltage Regulation. - Holdup Time. - Compliance. - PSoeuarkc Ceurrent. - Inputs. 7.1.12B.a1tteries. Voltage Regulation Field Source Voltage Regulation The power consumption of a deSvoiucrec cean change dynamically. The ability of the to regulate its voltage output might be important if the device is sensitive to fluctuations in voltage. The bit field is used to c7o.n1v.e1y2 in.1fo.r1mation abo u Lt othae d Steps oSultepuwt rRegautlaetion and tolerance to various load steps. SourceShall Source_Capabilities_ExtendedMessage The default load step slew rate is established at 150mA/µs. A meet the following requirements under the - load stepS roeuprocertSehda ilnl the VBUS vSrcVal:id - The CmCaintaiSnh all regulation wvitNhoinis tehIed le vNo risaenAgcet.ive The noise on the line remain below and. Advertise SourceShall Test conditions require a change in both positive and negative load steps from 1Hz to 5S0e0ct0ioHnz,5 u.8p. 2to, \" tThrea nsmit andd RLoecaedi vSet eMpa Mskasg\"nitude of the full load output including from both 10 mA and 10% initial load. The ensure that PD Communications meet the transmit and receive masks as specified in Shall IoC SourceMay IoC The default load step magnitude rate be 25% of. The report higher capability tolerating a load 7ste.1p.o1f 920.%2 of. Holdup Time Field Holdup Time Shall AC Supply The field return a numeric value of the number of milliseconds the output voltage stays in regAulCa Stiuopnp ulipeodnS oau srhcoerSth inatlelrruption of the. AC Supply Source An AC Su pply report its holdup time in this field. The holdup time is measured with the load at ratAeCd Smuapxpilmyum, with the at 115VAC rms and 60Hz (or at 230VAC rms and 50Hz for vaS rcVali dthat doeSso nuortc e support 115VAC ). The reported time describes the minimum length of time from the last completed input cycle (zero-degree phase angAlCe )S uunptpilly when tFhieg uoruet p7u.1t5 v, o\"lHtaogldeu dpe cTaimyse b Meleoawsu rement\" (min). s are recommended to support a minimum of 3ms and are preferred to support over 10 milliseconds holdup time (equivalent to a half cycle drop fromF itghue re 7.15 Ho).l dSeuep Time Measurement. AC mains voltage (cid:1091) V BUS vSrcValid(min) Hold Up Time SPR Source LPS [IEC 62368-1] Shall Capabilities Compliance SPR SourceMay SPR SAonu rce claiming, PS1 orP PDSO2 cSohmapllliance (see LPS ) report its in the field. Since the have several potential output voltage and current settings, every Note: supply (each indicated by a ) [IE Cb 6e 0c9o5m0p-l1ia]nt to [I rEeCq 6u2ir3e6m8e-n3t]s. LPSSource SPR Source EPR Source SPR Mode LPS SAocucrocredinEgP tRo S tohuer rceequirements ofE PR Mode and/or [IEC 62368,- a1 ]device tested and certified with an ( or operating in ) is prohibited from using a non ( operating in ). Alternatively,, classifies power sources 7.1.12.a4ccording t oP teheairk m Cauximrruemn, ctonstrained power output (15watts or 100watts). Source Negotiated Peak Current Shall The Io Creports its ability to source peak current delivery in excesIso oCf the amount in the field. The duration of peak current be followed by a current consumption below the Operating Current ( ) in order to maintain average power delivery below the current.", "tables": [], "figures": ["Figure 7.14"], "page_range": [329, 330]}
{"section_path": "7.1.13 Fast Role Swap", "start_heading": "7.1.13 Fast Role Swap", "content": "SourceMay Peak Current Fixed SupplyPDO AVSAPDO SourceShall Peak CAu rrent1 Pea hka Cveu rgrreenatte2r cPaepaakb Ciluitryr teon sto3urce peak curSroeunrtc teh_aCna cpaanb bileit rieesp_oErxtteedn udseindgM tehses age field in the or. In this case the report its additional capability in the / Shal/l fields in the. Section 6.5.1.10, \"Peak Current EFiaeclhd \"ovSehralolla dN opteriod bNee fgoolltoiawteedd by a period of reduced current draw such that the rolling average current over the Overload Period field value with the specified Duty Cycle field value (see ) exceed the current. This is calculated as: P7e.r1io.d1 o2f.r5educed cu r Sreonut =r (c1e - vIanlupeu int sDuty Cycle field/100) * value in Overload Period field Source Inputs Source TNhoete : Sou friceeld identifies the possible iBnaptutetsr ythat provide power to the. AC Supply Some s are only powered by a (e.g., an automobile) rather than the more common Number of Batteries/Battery Slots Shall Source Source Shall Fixed Batteries The field report the number of Batteries the supports. The 7.1. i1nd3ependen tFlya respto rRt othlee n uSmwbear pof Hot Swappable Batteries and the number of. Fast Role Swap VBUS HubDFP UFPAttached DRPAttached HostPort DRP Figure 7.16, \"VBUS APo wer during Fas lti mRoitlse tShwea inpt\"erruption of power to a bus powered accessory connected to a that has a to a power source and a to a supporting as shown in. Figure 7.16 VBUS Power during Fast Role Swap DRP DRP DFP Bus Powered Power flow before the Accessory Fast Role Swap USB PD Capable USB PD Capable Host Hub Power flow after the UFP Power Source Fast Role Swap HubUFP VBUS HubDRP vSrcValid VBUS Negotiated vSafe5V vSafe5V WheFna stth Re oploew Swera spo Ruerqceu ecsotnSnheacltled to the H sutobpDsR sPourcing HpoowsteDrR aPnd atH tuhbe DRP Shal lconnector discFhaasrtg Reso lbee Slowwap (minH),u ibf DRP has been to a higher voltage than HubDRP, oShr all Not (min) tVh Be U S be sent from the Init tiaol t Shoeu rce New a nSdin tkhe H ubD FPPo rstink pShoawlelr. In the US Bu sTey pcaes-Ce, the [ bUeShBa vTeysp leik-Ce 2a. 4b]idirectional poEwxpelri cpiat tCho. nTthrae ct N ego tiated enable discharge circuitry when changing operation from to. The (s) support default Fast Role S Cwuarpr eRnetq (useeset VBUS v) Suanfteil5 aV new New SinkS hisa ll Not. iNewFrsSink New Source R New SinkShall Not iSnkStdby VBUS After tsSennkdFinRgS wthaep and whileF ast Ro >le Swap Re (qmuiens)t, theV BUS dvrSaawf em5oVre than tSnkFRSw uanptil the Shall has applied its p. The Fast Role Swap Requ dersatw more thVa Bn U S frvoSma fe5V until after it has started sending tthSen kFRSwap New Sink oSrh all N ohtas fallen below iNewF r(smSiinn)k. The New Sour tcieme start atR the beginninNge owf Sthoue rce R orN wewh eSnin kSha falllls below USB (Tmypine-)C, whichever com[UeSsB la Tteyrp. eA-fCte 2r. w4]aiting foImr plicit Contrac, tthe Explicit Co dnrtraawc tmorNee tghoatnia ted Sink until the Shall has applied Nitesw p S. iAnfkter the Fast Role h Sawsa appplied its p, the Fast Rol e Swa pbe limited to HostDR CPurrent (see Section 7.2.10), i\"nF aasnt Role Swap\" untiHl ao snteDwR P is Initial Sin.k All requFiarsetm Reonlets S wap apply to the after the is complete. The response of the is described in since the is operating as the prior to the VBUS. HubDRP vSafe5V PS_RDYMessageShall HostDRP Fast Role Swap Section 7.3.4, \"Transitions Caused by Fast Role Swap\" After the voltage level at the connector drops below a be sent to the as shown in the transition diagram of.", "tables": [], "figures": [], "page_range": [331, 331]}
{"section_path": "7.1.14 Non-application of VBUS Slew Rate Limits", "start_heading": "7.1.14 Non-application of VBUS Slew Rate Limits", "content": "Figure 7.17, \"VBUS detection and timing during Fast Role Swap, initial VBUS (at new source) > vSafe5V(min)\" Figure 7.18, \"VBUS detection and timing during Fast Role Swap, initial VBUS (at new source) < vSafe5V(min)\" VBUS New Source Fast Role Swap Fast Role Swap Request and New SourceMay VBUS VBUS vSafe5V show the New Sdoeuterccetion and timVBin Ug S for the v dSuarfien5gV a after thSeh all VBUS has been receivetdS.r TchFeR Swap turn ovnS athfee5 V output switch once is below (max). In this case, the prevents from falling below (min). The new source turn on the output switch VwBiUthSin of fallinvgS abfeelo5wV (min). Fast Role Swap Request VBUS vSafe5V vSafe5V vSafe5V Fast Role Swap Requ emstight have started atV BUS or avt Shaigfhe5erV voltage. When the Shall is dVet Be Uc Sted, could therefotrSer bceF ReSitwhearp above (mFaasxt),R wolieth Siwn athpe R equest range, or below (min). If the Fast iRso dlee tSewctaepd Rwehqeunes t V i Bs U b Selow (mMiany), thetSnr tchFeR nSewwa psource tFR tSuwrna opnR xthe output switch within of detecting the. In this case, the maximum time from the beginning of tFhieg ure 7.17 VBUS detectio tno a nd t ibmeiinngg sdouurricnegd Fast Rboe le Swap, init i(aml VaxB)U +S (at new sou (rmcea)x >). vSafe5V(min) Old Voltage VBUS New Source may turn on at any time (cid:167) after VBUSfalls below vSafe5V(max) vSafe5V(max) vSafe5V(min) Old Source detects power loss and signals Fast Role Swap 0V tSrcFRSwap Figure 7.18 VBUS detection and timing during Fast Role Swap, initial VBUS (at new source) < vSafe5V(min) New Source may turn on after VBUSis below vSafe5V(min) detecting Fast Role Swap signal before FRS signal is finished vSafe5V(min) Old Voltage VBUSat new Source tFRSwapRx (max) CC 0V Old Source detects power tSrcFRSwap loss and signals Fast Role Swap vSrcSlewPos vPpsSlewPosVBUS VBUSMay Scenarios where and slew rate limits do not apply and transition faster than- specified are as followsV: BUS Attach - When first applyViBnUgS after anP ower R.ole Swap SourcePower Role - When applying VBU aSs part voSf aaf e0V vSafe5V to Ha rd Reset. - When incFraeasts iRnogl e Swa fprom In ittoia l Sink durinVgB aU S. During a when the applies.", "tables": [], "figures": ["Figure 7.17", "Figure 7.18", "Figure 7.18"], "page_range": [332, 332]}
{"section_path": "7.1.15 VCONN Power Cycle", "start_heading": "7.1.15 VCONN Power Cycle", "content": "vSrcSlewNeg vPpsSlewNegVBUS VBUSMay Scenarios where and slew rate limits do not apply and transition faster than- specified are as followVsB:US vSafe0V Hard Reset - When discharging VBUS to vSafe0V during a Power R.ole Swap SinkPower Role - When discharging VBUS to vSafe0V as part Doef taa ch to. - When disFcahsatr gRionlge Swap to V aBfUteSr a. HubUFP 7.1.15During a VCONN Po wwheenr t hCey cle power source connected to the stops sourcing power. Data Reset DFP VCONN Source UFP VCONN Source Shall The process requires the to be the by the end of the process. In the case where the - is the, the followinGgo sotdeCpRs CMes sbaeg feollowed: AcceptMessage Data_ResetMessage UFPShall VCONN [USB Type FCo 2ll.4ow] ing the ltaVs Ct O b Ni Nt Zoef rthoe acknowledging the in response to the, the turn off and ensure it is below vRaReconnect (see - )V wCOitNhNin. UFPShall PS_RDYMessage Note: When UFP is below vRaRecoVnCnOeNcNt, the sePnSd_ aR DYMess age. - If tDhFeP Sha wllas nott VsCoOuNrNciRnega pplied, it still sends the GoodC. RCMessage PS_RDYMessage VCONN DFPShall VCONN [USB TThype e-C 2.4] wait tVCONNValid following the last bit of the acknowledging the before sourcing. The ensure is within vVCONNValid (see Figure 7.19, \"Data Re) sweti tUhFinP VCONN Power. Cycle\" UFPVCONN Figure 7.19 Dat ab eRloewse itl lUuFstPr aVtCeOs NthN eP owe r Cycl ePower Cycle process. UFP DFP vVCONNValid vRaReconnect 0V Accept PS_RDY (DFP/UFP) (UFP) tVCONNZero tVCONNReapplied tVCONNValid Data Reset DFP VCONN Source DFP VCONN Source Shall The process requires the to be the by the end of the process. In the case where the is the DFP, thDe afotall_oRweisnegt sMteepsssa ge be followed:VCONN Shall VCONN [USB Type-C 2.4] tVCONNZero GoodCRC 1) IMf ethssea ge sent the Ac ceptMes asangde is sourcing thDeant iat _Rese ttuMrens osaffg e and ensure it is below vRaReconnect (see ) within of the last bit of the UF PacknowledDgaintag _tRhees etMess age in reDspFoPnSshea tlol the VCONN. [USB Type-C 2.4] tVCONNZero GoodCRCMessage 2) If the sent the AcceptMes sage then the Data t_uRrens eotffM essag eand ensure it is below vRaReconnect (see ) within following the last bit of the acknowVCleOdNgNing the in resDpFoPnsSeh taol lthe tVCONNRe applied. VCONN 3) WheDn FPSha lils below vVRCOaRNNeconnect, the wait [USB Type-C 2.4] before stVouCOrcNiNnVga lid. Figu4r)e 7T.2h0e, \"Dat a Rese te nDsFuPr eV CONN P oisw werit Chyincl ve\"VCONNValid (see DFPVCONN ) within. Figure 7.20 Dat ab eRloewse itl lDuFstPr aVtCeOs NthNe P owe r Cycl ePower Cycle process. UFP DFP vVCONNValid vRaReconnect 0V Accept (DFP/UFP) tVCONNZero tVCONNReapplied tVCONNValid", "tables": [], "figures": ["Figure 7.19", "Figure 7.19", "Figure 7.20"], "page_range": [333, 334]}
{"section_path": "7.2 Sink Requirements", "start_heading": "7.2 Sink Requirements", "content": "PDUSBSink A - S hall Nexohtibits the following[U bSeBh aTvyipoers-C: 2.4]USB Type-C VBUS Default Contract Implicit Contract draw more than Current from while in a - oShr all. Section 7.1.5, \"Response to Hard Resets\" Hard Reset Signaling follow the requirements as specified in when - Shall is reVcBeUivSed. [USB 2.0] [USB 3.2] control in-rush current when increasing current consumption according to or Sink Figure 7.21, \"Placement of Sink Bulk Capacitance\" The bulk capacitance consists of C3 and C4 as shown in SinkOVP. STihnke Ohmic InterconSneecctti omni g7h.2t. 9co.2n, s\"iIsntp ouft POCvBer t rVaocletas gfoe rP prootwecetri odnis\"tribution or power switchingV d Be Uv Sices. The Ohmic SInintekrSchoannllect is expectOedV Pto be pSairntk oSf hana liln Npoutt Over VoltagSeo Purrocetection ( ) circuit implemenOtVePd by the as described in to protect against excessive input voltage. A cSnk BulkP idmSphleamlle Nnot t. The rely on the output voltage limit for its input. The cVa Bp Ua Scitance might be a single capacitor, a capacitor bank or distributed capacitance. An upper bound of be exceeded so that the transient charging, or discharging, of the total bulk capacitance on S ciannk be accounted for during voltage tracnSsnitkiBonuslk. cSnkBulkPd Negotiated Sink Sink Standby The bulk capacitance that is within Stihnek max or max limits is allowed to chSiannkge to support a neSwhlayl l Not power level. The capacVit Ba Un Sce can be changed when thCeo ntra cetnters Power R oolre dSwuraipng a voltage tSrainnksiSthioanl lor when the Swa bpe Sgtinans dtob yoperate at the new powerN leewv eSlo. Curhcaenging the bulk capacitance cause a transienPto cwuerrr eRnotl eo nSw apS thhaaltl violates the prSewseanpt S tandby. During a the Default transition to before operating as the. Any change in bulk capacitance required to compleFteig tuhree 7.21 Placement of Sin okc cBuur ldku Crainpga citance. V BUS GND SHIELD SinkShall Sink Standby VBUS Sink Standby Sink Shall iSnkStdby Source The transition to bSeifnokre a positive voltage transition of. During SinkSh thaell reduce the current drSainwkn S ttoa ndby. TtShnisk Satlldobwys the to manaAgec ctehpet vMoletsasgaeg etransition Saosu wrceell as supply sufficient operating cuSrirneknt to the to mSianikn tSatiann PdDby oSphearalltion during the transittioSnn.k TNheew Pow er icSonmkpSltedtbey this transition tSoh all within Sink after evaluating the from the. The transition when returning to operation from be completed within. The Section r 7e.q3u, \"irTermanesnitt ions\" only apply if the current draw is higher than this level. See for details. V BUS Data C3 Lines GND SHIELD CABLE SINK Ohmic Load Interconnect Data Lines OVP C4 Sink Bulk Capacitance", "tables": [], "figures": [], "page_range": [335, 335]}
{"section_path": "7.2.1 Behavioral Aspects", "start_heading": "7.2.1 Behavioral Aspects", "content": "PDUSBSink A - S hall Nexohtibits the following[U bSeBh aTvyipoers-C: 2.4]USB Type-C VBUS Default Contract Implicit Contract draw more than Current from while in a - oShr all. Section 7.1.5, \"Response to Hard Resets\" Hard Reset Signaling follow the requirements as specified in when - Shall is reVcBeUivSed. [USB 2.0] [USB 3.2] control in-rush current when increasing current consumption according to or Sink Figure 7.21, \"Placement of Sink Bulk Capacitance\" The bulk capacitance consists of C3 and C4 as shown in SinkOVP. STihnke Ohmic InterconSneecctti omni g7h.2t. 9co.2n, s\"iIsntp ouft POCvBer t rVaocletas gfoe rP prootwecetri odnis\"tribution or power switchingV d Be Uv Sices. The Ohmic SInintekrSchoannllect is expectOedV Pto be pSairntk oSf hana liln Npoutt Over VoltagSeo Purrocetection ( ) circuit implemenOtVePd by the as described in to protect against excessive input voltage. A cSnk BulkP idmSphleamlle Nnot t. The rely on the output voltage limit for its input. The cVa Bp Ua Scitance might be a single capacitor, a capacitor bank or distributed capacitance. An upper bound of be exceeded so that the transient charging, or discharging, of the total bulk capacitance on S ciannk be accounted for during voltage tracnSsnitkiBonuslk. cSnkBulkPd Negotiated Sink Sink Standby The bulk capacitance that is within Stihnek max or max limits is allowed to chSiannkge to support a neSwhlayl l Not power level. The capacVit Ba Un Sce can be changed when thCeo ntra cetnters Power R oolre dSwuraipng a voltage tSrainnksiSthioanl lor when the Swa bpe Sgtinans dtob yoperate at the new powerN leewv eSlo. Curhcaenging the bulk capacitance cause a transienPto cwuerrr eRnotl eo nSw apS thhaaltl violates the prSewseanpt S tandby. During a the Default transition to before operating as the. Any change in bulk capacitance required to compleFteig tuhree 7.21 Placement of Sin okc cBuur ldku Crainpga citance. V BUS GND SHIELD SinkShall Sink Standby VBUS Sink Standby Sink Shall iSnkStdby Source The transition to bSeifnokre a positive voltage transition of. During SinkSh thaell reduce the current drSainwkn S ttoa ndby. TtShnisk Satlldobwys the to manaAgec ctehpet vMoletsasgaeg etransition Saosu wrceell as supply sufficient operating cuSrirneknt to the to mSianikn tSatiann PdDby oSphearalltion during the transittioSnn.k TNheew Pow er icSonmkpSltedtbey this transition tSoh all within Sink after evaluating the from the. The transition when returning to operation from be completed within. The Section r 7e.q3u, \"irTermanesnitt ions\" only apply if the current draw is higher than this level. See for details. V BUS Data C3 Lines GND SHIELD CABLE SINK Ohmic Load Interconnect Data Lines OVP C4 Sink Bulk Capacitance", "tables": [], "figures": [], "page_range": [335, 335]}
{"section_path": "7.2.2 Sink Bulk Capacitance", "start_heading": "7.2.2 Sink Bulk Capacitance", "content": "PDUSBSink A - S hall Nexohtibits the following[U bSeBh aTvyipoers-C: 2.4]USB Type-C VBUS Default Contract Implicit Contract draw more than Current from while in a - oShr all. Section 7.1.5, \"Response to Hard Resets\" Hard Reset Signaling follow the requirements as specified in when - Shall is reVcBeUivSed. [USB 2.0] [USB 3.2] control in-rush current when increasing current consumption according to or Sink Figure 7.21, \"Placement of Sink Bulk Capacitance\" The bulk capacitance consists of C3 and C4 as shown in SinkOVP. STihnke Ohmic InterconSneecctti omni g7h.2t. 9co.2n, s\"iIsntp ouft POCvBer t rVaocletas gfoe rP prootwecetri odnis\"tribution or power switchingV d Be Uv Sices. The Ohmic SInintekrSchoannllect is expectOedV Pto be pSairntk oSf hana liln Npoutt Over VoltagSeo Purrocetection ( ) circuit implemenOtVePd by the as described in to protect against excessive input voltage. A cSnk BulkP idmSphleamlle Nnot t. The rely on the output voltage limit for its input. The cVa Bp Ua Scitance might be a single capacitor, a capacitor bank or distributed capacitance. An upper bound of be exceeded so that the transient charging, or discharging, of the total bulk capacitance on S ciannk be accounted for during voltage tracnSsnitkiBonuslk. cSnkBulkPd Negotiated Sink Sink Standby The bulk capacitance that is within Stihnek max or max limits is allowed to chSiannkge to support a neSwhlayl l Not power level. The capacVit Ba Un Sce can be changed when thCeo ntra cetnters Power R oolre dSwuraipng a voltage tSrainnksiSthioanl lor when the Swa bpe Sgtinans dtob yoperate at the new powerN leewv eSlo. Curhcaenging the bulk capacitance cause a transienPto cwuerrr eRnotl eo nSw apS thhaaltl violates the prSewseanpt S tandby. During a the Default transition to before operating as the. Any change in bulk capacitance required to compleFteig tuhree 7.21 Placement of Sin okc cBuur ldku Crainpga citance. V BUS GND SHIELD SinkShall Sink Standby VBUS Sink Standby Sink Shall iSnkStdby Source The transition to bSeifnokre a positive voltage transition of. During SinkSh thaell reduce the current drSainwkn S ttoa ndby. TtShnisk Satlldobwys the to manaAgec ctehpet vMoletsasgaeg etransition Saosu wrceell as supply sufficient operating cuSrirneknt to the to mSianikn tSatiann PdDby oSphearalltion during the transittioSnn.k TNheew Pow er icSonmkpSltedtbey this transition tSoh all within Sink after evaluating the from the. The transition when returning to operation from be completed within. The Section r 7e.q3u, \"irTermanesnitt ions\" only apply if the current draw is higher than this level. See for details. V BUS Data C3 Lines GND SHIELD CABLE SINK Ohmic Load Interconnect Data Lines OVP C4 Sink Bulk Capacitance", "tables": [], "figures": [], "page_range": [335, 335]}
{"section_path": "7.2.3 Sink Standby", "start_heading": "7.2.3 Sink Standby", "content": "PDUSBSink A - S hall Nexohtibits the following[U bSeBh aTvyipoers-C: 2.4]USB Type-C VBUS Default Contract Implicit Contract draw more than Current from while in a - oShr all. Section 7.1.5, \"Response to Hard Resets\" Hard Reset Signaling follow the requirements as specified in when - Shall is reVcBeUivSed. [USB 2.0] [USB 3.2] control in-rush current when increasing current consumption according to or Sink Figure 7.21, \"Placement of Sink Bulk Capacitance\" The bulk capacitance consists of C3 and C4 as shown in SinkOVP. STihnke Ohmic InterconSneecctti omni g7h.2t. 9co.2n, s\"iIsntp ouft POCvBer t rVaocletas gfoe rP prootwecetri odnis\"tribution or power switchingV d Be Uv Sices. The Ohmic SInintekrSchoannllect is expectOedV Pto be pSairntk oSf hana liln Npoutt Over VoltagSeo Purrocetection ( ) circuit implemenOtVePd by the as described in to protect against excessive input voltage. A cSnk BulkP idmSphleamlle Nnot t. The rely on the output voltage limit for its input. The cVa Bp Ua Scitance might be a single capacitor, a capacitor bank or distributed capacitance. An upper bound of be exceeded so that the transient charging, or discharging, of the total bulk capacitance on S ciannk be accounted for during voltage tracnSsnitkiBonuslk. cSnkBulkPd Negotiated Sink Sink Standby The bulk capacitance that is within Stihnek max or max limits is allowed to chSiannkge to support a neSwhlayl l Not power level. The capacVit Ba Un Sce can be changed when thCeo ntra cetnters Power R oolre dSwuraipng a voltage tSrainnksiSthioanl lor when the Swa bpe Sgtinans dtob yoperate at the new powerN leewv eSlo. Curhcaenging the bulk capacitance cause a transienPto cwuerrr eRnotl eo nSw apS thhaaltl violates the prSewseanpt S tandby. During a the Default transition to before operating as the. Any change in bulk capacitance required to compleFteig tuhree 7.21 Placement of Sin okc cBuur ldku Crainpga citance. V BUS GND SHIELD SinkShall Sink Standby VBUS Sink Standby Sink Shall iSnkStdby Source The transition to bSeifnokre a positive voltage transition of. During SinkSh thaell reduce the current drSainwkn S ttoa ndby. TtShnisk Satlldobwys the to manaAgec ctehpet vMoletsasgaeg etransition Saosu wrceell as supply sufficient operating cuSrirneknt to the to mSianikn tSatiann PdDby oSphearalltion during the transittioSnn.k TNheew Pow er icSonmkpSltedtbey this transition tSoh all within Sink after evaluating the from the. The transition when returning to operation from be completed within. The Section r 7e.q3u, \"irTermanesnitt ions\" only apply if the current draw is higher than this level. See for details. V BUS Data C3 Lines GND SHIELD CABLE SINK Ohmic Load Interconnect Data Lines OVP C4 Sink Bulk Capacitance", "tables": [], "figures": [], "page_range": [335, 335]}
{"section_path": "7.2.4 Suspend Power Consumption", "start_heading": "7.2.4 Suspend Power Consumption", "content": "Sink Sink Standby Negotiated APDO SinkMay RDO A is not reSqPuRi rPePdS to tCraunrrseitnito nLi tmoi t SinkSh awllhen operating within the PPS. A consume the OperatingS iCnukrrent value in the PPS during PPS output voltage changes. However, prior to operating theC urrent L iimn it, the progrSaPmR tPhPeS PSPoSu Orcpeerating VoCltuargree ntot Lthime iltowestS pinrkacSthicaalll lNeovtel that satisfies the load requirement. iDPopisnCgL sLoo awdilSl tmepinRiamtieze thiPep insCruLsLho acudrRreelneta tsheaRt aotcecurs when the transition toSh all Not occurs. When operCautirnrgen wt iLtihm aint that is iiPnp sCLLoadStep, the change its load in a manner that exceeds or. The load change magniStiundkeN egotiate request a chanAgeP DtoO the set-point thVaBt UeSxceeds SinkS.hall Sink Standby APDO Section 7.3.1, \"Transitions caused by a Request IMf ethssea ge\" s for a new PPS, that is expected to increase voltage, then the transition to while changing between PPS s as described in Source USB Suspend Supported Section 6.4.1.2.1.2, \"USB Suspend Supported\" SinkShall Shall pSnkSusp When hapsH seutb iStsu sp PDUSB H fluabg (see Source ), a go to the lowest power state during USB suspend. The lowest power state be or lower for a PDUSB Peripheral and or lower for a. There is no requirement for the voltage to be changed d7u.r2in.g5 USB suspe nZde. ro Negotiated Current Sink Negotiation Source SinkShall pSnkSusp When a Requests zero current as part of a power with a, the go to the lowest p7o.w2e.r6 state, Tra onr sloiweenr, tw Lheorea idt c aBn esthill acovmimournicate using PD signaling. Sink Shall Not iOvershoot When a 's operatingi Ocuverrresnhto cohtanges due to a load step, load release or any other change in load level, the positive or negative overshoot of the new load current exceed the rSainngke defined by. For the purposes oSfh malela Nsoutring iLoadSt ethpeR naetew load current value iiLs odaedfiRneelde aass ethRea taeverage steady state value of the load cuSrinreknt after the load step has settled. The rate of change of any shift in load current during normal operation exceed (for load steps) and (for load releases) as measured at thSei nk receptacle. Shall Not Source Voltage Regulation Shall The 's operSaetcitnigo nc u5r.8re.2n, t\" Transmit a cnhda nRgeec efiavset eMr atshkasn\" the value reported in the 's Load Step Slew Rate in its bit field and ensure that PD Communications meet the transmit and receive masks a7s. s2pe.7cified in Swap Standby for Sinks. Sink Dual-Role Power PortShall Swap Standby Swap Standby Sink AcceptMessage Source Power Role Swap Swap Standby Sink The Sha fulln Ncotitonality iniS an kSwapStdby VB US suppoDrut al-Role Power. PortShall occurs for the Sou racfteer evaluVat Bi Un Sg the fromvS tahfee 0V during a Initial Source. WhSilien kin theS hou'lsd c Nurortent draw excveSeadfe 5V from VB Ua Snd the Section 9.1.2, \"Map bpein cgo tnof iUgSuBre Dde avsic ae States\" after has beSeinn kdischarged to Swap Sbtya nthdeb yexSihsatilnlg. ThtSen kSw'as pUSStBd bcoynnection Swap Stand bbey reseSti envken though isP noowt perr eRsoelnet onS tinhke conductor (see New Source ). The tiSmwea fpo Sr ttahned by toN terwan Ssoiutirocne tSoh all bteN newo mSrocre than. When in the has relinquished its as and will prepare to become the. The transition time f7ro.2m.8 S tion k Peak Cur bree nno tm oOrep teharna tion. Sink Shall Source Fixed SupplyPDO Section 6.4.1.2.1.8, \"Peak Current\" AVSAPDO Section 6.4.1.2.4.3.2, \"Peak Current\" s only make usSei nokf a Shall overload capability when the corresponding Peak Current (Nseegeo tiated Fixed Supply ) AoVr S Peak Current (see ) bits are set to 01b, 10b and 11b. s manage thermal aspects of the overload event by not exceeding the average Sink output of a or that supports Peak Current operation. Shall Attached Source s that depend on tShoeu Prceeak Current capability for enhanced system performance also function correctly when to a that does not offer the Peak Current capability or when the Peak Current capability has been inhibited by the.", "tables": [], "figures": [], "page_range": [336, 336]}
{"section_path": "7.2.5 Zero Negotiated Current", "start_heading": "7.2.5 Zero Negotiated Current", "content": "Sink Sink Standby Negotiated APDO SinkMay RDO A is not reSqPuRi rPePdS to tCraunrrseitnito nLi tmoi t SinkSh awllhen operating within the PPS. A consume the OperatingS iCnukrrent value in the PPS during PPS output voltage changes. However, prior to operating theC urrent L iimn it, the progrSaPmR tPhPeS PSPoSu Orcpeerating VoCltuargree ntot Lthime iltowestS pinrkacSthicaalll lNeovtel that satisfies the load requirement. iDPopisnCgL sLoo awdilSl tmepinRiamtieze thiPep insCruLsLho acudrRreelneta tsheaRt aotcecurs when the transition toSh all Not occurs. When operCautirnrgen wt iLtihm aint that is iiPnp sCLLoadStep, the change its load in a manner that exceeds or. The load change magniStiundkeN egotiate request a chanAgeP DtoO the set-point thVaBt UeSxceeds SinkS.hall Sink Standby APDO Section 7.3.1, \"Transitions caused by a Request IMf ethssea ge\" s for a new PPS, that is expected to increase voltage, then the transition to while changing between PPS s as described in Source USB Suspend Supported Section 6.4.1.2.1.2, \"USB Suspend Supported\" SinkShall Shall pSnkSusp When hapsH seutb iStsu sp PDUSB H fluabg (see Source ), a go to the lowest power state during USB suspend. The lowest power state be or lower for a PDUSB Peripheral and or lower for a. There is no requirement for the voltage to be changed d7u.r2in.g5 USB suspe nZde. ro Negotiated Current Sink Negotiation Source SinkShall pSnkSusp When a Requests zero current as part of a power with a, the go to the lowest p7o.w2e.r6 state, Tra onr sloiweenr, tw Lheorea idt c aBn esthill acovmimournicate using PD signaling. Sink Shall Not iOvershoot When a 's operatingi Ocuverrresnhto cohtanges due to a load step, load release or any other change in load level, the positive or negative overshoot of the new load current exceed the rSainngke defined by. For the purposes oSfh malela Nsoutring iLoadSt ethpeR naetew load current value iiLs odaedfiRneelde aass ethRea taeverage steady state value of the load cuSrinreknt after the load step has settled. The rate of change of any shift in load current during normal operation exceed (for load steps) and (for load releases) as measured at thSei nk receptacle. Shall Not Source Voltage Regulation Shall The 's operSaetcitnigo nc u5r.8re.2n, t\" Transmit a cnhda nRgeec efiavset eMr atshkasn\" the value reported in the 's Load Step Slew Rate in its bit field and ensure that PD Communications meet the transmit and receive masks a7s. s2pe.7cified in Swap Standby for Sinks. Sink Dual-Role Power PortShall Swap Standby Swap Standby Sink AcceptMessage Source Power Role Swap Swap Standby Sink The Sha fulln Ncotitonality iniS an kSwapStdby VB US suppoDrut al-Role Power. PortShall occurs for the Sou racfteer evaluVat Bi Un Sg the fromvS tahfee 0V during a Initial Source. WhSilien kin theS hou'lsd c Nurortent draw excveSeadfe 5V from VB Ua Snd the Section 9.1.2, \"Map bpein cgo tnof iUgSuBre Dde avsic ae States\" after has beSeinn kdischarged to Swap Sbtya nthdeb yexSihsatilnlg. ThtSen kSw'as pUSStBd bcoynnection Swap Stand bbey reseSti envken though isP noowt perr eRsoelnet onS tinhke conductor (see New Source ). The tiSmwea fpo Sr ttahned by toN terwan Ssoiutirocne tSoh all bteN newo mSrocre than. When in the has relinquished its as and will prepare to become the. The transition time f7ro.2m.8 S tion k Peak Cur bree nno tm oOrep teharna tion. Sink Shall Source Fixed SupplyPDO Section 6.4.1.2.1.8, \"Peak Current\" AVSAPDO Section 6.4.1.2.4.3.2, \"Peak Current\" s only make usSei nokf a Shall overload capability when the corresponding Peak Current (Nseegeo tiated Fixed Supply ) AoVr S Peak Current (see ) bits are set to 01b, 10b and 11b. s manage thermal aspects of the overload event by not exceeding the average Sink output of a or that supports Peak Current operation. Shall Attached Source s that depend on tShoeu Prceeak Current capability for enhanced system performance also function correctly when to a that does not offer the Peak Current capability or when the Peak Current capability has been inhibited by the.", "tables": [], "figures": [], "page_range": [336, 336]}
{"section_path": "7.2.6 Transient Load Behavior", "start_heading": "7.2.6 Transient Load Behavior", "content": "Sink Sink Standby Negotiated APDO SinkMay RDO A is not reSqPuRi rPePdS to tCraunrrseitnito nLi tmoi t SinkSh awllhen operating within the PPS. A consume the OperatingS iCnukrrent value in the PPS during PPS output voltage changes. However, prior to operating theC urrent L iimn it, the progrSaPmR tPhPeS PSPoSu Orcpeerating VoCltuargree ntot Lthime iltowestS pinrkacSthicaalll lNeovtel that satisfies the load requirement. iDPopisnCgL sLoo awdilSl tmepinRiamtieze thiPep insCruLsLho acudrRreelneta tsheaRt aotcecurs when the transition toSh all Not occurs. When operCautirnrgen wt iLtihm aint that is iiPnp sCLLoadStep, the change its load in a manner that exceeds or. The load change magniStiundkeN egotiate request a chanAgeP DtoO the set-point thVaBt UeSxceeds SinkS.hall Sink Standby APDO Section 7.3.1, \"Transitions caused by a Request IMf ethssea ge\" s for a new PPS, that is expected to increase voltage, then the transition to while changing between PPS s as described in Source USB Suspend Supported Section 6.4.1.2.1.2, \"USB Suspend Supported\" SinkShall Shall pSnkSusp When hapsH seutb iStsu sp PDUSB H fluabg (see Source ), a go to the lowest power state during USB suspend. The lowest power state be or lower for a PDUSB Peripheral and or lower for a. There is no requirement for the voltage to be changed d7u.r2in.g5 USB suspe nZde. ro Negotiated Current Sink Negotiation Source SinkShall pSnkSusp When a Requests zero current as part of a power with a, the go to the lowest p7o.w2e.r6 state, Tra onr sloiweenr, tw Lheorea idt c aBn esthill acovmimournicate using PD signaling. Sink Shall Not iOvershoot When a 's operatingi Ocuverrresnhto cohtanges due to a load step, load release or any other change in load level, the positive or negative overshoot of the new load current exceed the rSainngke defined by. For the purposes oSfh malela Nsoutring iLoadSt ethpeR naetew load current value iiLs odaedfiRneelde aass ethRea taeverage steady state value of the load cuSrinreknt after the load step has settled. The rate of change of any shift in load current during normal operation exceed (for load steps) and (for load releases) as measured at thSei nk receptacle. Shall Not Source Voltage Regulation Shall The 's operSaetcitnigo nc u5r.8re.2n, t\" Transmit a cnhda nRgeec efiavset eMr atshkasn\" the value reported in the 's Load Step Slew Rate in its bit field and ensure that PD Communications meet the transmit and receive masks a7s. s2pe.7cified in Swap Standby for Sinks. Sink Dual-Role Power PortShall Swap Standby Swap Standby Sink AcceptMessage Source Power Role Swap Swap Standby Sink The Sha fulln Ncotitonality iniS an kSwapStdby VB US suppoDrut al-Role Power. PortShall occurs for the Sou racfteer evaluVat Bi Un Sg the fromvS tahfee 0V during a Initial Source. WhSilien kin theS hou'lsd c Nurortent draw excveSeadfe 5V from VB Ua Snd the Section 9.1.2, \"Map bpein cgo tnof iUgSuBre Dde avsic ae States\" after has beSeinn kdischarged to Swap Sbtya nthdeb yexSihsatilnlg. ThtSen kSw'as pUSStBd bcoynnection Swap Stand bbey reseSti envken though isP noowt perr eRsoelnet onS tinhke conductor (see New Source ). The tiSmwea fpo Sr ttahned by toN terwan Ssoiutirocne tSoh all bteN newo mSrocre than. When in the has relinquished its as and will prepare to become the. The transition time f7ro.2m.8 S tion k Peak Cur bree nno tm oOrep teharna tion. Sink Shall Source Fixed SupplyPDO Section 6.4.1.2.1.8, \"Peak Current\" AVSAPDO Section 6.4.1.2.4.3.2, \"Peak Current\" s only make usSei nokf a Shall overload capability when the corresponding Peak Current (Nseegeo tiated Fixed Supply ) AoVr S Peak Current (see ) bits are set to 01b, 10b and 11b. s manage thermal aspects of the overload event by not exceeding the average Sink output of a or that supports Peak Current operation. Shall Attached Source s that depend on tShoeu Prceeak Current capability for enhanced system performance also function correctly when to a that does not offer the Peak Current capability or when the Peak Current capability has been inhibited by the.", "tables": [], "figures": [], "page_range": [336, 336]}
{"section_path": "7.2.7 Swap Standby for Sinks", "start_heading": "7.2.7 Swap Standby for Sinks", "content": "Sink Sink Standby Negotiated APDO SinkMay RDO A is not reSqPuRi rPePdS to tCraunrrseitnito nLi tmoi t SinkSh awllhen operating within the PPS. A consume the OperatingS iCnukrrent value in the PPS during PPS output voltage changes. However, prior to operating theC urrent L iimn it, the progrSaPmR tPhPeS PSPoSu Orcpeerating VoCltuargree ntot Lthime iltowestS pinrkacSthicaalll lNeovtel that satisfies the load requirement. iDPopisnCgL sLoo awdilSl tmepinRiamtieze thiPep insCruLsLho acudrRreelneta tsheaRt aotcecurs when the transition toSh all Not occurs. When operCautirnrgen wt iLtihm aint that is iiPnp sCLLoadStep, the change its load in a manner that exceeds or. The load change magniStiundkeN egotiate request a chanAgeP DtoO the set-point thVaBt UeSxceeds SinkS.hall Sink Standby APDO Section 7.3.1, \"Transitions caused by a Request IMf ethssea ge\" s for a new PPS, that is expected to increase voltage, then the transition to while changing between PPS s as described in Source USB Suspend Supported Section 6.4.1.2.1.2, \"USB Suspend Supported\" SinkShall Shall pSnkSusp When hapsH seutb iStsu sp PDUSB H fluabg (see Source ), a go to the lowest power state during USB suspend. The lowest power state be or lower for a PDUSB Peripheral and or lower for a. There is no requirement for the voltage to be changed d7u.r2in.g5 USB suspe nZde. ro Negotiated Current Sink Negotiation Source SinkShall pSnkSusp When a Requests zero current as part of a power with a, the go to the lowest p7o.w2e.r6 state, Tra onr sloiweenr, tw Lheorea idt c aBn esthill acovmimournicate using PD signaling. Sink Shall Not iOvershoot When a 's operatingi Ocuverrresnhto cohtanges due to a load step, load release or any other change in load level, the positive or negative overshoot of the new load current exceed the rSainngke defined by. For the purposes oSfh malela Nsoutring iLoadSt ethpeR naetew load current value iiLs odaedfiRneelde aass ethRea taeverage steady state value of the load cuSrinreknt after the load step has settled. The rate of change of any shift in load current during normal operation exceed (for load steps) and (for load releases) as measured at thSei nk receptacle. Shall Not Source Voltage Regulation Shall The 's operSaetcitnigo nc u5r.8re.2n, t\" Transmit a cnhda nRgeec efiavset eMr atshkasn\" the value reported in the 's Load Step Slew Rate in its bit field and ensure that PD Communications meet the transmit and receive masks a7s. s2pe.7cified in Swap Standby for Sinks. Sink Dual-Role Power PortShall Swap Standby Swap Standby Sink AcceptMessage Source Power Role Swap Swap Standby Sink The Sha fulln Ncotitonality iniS an kSwapStdby VB US suppoDrut al-Role Power. PortShall occurs for the Sou racfteer evaluVat Bi Un Sg the fromvS tahfee 0V during a Initial Source. WhSilien kin theS hou'lsd c Nurortent draw excveSeadfe 5V from VB Ua Snd the Section 9.1.2, \"Map bpein cgo tnof iUgSuBre Dde avsic ae States\" after has beSeinn kdischarged to Swap Sbtya nthdeb yexSihsatilnlg. ThtSen kSw'as pUSStBd bcoynnection Swap Stand bbey reseSti envken though isP noowt perr eRsoelnet onS tinhke conductor (see New Source ). The tiSmwea fpo Sr ttahned by toN terwan Ssoiutirocne tSoh all bteN newo mSrocre than. When in the has relinquished its as and will prepare to become the. The transition time f7ro.2m.8 S tion k Peak Cur bree nno tm oOrep teharna tion. Sink Shall Source Fixed SupplyPDO Section 6.4.1.2.1.8, \"Peak Current\" AVSAPDO Section 6.4.1.2.4.3.2, \"Peak Current\" s only make usSei nokf a Shall overload capability when the corresponding Peak Current (Nseegeo tiated Fixed Supply ) AoVr S Peak Current (see ) bits are set to 01b, 10b and 11b. s manage thermal aspects of the overload event by not exceeding the average Sink output of a or that supports Peak Current operation. Shall Attached Source s that depend on tShoeu Prceeak Current capability for enhanced system performance also function correctly when to a that does not offer the Peak Current capability or when the Peak Current capability has been inhibited by the.", "tables": [], "figures": [], "page_range": [336, 336]}
{"section_path": "7.2.8 Sink Peak Current Operation", "start_heading": "7.2.8 Sink Peak Current Operation", "content": "Sink Sink Standby Negotiated APDO SinkMay RDO A is not reSqPuRi rPePdS to tCraunrrseitnito nLi tmoi t SinkSh awllhen operating within the PPS. A consume the OperatingS iCnukrrent value in the PPS during PPS output voltage changes. However, prior to operating theC urrent L iimn it, the progrSaPmR tPhPeS PSPoSu Orcpeerating VoCltuargree ntot Lthime iltowestS pinrkacSthicaalll lNeovtel that satisfies the load requirement. iDPopisnCgL sLoo awdilSl tmepinRiamtieze thiPep insCruLsLho acudrRreelneta tsheaRt aotcecurs when the transition toSh all Not occurs. When operCautirnrgen wt iLtihm aint that is iiPnp sCLLoadStep, the change its load in a manner that exceeds or. The load change magniStiundkeN egotiate request a chanAgeP DtoO the set-point thVaBt UeSxceeds SinkS.hall Sink Standby APDO Section 7.3.1, \"Transitions caused by a Request IMf ethssea ge\" s for a new PPS, that is expected to increase voltage, then the transition to while changing between PPS s as described in Source USB Suspend Supported Section 6.4.1.2.1.2, \"USB Suspend Supported\" SinkShall Shall pSnkSusp When hapsH seutb iStsu sp PDUSB H fluabg (see Source ), a go to the lowest power state during USB suspend. The lowest power state be or lower for a PDUSB Peripheral and or lower for a. There is no requirement for the voltage to be changed d7u.r2in.g5 USB suspe nZde. ro Negotiated Current Sink Negotiation Source SinkShall pSnkSusp When a Requests zero current as part of a power with a, the go to the lowest p7o.w2e.r6 state, Tra onr sloiweenr, tw Lheorea idt c aBn esthill acovmimournicate using PD signaling. Sink Shall Not iOvershoot When a 's operatingi Ocuverrresnhto cohtanges due to a load step, load release or any other change in load level, the positive or negative overshoot of the new load current exceed the rSainngke defined by. For the purposes oSfh malela Nsoutring iLoadSt ethpeR naetew load current value iiLs odaedfiRneelde aass ethRea taeverage steady state value of the load cuSrinreknt after the load step has settled. The rate of change of any shift in load current during normal operation exceed (for load steps) and (for load releases) as measured at thSei nk receptacle. Shall Not Source Voltage Regulation Shall The 's operSaetcitnigo nc u5r.8re.2n, t\" Transmit a cnhda nRgeec efiavset eMr atshkasn\" the value reported in the 's Load Step Slew Rate in its bit field and ensure that PD Communications meet the transmit and receive masks a7s. s2pe.7cified in Swap Standby for Sinks. Sink Dual-Role Power PortShall Swap Standby Swap Standby Sink AcceptMessage Source Power Role Swap Swap Standby Sink The Sha fulln Ncotitonality iniS an kSwapStdby VB US suppoDrut al-Role Power. PortShall occurs for the Sou racfteer evaluVat Bi Un Sg the fromvS tahfee 0V during a Initial Source. WhSilien kin theS hou'lsd c Nurortent draw excveSeadfe 5V from VB Ua Snd the Section 9.1.2, \"Map bpein cgo tnof iUgSuBre Dde avsic ae States\" after has beSeinn kdischarged to Swap Sbtya nthdeb yexSihsatilnlg. ThtSen kSw'as pUSStBd bcoynnection Swap Stand bbey reseSti envken though isP noowt perr eRsoelnet onS tinhke conductor (see New Source ). The tiSmwea fpo Sr ttahned by toN terwan Ssoiutirocne tSoh all bteN newo mSrocre than. When in the has relinquished its as and will prepare to become the. The transition time f7ro.2m.8 S tion k Peak Cur bree nno tm oOrep teharna tion. Sink Shall Source Fixed SupplyPDO Section 6.4.1.2.1.8, \"Peak Current\" AVSAPDO Section 6.4.1.2.4.3.2, \"Peak Current\" s only make usSei nokf a Shall overload capability when the corresponding Peak Current (Nseegeo tiated Fixed Supply ) AoVr S Peak Current (see ) bits are set to 01b, 10b and 11b. s manage thermal aspects of the overload event by not exceeding the average Sink output of a or that supports Peak Current operation. Shall Attached Source s that depend on tShoeu Prceeak Current capability for enhanced system performance also function correctly when to a that does not offer the Peak Current capability or when the Peak Current capability has been inhibited by the.", "tables": [], "figures": [], "page_range": [336, 336]}
{"section_path": "7.2.9 Robust Sink Operation", "start_heading": "7.2.9 Robust Sink Operation", "content": "Source Detached Sink SinkShall VBUS vSafe5V tSafe5V Detach Sink When a Sh isa ll fromS ian k, the cNoengtointuiaet etod dVr Ba Uw S power from its inpvuSta bfue5lkV capacSihtaanlcle until is discharged to or lower by no longer than Sink from the event. This safe requirement apply to all s operating with a level greater than and apply duringD aeltla lochw power and high-powSienrk operating modes of the. Sink Source Attached D Ife tthaech is detectedV Bd Uu Sring a low power staStein, ksuch as USB Suspend, tShhea ll can then draw as mucVh B US power as needed vfrSormcV iatsli dbulk capacitance sintScea fae 5V is no Sloonugrecer. In order to achieve a successful Detach detect based on VBUS voltage level droop, the power consumption be high enough so thaSti nk will decay below (min) well within after the bulk capacitance is removed due to the. Once adequate droop has been achieved, a discharge circuit can be enabled to meet the safe requirement. Sink Sink To illustrate the point, the following set of conditions will not meet the safe requirement without add- itionNale gdoistciahtaerdgeV BcUirScuitry: - = 20V. VBUS - Maximum allowable supplied voltage = 21.55V. - Maximum bulk capacitaDnectea =ch 30µF. PoDweetra cchonsumption at = 12.5mWSo.urce VBUS When the VBUS occurs (hevnScrec rVeamliodval of the bulk capacitance) the 12.5mW power consumption will draw downS tihnke voltage from the worst-case maximum levSeinl kof 21.55V to 17V in approximately 205ms. At this point, with well below (min) an approximate 100mW discharge circuit cSainn kbe enabled to increase Sthinek rate of bulk capacitanceD detisacchharge and meet the safe requirement. The potwSearf ele5vVel of the discharge circuit is dependent on how much time is left to discharge the remaining voltage on the bulk capacitance. If a has the ability to detect the in a different manner and in much less time than, then this different manner of detection can be used to enable a discharge circuit, allowing even lower power dissipation during low power modes such as USB SuspSiennkd. Sink cSnkBulkPd Detach Sink Sink In most applicationvsS, tahfee 5sVafe requirement wilSl ilnimkit the maximum bulk capacitance weVl Bl Ub Selow the vSafe5V limit. A occurring during high power operating modes must quickly discharge the bulk capacitance to or lower as long as the continues to draw adequate power until has decayed 7to. 2.9.2 or lower. Input Over Voltage Protection Sink Shall OVP Sink Sinks implement input Over-Voltage ProtectionSi (nk S)h taol lp Nreovtent damage from input voltage that exceedSsh tahlle voltage handvlSinrcgN ceawpabvSilritcyV oafl itdhe vPp. TsNhee wdevfiPnpitsioVna loidf voltage handling capabNieligtyo tiisa lteefdt tVo B Uth Se discretionS oinf kthe Shou ilmdplementation. The over voltage revspSopnrMsea oxf Ssh all interfere with normal PD operatiovSnp arnMda x account for E, PR Sink Sh ooru ld, as determinedv bEyp trhMe ax Shal l value. SPR s tolerate vinEppurtM vaoxltages as high as and meet applicable safety requirements if is exceeded. Likewise, s tolerate input voltages as high as and meet applicable safety SreinqkuirSehmoeunldts if is exHcaeredd eRde.setSignaling AlertMessage OVP Explicit Contract OVP May Port s attempt to send OV wPhSehna OllVP engagUeSsB fo Dlleofwaueldt Obpye arna tion S ionudriccaeting an event ovnScae faen5 V VBUS has been established. The response engage at either the or system level. Systems or ports that have engaged resume when the has reestabSliinskheSdh all on Re-n.egotiate Source USB Default Operation Re-negotiation OVP Sink The be able to with the after resuming. The decision of how to reSsipnoknSdh taol l after an evPeonrtt is left to thOeV dPiscretion of the implementation. USB Default Operation Re-negotiation Port The prevent continual system or cycling if continues to engage after initially resuming either or. Latching off the or system is an acceptable response to recurring over voltage.", "tables": [], "figures": [], "page_range": [337, 337]}
{"section_path": "7.2.10 Fast Role Swap", "start_heading": "7.2.10 Fast Role Swap", "content": "Sink Shall OTP Sink s implement over temperature protection ( ) toS pinrkevent damage from temperature that exceeds the thermal capability of the. The definition of thermal capability and the monitoring locations used to trigger the Soivnekr tSehmapllerature protectioHn aarrde lReefts teot Sthigen dailsincrgetion of the implementation. Alert Message OTP Explicit Contract s M aatytempt to send Port when over temperature protection engages followed by an indSihcoautilndg an event once UanSB Default Operati ohnas been established. The over temperatuMrea pyrotection response P eonrgtage at either the or system level. Systems or ports that have engaged oSvinekr temperature protection attempt to resume after sufficient cooling is achieved and latch off to prSoitnekctS thhael l or systReme-n. Tehgoet diaetfeinition of sSuoffuicriceent cooling is left tUoS tBh eD defiascurlte tOiopner oaft tiohne implementation. Re-negotiation Sink The be able to with the after resuming. The decision of how to reSsipnoknSdh taol l after an over tePmorpterature event is left to the discretion of the implementation. USB Default Operation Re-negotiation Port The prevent continual system or cycling if over temperature protection continues to engage after initially resuming either or. Latching off the or system is an acceptable 7re.s2po.9ns.e4 to recurrin g O ovveer rte mCuperrarteurnet. Protection Sink Shall VBUS Source Sink Shalsl that operate with a Programmable Power Supply implement theirA oPwDnO internal current protection mechanism to protect against internal current faults as well as erratic current regulation. The 7.2. n1e0ver draw hFigahsert cRurorelnet tShawn tahpe Maximum Current value in the PPS. Section 7.1.13, \"Fast Role Swap\" Fast Role Swap VBUS HubDFP UFPAttached DRPAttached Host PAosr dtescribed in DRP a Figure 7.1 l6im, \"Vit Bs Ut Sh eP oinwteerr rduuprtiniogn F oafs t Rol ep Sowwaepr \"to a bus powered accessory connected to a that has a to a power source and a to a Hthoastt DsuRpPports. This configuErxaptliiocnit iCso snhtorawcnt iSnh all Initial Source Sink Capabilities. Initial Source Fast Role Swap Sink_Capabilities TMhees sage, upon establisInhiitniga la Sno urce, querFya tsht eR ole Swap req'su ired USB Type-C t Cou drerteenrmt ine whether theH ostDRP supports, and what level of cHuorrstenDtR iPt rMeaquyires. If the Fast Role Swap Ho srteDceRiPved from the Sink Chaapsa abt illeitaiests one of theI nitial Source Sink_CapabilitiesMessag beits set, and theF ast R ole S iws aapble to source the requested current at 5V, the Hos tDRP arm itself for. If the F ast R hoales Snwota qpuerieHdo tshteD RPShall Not from the Fast Role Swa, por if thSeh allIgnore Fast Role Swa p rReepqouretsst no support or a current that is beyond what the is able or willing to source in the event of a, the arm itself for and any s thHaots atrDeR dPetected. Fast Role Swap Fast Role Swap Request HostDRPShall Shall vSafe5V VBUS HostDRP When the that suvpSapofer5tsV detecVt Bs U t She F HostDR, tPhe stop sinkingv Scuarfere5nVt and H boest rDeRadPy and aNbelew t oSo suorucrecSeh all if tvhSea free5siVdual Hu vboDltRaPge level atSt rthcFeR Swa p HcoonsnteDcRtoPrS ihsa glrle Naotetr than VBUS. When the residual voltage lPeovwele ar tR tohlee Ini tcioaln Sniencktor dNieswch Saorugrecse below (min) the as the supply to the within. The N ew S ourceSha elnlable vS adfies5chVargeU ScBir cTuyiptrey-C when changing[U SB Type-Cs 2 f.r4o]m Atod vertise. Fast Role Swap required USB Type-C Current Section 6.4.1.3.1.6, \"Fast Role Swap USB Type-C Current\" TheS ource supSphlayl l at New Sour cCeurrent (seeF ast Role Swap ) at the valueF ast Role Sdw inap the HubDRP Section 7fi.e1l.d13 (,s \"eFea st Role Swap\" HubDRP Initia)l. SAollu rce requiremFeanstts R ole Sw aappply to the after the is complete The response of the is described in since the is operating as the prHioors ttoD tRhPe VB.US HubDRP PS_RDYMessageShall HubDRP Fast Role Swap Request AMS Section 7.3.4, \"Transitions Caused by Fast Role Swap\" After the is providing power to the, a be sent to the as defined by the and the detailed in.", "tables": [], "figures": [], "page_range": [338, 338]}
{"section_path": "7.3 Transitions", "start_heading": "7.3 Transitions", "content": "Negotiation Negotiation Message Signaling The foMlloewssiangge sections illustrate the power supply's response to various types of s. TMhees sage s are triggered by certain s or. It provides examples of the transitions and is organized around each of the s and Signals that result in a response from the power supply. The response to a or Signal can result in different transitions depending upon the power supply's starting conditions and the requested cha- nge. RequestMessage Transitions caused by a (A )PDO : Generic transition between s:  Increase the current.  Increase the voltage.  Increase the voltage and the current.  Increase the voltage and decrease the current.  Decrease the voltage and increase the current.  Decrease the voltage and the current.  No change in Current or vP oD ltO ageF.ixed Supply Battery Supply Variable Supply Transitions within the same (,, ):  Increase the current.  Decrease the current.  No change in current. APDO Transitions within the same PPS :  Increasing the Programmable Power Supply (PPS) voltage.  Decreasing the Programmable Power Supply (PPS) voltage.  Increasing the Programmable Power Supply (PPS) Current.  Decreasing the Programmable Power Supply (PPS) Current.  Same Request ProgrammA abV lS e A PP oD wO er Supply (PPS). Transitions withinA td hj eu s st aa mbl ee Volt age Su :pply AVS  Increasing the Adjustable Voltage Supply (AVS ) voltage  Decreasing theA djustable Voltage Supply (AVS ) voltage - Same Request PR_SwapMessage ( ) TraS no su itr ic oe ns caused byP to hw ee r Role Sw ap :  Sink requestsP ao wer Role Swap - requests a Hard ResetSignaling TraS no su itr ic oe ns causeH da br yd ResetSigna ling :  Sink issueH sa rd ResetSig naling. - issues F ast Role. Swap Request TraS no su itr ic oe ns causedR by the [USB Type-C : 2.4] asserts d at its preferred current.", "tables": [], "figures": [], "page_range": [339, 339]}
{"section_path": "7.3.1 Transitions caused by a Request Message", "start_heading": "7.3.1 Transitions caused by a Request Message", "content": "RequestMessage T7h.3is.s1ec.t1ion describe sC thraansnitgioinns gth tath aere S caouuserdc bey ba etwee n Diff.erent (A)PDOs (A)PDO Power Data Object PDO APDO CapabilitiesMessage In these transition descriptions the term is used to describe any, regardless of whether it is a or an in the. RequestMessage This- section descri(bAe)sP DtrOansitions in r(eAs)pPoDnOse to a : - From oneI mplicit C to on atr na oc tt her Expli cit Contract - From a[U nS B Type-C 2.4] to an First Explicit Contract From operation to the These transitions usuaDlleyv ricees uPlot liincy a M vaonltaaggeer changPeo rbtuPt oilsi cnyo Etn rgeinqeuired. Shall Figure 7.23, \"Transition Diagram for Increasing the Voltage and Current\" The Finigteurraec 7ti.2o5n, o\"fT trhaen sition Diagram for Decr, ethaesi ng th e Voltage an dan Indc trheea sPionwg ethr eS Cuuprprleyn tth\"at be followed when increasing the current is shown in and Source Shall ValidVBUS. Source PDO APDO Source Shall ValidVBUS The New SvooultracgeeP aDsO the AtrPaDnOsition starts be aSnhya lvloltage within the T raabnlgee7 o.2f, t \"hSee qpureenvicoeu Dsi agram for In ocrr easing. Tthhee V oltage vaonldta Cguer arfetnetr\" the trTaanbslieti7o.n4,i \"sS ceoqmuepnlectee D escri pbteio ann fyo vr oDletacgreea wsiinthgi tnh teh Veo ltage and range Ionfc trheea sing the Cur rent\" or. The sequence that Shal lbe followed is described inT able7.23, \"Source Electrical Parameters\" Table7.24, \"Sink Electrica la Pnadr ameters\" Table7.25, \"Common Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in Note:, Sink, aRnedq uestMessage Source. In this figure, the has previously sent a to the. vSmallStep Shall (A)PDO (A)PDO Battery STuhpep vlyoltagVea irsi acbolnes Sidueprpelyd to increase if the change from VOLD to VNEW is greater than. The determination be based on the nominal voltage before and after, unless either is - or when the worst case of the following is assumed in making this determination. - Minimum voltage to voltage. - Minimum voltage to Maximum voltage. Voltage to Maximum voltage. The following sections begin with a description of the generic process followed by more specific examples of the most common transitions. (A)PDO T7h.3e.s1e.v1e.n1 e.1xamples of In ccrheanagsei ntrga ntshiteio Vnos bltealogwe illustrate the most common transitions. System Policy Device Policy Shall (A)PDO Figure 7.22, \"Transition Diagram for Increasing the TVohlet aingtee\"raction of the Shall,, and power Tsuapbplely7.t1h, a\"tS equen bcee Dfoelslcorwipetdio wn hfoern I cnhcarenagsiningg f rthoem Vonolet age\" to another while increasinSgh tahlel voltage is shown in Table7.23, \"Source Electrical Parameters\" Table7.2. 4T, h\"Sei snekq Euleenctcrei ctahla Pt arame bteer fso\"lloweTda isb ldee7s.c2r5ib, \"eCdo imnm on Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in, Note: Figure 7.22, \"Transition Dia, garnadm for Increasing the Voltage\" Sink. Request Message Source In, the has previously sent a to the. Figure 7.22 Transition Diagram for Increasing the Voltage tSrcTransReq tSrcTransition Send Send Source Port Accept PS_RDY Policy Engine PSTransitionTimer Port to Port Messaging Good Evaluate Good Evaluate Sink Port CRC Accept CRC PS_RDY Policy Engine Source Port Source Device Policy Mgr (cid:215) V Source Port t2 Interaction Source Port Power Supply Source VOLD Source VNEW Sink Port Sink to Sink Sink Standby Device Policy Mgr Standby to Sink Sink Port t1 t3 Interaction Sink Port Power Supply Sink (cid:148) IOLD Sink iSnkStdBy (cid:54)(cid:76)(cid:81)(cid:78)(cid:3)(cid:148)(cid:3)(cid:44)(cid:50)(cid:47)(cid:39) Source Port Voltage VNEW Source V Voltage VOLD BUS Sink Port Current (cid:148)IOLD (cid:148)IOLD Sink I1 V Current BUS I1 (cid:148) iSnkStdBy + cSnkBulkPd(VBUS/t) (cid:167) Table7.1 Sequence Description for Increasing the Voltage Step Source Port Sink Port Policy Engine AcceptMessage Sink Policy Engine AcceptMessage Sink Policy Engine Device Policy Source Policy Engine Manager PSTransitionTimer Accept the. The tells the. then starts the Message to instruct the power supply to modify its and evaluates the output power. Policy En.gine Device Policy Manager iSnkStdby tSnkStdby Shall instruct the power supply to reduce current drawn tSrcTransition SinkShall Not to within (t1); t1 Section complete before. The 7.2.6, \"Transient Load Behavior\" violate transient load behavior defined in while transitioning tSrcTransition GoodCRC Message to and operating at the new power level. Shall received, the power supply starts to change its output tSrcReady power capability. The power supply be ready to Device Policy operate at the new power level within Manager (t2). The power supply informs the Policy that it is ready to operate at the new power Engine level. The power supply status is passed to the Po.licy Engine PS_RDYMessage Policy Engine PS_RDYMessage Sink tSrcTransReq Source GoodCRCMessage AcceptMessage starting within of the end of the the. Protocol L ayer followingG tohoed CRCMe ssage. Protocol Layer GoodCRCMessage Sink Source Policy Engine PSTransitionTimer PS_RDYMessage the.. then stops the Source Device Policy Manager, evaluates the Source (A)PDO from the and tells the PS_RDYMessage that the is operating at the new. PSTransitionTimer Sink Hard If the is not received before ResetSignaling times out the sends Si nkMay. PS_RDYMessage any time after evaluation of the. This StiinmkeS dhuarlal tNioont is indeterminate. Section 7.2.6, \"Transient Load Behavior\" behavior defined in while transitioning to and operating at the new power level. The time duration (t3) depends on the magnitude of the load change. System Policy Device Policy Shall (A)PDO Figure 7.23, \"Transition Diagram for TInhcer einasteinrga ctthioe nV oolft tahgee and Current\",, and pSohwaellr supply that be followTeadb wleh7e.n2,c \"hSaenqguienngc efr om Doniaeg ram for tIon carneoatshinegr wthhei lVeo ilntacgreea asnindg C tuhrer evnotl\"tage and current is shown in Shall Table7.23, \"Source Electrical Param.e Ttehres \"seTqaubelnec7e. 2th4a, \"t Sink E lbeec tfroilclaolw Peadr aism deetescrsr\"ibed inT able7.25, \"Common Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in,, and Note: Figure 7.23, \"Transition. Diagram for Increasing the Voltage and Current\" Sink RequestMessage Source In, the has previously sent a to the. Figure 7.23 Transition Diagram for Increasing the Voltage and Current tSrcTransReq tSrcTransition Send Send Source Port Accept PS_RDY Policy Engine PSTransitionTimer Port to Port Good Evaluate Good Evaluate Sink Port CRC Accept CRC PS_RDY Policy Engine Source Port Source Device Policy Mgr (cid:215) V (cid:215) I Source Port Interaction Source Port Power Supply Source VOLD Source VNEW Sink to Sink Sink Standby Standby to Sink t3 Sink Port Interaction Sink (cid:148)(cid:3)IOLD Sink iSnkStdBy (cid:54)(cid:76)(cid:81)(cid:78)(cid:3)(cid:148)(cid:3)(cid:44)(cid:49)(cid:40)(cid:58) VNEW Source VOLD V BUSVoltage (cid:148)(cid:3)INEW (cid:148)IOLD Sink I1 V BUSCurrent (cid:167) t2 Sink Port Device Policy Mgr t1 Sink Port Power Supply Source Port Voltage Sink Port Current I1 (cid:148) iSnkStdBy + cSnkBulkPd(VBUS/t) Table7.2 Sequence Diagram for Increasing the Voltage and Current Step Source Port Sink Port Policy Engine AcceptMessage Sink Policy Engine Accept Sink Policy Engine Device Policy Source Policy Engine Manager PSTransitionTimer Accept the. The tells the. then starts the Message to instruct the power supply to modify its and evaluates the output power. Policy En.gine Device Policy Manager iSnkStdby tSnkStdby Shall instruct the power supply to reduce current drawn tSrcTransition SinkShall Not to within (t1); t1 Section complete before. The 7.2.6, \"Transient Load Behavior\" violate transient load behavior defined in while transitioning tSrcTransition GoodCRC Message to and operating at the new power level. Shall received, the power supply starts to change its output tSrcReady power capability. The power supply be ready to Device Policy operate at the new power level within Manager (t2). The power supply informs the Policy that it is ready to operate at the new power Engine level. The power supply status is passed to the Po.l icy Engine PS_RDYMessage Policy Engine PS_RDYMessage Sink tSrcTransReq Source GoodCRCMessage AcceptMessage starting within of the end of the the. Protocol L ayer followingG tohoed CRCMe ssage. Protocol Layer GoodCRCMessage Sink Source Policy Engine PSTransitionTimer PS_RDYMessage the.. then stops the Source Device Policy Manager, evaluates the Source (A)PDO from the and tells the PS_RDYMessage that the is operating at the new. PSTransitionTimer Sink Hard If the is not received before ResetSignaling times out, the sends Si nkMay. PS_RDYMessage any time after evaluation of the. This StiinmkeS dhuarlal tNioont is indeterminate. Section 7.2.6, \"Transient Load Behavior\" behavior defined in while transitioning to and operating at the new power level. The time duration (t3) depends on the magnitude of the load change. System Policy Device Policy Shall (A)PDO Figure 7.24, \"Transition TDhiaeg irnatmer afocrt iIonnc roefa tshineg the Voltage a, nd Decreasing, a tnhde Cpuorwreenr ts\"upply that be fSohllaowlled when changing from onTe able7.3, t\"oS aenquoethnecre wDehsicler iipntciroena fsoirn gIn tchree avsoilntgag teh ea nVdo ldtaecgree aansidn Dg ethcree causrinrgen tth ies Csuhrorwennt i\"n Shall Table7.23, \"Source Electrica.l TPhaera smeqeuteernsc\"eT tahbalte 7.24, b\"Sei nfokl lEolwecetdri cisa dl escribed Pina rameters\" Table7.25, \"Common Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in, Note:,F aignudr e 7.24, \"Transition Diagram for Increasing the Voltage an.d Decreasing the Current\" Sink RequestMessage Source In, the has previously sent a to the. Figure 7.24 Transition Diagram for Increasing the Voltage and Decreasing the Current tSrcTransReq tSrcTransition Send Send Source Port Accept PS_RDY Policy Engine PSTransitionTimer Port to Port Good Evaluate Good Evaluate Sink Port CRC Accept CRC PS_RDY Policy Engine Source Port Source Device Policy Mgr (cid:215) V (cid:216)I Source Port Interaction Source Port Power Supply Source VOLD Source VNEW Sink Port Sink to Sink Sink Standby Device Policy Mgr Standby to Sink Sink Port t1 t3 Interaction Sink Port Power Supply Sink (cid:148)(cid:3)IOLD Sink iSnkStdBy (cid:54)(cid:76)(cid:81)(cid:78)(cid:3)(cid:148)(cid:3)(cid:44)(cid:49)(cid:40)(cid:58) Source Port Voltage VNEW Source V Voltage VOLD BUS Sink Port Current (cid:148)IOLD Sink (cid:148)INEW V Current I1 BUS I1 (cid:148) iSnkStdBy + cSnkBulkPd(VBUS/t) (cid:167) t2 Table7.3 Sequence Description for Increasing the Voltage and Decreasing the Current Step Source Port Sink Port Policy Engine AcceptMessage Sink Policy Engine AcceptMessage Sink Policy Engine Device Policy Source Policy Engine Manager PSTransitionTimer Accept the. The tells the. then starts the Message to instruct the power supply to modify its and evaluates the output power. Policy En.gine Device Policy Manager iSnkStdby tSnkStdby Shall instruct the power supply to reduce current drawn tSrcTransition SinkShall Not to within (t1); t1 Section complete before. The 7.2.6, \"Transient Load Behavior\" violate transient load behavior defined in while transitioning tSrcTransition GoodCRC Message to and operating at the new power level. Shall received, the power supply starts to change its output tSrcReady power capability. The power supply be ready to Device Policy operate at the new power level within Manager (t2). The power supply informs the Policy that it is ready to operate at the new power Engine level. The power supply status is passed to the Po.l icy Engine PS_RDYMessage Policy Engine PS_RDY Message Sink tSrcTransReq Source GoodCRCMessage AcceptMessage starting within of the end of the the. Protocol L ayer followingG tohoed CRC Me ssage. Protocol Layer GoodCRCMessage Sink Source Policy Engine PSTransitionTimer PS_RDYMessage the.. then stops the Source Device Policy Manager, evaluates the Source (A)PDO from the and tells the PS_RDYMessage that the is operating at the new. PSTransitionTimer Sink Hard If the is not received before ResetSignaling times out the sends Si nkMay. PS_RDYMessage any time after evaluation of the. This StiinmkeS dhuarlal tNioont is indeterminate. Section 7.2.6, \"Transient Load Behavior\" behavior defined in while transitioning to and operating at the new power level. The time duration (t3) depends on the magnitude of the load change. System Policy Device Policy Shall (A)PDO Figure 7.25, \"Transition TDhiaeg irnatmer afocrt iDoenc oref athsien g the Voltage,a nd Increasing, a tnhde Cpuorwreenr ts\"upply that be fSohllaowlled when changing from onTe able7.4, t\"oS aenquoethnecre wDehsicler idpeticorne afosirn Dge tchree avsoilntagg teh ae nVdo litnacgree aasnind gI nthcree causrinregn tth ies Csuhrorwennt i\"n Shall Table7.23, \"Source Electrica.l TPhaera smeqeuteernsc\"eT tahbalte 7.24, b\"Sei nfokl lEolwecetdri cisa dl escribed Pina rameters\" Table7.25, \"Common Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in, Note:,F aignudr e 7.25, \"Transition Diagram for Decreasing the Voltage an.d Increasing the Current\" Sink RequestMessage Source In, the has previously sent a to the. Figure 7.25 Transition Diagram for Decreasing the Voltage and Increasing the Current tSrcTransReq tSrcTransition Send Send Source Port Accept PS_RDY Policy Engine PSTransitionTimer Port to Port Good Evaluate Good Evaluate Messaging Sink Port CRC Accept CRC PS_RDY Policy Engine Source Port Source Device Policy Mgr (cid:216) V (cid:215) I t2 Source Port Source Port Interaction Power Supply Source VOLD Source VNEW Sink Port Sink Device Policy Mgr (cid:215) I Sink Port t1 Interaction Sink Port Power Supply Sink (cid:148)(cid:3)IOLD (cid:54)(cid:76)(cid:81)(cid:78)(cid:3)(cid:148)(cid:3)(cid:44)(cid:49)(cid:40)(cid:58) Source Port Voltage VOLD Source V Voltage VNEW BUS Sink Port (cid:148)INEW Current Sink (cid:148)IOLD V Current BUS Table7.4 Sequence Description for Decreasing the Voltage and Increasing the Current Step Source Port Sink Port Policy Engine AcceptMessage Sink Policy Engine AcceptMessage Sink Policy Engine Device Policy Source Policy Engine Manager PSTransitionTimer Accept the. The tells the. then starts the Message to instruct the power supply to modify its and evaluates the toSurtcpTurta pnoswiteior.n GoodCRC Message. Shall received, the power supply starts to change its output tSrcReady power capability. The power supply be ready to Device Policy operate at the new power level within Manager (t1). The power supply informs the Policy that it is ready to operate at the new power Engine level. The power supply status is passed to the Po.licy Engine PS_RDYMessage Policy Engine PS_RDYMessage Sink tSrcTransReq Source GoodCRCMessage AcceptMessage starting within of the end of the the. Protocol L ayer followingG tohoed CRCMe ssage. Protocol Layer GoodCRCMessage Sink Source Policy Engine PS_RDY Message Source Device Policy the.. then evaluates the Manager from the and tells the Sink Mit aisy okay to operate at the new power level. PS_RDYMessage any time after evaluation of the. This time duration is indeterminate. System Policy Device Policy Shall (A)PDO Figure 7.26, \"Transition Diagram for Decreasing the TVohlet aingtee\"raction of the Shall,, and power Tsuapbplely7.t5h, a\"tS equen bcee Dfoelslcorwipetdio wn hfoern D cehcarnegaisning gfr tohme Vonolet age\" to another while decreasinSgh tahlel voltage is shown in Table7.23, \"Source Electrical Parameters\" Table7.2. 4T, h\"Sei snekq Euleenctcrei ctahla Pt arame bteer fso\"lloweTda isb ldee7s.c2r5ib, \"eCdo imnm on Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in, Note: Figure 7.26, \"Transition Dia, garnadm for Decreasing the Voltage\" Sink. Request Message Source In, the has previously sent a to the. Figure 7.26 Transition Diagram for Decreasing the Voltage tSrcTransReq tSrcTransition Send Send Source Port Accept PS_RDY Policy Engine PSTransitionTimer Port to Port Messaging Good Evaluate Good Evaluate Sink Port CRC Accept CRC PS_RDY Policy Engine Source Port Source Device Policy Mgr (cid:216) V t Source Port Interaction Source Port Power Supply Source VOLD Source VNEW Sink Port Device Policy Mgr Sink Port Interaction Sink Port Power Supply Sink (cid:148)(cid:3)IOLD Source Port Voltage VOLD Source V Voltage VNEW BUS Sink Port Current (cid:148)IOLD (cid:148)IOLD Sink V Current BUS Table7.5 Sequence Description for Decreasing the Voltage Step Source Port Sink Port Policy Engine AcceptMessage Sink Policy Engine Accept Message Sink Policy Engine Device Policy Source Policy Engine Manager PSTransitionTimer Accept the. The tells the. then starts the Message to instruct the power supply to modify its and evaluates the toSurtcpTurta pnoswiteior.n GoodCRC Message. Shall received, the power supply starts to change its output tSrcReady power capability. The power supply be ready to Device Policy operate at the new power level within Manager (t1). The power supply informs the Policy that it is ready to operate at the new power Engine level. The power supply status is passed to the Po.licy Engine PS_RDYMessage Policy Engine PS_RDYMessage Sink tSrcTransReq GoodCRC Source Message AcceptMessage within of the end of the the. Protocol fLoalyloewring the Go odCRCM.essage Protocol Layer GoodCRCMessage Sink Source Policy Engine PSTransitionTimer PS_RDYMessage the.. then stops the Source Device Policy Manager, evaluates the Source (A)PDO from the and tells the PS_RDYMessage that the is operating at the new. PSTransitionTimer Sink Hard If the is not received before ResetSignaling times out the sends. System Policy Device Policy Shall (A)PDO Figure 7.28, \"Transition Diagram for Tnoh ec hinatnegrea cinti oCnu rorfe tnhte o r Voltage\",, anSdh paollwer supply that be follToawbeled 7w.6h, e\"nS ecqhuaenngcien g from Doneesc ription ftoor aDneoctrheears iwngh itlhee d Veoclrteaagsei nagn dth teh ev oClutarrgeen atn\"d current is shown in Shall Table7.23, \"Source Electrical Par.a Tmheet seersq\"ueTnacbele th7a.2t4, \"Sin kb eE lfeoclltoriwcaeld P ias rdaemscertiebres\"d in Table7.25, \"Common Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in,, and Note: Figure 7.27, \"Transition. Diagram for Decreasing the Voltage and the Current\" Sink RequestMessage Source In, the has previously sent a to the. Figure 7.27 Transition Diagram for Decreasing the Voltage and the Current tSrcTransReq tSrcTransition Send Send Source Port Accept PS_RDY Policy Engine PSTransitionTimer Port to Port Good Evaluate Good Evaluate Messaging Sink Port CRC Accept CRC PS_RDY Policy Engine Source Port Source Device Policy Mgr (cid:216) V (cid:216) I t2 Source Port Source Port Interaction Power Supply Source VOLD Source VNEW Sink Port Sink Device Policy Mgr (cid:216) I t1 Sink Port Sink Port Interaction Power Supply Sink (cid:148)(cid:3)IOLD Sink (cid:148)(cid:3)INEW Source Port Voltage VOLD Source VNEW V BUSVoltage Sink Port Current (cid:148)IOLD Sink (cid:148)INEW V Current BUS Table7.6 Sequence Description for Decreasing the Voltage and the Current Step Source Port Sink Port Policy Engine AcceptMessage Sink Policy Engine AcceptMessage Sink Policy Engine Device Policy Source Policy Engine Manager PSTransitionTimer Accept the. The tells the. then starts the Message to instruct the power supply to modify its and evaluates the output power. Sink.Shall tSnkNewPower Shall tSrcTransition SinkShall Not within (t1); t1 complete before Section 7.2.6, \"Transient. The violate transient Load Behavior\" load behavior defined in while transitioning to and operating tSrcTransition GoodCRC Message at the new power level. Shall received, the power supply starts to change its output tSrcReady power capability. The power supply be ready to Device Policy operate at the new power level within Manager (t2). The power supply informs the Policy that it is ready to operate at the new power Engine level. The power supply status is passed to the Po.licy Engine PS_RDYMessage Policy Engine PS_RDYMessage Sink tSrcTransReq Source GoodCRCMessage AcceptMessage starting within of the end of the the. Protocol L ayer followingG tohoed CRCMe ssage. Protocol Layer GoodCRCMessage Sink Source Policy Engine PSTransitionTimer PS_RDYMessage the.. then stops the Source Device Policy Manager, evaluates the Source (A)PDO from the and tells the PS_RDYMessage that the is operating at the new. PSTransitionTimer Sink Hard If the is not received before ResetSignaling times out the sends Si nkShall N.ot Section 7.2.6, \"Transient Load Behavior\" behavior defined in while transitioning to and operating at the new power level. System Policy Device Policy Shall (A)PDO Sink ThFei ginutreer a7c.2ti8o, n\" Torfa tnhsei tion Diagram,f or no change,i na nCdu rproewnte or rs uVpolptlayg teh\"at be followedS whhaelln changing from one tTo aabnloet7h.e7r, \"wSehqiluee tnhcee Desc rreipqtuieosnt fso trh neo s cahmaen vgoe litna gCeu rarnedn tC ourr Vreonltta agse i\"t is currently operating at is shSohwalnl in Table7.23, \"Source Electrical Parameters\" Tabl. eT7h.e2 4s,e \"qSuinekn cEel etchtarti cal Pa rbaem foetlleorws\"ed is Tdeasbcleri7b.e2d5,i n\"C ommon Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in,, and Note: Figure 7.28, \"Transition Diagram for no chan.ge in Current or Voltage\" Sink RequestMessage Source In, the has previously sent a to the. Figure 7.28 Transition Diagram for no change in Current or Voltage tSrcTransReq tSrcTransition Source Port Send Send Policy Engine Accept PS_RDY PSTransitionTimer Port to Port Sink Port Good Evaluate Good Evaluate Policy Engine CRC Accept CRC PS_RDY Source Port Device Policy Mgr Source Port Interaction Source Port Power Supply Source VOLD Vold Source VOLD Sink Port Device Policy Mgr Sink Port Interaction Sink Port Power Supply Sink (cid:148)(cid:3)IOLD Source Port Voltage VBUS doesn’t change Source V Voltage BUS Sink Port Current Sink Current doesn’t change V Current BUS Table7.7 Sequence Description for no change in Current or Voltage Step Source Port Sink Port Policy Engine Accept Message Sink Policy Engine AcceptMessage Sink Source Policy Engine PSTransitionTimer Accept the.. then starts the Message and evaluates the Policy Engine tSrcTransition Policy En.gine PS_RDYMessage PS_RDYMessage Sink tSrcTransReq GoodCRCMessage the to the starting within AcceptMessage of the end of the Pfoollliocwy iEnngg tihnee Goo.dCRCMessage Protocol Layer GoodCRC Message Sink Source Policy Engine PS_RDYMessage Note: the.. evaluates the. Device PoliTchy eM daencaisgieorn that no power transition is required could be made either by the or the power supply depending on implementation. between Different (A)PDOs System Policy Device Policy Shall Figure 7.29, \"Transition Diagram for Increasing the Current\" The interactionS hoaf ltlhe, Ta, balned7 p.8o, w\"Seerq suuepnpcley D thesactr iption b feo rf oInllcorweaesdi nwgh tehne iCnucrrreeansti\"ng the current without changinSgh tahlel voltage is shown in Table7.23, \"Source Electrical Parameters\" Table7.24, \". STihnke sEeleqcuterinccael Pthaarta meter bs\"e folloTwaebdle is7 d.2e5s,c \"rCiboemdm ino n Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in, Note: Figure 7.2,9 a, n\"Tdr ansition Diagram for Increasing the Current\" Sink. Request Message Source In, the has previously sent a to the. Figure 7.29 Transition Diagram for Increasing the Current Source Port Source Device Policy Mgr (cid:215) I Source Port Power Supply Sink Port Sink Device Policy Mgr (cid:215) I Sink Port Power Supply Sink (cid:148)(cid:3)IOLD Sink (cid:148)(cid:3)INEW Source Port Voltage VBUSdoesn’t change Sink Port Current (cid:148)INEW (cid:148)IOLD (cid:167) tSrcTransReq tSrcTransition Source Port Send Send Policy Engine Accept PS_RDY PSTransitionTimer Port to Port Good Evaluate Good Evaluate Sink Port CRC Accept CRC PS_RDY Policy Engine t1 Source Port Interaction Source VOLD Source VOLD Sink Port t2 Interaction Source V Voltage BUS Sink V Current BUS Table7.8 Sequence Description for Increasing the Current Step Source Port Sink Port Policy Engine AcceptMessage Sink Policy Engine AcceptMessage Sink Policy Engine Device Policy Source Policy Engine Manager PSTransitionTimer Accept the. The tells the. then starts the Message to instruct the power supply to modify its and evaluates the toSurtcpTurta pnoswiteior.n GoodCRC Message. Shall received, the power supply starts to change its output tSrcReady power capability. The power supply be ready to Device Policy operate at the new power level within Manager (t1). The power supply informs the Policy that it is ready to operate at the new power Engine level. The power supply status is passed to the Po.licy Engine PS_RDYMessage Policy Engine PS_RDYMessage Sink tSrcTransReq Source GoodCRCMessage AcceptMessage starting within of the end of the the. Protocol L ayer followingG tohoed CRC Me ssage. Protocol Layer GoodCRCMessage Sink Source Policy Engine PSTransitionTimer PS_RDYMessage the.. then stops the Source Device Policy Manager, evaluates the Source (A)PDO from the and tells the PS_RDYMessage that the is operating at the new. PSTransitionTimer Sink Hard If the is not received before ResetSignaling times out the sends Si nkMay. PS_RDYMessage any time after evaluation of the. This StiinmkeS dhuarlal tNioont is indeterminate. Section 7.2.6, \"Transient Load Behavior\" behavior defined in while transitioning to and operating at the new power level. The time duration (t2) depends on the magnitude of the load change. System Policy Device Policy Shall Figure 7.30, \"Transition Diagram for Decreasing the Current\" The interactionS hoaf ltlhe, Ta, balned7 p.9o, w\"Seerq suuepnpcley D thesactr iption b feo rf oDlelocwreeads iwngh ethne d Ceucrrreeansti\"ng the current without changinSgh tahlel voltage is shown in Table7.23, \"Source Electrical Parameters\" Table7.24, \". STinhke Eseleqcuterinccael Pthaarta meter bs\"e folloTwaebdle is7 d.2e5s,c \"rCiboemdm ino n Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in, Note: Figure 7.3,0 a, n\"Tdr ansition Diagram for Decreasing the Current\" Sink. Request Message Source In, the has previously sent a to the. Figure 7.30 Transition Diagram for Decreasing the Current tSrcTransReq tSrcTransition Send Send Source Port Accept PS_RDY Policy Engine PSTransitionTimer Port to Port Good Evaluate Good Evaluate Messaging Sink Port CRC Accept CRC PS_RDY Policy Engine Source Port Source Device Policy Mgr (cid:216) I t2 Source Port Source Port Interaction Power Supply Source VOLD Source VOLD Sink Port Sink Device Policy Mgr (cid:216) I t1 Sink Port Sink Port Interaction Power Supply Sink (cid:148)(cid:3)IOLD Sink (cid:148)(cid:3)INEW Source Port Voltage VBUS does not change Source V Voltage BUS Sink Port Current (cid:148)IOLD Sink (cid:148)INEW V BUSCurrent Table7.9 Sequence Description for Decreasing the Current Step Source Port Sink Port Policy Engine AcceptMessage Sink Policy Engine AcceptMessage Sink Policy Engine Device Policy Source Policy Engine Manager PSTransitionTimer Accept the. The tells the. then starts the Message Policy Engine Device Policy to instruct the power supply to modify its and evaluates the Manager output power.. tells the to instruct the power supply to reduce poweSrin ckoSnhsuamll pNtoiot n. Section 7.2.6, \"Transient Load Behavior\" behavior defined in SinkShall while transitioning to and operating at the tSnkNewPower new power level. The be able to operate Shall tSrcTransition with lower current within (t1); t1 tSrcTransition GoodCRC Message complete before. Shall received, the power supply starts to change its output tSrcReady power capability. The power supply be ready to Device Policy operate at the new power level within Manager (t2). The power supply informs the Policy that it is ready to operate at the new power Engine level. The power supply status is passed to the Po.licy Engine PS_RDYMessage Policy Engine PS_RDYMessage Sink tSrcTransReq Source GoodCRCMessage AcceptMessage starting within of the end of the the. Protocol L ayer followingG tohoed CRCMe ssage. Protocol Layer GoodCRCMessage Sink Source Policy Engine PSTransitionTimer PS_RDYMessage the.. then stops the Source Device Policy Manager, evaluates the Source (A)PDO from the and tells the PS_RDYMessage that the is operating at the new. PSTransitionTimer Sink Hard If the is not received before ResetSignaling times out the sends. System Policy Device Policy Shall Figure 7.31, \"Transition Diagram for Increasing the Programmable Power Supply Voltage\" The interactionS hoaf ltlhe, Ta, balned7.p1o0w, \"eSre qsuupenpclye Dtheastc riptio nb feo fro Ilnlocwreeads iwngh ethne i nPrcoregarasimngm tahbel e Pvoolwtaegre S iusp sphlyo wVonl tinag e\" Shall Table7.23, \"Source Electric.a Tl he Pseaqruamenectee rtsh\"atT able7 b.2e4 f,o \"lSloinwke Edl eisc tdreicsaclr Pibaerda mine ters\" Table7.25, \"Common Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in Note:,F igure 7.31, \"Transition Diagram for Incr,e aansdin g the Programmable Power Supply Voltage\" Sink. RequestMessage Source In, the has previously sent a to the. Figure 7.31 Transition Diagram for Increasing the Programmable Power Supply Voltage tPpsSrcTransSmall, tPpsSrcTransLarge Send Send Source Port Accept PS_RDY Policy Engine PSTransitionTimer Port to Port Messaging Good Evaluate Good Evaluate Sink Port CRC Accept CRC PS_RDY Policy Engine Source Port Source Device Policy Mgr (cid:215) V Source Port Interaction Source Port Power Supply Source VOLD Pps Transition Interval Source VNEW Sink Port Device Policy Mgr Sink Port Interaction Sink Port Sink draws current continuously (not to exceed negotiated current) Power Supply Source Port Voltage VNEW Source V Voltage VOLD BUS Source Source Port CL doesn’t change Current CL Current Sink Port Current Current may change (not to exceed negotiated current) Sink V Current BUS Table7.10 Sequence Description for Increasing the Programmable Power Supply Voltage Step Source Port Sink Port Policy Engine AcceptMessage Sink Policy Engine AcceptMessage Sink Policy Engine Device Policy Source Policy Engine Policy Engine Manager PSTransitionTimer Accept the. The tells the.. then starts the Message to instruct the power supply to increase its and evaluates the output voltage. AcceptMessage. Power Supply starts to increase its output voltage. Shall tPpsSrcTransLarge The Programmable Power Supply new voltage setvPpsSmallStep point be reached by for tPpsSrcTransSmall steps larger than or else by Device Policy Manager. The power supply informs the VBUS that it has reached the new CL set-point and whether is at the corresponding Policy new level, or if the supply is operating in mode. Engine The power supply status is passed to the Po.licy Engine PS_RDYMessage Policy Engine PS_RDYMessage Sink tPpsSrcTransSmall Source tPpsSrcTransLarge GoodCRC starting within or the. Message AcceptMessage of the end of the Protocol fLoalyloewring the Go odCRCM.essage Protocol Layer GoodCRCMessage Sink Source Policy Engine PSTransitionTimer PS_RDYMessage the.. then stops the Source Device Policy Manager, evaluates the Source from the and tells the vPpsNew that the is operating at the new voltage set PS_RDYMessage point (corresponding to ). PSTransitionTimer Sink Hard If the is not received before ResetSignaling times out the sends. System Policy Device Policy Shall Figure 7.32, \"Transition Diagram for Decreasing the Programmable Power Supply Voltage\" The interactionSh oaf ltlhe, Ta,b alend7.p11o,w \"Seer qsuuepnpcley Dtheasct ription b feo rfo Dlleocwreeads iwngh ethne d Percorgeraasminmg athbele Pvoolwtaegre S iusp sphloy wVonl tina ge\" Shall Table7.23, \"Source Electric.a Tl he Pseaqruamenectee rtsh\"atT able7 b.2e4 f,o \"lSloinwke Edl eisc tdreicsacrl iPbaerda imne ters\" Table7.25, \"Common Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in Note:,F igure 7.32, \"Transition Diagram for Decr, eaansdin g the Programmable Power Supply Voltage\" Sink. RequestMessage Source In, the has previously sent a to the. Figure 7.32 Transition Diagram for Decreasing the Programmable Power Supply Voltage tPpsSrcTransSmall, tPpsSrcTransLarge Source Port Send Send Policy Engine Accept PS_RDY PSTransitionTimer Port to Port Sink Port Good Evaluate Good Evaluate Policy Engine CRC Accept CRC PS_RDY Source Port Source Device Policy Mgr (cid:216)V Source Port Interaction Source Port Power Supply Source VOLD Pps Transition Interval Source VNEW Sink Port Device Policy Mgr Sink Port Interaction Sink Port Sink draws current continuously (not to exceed negotiated current) Power Supply Source Port Voltage VOLD Source V Voltage VNEW BUS Source Port CL doesn’t change Source Current CL Current Sink Port Current Current may change (not to exceed negotiated current) Sink V Current BUS Table7.11 Sequence Description for Decreasing the Programmable Power Supply Voltage Step Source Port Sink Port Policy Engine AcceptMessage Sink Policy Engine AcceptMessage Sink Policy Engine Device Policy Source Policy Engine Policy Engine Manager PSTransitionTimer Accept the. The tells the.. then starts the Message to instruct the power supply to decrease its and evaluates the output voltage. Accept Message. Power Supply starts to decrease its output voltage. vPpsNew Shall The Programmable Power Supply new voltage settPpsSrcTransLarge point (corresponding to ) be reached vPpsSmallStep tPpsSrcTransSmall by for steps larger than Device Policy Manager or else by. The power supply informs the that Policy Engine it has reached the new level. The power supply status is paPssoelidc yt oE nthgein e P.S_RDYMessage Policy Engine PS_RDYMessage Sink tPpsSrcTransSmall Source tPpsSrcTransLarge GoodCRC starting within or the. Message AcceptMessage of the end of the Protocol fLoalyloewring the Go odCRCM.essage Protocol Layer GoodCRCMessage Sink Source Policy Engine PSTransitionTimer PS_RDYMessage the.. then stops the Source Device Policy Manager, evaluates the Source from the and tells the vPpsNew that the is operating at the new voltage set PS_RDYMessage point (corresponding to ). PSTransitionTimer Sink Hard If the is not received before ResetSignaling times out the sends. System Policy Device Policy Shall APDO APDO The interaction of thFeig ure 7.33, \"Tra, nsition Diagra, amn dfo pr oinwcerer assuinpgp ltyh teh Caut rrent i nb eP fPoSl lmowodeed\" when increasing the Scuhrarlelnt limit in the same, nToat belxec7ee.1d2i,n \"gS ethqeu emnacxe iDmeusmcr ifpotrio tnh afot r incre aasnidn gw tihthe oCuutr crhenatn igni nPgP tSh me oredqeu\"ested voltage is shown in Shall Table7.23, \"Source Electrical Paramet.e Trsh\"e Tseaqbulee7n.c2e4 t, h\"Saitn k Electr bicea lf oPlalorwamede tiesr ds\"escribTedab inle 7.25, \"Common Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in, Note: Figure 7.3,3 a, n\"Tdr ansition Diagram for increasing the Current in PPS mode\". Sink RequestMessage Source In, the has previously sent SinkMaa y to the. Current Limit Source PS_RDY Message Request The draw current equal to the increasing of the before it has received the for the new. Figure 7.33 Transition Diagram for increasing the Current in PPS mode Send Send Source Port Accept PS_RDY Policy Engine PSTransitionTimer (running) Port to Port Messaging Good Evaluate Good Evaluate Sink Port CRC Accept CRC PS_RDY Policy Engine Source Port Source(cid:313)| Device Policy Mgr Source Port Interaction Source VOLD S Po ou wr ec re S P uo pr pt ly Source IOLD PPS Transition Interval Source INEW Sink Port Sink (cid:313)| Sink Port Device Policy Mgr Interaction Sink Port Power Supply Sink draws current continuously ((cid:148)old negotiated current) (cid:54)(cid:76)(cid:81)(cid:78)(cid:3)(cid:148)(cid:3)(cid:44)NEW Source Port Voltage Source V OLD V NEW V BUSVoltage Source Port CL NEW Current Source CL OLD CL change CL Current Sink Port Current Sink I OLD Follows CL change Passive Sink following CL Source I NEW V Current BUS Active Sink at I OLD Table7.12 Sequence Description for increasing the Current in PPS mode Step Source Port Sink Port Policy Engine AcceptMessage Sink Policy Engine AcceptMessage Sink Policy Engine Device Policy Source Policy Engine Manager PSTransitionTimer Accept the. The tells the. then starts the Message to instruct the power supply to increase its and evaluates the set-point for the current limit. Current Limit Sink. Current Limit Source poinPt otoli ctyh eE nngewin erequesttePdp vsSarluceT.r ansSmall Policy Engine of the P.S_RDYMessage PS_RDYMessage Sink tPpsCLProgramSettle GoodCRC sends the to the starting within Message AcceptMessage of the end of the Policy En fgoilnloewing the Goo dCRCMe.ssage Protocol Layer GoodCRC Message Sink Source the. Policy E. ngine PSTransitionTimer PS_RDYMessage Device Policy Manager evaluates the and tells the Source CL it can increase the current up to the requested value without the going into PS_RDYMessage mode. PSTransitionTimer Sink Hard If the is not received before ResetSignaling times out the sends Si nk. System Policy Device Policy Shall APDO APDO The interaction of thFeig ure 7.34, \"Tra, nsition Diagra, amn dfo pr odwecerre asusipnpgl yth teh Catu rrent ibne P fPoSll omwoedde \"when decreasing the cSuhrarlelnt limit in the same, nToat belxec7ee.1d3i,n \"gS ethqeu emnicnei mDeusmcr ifpotri othna fto r decr eaansdin wg itthheo Cuut rcrheanntg iinn gP PthS em roedqeu\"ested voltage is shown in Shall Table7.23, \"Source Electrical Paramete. rTsh\"eT saebqluee7n.2ce4,t \"hSaitn k Electr bicea lf oPlalorwamede tiesr ds\"escribTedab inle 7.25, \"Common Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in, Note: Figure 7.3,4 a, n\"Tdr ansition Diagram for decreasing the Current in PPS mode\". Sink RequestMessage Source In, the has previously sent a to the. Figure 7.34 Transition Diagram for decreasing the Current in PPS mode Send Send Source Port Accept PS_RDY Policy Engine PSTransitionTimer (running) Port to Port Messaging Good Evaluate Good Evaluate Sink Port CRC Accept CRC PS_RDY Policy Engine Source Port Source(cid:315) | Device Policy Mgr Source Port Interaction Source VOLD S Po ou wr ec re S P uo pr pt ly Source IOLD PPS Transition Interval Source INEW Sink Port Sink (cid:313)| Sink Port Device Policy Mgr Interaction Sink Port Power Supply Sink draws current continuously ((cid:148)old negotiated current) (cid:54)(cid:76)(cid:81)(cid:78)(cid:3)(cid:148)(cid:3)(cid:44)NEW Source Port Voltage V OLD Set-point V does not change, only resulting V V Source NEW V Voltage BUS Source Port CL OLD Current Source CL change CL NEW CL Current Sink Port I OLD Current Sink Follows CL change Active Sink at I I OLD NEW V Current BUS Passive Sink following CL Source Table7.13 Sequence Description for decreasing the Current in PPS mode Step Source Port Sink Port Policy Engine AcceptMessage Sink Policy Engine AcceptMessage Sink Policy Engine Device Policy Source Policy Engine Accept Manager Message Sink the. The tells the. then evaluates the Negotiated to instruct the power supply to decrease its and instructs the to reduce its current to PSTransitionTimer set-point for the current limit. below the new current level and starts the Current Limit Sink. Negotiated Negotiated Source Current Limit point to the new value. current to prevent the from going Policy Engine PS_RDY Message into. Sink tPpsSrcTransSmall GoodCRCMessage AcceptMessage starting within of the end of tPhoeli cy Engine folloGwoiondgC tRhCe Messag e. Policy Engine PS_RDYMessage Sink the. Protocol Layer GoodCRCMessage Source Policy Engine PSTransitionTimer PS_RDY. then stops the Message and evaluates the PS_RDYMessage. PSTransitionTimer Sink Hard If the is not received before ResetSignaling times out the sends Si nk. VBUS the voltage on can drop doing so. System Policy Device Policy Shall Sink Negotiated Figure 7.35, T\"Threa innstietiroanc tDioiang orfa tmhe f or no change i,n Current or V, oalntadg peo iwn ePrP sSu mppoldye t\"hat be followedS hwahleln the requests the same voltTaagbe laen7d.1 c4u,r \"rSeenqtu leenvceels D aess tchreip ptiroens efnort no change i lne vCeulrsr feonrt v oorl tVaogleta agned i cnu PrPreSn mt oisd seh\"own in Shall Table7.23, \"Source Ele.c Ttrhieca sle Pqaureanmcee ttehrast\" Table b7e. 2fo4l,l o\"Swinekd is dEelescctrriibceadl P ina rameters\" Table7.25, \"Common Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in, Note: Figure 7.3,5 a, n\"Tdr ansition Diagram for no change in Current or Voltage in P.PS mode\" Sink RequestMessage Source In, the has previously sent a to the. Figure 7.35 Transition Diagram for no change in Current or Voltage in PPS mode Send Send Source Port Accept PS_RDY Policy Engine PSTransitionTimer (running) Port to Port Messaging Good Evaluate Good Evaluate Sink Port CRC Accept CRC PS_RDY Policy Engine Source Port Device Policy Mgr Source Port Interaction Source VOLD Source Port Power Supply Source IOLD Sink Port Sink Port Device Policy Mgr Interaction Sink Port Power Supply Sink (cid:148) IOLD Source Port V doesn’t change Voltage BUS Source V Voltage BUS Source Port Current CL doesn’t change Source CL Current Sink Port Current Current doesn’t change Sink V Current BUS Table7.14 Sequence Description for no change in Current or Voltage in PPS mode Step Source Port Sink Port Policy Engine AcceptMessage Sink Policy Engine AcceptMessage Sink Source Policy Engine Accept Message PSTransitionTimer the.. then evaluates the Policy Engine PS_RDYMessage Policy En agninde starts the PS_RDYMessage. Sink tPpsSrcTransSmall GoodCRCMessage Accept the starting within of the Message end of the following the Policy En.gine GoodCRCMessage Protocol Layer GoodCRCMessage Sink Source Policy Engine PSTransitionTimer PS_RDY Note: the.. then stops the Device Pol- Message Source Sink and evaluates the iTchy eM daencaisgieorn that no power transition is required could be made either by the from the. The is already or the power supply depending operating at the new power level, so no further action PS_RDYMessage on implementation. is required. PSTransitionTimer Sink Hard If the is not received before ResetSignaling times out the sends. System Policy Device Policy Shall Figure 7.36, \"Transition Diagram for Increasing the Adjustable Power Supply Voltage\" The interactionS hoaf ltlhe, Ta, balned7 p.1o5w, \"eSre squupepnlcye t Dheastc riptio bne f ofor lIlnocwreeads winhge tnh ein Acdrejuasstianbgl eth e Vvoollttaaggee iSsu sphpolwy Vno ilnta ge\" Shall Table7.23, \"Source El.e Tcthreic al sPeaqruaemnectee rtsh\"atT able7 b.2e4 f,o \"lSlionwke Edle icst driecsaclr Pibaerdam ine ters\" Table7.25, \"Common Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in Note:,F igure 7.36, \"Transition Diagram for Incr,e aansdin g the Adjustable Power Supply Voltage\" Sink. RequestMessage Source In, the has previously sent a to the. Figure 7.36 Transition Diagram for Increasing the Adjustable Power Supply Voltage tAvsSrcTransSmall, tAvsSrcTransLarge Source Port Send Send Policy Engine Accept PSTransitionTimer PS_RDY Port to Port Messaging Sink Port Good Evaluate Good Evaluate Policy Engine CRC Accept CRC PS_RDY Source Port Source Device Policy Mgr (cid:215) V Source Port Interaction Source Port Power Supply Source VOLD AVS Transition Interval Source VNEW Sink Port Device Policy Mgr Sink Port Sink Port Sink draws current continuously for voltage changes less than or equal to vAvsSmallStep. For larger voltage changes, the Sink Interaction Power Supply reduces to iSnkStdby. Source Port Voltage VNEW Source V Voltage VOLD BUS Sink Port Depends on magnitude of AVS voltage Current IOLD change IOLD Sink V Current BUS Table7.15 Sequence Description for Increasing the Adjustable Voltage Supply Voltage Step Source Port Sink Port Policy Engine AcceptMessage Sink Policy Engine AcceptMessage Sink Policy Engine Device Policy Source Policy Engine Policy Engine Manager PSTransitionTimer Accept the. The tells the.. then starts the Message to instruct the power supply to increase its and evaluates the output voltage.. vAvsSmallStep SinkShall iSnkStdby If the voltage increase is larger than, tSnkStdby. iSnkStdby the reduce its current draw to within The reduction to is not vAvsSmallStep required if the voltage increase is less than or equal AcceptMessage AVS to. AVS Shall tAvsSrcTransLarge increase its output voltage. The new voltage setvAvsSmallStep point be reached by for tAvsSrcTransSmall steps larger than or else by Device Policy Manager. The power supply informs the Policy that it has reached the new Engine level. The power supply status is passed to the Po.licy Engine PS_RDYMessage Policy Engine PS_RDYMessage Sink tAvsSrcTransSmall Source tAvsSrcTransLarge GoodCRC starting within or the. Message AcceptMessage of the end of the Protocol fLoalyloewring the Go odCRCM.essage Protocol Layer GoodCRCMessage Sink Source Policy Engine PSTransitionTimer PS_RDYMessage the.. then stops the Source Device Policy Manager, evaluates the Source from the and tells the SinkMay that the is operating at the new voltage set PS_RDY point. The begin operating at the new Message power level any time after evaluation of the PS_RDYMessage. PSTransitionTimer Sink Hard If the is not received before ResetSignaling times out the sends. System Policy Device Policy Shall Figure 7.37, \"Transition Diagram for Decreasing the Adjustable Voltage Supply Voltage\" The interactionS hoaf ltlhe, Ta, balned7 p.1o6w, \"eSre squupepnlcye t Dheastc riptio bne f ofor lDloewcreeda swinhge nth dee Acdrejuasstianbgl eth e Vvoollttaaggee iSsu sphpolwy Vno ilnta ge\" Shall Table7.23, \"Source Elec. tTrhicea l Pseaqruamenectee rtsh\"atT able7 b.2e4 f,o \"lSlionwke Edle icst driecsaclr Pibaerdam ine ters\" Table7.25, \"Common Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in Note:,F igure 7.37, \"Transition Diagram for Dec,r aenadsi ng the Adjustable Voltage Supply Voltage\" Sink. RequestMessage Source In, the has previously sent a to the. Figure 7.37 Transition Diagram for Decreasing the Adjustable Voltage Supply Voltage tAvsSrcTransSmall, tAvsSrcTransLarge Source Port Send Send Policy Engine Accept PSTransitionTimer PS_RDY Port to Port Messaging Sink Port Good Evaluate Good Evaluate Policy Engine CRC Accept CRC PS_RDY Source Port Source Device Policy Mgr (cid:216)V Source Port Interaction Source Port Power Supply Source VOLD AVS Transition Interval Source VNEW Sink Port Device Policy Mgr Sink Port Interaction S Pi on wk eP r o Srt upply Sink (cid:148)(cid:3)IOLD Source Port Voltage VOLD Source V Voltage VNEW BUS Sink Port Current (cid:148)(cid:3)IOLD Sink V Current BUS Table7.16 Sequence Description for Decreasing the Adjustable Voltage Supply Voltage Step Source Port Sink Port Policy Engine AcceptMessage Sink Policy Engine AcceptMessage Sink Policy Engine Device Policy Source Policy Engine Manager PSTransitionTimer Accept the. The tells the. then and starts the Message to instruct the power supply to decrease its and evaluates the output voltage. AcceptMessage AVS. AVS Shall tAvsSrcTransLarge decrease its output voltage. The new voltage setvAvsSmallStep point be reached by for tAvsSrcTransSmall steps larger than or else by Device Policy Manager. The power supply informs the Policy that it has reached the new Engine level. The power supply status is passed to the Po.licy Engine PS_RDYMessage Policy Engine PS_RDYMessage Sink tAvsSrcTransSmall Source tAvsSrcTransLarge GoodCRC starting within or the. Message AcceptMessage of the end of the Protocol fLoalyloewring the Go odCRCM.essage Protocol Layer GoodCRCMessage Sink Source Policy Engine stops the PSTransitionTimer PS_RDYMessage the.. then Source Device Policy Manager, evaluates the Source from the and tells the vAvsNew that the is operating at the new voltage set PS_RDYMessage point (corresponding to ). PSTransitionTimer Sink Hard If the is not received before ResetSignaling times out the sends. System Policy Device Policy Shall Sink Negotiated Figure T7.h3e8,i n\"Tterraancstiitoionn o Df tihager am for no cha, nge in Curren,t a onrd V pooltwageer sinu pApVlSy mthoadte \" be followed wheSnh athlle requests the same voltTaagbel ean7d.1 c7u, r\"Sreenqut elenvceel sD aessc trhipe tpiorne sfeonr tn o change in l Cevuerlrse nfotr o vr oVlotaltgaeg aen idn cAuVrSr emnotd aes\" shown in Shall Table7.23, \"Source Electric.a Tl hPea rsaemqueetenrcse\" tThaabt le7.24 b, e\" Sfoinllko wed is Edleescctrriibceadl P ina rameters\" Table7.25, \"Common Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in, Note: Figure 7.3,8 a, n\"Tdr ansition Diagram for no change in Current or Voltage in A. VS mode\" Sink RequestMessage Source In, the has previousFlyi gsuenret a7.38 Tran sition D tioa gthrea m for n. o change in Current or Voltage in AVS mode tAvsSrcTransSmall, tAvsSrcTransLarge Source Port Send Send Policy Engine Accept PSTransitionTimer PS_RDY Port to Port Messaging Sink Port Good Evaluate Good Evaluate Policy Engine CRC Accept CRC PS_RDY Source Port Voltage VBUS doesn’t change Source V Voltage BUS Sink Port Current Current doesn’t change Sink V Current BUS Table7.17 Sequence Description for no change in Current or Voltage in AVS mode Step Source Port Sink Port Policy Engine AcceptMessage Sink Policy Engine AcceptMessage Sink Source Policy Engine PSTransitionTimer Accept the.. then and starts the Message and evaluates the Policy Engine PS_RDYMessage Polic.y Engine PS_RDYMessage Sink tAvsSrcTransSmall Source GoodCRCMessage AcceptMessage starting within of the end of the. tPhreo tocol Laye r followGionogd tChReC Messa ge. Protocol Layer GoodCRCMessage Sink Source Policy Engine stops the PSTransitionTimer PS_RDYMessage Note: the.. then Device Pol- Source Sink, evaluates the iTchy eM daencaisgieorn that no power transition is required could be made either by the from the. The is already operating at the PS_RDYMessage or the power supply depending new power level, so no further action is required. PSTransitionTimer Sink Hard on implementation. If the is not received before ResetSignaling times out the sends.", "tables": ["Table 7.2", "Table 7.1", "Table 7.23", "Table 7.2", "Table 7.3", "Table 7.4", "Table 7.2", "Table 7.5", "Table 7.23", "Table 7.6", "Table 7.7", "Table 7.8", "Table 7.9", "Table 7.10", "Table 7.11", "Table 7.12", "Table 7.13", "Table 7.14", "Table 7.15", "Table 7.16", "Table 7.17"], "figures": ["Figure 7.23", "Figure 7.22", "Figure 7.23", "Figure 7.24", "Figure 7.25", "Figure 7.26", "Figure 7.27", "Figure 7.28", "Figure 7.29", "Figure 7.29", "Figure 7.30", "Figure 7.30", "Figure 7.31", "Figure 7.31", "Figure 7.32", "Figure 7.32", "Figure 7.33", "Figure 7.34", "Figure 7.35", "Figure 7.36", "Figure 7.36", "Figure 7.37", "Figure 7.37"], "page_range": [340, 387]}
{"section_path": "7.3.2 Transitions Caused by Power Role Swap", "start_heading": "7.3.2 Transitions Caused by Power Role Swap", "content": "System Policy Device Policy Shall Sink Power Role Swap Figure 7.39, \"Transition Diagram for a Sink Requested Power Role Swap\" The iSnhtearllaction of the, Table7.18, \", Saenqdu peonwcee Dr essucprpiplyti tohna fto r a Sin bke R foelqlouwesetedd d Puorwinegr aR ole S rweaqpu\"ested is showSnh ianl l Table7.23, \"Source Electrical Parameters\" Ta. bTlhee7 s.2e4q,u \"eSnincke tEhleact trical Pbaer faomlloewteersd\" is desTcaribbleed7 i.2n5, \"Common Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in, Note: Figure 7.3,9 a, n\"Tdr ansition Diagram for a Sink Requested Power Role Swap\". Sink PR_SwapMessage Source In, the has previously sent a to the. Figure 7.39 Transition Diagram for a Sink Requested Power Role Swap tSrcTransOff PSSourceOnTimer Send tSrcTransition Send Good Evaluate Initial Source Port Accept PS_RDY CRC PS_RDY Policy Engine PSSourceOffTimer tSrcTransOn Port to Port Good Evaluate Good Evaluate Send Messaging Initial Sink Port CRC Accept CRC PS_RDY PS_RDY Policy Engine Initial Source 4 10 New Sink Initial Source Port Source to Swap Standby Device Policy Mgr Swap Standby to Sink S Po ou wr ec re S (cid:198) up S pi ln yk Source VOLD t2 (cid:379)(cid:3)(cid:53)pto Rd Swap Standby t4 Implicit Contract S Ino tu er rc ae c tP ioo nrt Initial Sink 3 7 New Source Initial Sink Port Sink to Swap Swap Standby Device Policy Mgr Standby to Source S Pi on wk e(cid:198) r S S uo pu pr lc ye Sink (cid:148) IOLD t1 Swap Standby Rdto Rp t3 Source vSafe5V InS ti en rk a P cto iort n S Voo lu tarc ge e Port VOLD vSafe5V Source Initial Source New Source VBUSVoltage not driven S Ci un rk re P no trt IOLD Sink Initial Sink I1 I2 I1 New Sink VBUSCurrent not driven I1 (cid:148) iSnkSwapStdby I 2 I2 (cid:148)(cid:3)iSnkSwapStdby+ cSnkBulkPd(VBUS/t) Table7.18 Sequence Description for a Sink Requested Power Role Swap Step Initial Source Port  New Sink Port Initial Sink Port  New Source Port Policy Engine AcceptMessage Initial Policy Engine Accept Sink Prot.ocol Layer GoodCRCMessage Protocol Layer GoodCRCMessage Sink Policy Engine Device Policy Initial Source Policy Engine Manager PSSourceOffTimer Accept the. The tells the. then starts the Message to instruct the power supply to modify its and evaluates the output power. Policy En.gine Device Policy Manager Swap Standby tSnkStdby Shall instruct the power supply to transition to tSrcTransition Sink Standby within (t1); t1 complete Initial SinkShall Not before min. When in the iSnkSwapStdby SinkShall Not draw more than Section 7.2.6, (I1). The violate \"Transient Load Behavior\" transient load behavior defined in while transitioning to and tSrcTransition GoodCRC Message operating at the new power level. Swap Standby Section 7.1.10, received, the power supply starts to change its output \"Swap Standby for Sources\" Shall power capability to (see Swap Standby ). The power supply tSrcSwapStdby complete the transition to within Device Policy Manager (t2). The power supply informs the New Sink CC R that it is ready to operate as R [USB Type-C 2.4] the. The termination is changed from p Policy Engine to d (see ). The power supply Policy Engine status is passed to the. PS_RDYMessage New Source sends the to the device that will tSrcTransOff GoodCRCMessage become the, starting within AcceptMessage of the end of the fPorlolotowcionlg L tahyee r Go.odCRCMessage Protocol Layer GoodCRCMessage New Source New Sink Policy Engine PSSourceOnTimer Policy Engine PSSourceOffTimer the device that will become the. the. PS_RDYMessage Device Policy Manager starts the. Upon the stops the and GoodCRC Message Initial Source New Source sending the and receiving the tells the to instruct the power New Sink PS_RDYMessage the is ready to be the supply to operate as the. PSTransitionTimer Sink Hard. If the is not received before ResetSignaling times out the sends CC. R R [USB Type-C 2.4] New Source Swap Standby ). The power supply as the vSafe5V tNewSrc transitions from to sourcing Device Policy Manager default within (t3). The power New Source supply informs the that it is Policy Engine PS_RDYMessage oDpeevircaet iPnogl iacsy tMhea nager. Policy Engine Source Policy Engine PS_RDYMessage New Sink. power supply is ready, and the sends tSrcTransOn GoodCRCMessage the to the, starting within AcceptMessage of the end of the following the. Table7.18 Sequence Description for a Sink Requested Power Role Swap (Continued) Step Initial Source Port  New Sink Port Initial Sink Port  New Source Port Protocol Layer GoodCRCMessage Protocol Layer GoodCRCMessage New Source PSSourceOnTimer New Sink Policy Engine PS_RDYMessage and then stops the. the. New Source Device Policy Manager evaluates the from New the and tells the to Sink instruct the power supply to draw current as the. New Sink Swap Standby Implicit Contract and begins to drawing the current Device Policy Manager allowed by the. The power supply New Sink informs the that it is Negotiation New Source New operating as the. At this point subsequent SinkMay SinkShall Not s between the and the Section proceed as normal. The 7.2.6, \"Transient Load Behavior\" violate the transient load behavior defined in while transitioning to and operating at the new power level. The time iLoadStepRate duration (t4) depends on the magnitude of the load change ( ). System Policy Device Policy Shall Source Power Role Swap Figure 7.40, \"Transition Diagram for a Source Requested Power Role Swap\" The interaction of tShhea ll,, aTnadb pleow7.1e9r,s \"uSpepqluye tnhcaet D escri pbteio fno lfloorw ae Sdo duurcrein Rge aq uested P ower Rreoqleu eSswtaedp\" is shown in Shall Table7.23, \"Source Electrical Parameters\". TTahbel see7q.u24en, \"cSei nthka Et lectric bael Pfoalrlaomweetde irss \"descriTbaedbl ien7.25, \"Common Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in, Note: Figure 7.40, \"Transition Dia, garnadm for a Source Requested Power Role Swap\" Source. PR_SwapMessage Sink In, the has previously sent a to the. Figure 7.40 Transition Diagram for a Source Requested Power Role Swap Initial Source Port Evaluate PS_RDYCRC PS_RDY Policy Engine Accept I Pn oit li ia cl y S Ein nk g iP no ert AS ce cn ed pt G Co Ro Cd PSSourceOffTimer (running) PE Sva _l Rua Dt Ye PSS _e Rn Dd YG Co Ro Cd Messaging Initial Source 4 10 New Sink Initial Source Port Source to Swap Standby Device Policy Mgr Swap Standby to Sink S Po ou wr ec re S (cid:198) up S pi ln yk Source VOLD t2 (cid:379)(cid:3)(cid:53)pto Rd Swap Standby t4 Implicit Contract S Ino tu er rc ae c tP ioo nrt Initial Sink 2a 6 New Source Initial Sink Port Sink to Swap Swap Standby Device Policy Mgr Standby to Source S Pi on wk e(cid:198) r S S uo pu pr lc ye Sink (cid:148) IOLD t1 Swap Standby Rdto Rp t3 Source vSafe5V InS ti en rk a P cto iort n S Voo lu tarc ge e Port VOLD vSafe5V Source Initial Source New Source VBUSVoltage not driven S Ci un rk re P no trt IOLD Sink Initial Sink I1 I2 I1 New Sink VBUSCurrent not driven I1 (cid:148) iSnkSwapStdby I 2 I2 (cid:148)(cid:3)iSnkSwapStdby+ cSnkBulkPd(VBUS/t) Table7.19 Sequence Description for a Source Requested Power Role Swap Step Initial Source Port New Sink Port Initial Sink Port  New Source Port Policy Engine AcceptMessage Policy Engine Accept Message Initial Source Protocol Layer GoodCRCMessage Protoco.l Layer GoodCRC Message Sink Policy Engine Device Policy Initial Source Policy Engine Manager PSSourceOffTimer. The tells the the. starts the to instruct the power supply to modify its. output power. Policy Engine Device Policy Manager Swap 2a The tells the to Standby Shall instruct the power supply to transition to Swap Standby tSnkStdby. The power supply complete the Shall tSrcTransition SinkShall transition to within (t1); t1 Not complete before. The Section 7.2.6, \"Transient Load Behavior\" violate the transient load behavior defined in while Sink Standby Initial SinkShall Not transitioning to and operating at the new power level. iSnkSwapStdby When in the draw tSrcTransition GoodCRC Message more than (I1). Swap Standby Section 7.1.10, \"Swap the power supply starts to change its output power Standby for Sources\" Shall capability to (see Swap Standby ). The power supply tSrcSwapStdby complete the transition to within Device Policy Manager (t2). The power supply informs the New Sink CC R that it is ready to operate as R [USB Type-C 2.4] the. The termination is changed from p Policy Engine to d (see ). The power supply statuPso ilsic pya Esnsegdin teo the PS_RDY.Message Policy Engine PS_RDY New Source tSrcTransOff GoodCRC device that will become the, starting Message AcceptMessage within of the end of the Protocol fLoalyloewring the Go odCRCM.essage Protocol Layer GoodCRCMessage New Source Policy Engine New Sink PSSourceOnTimer Initial Source Policy Engine PSSourceOffTimer the soon to be. starts the. New Sink Device Policy Manager. At this point the is then stops the and New Source ready to be the. tells the to instruct the power PS_RDYMessage supply to operate as the. PSSourceOffTimer Sink If the is not received before the Hard ResetSignaling times out the starts sending CC. R R [USB Type-C 2.4] New Source Swap Standby ). The power supply as the vSafe5V tNewSrc transitions from to sourcing Device Policy Manager default within (t3). The power New Source supply informs the that it is Policy Engine PS_RDYMessage oDpeevircaet iPnogl iacsy tMhea nager. Policy Engine Policy Engine PS_RDYMessage New Sink power supply is ready, and the sends tSrcTransOn GoodCRCMessage the to the, starting within AcceptMessage of the end of the following the. Table7.19 Sequence Description for a Source Requested Power Role Swap (Continued) Step Initial Source Port New Sink Port Initial Sink Port  New Source Port Protocol Layer GoodCRCMessage Protocol Layer GoodCRCMessage New Source PSSourceOnTimer New Sink Policy Engine PS_RDYMessage and then stops the. the. New Source Device Policy Manager evaluates the from New the and tells the to Sink instruct the power supply to draw current as the. New Sink Swap Standby Implicit Contract to drawing the power allowed by the Device Policy Manager New. The power supply informs the Sink Negotiation that it is operating as the New Source New SinkMay. At this point subsequent s New SinkShall Not between the and the Section 7.2.6, proceed as normal. The violate \"Transient Load Behavior\" the transient load behavior defined in while transitioning to and operating at the new power level. The time duration iLoadStepRate (t4) depends on the magnitude of the load change ( ).", "tables": ["Table 7.18", "Table 7.18", "Table 7.19", "Table 7.19"], "figures": ["Figure 7.39", "Figure 7.40"], "page_range": [388, 395]}
{"section_path": "7.3.3 Transitions Caused by Hard Reset", "start_heading": "7.3.3 Transitions Caused by Hard Reset", "content": "System Policy Device Policy Shall Source Hard Reset Figure 7.41, \"Transition Diagram for a Source Initiated Hard Reset\" The iSnhtaerllaction of the, Table7.20, \", Saenqdu epnocwe eDre ssucprippltyio tnh afot r a Sou brec efo Ilnloitwiaetedd d Huarirndg R ae set\" Initiated is shSohwalnl in Table7.23, \"Source Electrical Parameters\" Tab. lTeh7e. 2s4e,q \"uSeinnkc e tEhleact trical P baer faomlleotweresd\" is desTcarbibleed7.i2n5, \"Common Source/Sink Electrical Parameters\". The timing parameters that be applied are listed in,, and. Figure 7.41 Transition Diagram for a Source Initiated Hard Reset Source Port Send tPSHardReset Policy Engine Hard Reset Port to Port Sink Port Process Policy Engine Hard Reset Source Port Source Source Device Policy Mgr Hard Reset Recover t2 t3 Source Port Interaction Source Port Power Supply Source VOLD Source vSafe0V Source vSafe5V Sink Port Sink Device Policy Mgr Prepare Sink Port t1 Interaction Sink Port Power Supply Sink (cid:148) IOLD Ready to recover and power up Source Port tSrcRecover Voltage VOLD vSafe5V Source (cid:167) V Voltage BUS vSafe0V Sink Port Current (cid:148)IOLD Default current draw Sink (cid:167) V Current BUS iSafe0mA Table7.20 Sequence Description for a Source Initiated Hard Reset Step Source Port Sink Port Policy Engine Hard ResetSignaling Sink Sink Hard ResetSignaling Engine Device Policy Manager Hard Reset tells the to instruct the poweSirn skupply to prepare fHora rad Reset. tSnkHardResetPrepare Device Policy Manager Sink (t1) and passes an Shall Not iSafe0mA VBUS indication to the The vSafe0V draw more than when is Policy Engine tPSHardReset driven to. Hard ResetSignaling Device Policy Manager and then tells the Hard Reset vSafe0VShall to instruct the power supply to perform a tSafe0V. The transition to occur withintS rcRecov (etr2). Source VBUS SinkShall Not Section 7.2.6, \"Transient Load Sink USB Default Operation Behavior\" in an attempt to re-establish communication with the behavior defined in vSafe5VShall tSrcTurnOn and resume. The while transitioning to and operating at the transition to occur within new power level. (t3). System Policy Device Policy Shall Sink Hard Reset Figure 7.42, \"Transition Diagram for a Sink Initiated Hard Reset\" Shall The interaction of the Table7.21,,\" Sequence Des, carnipdt pioonw foerr sau Spinpkly I tnhitaita ted H abred f Roellsoewt\"ed during a Initiated Shall is shown in Table7.23, \"Source Electrical Parameters\" Table7.2. T4,h \"eS sinekq uEelenccter itchaal t be Pfoalrloawmeedte irss \"describTeadb lien7.25, \"Common Source/Sink Electrical Parameters\". The timing parameters that be followed are listed in,, and. Figure 7.42 Transition Diagram for a Sink Initiated Hard Reset Source Port Evaluate Policy Engine Hard Reset Port to Port Sink Port Se1 nd tPSHardReset Messaging Policy Engine Hard Reset S Do eu vir cc ee PP oo lr ict y Mgr HaP rr do c Re es ss et HaS rdo u Rrc ee set RS eo cu or vc ee r t2 t3 Source Port Interaction Source Port Power Supply Source VOLD Source vSafe0V Source vSafe5V Sink Port Sink Device Policy Mgr Prepare t1 Sink Port Interaction Sink Port Power Supply Sink (cid:148) IOLD Ready to recover and power up Source Port tSrcRecover Voltage VOLD vSafe5V Source (cid:167) V Voltage BUS vSafe0V Sink Port Defalt current Current (cid:148)IOLD draw Sink (cid:167) V Current BUS iSafe0mA Table7.21 Sequence Description for a Sink Initiated Hard Reset Step Source Port Sink Port Policy Engine Hard ResetSignaling Source Policy E.ngine Device Policy Manager Hard Reset instruct the power supply to prepare for a S.i nk Hard Reset tSnkHardResetPrepare Device Policy Manager Sink (t1) and passes an Shall Not iSafe0mA VBUS indication to the. The vSafe0V draw more than when is Policy Engine Hard Reset driven to. Hard ResetSignaling Device Policy Manager and then tells the Hard Reset vSafe0VShall to instruct the power supply to perform a tSafe0V. The transition to occur withintS rcRecov (etr2). Source VBUS SinkShall Not Section 7.2.6, \"Transient Load Sink USB Default Operation Behavior\" in an attempt to re-establish communication with the behavior defined in vSafe5VShall tSrcTurnOn and resume. The while transitioning to and operating at the transition to occur within new power level. (t3).", "tables": ["Table 7.20", "Table 7.21"], "figures": ["Figure 7.41", "Figure 7.42"], "page_range": [396, 399]}
{"section_path": "7.3.4 Transitions Caused by Fast Role Swap", "start_heading": "7.3.4 Transitions Caused by Fast Role Swap", "content": "System Policy Device Policy Shall Fast Role Swap Figure 7.43, \"Transition Diagram for Fast Role Swap\" Shall The interactioTna bolfe th7.e2 2, \"Sequence D, escription for, aFnadst p Roowlee rS wsuappp\"ly that be followed durinSgh aa ll is shown in Table7.23, \"Source Electrical Parameters\" Table7.2. 4T, h\"eS ipnakr Eallleeclt sriecqaul ePnacreasm thetaetr s\" beT faobllleow7.e2d5,a re \"dCeosmcrmiboend Sino urce/Sink Electrical Parameters\" Negotiation. The tiNmeiwng S opuarrcaemeters thNate w Sin kbMe faoyllowed are listedN inew Source PS_RDYMessage,, and. s between the and the occur Nafoteter :the Figure 7.s4e3n, d\"Ts rtahnes fiitnioanl Diagram for Fast. Role Swap\" Table7.22, \"Sequence Description for Fast Role Swap\" Message In. and numbers are used to indicate related steps and letters are used to indicate other events. Figure 7.43 Transition Diagram for Fast Role Swap B 2 3 5 8 Signal Fast Evaluate Send Send Evaluate Source Port Swap FR_Swap Accept PS_RDY PS_RDY Policy Engine Port to Port C 1 4 6 7 Signaling & Sink Port Detect tFRSwapInit Send Evaluate Evaluate Send Messaging Fast Swap FR_Swap Accept PS_RDY PS_RDY Policy Engine A D1 F Source Port Source VBUS< Rp Changed Device Policy Mgr Stops vSafe5V to Rd Source Port Source Port Interaction Power Path Source Sink D2 E G Sink Port VBUS< Source Rd Changed Device Policy Mgr vSafe5V < tSrcFRSwap VBUS to Rp Sink Port Sink Port Sink Ready & Able to Source Source vSafe5V Interaction Power Path vSafe5V Source Port Voltage O Ald ny S vo ou ltarc ge e discharging New Source = vSafe5V V So Vu orc lte a ge BUS > vSafe5V Sink Port Current No c Vur Br Uen S t i sm ba ey l ob we vd Sra aw fen 5 Vwhile New Sink Sink BUS Old Sink Table7.22 Sequence Description for Fast Role Swap Step Initial Source Port New Sink Port Initial Sink Port  New Source Port Fast Role Swap Request and Power Transition Source HubUFP Figure 7.16, \"VBUS Power during Fast Role Swap\" A The connected to the (see VBUS ) stops sPooulirccyi nEgn gine. Fast Role Swap Request Initial Sink CC VBUS vSafe5V B sends the to the Device Policy Manager on the wire. When < iSnkStdby tSnkFRSwap (min), it tells the not to draw more than until the timer has elapsed. Policy Engine Fast Role Swap Request CC Initial Source Shall C detects the on FR_SwapMessage Initial Source the wire from the and send VBUS the back to the (that tFRSwapInit is no longer powering ) within time Policy Engine VBUS vSafe5V. PS_RDY Message New Source D1 The monitors for ≤ so that a can be sent to the at Step 5 of the messaging sequence. Policy Engine VBUS vSafe5V Initial Sink Power Role New Source D2 The monitors for ≤ so the VBUS can assume the of and beVgBinU Sto svoSuarfcee5 V. New SourceMay VBUS VBUS vSafe5V New Source E When = the provide Shall VBUS tSrcFRSwap power to. When < the New Source PS_RDY provide power to within. Message New Sink Once the is providing power, the can be sent to the at Step 7 of the CC R R messaging sequence. [USB Type-C 2.4] New Sink F The termination is changed from p to d (see PS_RDYMessage New Source ) before the sends the at Step 5 to the. CC R R [USB Type-C 2.4] New Source G The termination is changed from d to p (see PS_RDYMessage New Sink ) before the sends the Fast Role Swap Message Sequence at Step 7 to the. Policy Engine FR_SwapMessage Policy Engine FR_Swap Message Initial Sink New Initial Source VBUS Source Fast Role Swap Request the that is transitioning to be the (that is no longer powering ) after Protoco.l Layer GoodCRCMessage dPerotetoctcionlg L tahyee r GoodCRC aMt eSstseapg Ce. Initial Sink Policy Engine Initial Source FR_SwapMessage. then evaluates the the. Policy Eng ine. Accept Message Initial Policy Engine AcceptMessage Sink New Source Initial Source New Sink Prot othcoalt Lisa ytrearnsitioning to Gbeo othdeC RCMessage. Protocol Laye rthat is transGitoioondiCnRgC toM beess tahgee. Initial Sink New Initial Source New Sink Source the that is transitioning to be the that is transitioning to be the.. Table7.22 Sequence Description for Fast Role Swap (Continued) Step Initial Source Port New Sink Port Initial Sink Port  New Source Port Policy Engine PS_RDY Message Initial Policy Engine PS_RDYMessage Sink New Source New Sink Policy EngineShall PS_RDYMessage that is transitioning to be the. The. tFRSwap5V AcceptMessage start the at least after it has sent the, and Pwrhoetnoc Sotle Lpa Dye1r has also beenG cooomdpClReCteMd.essage Protocol Layer GoodCRCMessage New Source Initial Sink New Source Policy Engine PS_RDY the. that has completed the transition to Message. then evaluates the Policy Engine PS_RDY Message Policy En.gine PS_RDY Message New New Source Sink Policy EngineShall PS_RDY Message Shall.. The wait for Step E before PS_RDYMessage tFRSwapComplete sending the, and send the PS_RDYMessage Initial Source within of receiving the from the Port.", "tables": ["Table 7.22", "Table 7.22"], "figures": ["Figure 7.43", "Figure 7.43"], "page_range": [400, 403]}
{"section_path": "7.4 Electrical Parameters", "start_heading": "7.4 Electrical Parameters", "content": "Source Shall Table7.23, \"Source Electrical Parameters\" The Electrical Parameters thTaatb le7.2 b3e fSoolluorwceed E alerec tsrpieccailf iPeadr ianm eters. Parameter Description MIN TYP MAX UNITS Reference cSrcBulk Source Section 7.1.2 bulk 10 µF Port capacitance when a is powered from a cSrcBulkShared dSoeudriccaeted supply. Section 7.1.2 bulk 120 µF Port capacitance when a is powered from a DNL shared supply. LSB Section 7.1.4.2.1 Differential Non Deviation between -1 0 +1 Linearity ideal analog values ( corresponding to ) adjacent input digital iPpsCLMin vSaPlRu ePsPS Section 7.1.4.2.2 Current Limit Minimum 1 A iPpsCLNew setting. Current Limit Section 7.1.4.2.2 accuracy 1A ≤ Operating -150 150 mA Current ≤ 3A iPpsCLStep OSPpRe rPaPtiSnCgu crurrernetn Lti m> 3itA -5 5 % Section 7.1.4.2.2 LSB programming step size iPpsCLLoadReleaseRate (1 ). Section 7.1.4.2.2 Maximu Cm ur l ro ea nd t Limit -150 mA/µs decrease slew rate during iPpsCLLoadStepRate set-point changes. Section 7.1.4.2.2 Maximu Cm ur l ro ea nd t Limit 150 mA/µs increase slew rate during iPpsCLTransient set-point changes. Section 7.1.4.2.2 Allowed output New load + mA current overshoot 100 CL when a load increase occurs while in mode. Allowed output New load – mA current undershoot 100 CL when a load decrease occurs while in SourceShall mode. 1) The charge and discharge the total bulk capacitance to meet the transition time requirements.", "tables": [], "figures": [], "page_range": [404, 404]}
{"section_path": "7.4.1 Source Electrical Parameters", "start_heading": "7.4.1 Source Electrical Parameters", "content": "Source Shall Table7.23, \"Source Electrical Parameters\" The Electrical Parameters thTaatb le7.2 b3e fSoolluorwceed E alerec tsrpieccailf iPeadr ianm eters. Parameter Description MIN TYP MAX UNITS Reference cSrcBulk Source Section 7.1.2 bulk 10 µF Port capacitance when a is powered from a cSrcBulkShared dSoeudriccaeted supply. Section 7.1.2 bulk 120 µF Port capacitance when a is powered from a DNL shared supply. LSB Section 7.1.4.2.1 Differential Non Deviation between -1 0 +1 Linearity ideal analog values ( corresponding to ) adjacent input digital iPpsCLMin vSaPlRu ePsPS Section 7.1.4.2.2 Current Limit Minimum 1 A iPpsCLNew setting. Current Limit Section 7.1.4.2.2 accuracy 1A ≤ Operating -150 150 mA Current ≤ 3A iPpsCLStep OSPpRe rPaPtiSnCgu crurrernetn Lti m> 3itA -5 5 % Section 7.1.4.2.2 LSB programming step size iPpsCLLoadReleaseRate (1 ). Section 7.1.4.2.2 Maximu Cm ur l ro ea nd t Limit -150 mA/µs decrease slew rate during iPpsCLLoadStepRate set-point changes. Section 7.1.4.2.2 Maximu Cm ur l ro ea nd t Limit 150 mA/µs increase slew rate during iPpsCLTransient set-point changes. Section 7.1.4.2.2 Allowed output New load + mA current overshoot 100 CL when a load increase occurs while in mode. Allowed output New load – mA current undershoot 100 CL when a load decrease occurs while in SourceShall mode. 1) The charge and discharge the total bulk capacitance to meet the transition time requirements. Table7.23 Source Electrical Parameters (Continued) Parameter Description MIN TYP MAX UNITS Reference iPpsCVCLTransient CV CL iPpsCLNe Section 7.1.4.2.2 w to transient New load + mA current bounds - 100 500 assuming the Section Operating Voltage 7.2.3.1, \"Programmable reduction of Power Supply Sink Standby\" tAvsTransient. Section 7.1.8.4 AVS The maximum time for 5 ms vAvsNew the to be between vAvsValid and in response tAvsSrcTransLarge to a load tranAsiVenSt. Section 7.1.4.3.1 Shall The time the set- 0 700 ms point transition between requested voltages for steps vAvsSmallStep larger than tAvsSrcTransSmall AV.S Section 7.1.4.3.1 Shall The time the set- 0 50 ms point transition between requested voltages for steps vAvsSmallStep smaller than tNewSnk. Section 7.1.10 Initial Source Swap Time allowed for an 15 ms Figure 7.39 Standby in New Sink Figure 7.40 to transition tPpsCLCVTransient CL CV operation. Section 7.1.4.2.2 to transient 275 ms tPpsCLProgramSettle vSoPlRt aPgPeS sCeuttrlrinengt t iLmimei.t Section 7.1.4.2.2 programming settling tPpsCLSettle tCiLme. Section 7.1.4.2.2 load transient 250 ms tPpsCVCLTransient cCuVrrenCtL settling time. Section 7.1.8.3 to transient 250 ms tPpsSrcTransLarge settling time. Section 7.3.1.3 The time the 0 275 ms Programmable Power Shall Supply’s set-point transition between requested voltages for steps vPpsSmallStep larger than SourceShall. 1) The charge and discharge the total bulk capacitance to meet the transition time requirements. Table7.23 Source Electrical Parameters (Continued) Parameter Description MIN TYP MAX UNITS Reference tPpsSrcTransSmall Section 7.3.1.3 The time the 0 25 ms Programmable Power Shall Supply’s set-point transition between requested voltages for steps less vPpsSmallStep than or equal to tPpsTransient. Section 7.1.8.3 The maximum time for 5 ms the Programmable vPpsNew Power Supply to be vPpsValid between and in response to a load transient when target load is greater than or equal Section 7.1.8.3 to 60mA. The maximum time for 150 ms the Programmable vPpsNew Power Supply to be vPpsValid between and in response to a load transient when target load is less tSrcFRSwap than 60mA. Initial Section 7.1.13 Sink Time from the 150 µs VBUS detecting that vSafe5V has dropped Initial Sink below until Source the /new USB Type-C is able to supply [USB Type-C 2.4] Current SourceShall (see ) 1) The charge and discharge the total bulk capacitance to meet the transition time requirements. Table7.23 Source Electrical Parameters (Continued) Parameter Description MIN TYP MAX UNITS Reference tSrcReady SPR Mode Figure 7.2 Time from positive/ 285 ms Figure 7.3 negative transition Source start (t0) to when the is ready to Negotiated provide the newly power SPR level. Mode Applies only to voltage EPR Mode transitions. Time from positive/ 720 negative transition Source start (t0) to when the is ready to Negotiated provide the newly power EPR Mode level. Applies to voltage transitions and any voltage transition EPR Mode that either begins or tSrcRecover SPR Mode ends in. Section 7.1.5 Source EPR Mode Time allotted for the 0.66 1.0 s to recover. tSrcSettle SPR Mode 1.085 1.425 Figure 7.2 Time from positive/ 275 ms negative transition start (t0) to when the transitioning voltage is vSrcNew within the range SPR. Mode Applies only to voltage EPR Mode transitions. Time from positive/ 700 negative transition start (t0) to when the transitioning voltage is vAvsNew within the range EPR Mode. Applies to voltage transitions and any voltage transition EPR Mode that either begins or tSrcSwapStdby ends in. Section 7.1.10 Source The maximum time for 650 ms Figure 7.17 Swap the to Standby Figure 7.18 transition to SourceShall. 1) The charge and discharge the total bulk capacitance to meet the transition time requirements. Table7.23 Source Electrical Parameters (Continued) Parameter Description MIN TYP MAX UNITS Reference tSrcTransient Section 7.1.8 Source The maximum time for 5 ms the output vSrcNew voltage to be between vSrcValid and in response to a load transient when target load is greater or equal to Section 7.1.8 than 60mA. Source The maximum time for 150 ms the output vSrcNew voltage to be between vSrcValid and in response to a load transient when target load is less tSrcTransition than 60mA. Source Section 7.3 Shall The time the 25 35 ms wait before transitioning the Sink power supply to ensure that the has sufficient time to prepare (does not apply to transitions AVSAPDO within the same PPS or tSrcTransOff SPR ). Section 7.3.2 Mode GoodCRC Time from the last bit 690 ms Message of the AcceptMessage acknowledging the in PR_SwapMessage response to the PS_RDY Message until the must be SPR started. Mode Applies only to voltage tSrcTransOn transitions. Section 7.3.2 GoodCRC Time from the last bit 280 ms Message of the PS_RDY Message acknowledging the Source sent by the new, in PR_Swap Message response to the PS_RDY Message until the must be SourceShall started. 1) The charge and discharge the total bulk capacitance to meet the transition time requirements. Table7.23 Source Electrical Parameters (Continued) Parameter Description MIN TYP MAX UNITS Reference tSrcTransReq SPR Section 7.3 Mode GoodCRC Time from the last bit 325 ms Message of the AcceptMessage acknowledging the in RequestMessage response to the PS_RDYMessage until the SPR must be started. Mode Applies only to voltage EPR transitions. Section 7.3 Mode GoodCRC Time from the last bit 760 ms Message of the AcceptMessage acknowledging the in RequestMessage response to the PS_RDYMessage until the EPR Mode must be started. Applies to voltage transitions and any voltage transition EPR Mode that either begins or tSrcTurnOn ends in. Figure 7.10 vSafe0V vSafe5V Transition time from 275 ms Table7.20 to. Table7.21 vAvsMaxVoltage APDO APDO Section 7.1.4.3.1 AVSAPDO Maximum Voltage Max Max V Field in the. Voltage Voltage * vAvsMinVoltage APDO APDO Section 7.1.4.3.1 *0.95 1.05 AVSAPDO Minimum Voltage Min V Field in the. Voltage Min *0.95 Voltage * vAvsNew RDO RDO RDO RDO Section 7.1.8.4 1.05 Adjustable Output V Source Voltage measured at Output Output Output the receptacle. Voltage Voltage Voltage vAvsSlewNeg AVS Section 7.1.8.4 *0.95 *1.05 maximum slew -30 mV/µs rate for negative SourceShall voltage changes. 1) The charge and discharge the total bulk capacitance to meet the transition time requirements. Table7.23 Source Electrical Parameters (Continued) Parameter Description MIN TYP MAX UNITS Reference vAvsSlewPos AVS Section 7.1.8.4 maximum slew 30 mV/µs rate for positive vAvsSmallStep vAoVltSage changes. Section 7.1.4.3.1 step size defined -1.0 1.0 V as a small step relative vAvsNew to the previous vAvsStep AVS. Section 7.1.8.4 voltage 100 mV programming step vAvsValid size. Section 7.1.8.4 vAvsNew ATh Ve S range in addition -0.5 0.5 V to which the Valid output is considered during and after a transition as well as in response to a transient vPpsCLCVTransient lCoLad cCoVndition. Section 7.1.4.2.2 to load transient Operating Operating V voltage bounds. Voltage * Voltage * vPpsMaxVoltage APDO APDO Section 7.1.4.2.1 0.1V 0.1V Maximum Voltage Max V Field in the APDO Max Voltage * Programmable Power 1.05 Voltage Supply. vPpsMinVoltage A*0P.D9O5 APDO Section 7.1.4.2.1 Minimum Voltage Min V Field in the Voltage * APDO Min Programmable Power 1.05 Voltage Supply. vPpsNew RDO RDO*0.95 RDO RDO Section 7.1.8.3 Programmable V Output Voltage Source Output Output Output measured at the Voltage Voltage Voltage vPpsShutdown receptacle. APDO APDO Section 7.1.4.2.2 *0.95 *1.05 SPR PPS The voltage at which V the shuts CL Minimum Minimum down when operating Voltage * in. Voltage * 0.85 vPpsSlewNeg Section 7.1.8.3 0.95 Programmable Power -30 mV/µs Supply maximum slew rate for negative vPpsSlewPos voltage changes Section 7.1.8.3 Programmable Power 30 mV/µs Supply maximum slew rate for positive SourceShall voltage changes 1) The charge and discharge the total bulk capacitance to meet the transition time requirements. Table7.23 Source Electrical Parameters (Continued) Parameter Description MIN TYP MAX UNITS Reference vPpsSmallStep Section 7.1.4.2.2 PPS Step size defined -500 500 mV as a small step relative vPpsNew to the previous vPpsStep. Section 7.1.8.3 PPS L Sv Boltage 20 mV programming step size vPpsValid (1 ). Section 7.1.8.3 vPpsNew The range in addition -0.1 0.1 V to which the Programmable Power Valid Supply output is considered in vSmallStep rVeBsUpSonse to a load step. Section 7.1.4.3.1 step size increase 500 mV defined as a small step VBUS relative to the previous when (A)PDO Requesting a different vSrcNeg. Figure 7.10 Most negative voltage -0.3 V allowed during vSrcNew tFriaxnedsi Stiuopnp.ly output PDO PDO PDO V Table7.2 Source measured at the Voltage Voltage Voltage Variabl ree Scueppptalycle. *0.95 *1.05 output PDO PDO V Source measured at the Minimum Maximum Battery r Seucpeppltyacle. Voltage Voltage output PDO PDO V Source measured at the Minimum Maximum vSrcPeak receptacleF.ixed Voltage Voltage Table6.10 Supply EPR AVS The range that a PDO PDO V Table6.16 or in Voltage Voltage Figure 7.14 Peak Current *0.90 *1.05 operation is allowed when overload vSrcSlewNeg conditions occur. Section 7.1.4.2 Maximum slew rate -30 mV/µs Table7.2 allowed for negative voltage transitions. Limits current based on a 3 A connector Sink rating and maximum bulk capacitance SourceShall of 100 µF. 1) The charge and discharge the total bulk capacitance to meet the transition time requirements. Table7.23 Source Electrical Parameters (Continued) Parameter Description MIN TYP MAX UNITS Reference vSrcSlewPos Section 7.1.4 Figure 7.2 Maximum slew rate 30 mV/µs allowed for positive voltage transitions. Limits current based on a 3 A connector Sink rating and maximum bulk capacitance vSrcValid of 100 µF. Figure 7.2 vSrcNew Figure 7.3 The range in addition -0.5 0.5 V Negotiated Section 7.1.8 to which a newly Valid voltage is considered during and after a transition as well as in response to a transient load condition. This range vSafe5V also applies to SourceShall. 1) The charge and discharge the total bulk capacitance to meet the transition time requirements.", "tables": ["Table 7.23", "Table 7.23", "Table 7.23", "Table 7.23", "Table 7.23", "Table 7.21", "Table 7.23", "Table 7.23", "Table 7.23"], "figures": ["Figure 7.14", "Figure 7.2"], "page_range": [404, 412]}
{"section_path": "7.4.2 Sink Electrical Parameters", "start_heading": "7.4.2 Sink Electrical Parameters", "content": "Sink Shall Table7.24, \"Sink Electrical Parameters\" The Electrical Parameters that Table b7e.f2o4ll o Swinekd aErlee cstpreicciafli ePda irna meters. Parameter Description MIN TYP MAX UNITS Reference cSnkBulk Sink VBUS [USB 3.2] Section 7.2.2 Attach FRS [USB 3.2] bulk capacitance on at See Initial Source and during after the First stops sourcing and Explicit Contract Appendix E, prior to establishing the \"FRS System Level Example\" (see for an cSnkBulkPd example). VBUS Sink Section 7.2.2 Bulk capacitance on a is 100 µF Negotiation allowed after a successful iLoadReleaseRate. Section 7.2.6 Load release di/dt. -150 mA/ iLoadStepRate µs Section 7.2.6 Load step di/dt. 150 mA/ iNewFrsSink New Sink µs Section 7.1.13 Fast Role Swap Maximum current the Default USB A New Source R can draw during a current or 1.5 until the aFpapslite Rs olpe. or 3.0 Swap required USB Type-C Matches the required Current Fixed Supply Initial Source Current field of the Sink_CapabilitiesMessage PDO of the ’s iOvershoot. Section 7.2.6 Positive or negative overshoot -230 230 mA iLoadStepRate when a load change occurs less than or equal to ; relative to the settled value after iPpsCLLoadStep the load change. Section 7.2.3.1 CL Maximum Current set-point -500 500 mA change while operating in iSafe0mA mode. Sink Figure 7.29 VBUS Maximum current a is 1.0 mA Figure 7.30 vSafe0V allowed to draw when is iSnkStdby driven to. Section 7.2.3 Maximum current during voltage 500 mA iSnkSwapStdby transition. Sink Section 7.2.7 Swap Standby Maximum current a can draw 2.5 mA during. Ideally this Port current is very near to 0 mA largely influenced by leakage cSnkBulk cSnkBulkPd Shall current. VBUS [USB 3.2] 1) If more bypass capacitance than max or max is required in the device, then the device incorporate some form of surge current limiting as described in Section 11.4.4.1. Table7.24 Sink Electrical Parameters (Continued) Parameter Description MIN TYP MAX UNITS Reference pHubSusp Section 7.2.3 Hub Suspend power consumption for a 125 mW Port. 25mW + 25mW per downstream for up to 4 pSnkSusp ports. Section 7.2.3 Suspend power consumption for a 25 mW tNewSrc peripheral device. Section 7.2.7 Initial Sink Swap Standby Table7.18 Maximum time allowed for an 275 ms New Source Table7.19 in to transition to tSnkFRSwap operation. Fast Role Swap Section 7.1.13 New Sink Time during a 200 µs iSnkStdby when the can draw no tSnkHardResetPrepare more than S.ink Table7.12 Hard Time allotted for the power 15 ms Reset electronics to prepare for a tSnkNewPower. Section 7.2.3 Maximum transition time 15 ms tSnkRecover between powSeinr klevels. USB Table7.20 Default Operation Time for the to resume 150 ms tSnkStdby. Sink Standby Section 7.2.3 Sink Time to transition to 15 ms tSnkSwapStdby from. Sink Section 7.2.7 Swap Standby Maximum time for the to 15 ms vEprMax transition to EPR Sink. Section 7.2.9.2 Highest voltage an is 55 V vSprMax expected to tolerateS PR Sink Section 7.2.9.2 Highest voltage an is 24 V cSnkBulk cSnkBulkPd Shall expected to tolerate VBUS [USB 3.2] 1) If more bypass capacitance than max or max is required in the device, then the device incorporate some form of surge current limiting as described in Section 11.4.4.1.", "tables": ["Table 7.24"], "figures": [], "page_range": [413, 414]}
{"section_path": "7.4.3 Common Electrical Parameters", "start_heading": "7.4.3 Common Electrical Parameters", "content": "Source Sink Shall Table7.25, \"Common Source/Sink Electrical Parameters\" Electrical Parameters that are common to both the and the that be followed are specified in Table7.25 Common Source”/.Sink Electrical Parameters Parameter Description MIN TYP MAX UNITS Reference tSafe0V vSafe0V Section 7.1.5 Figure 7.10 Time to reach max. 650 ms Table7.20 Table7.21 tSafe5V vSafe5V Section 7.1.5 Figure 7.10 Time to reach max. 275 ms Table7.20 Table7.21 tVCONNReapplied UFP VCONN Source Figure 7.19 When the is the : 10 20 ms Figure 7.20 GoodCRC time from the last bit of the PS_RDYMessage acknowledging the VCONN before reapplyingD FP. VCONN Source VCONN When the is the : time from when drops tVCONNValid below vRaRtVecCoOnNnNeRceta.pplied Figure 7.19 VCONN Time from until 0 5 ms Figure 7.20 [USB Type-C 2.4] is within vVconnValid (see tVCONNZero ). Figure 7.19 GoodCRC Time from the last bit of the 125 ms Figure 7.20 AcceptMessage acknowledging the Data_ResetMessage VCONN in response to the [USB until is Type-C 2.4] below vRaReconnect (see vSafe0V ). Section 7.1.5 Safe operating voltage at “zero 0 0.8 V vSafe5V volts”. Section 7.1.5 [USB 2.0] [USB 3.2] Safe operating voltage at 5V. See 4.75 5.5 V VBUS and for [USB Type-C 2.4] allowable voltage range. 1) tVCONNStable (See ) still applies.", "tables": ["Table 7.25", "Table 7.25", "Table 7.20", "Table 7.21", "Table 7.20", "Table 7.21"], "figures": ["Figure 7.10", "Figure 7.10"], "page_range": [415, 415]}
{"section_path": "8 Device Policy", "start_heading": "8 Device Policy", "content": "Device Policy Policy Engine Device Policy Manager Section 2.6, \"Architectural Overview\" This section describes the and that implements it. For an overview of the architecture and how the fits into this architecture, please see.", "tables": [], "figures": [], "page_range": [416, 416]}
{"section_path": "8.1 Overview", "start_heading": "8.1 Overview", "content": "Device Policy Policy Engine Device Policy Manager Section 2.6, \"Architectural Overview\" This section describes the and that implements it. For an overview of the architecture and how the fits into this architecture, please see.", "tables": [], "figures": [], "page_range": [416, 416]}
{"section_path": "8.2 Device Policy Manager", "start_heading": "8.2 Device Policy Manager", "content": "Device Policy Manager The is responsible for managing the powCaepr aubsielidt ibeys one or more USB Power Delivery ports. In order Ptoo rhtave sufficient knowledge to complete this task it needs relevant information about the device it resides iUnS. BF-iCrst lPyo, ritt hCoans tar oplriori knowledge of the device including the of the power supply and the receptacles on eac ®h since these will for example havCea psapbeicliiftiice scurrent ratings. It also has to know information from the module regaDrdevinicge c Paoblliec yin Msearntaiogner, type and rating of cable etc. It also has to have information fCraopma bthiliet ipeoswer supply about chanPgoerst in its as well as being able to request power supply changes. With all of this information the is able to provide up to date information regarding the available toC aa psapbeicliiftiice s and to mSoaunracgee P tohret powDere vriecseo Puorlciecsy wMiatnhaing ethre device. Port When working out the for a given the Capabilities will take into account firstly Dtheev iccuer Preonlitc yr aMtiannga ogfe trhe 's receptacle and whether the inserted cable is PD or non-PD rated and if so, what is the capability of the plug. This will set Dane vuicpep Pero lbicoyu Mnda nfoarg tehre which might be offered. After this the will consider the available power supply resources since this will bound whSiycsht evmol tPaogleicsy a nd Mcuarnreangtesr mightD beev ioceff eProelidc.y F Minaanllayg, ethre Capabi lwitiilel sconsider what power is currently allocated to other ports, which power is in the Power Reserve and any other amendments to Policy from the. The wiSlli nokff Pero rat set oDf evice Policy M waitnhaigne trhe bounds detailCeadp aabboilvitei.es Source Capabilities Device Policy Manager When selecting a capabilCitayp faobri ali tgiievsen the Sink will look at the offered by the. This will set an upper bound for the which might be requested. The Swoiullr acleso consider which are required by the in order to operate. If an appropriate match for voltage and Current can be foCuanpda wbiiltihtiiens t Mheis lmimaittcsh of the receptacle and cable, then this will be requested from the. If an appropriate match cannot be found then a request for an offered voltage and current will be made, along with an indication of a. USB- PD defines two types of power sFoiuxrecde Ss:upply Variable Supply Battery Supply - Predefined voltage sources (, and ) Programmable voltage sources:  PArdojugsrtaamblme aVbolleta Pgoew Seurp SpulyppAlyV S(PPS) ( ) Charger Sink Device Policy Manager Sink Source The first are generally used for clasSsiinck chaBragtitnegr ywherein the electronics reside inside the. The in the requests a fixed voltage from the list of PDOs offered by the and which is converted internally toC chhaarrggeer the 's and/or power its function. Sink Source SPR PPS Mode Device Policy Manager Sink The second moves the electronics that manage the voltSaignek control outside the and back into the itself. WSPhRe nP PinS Source, the Sink in the requests a specific voltage wDeitvhic ae 2P0omlicVy Macacnuaragceyr and seStsin ak current limit. Unlike traditional USB where s are responsible for limiting the current, they consume, the limits the current to what the has requested. When operating in, the in the requests a specific voltage with a 100mV accuracy and requests a maximum current it is aNlolotwe:ed to draAwV. SSource SPR PPSSource Sink The s unlike s do not support current limit mode. A operating in is responsible not to draw more current than it requests. Source The process to request power is the same for both types of power s although the actual format and contents of th- e requSeinskt are slightly dSiPffRe rPePnSt. The primary operational differences are: Source Hard Reset A that is using is required to periodically sent requests to let the know it is still alive - anSdi nckommunicatingS. PWRh Meno dtheis communication fails a results. - A Sink operating in EPR Mode has no special timing requirements. Source Hard Reset A operating in is required to periodically communicate with the to let it know it Duails-R sotilell Poopwereart Pioonratl. If thDee cvoicme mPoulniciyc aMtiaonna fgaeilrs, a results. Source Sink Power Role Swap For s the manages the functionality of both a and a. In addition, it is able to manage the process between the two. In terms of power management this", "tables": [], "figures": [], "page_range": [417, 417]}
{"section_path": "8.2.1 Capabilities", "start_heading": "8.2.1 Capabilities", "content": "Port Sink Source AttachedSource could mean that a which is initially consuming power as a is able to become a power resource as a. Conversely, sD meviigche tP roelqicuye Msta tnhaagt eprower be provided to them. Policy Engine Capabilities The functionality within the System Po (laicnyd M toa naa cgeerrtain extent theC apabilities M)i sims sactaclhable depending on the complexity of the device, including the number of different power supply and the number of different features supported for example inteUrSfaBc eH uobr, and the Port number of ports being managed. Within these parameters it is possible to implement devices from very simple Sphoowuelrd supplies to more complDeexv picoew Peorl iscuyp Mplainesa goerr devices such as s or Hard Drives. Within multidevices it is also permitted to have a combination of USB Power Delivery and non-USB Power Delivery ports which all bSee mctaionna g2e.6d, b\"Ayr tchhei tectural Overview\". Device Policy Manager As noted in the logical architecture used in the PD specification will vary depending on the implementation. This means Ptholaicty d Eifnfgeirneent implemDeenvitcaet iPoonlsic oyf Mthaen ager might be relatively small or large depending on the complexity of the device, as indicated above. It is also possible to allocate different responsibilities between the and the, which will lead to diffeDreenvtic tey pPeosli coyf Maracnhaitgeecrtures and interfaces. The- Lo cisa lr Pesopliocnysible for the following: - MaintSaoinuirncge the for the deCvaipcaeb. ilities - For a Sink, monitoring the present Capabili taiensd triggering notifications ofP tohliec yc hEnagnignee. Port For a, evaluating and responding to related requests from the for a given -. Source Sink - Control of the USB-C/ Port Cino ntthreo ldevice. Port ® - Control of the Policy Engine moduPleo frotr each. DevIicnet eProfaliccey tMoa tnhaeg er for a given. Optional The- is respoSnyssitbelme fPoorl itchye following features when implemented: - ComSmouurnciecations with the over USB. - For s with multiple ports monitoring and balancing power requirements across these ports. - Monitoring of batteriesP aonrdt PAaCr tpnoewrer suCpapblliee sP.lug 8.2.1Managing CMoadpesa inb iitlsi ties and (s). Device Policy Manager ProviderShall Capabilities Shall The in a know the poweSrh saulplplies available in the device and their Capabilities. In adSidniktion, it be aware of any other PD sources of power such as batteries and AC inputs. The available power sources and existing demands on the device be taken into account when presenting Device P tool iac y Ma.nager ConsumerShall Sink Capabilities Source Shall The in a Sink know the requirements of the and use this to evaluate the offered by a. It be aware of its own power sources e.g., Batteries or AC supplies where theseD ehvaivcee Pa obleicayr Minagn oang ietrs opeDrautaiol-nR aosle a P owe.r DeviceShall Capabilities Shall Attached The in a combine the above and also be able 8to.p2re.2sent the du a Sl-ryoslet neamtur eP oof tlhiec dyevice to an PD Capable device. Shall Device Policy AM agnivaegne rPD Capable device might have no USB capability, or PD might have been addedS htoa lal USB device in such a way that PD is not integrated with USB. In these two cases there be no requirement for the to interact with the USB interface of the device. The following requirements only apply to PD devices that expose PD functionality over USB.", "tables": [], "figures": [], "page_range": [418, 418]}
{"section_path": "8.2.2 System Policy", "start_heading": "8.2.2 System Policy", "content": "Port Sink Source AttachedSource could mean that a which is initially consuming power as a is able to become a power resource as a. Conversely, sD meviigche tP roelqicuye Msta tnhaagt eprower be provided to them. Policy Engine Capabilities The functionality within the System Po (laicnyd M toa naa cgeerrtain extent theC apabilities M)i sims sactaclhable depending on the complexity of the device, including the number of different power supply and the number of different features supported for example inteUrSfaBc eH uobr, and the Port number of ports being managed. Within these parameters it is possible to implement devices from very simple Sphoowuelrd supplies to more complDeexv picoew Peorl iscuyp Mplainesa goerr devices such as s or Hard Drives. Within multidevices it is also permitted to have a combination of USB Power Delivery and non-USB Power Delivery ports which all bSee mctaionna g2e.6d, b\"Ayr tchhei tectural Overview\". Device Policy Manager As noted in the logical architecture used in the PD specification will vary depending on the implementation. This means Ptholaicty d Eifnfgeirneent implemDeenvitcaet iPoonlsic oyf Mthaen ager might be relatively small or large depending on the complexity of the device, as indicated above. It is also possible to allocate different responsibilities between the and the, which will lead to diffeDreenvtic tey pPeosli coyf Maracnhaitgeecrtures and interfaces. The- Lo cisa lr Pesopliocnysible for the following: - MaintSaoinuirncge the for the deCvaipcaeb. ilities - For a Sink, monitoring the present Capabili taiensd triggering notifications ofP tohliec yc hEnagnignee. Port For a, evaluating and responding to related requests from the for a given -. Source Sink - Control of the USB-C/ Port Cino ntthreo ldevice. Port ® - Control of the Policy Engine moduPleo frotr each. DevIicnet eProfaliccey tMoa tnhaeg er for a given. Optional The- is respoSnyssitbelme fPoorl itchye following features when implemented: - ComSmouurnciecations with the over USB. - For s with multiple ports monitoring and balancing power requirements across these ports. - Monitoring of batteriesP aonrdt PAaCr tpnoewrer suCpapblliee sP.lug 8.2.1Managing CMoadpesa inb iitlsi ties and (s). Device Policy Manager ProviderShall Capabilities Shall The in a know the poweSrh saulplplies available in the device and their Capabilities. In adSidniktion, it be aware of any other PD sources of power such as batteries and AC inputs. The available power sources and existing demands on the device be taken into account when presenting Device P tool iac y Ma.nager ConsumerShall Sink Capabilities Source Shall The in a Sink know the requirements of the and use this to evaluate the offered by a. It be aware of its own power sources e.g., Batteries or AC supplies where theseD ehvaivcee Pa obleicayr Minagn oang ietrs opeDrautaiol-nR aosle a P owe.r DeviceShall Capabilities Shall Attached The in a combine the above and also be able 8to.p2re.2sent the du a Sl-ryoslet neamtur eP oof tlhiec dyevice to an PD Capable device. Shall Device Policy AM agnivaegne rPD Capable device might have no USB capability, or PD might have been addedS htoa lal USB device in such a way that PD is not integrated with USB. In these two cases there be no requirement for the to interact with the USB interface of the device. The following requirements only apply to PD devices that expose PD functionality over USB.", "tables": [], "figures": [], "page_range": [418, 418]}
{"section_path": "8.2.3 Control of Source/Sink", "start_heading": "8.2.3 Control of Source/Sink", "content": "Device Policy ManagerShall System Policy Manager [UCSI] Device Policy ManagerShall Local Policy The coSmymsteumni Pcaotleic oy vMera nUaSgBe rwith the System Policy a Mccaonradginegr to the requirBematetenrtys detailed in. Whenever requested the implement a according to that requested by the. For example, the might request tNhoatte a: powered Device temporarily stops charginSgh saol lthat there is sufficient power for an HDD to spin up. Due to timing constraints, a PD Capable device be able to respond autonomously to all time-critical Device Policy Manager ProviderShall Source Port Shall Negotiated Shall Policy ETnhgei ne for a manage the power supply for each PD and know at any given time what the power is. It request transitions of the supply and inform the De wvihcee nPeovliecry aM tarnanagsietrion comCopnlseutemse.rShall Sink Sink Port Shall Negotiated The for a manage the for each PD and know at any given timeD wehviacte t Phoel icy Manage rpowerD isu.al-Role Power DeviceShall Source SinkPower Role Dual-Role Power Port Shall Power Role Port The for a manage the transition between / 8.2s.f4or each PD Cable Detecti aonnd know at any given time what the is in. Device Policy Manager ProviderShall USB-C Port Control Shall USB-C Port Control Attachment ® The in the control the module and be able to use the ® Note: module to determinDee tvhicee Policy Mana sgteartus. Discover IdentityCommand Capabilities Section 6.4.4.3.1, \"DiscIto mveirg hIdte bnet intye\"cessary for the to also initiate additional discovery using the in order to determine the full of the cabling (see Device Policy Manager Consumer USB-C Port Control Shall USB C Port Control Attachment ® The in a controls the module and be able to use the ® Device Policy Manager Consumer/Provider Consumer Provider Shall USB-C Port Control Dead Battery The ® Port in a inherits characteristics of s and s and control the module in order to support the back-powering case to determine the follo- winAgt ftoarc ham gievnetn : Provider/Consumer Dead Battery - oVfB aU SUSB Power Delivery which supports back-powering. 8.2.4.P4resence of De.vice Policy Manager in a Provider/Consumer Device Policy Manager Provider/Consumer Consumer Provider May USB-C Port Control Dead Battery The ® Port in a inherits characteristics of s and s and control the module in order to support the back-powering case to determine the follo- wing for a givenV BUS: Presence of.", "tables": [], "figures": [], "page_range": [419, 419]}
{"section_path": "8.2.4 Cable Detection", "start_heading": "8.2.4 Cable Detection", "content": "Device Policy ManagerShall System Policy Manager [UCSI] Device Policy ManagerShall Local Policy The coSmymsteumni Pcaotleic oy vMera nUaSgBe rwith the System Policy a Mccaonradginegr to the requirBematetenrtys detailed in. Whenever requested the implement a according to that requested by the. For example, the might request tNhoatte a: powered Device temporarily stops charginSgh saol lthat there is sufficient power for an HDD to spin up. Due to timing constraints, a PD Capable device be able to respond autonomously to all time-critical Device Policy Manager ProviderShall Source Port Shall Negotiated Shall Policy ETnhgei ne for a manage the power supply for each PD and know at any given time what the power is. It request transitions of the supply and inform the De wvihcee nPeovliecry aM tarnanagsietrion comCopnlseutemse.rShall Sink Sink Port Shall Negotiated The for a manage the for each PD and know at any given timeD wehviacte t Phoel icy Manage rpowerD isu.al-Role Power DeviceShall Source SinkPower Role Dual-Role Power Port Shall Power Role Port The for a manage the transition between / 8.2s.f4or each PD Cable Detecti aonnd know at any given time what the is in. Device Policy Manager ProviderShall USB-C Port Control Shall USB-C Port Control Attachment ® The in the control the module and be able to use the ® Note: module to determinDee tvhicee Policy Mana sgteartus. Discover IdentityCommand Capabilities Section 6.4.4.3.1, \"DiscIto mveirg hIdte bnet intye\"cessary for the to also initiate additional discovery using the in order to determine the full of the cabling (see Device Policy Manager Consumer USB-C Port Control Shall USB C Port Control Attachment ® The in a controls the module and be able to use the ® Device Policy Manager Consumer/Provider Consumer Provider Shall USB-C Port Control Dead Battery The ® Port in a inherits characteristics of s and s and control the module in order to support the back-powering case to determine the follo- winAgt ftoarc ham gievnetn : Provider/Consumer Dead Battery - oVfB aU SUSB Power Delivery which supports back-powering. 8.2.4.P4resence of De.vice Policy Manager in a Provider/Consumer Device Policy Manager Provider/Consumer Consumer Provider May USB-C Port Control Dead Battery The ® Port in a inherits characteristics of s and s and control the module in order to support the back-powering case to determine the follo- wing for a givenV BUS: Presence of.", "tables": [], "figures": [], "page_range": [419, 419]}
{"section_path": "8.2.5 Managing Power Requirements", "start_heading": "8.2.5 Managing Power Requirements", "content": "Device Policy Manager Provider Source Port It is the responsibility of the in a to be awareA totfa tchhee dpower requirements of all devices connected Dtoe ivtisc e Policy Mansa. gTehris includes being aware of any reserve power that might be required by devices in the future and ensuring that power is shared optimally amongst PD Capable devices. This is a key funcDtioevni coef tPhoeli cy Manager ; whose implementation is critical to ensuring that all PD Capable devices get the power they require in a timely fashion in order to facilitate smooth operation. This is balanced by the fact that Cthoen sumer Device Policy M iasn raegsperonShsiabllle for managing the sources of power that are, by definition, finite. Request Provider TRehqeu est Shoul'ds ensure that it takes no more power than is required toA pttearcfhoermdS iitnsk functions and wPhoernt its requirements change, it Should make a new. The, after satisfying the, reclaim any unused power to ensure that it can meet total power requirements of s Nono taet: least one. 8.2.5.1It is expec t eMd tahant aa gfuitnurge dtehseig nP gouwidee wri lRl perosveidrev aedditional guidance. There might be some products where a Device has certain functionality at one power level and a greater functionality at anoUthSeBr H, foosrt examDpelev iac eP rPionltiecry/ MScaannangeerr tShhaot uolpderates only as a printer with one power level and as a scanner if it can get more power. While the visibility of the linkage between power and functionality might only be apparent to the ; the provide mechanisms to manage the power requiremDeenvitcse o Pf osluiccyh M Daenvaicgeesr. HubShall It is the 's rPeosrptonsibility to allocate power and maintain a power reserve so as not to oversubscribe its available power resource. A Device with multiple ports such as a always attempt to meet 8th.e2 in.5cr.e2mental dem aPndosw ofe thre C ap raebquiilriintyg tMhe ihsigmheastt icnhcremental power from its power reserve. Capabilities Mismatch Consumer Provider Source Consumer Capabilities Device APo licy Manager Soycsctuerms Pwohliecny aM anager cannot obtain required power from a (or the is not PD Capable) and the requires such to operate. Different actions are taken by the Consumer Device Policy ManagerShall Capabilities Mismatch The 's cause a notification to be displayed to the end user that a power - has occurredM. Eaxyamples of such feedback can include: For a simple Device an LED be used to indicate the failure. For example, during connection the LED could be solid amber. If the connection is successful, the LED could change to green. If the connection - fails, it could be red or alternately blink amber. Should A more sophisticated Device with a user interface, e.g., a mobile device or monitor, provide no ProvtiifdiecratioDne vthicreo Puoglhic tyh Me aunsearg einrtMerafayce on the Device. Capabilities Mismatch The 's cause a notification to be displayed to the user of the power. Capabilities Mismatch Provider Device Policy ManagerShould Not Sink SPR Sink Minimum PDP BEPecRa uSisnek t hMei nimum PDPAdvertise might noSt icnaku_sCea oppaebrialtiitoiensa_lE fxatileunrdee, tdhMe essage 's Section 6.5.13, \"Sin kd_iCspalpaayb ail nitoietsif_iEcxatteionnd etod tMhees ussaegre i\"f the power offered to the meSehtso uorld e xNcoeteds the / Sink d in theS PR Sink Minimum PDP EPR Sink Min (ismeeu m PDPAdvertise Sink_Capabilities_ExtendedMessage). If a notification is displayed, it be shown as an error unless the power offered to the is less than the / d in the System Policy Manager Section 8.2.2, \"System Policy\" Device Policy ManagerShall System Policy Manager Shall In a USB PowSyesrt Demel iPvoelricyy a Mwaarnea gsyesrtem with an active [UCS I(]see System Policy ManagerSho),u tlhde notify the of the mismatch. This information be passed back to the using the mechanisms described in. The", "tables": [], "figures": [], "page_range": [420, 420]}
{"section_path": "8.2.6 Use of \"Unconstrained Power\" bit with Batteries and AC supplies", "start_heading": "8.2.6 Use of \"Unconstrained Power\" bit with Batteries and AC supplies", "content": "Port Consumer Should Port ensure that the user is informed of the condition. When another in the system could satisfy the 's power requirements the user So buer cdei rPeocrtted to moCvoen tshuem Deervice Stoys ttheem a Pltoelricnya Mtea nag.erShall Device Policy Manager Consumer Device Policy Manager ISnh aorllder to iGdeetn_tSiifnyk a_ CmaopreM seusistaagbele Section 6 f.o3r.8 t,h \"eG et_Sink_Ca pth Me essage\" communicate with the Consumer in order to determine the 's requirements. The use a (see ) to discover which power levels can 8be. 2ut.il6ized by the Use of. \"Unconstrained Power\" bit with Batteries and AC supplies Device Policy Manager Provider ConsumerMay Capabilities Source The in a Section o6r.4.1.2.1.3, \"U ncon mstoraniintoedr tPhoew setar\"tus of Saencyt ivoanr 6ia.4b.l1e. 3s.o1u.3r,c \"eUs nocfo pnoswtrearin tehda t cPoouwledr h\"ave an impact on its Source_ Caas paa bilitie ssuchS ains kB_aCtatepraibesil aitnieds AMCe ssusapgpelies anSde crteifolenc 6t.t4h.1is, \"iCna tphaeb ilities \"MUenscsaognes\"trained Power\" bit (see and [UCSI] Battery) provided Saesc ptaiornt o9f.4 t.h1e, \"GetBatteryStatus\" S hoar ll Sy (ssteeme Policy Manager ). When monitored, and a USB interface is supported, the External Power status (see ) and the state (see ) also be reported to the using the 8US.B2.in6t.e1rface. AC Supplies Source Sink Section 6.4.1.2.1.3, \"Unconstrained Power\" Section 6.4.1.3.1.3, \"Unconstrained Power\" Advertise The Unconstrained Power bit provided by s and s (see and ) notifies a connected device that it is acceptable to use the d power for charging as well as for what is needed for normal operation. A device that sets the Unconstrained Power bit has either an external source of power that is sufficient to adequately power the system while charging external devices or expects to charge external devices as a primary state of functiAoCn S (uspupclhy as a battery pack). AC Supply Attached In the case of the external power source, the power can either be from an directly connected to the device or from an connected to an device, which is also getting unconstrained power from its power supply. The Unconstrained Power bit is in this way communicated through a PD system indicating that the origin of th- e power is from a single or multiple AC supplies, from a battery bank, or similar: AC Supply - If the \"Unconstrained Power\" bit is set, then that power is originally sourced from an. Advertise ProviderPort Devices capable of consuming on multiple ports can only claim that they have \"Unconstrained Power\" for the power d as a if there is unconstrained power beyond that needed for nor - mal operation coming from external supplies, (e.g., multiple APCr osuvipdpelries). Consumer AC Sup Tplhyis concept applies as the power is routed through multiple and tiers, sAoC, aSsu apnp leyxample. Power provided out of a monitor that is connected to a monitor that gets power from an, will claim it has \"Unconstrained Power\" even though it is not directly connected to the Fi.gure 8.1, \"Example of daisy chained displays\" An example use case is a Tablet computer that is used with two USB A/V displays that aArtet adcahiesyd chained (see ). The tablet and 1st display are not externally powered, (meaning, they have no source Aotft paochweedr outside of USB PD). The 2nd display has an external supply which could either be a USB PD based supply or some other form of externaClh saurpgperly. When the displays are connected as shown, the power adapter to the 2nd display is able to power both the 1st display and the tablet. In this case the 2nd display will indicate the presence of a sufficiently sized to the 1st display, by setting its \"Unconstrained Power\" bit. The 1st display will then in turn assess and indicate the presence of the extra power to the tablet by setting its \"Unconstrained Power\" bit. Power is transmitted through the system to all devices, provided that there is sufficient power available from the external supply. Figure 8.1 Example of daisy chained displays Tablet Display 1 Display 2 AC Attached Another example use case is a laptop computer that is to both an external supply and a Tablet computer. In this situation, if the external supply is large enough to power the laptop in its normal state as well as charge an external device, the laptop would set its \"Unconstrained Power\" bit and the tablet will allow itself to charge at its peak rate. If the external supply is small, however, and would not prevent the laptop from discharging if maximal power is drawn by the external device, the laptop would not set its \"Unconstrained Power\" bit, and the tablet can choose to draw less than what is offered. This amount could be just enough to prevent the tablet from discharging, or none at all. Alternatively, if the tablet determines that the laptop has significantly larger battery with more charge than Stihnek tablet has, the tablet can Ustnilcl ocnhsotorsaei ntoe dch Paorwgee ritself, although possibly nSootu artc ethe maximal rate. Source In this way, s that do not receive the bit from the connected can still choose to charge their batteries, or charge at a reduced rate, if their policy determines that the impact to the is minimal -- such as in the case of a phone with a small battery charging from a laptop with a large battery. These p8o.l2ic.i6es. 2can be decid e Bd vaitat feurrthye rS UuSpB pPDli ceosmmunication. Battery Shall System Policy Manager When monitored, and a USB interface is supported, the state be reported to the using Bthaett UerSyB interface. Should If the device is -powered but is in a state that is primarily for charging external devices, the device is considered to be an unconstrained source of power andB tahtutesr y set the \"Unconstrained Power\" bit. Battery Power Role Swap A simplified algorithm is detailed below to ensure that powered devices will get charge from nonpowered devices when possible, and also to ensure that devices do not constanSthlyo uld back and forth. Power Role Swap When two devices are connected that do not have Unconstrained Power, they define their own policies so as to prevent constant ping. Section 6.4.1.2.1.3, \"Unconstrained Power\" Section 6.4.1.3.1.3, \"Unconstrained Power\" This algorithm usesC tahpea \"bUilnitcieosnstrained Power\" bit (see and ), thus the decisions are based on the availability and sufficiency of an external supply, not the full of a system or device or product. Rec- ommPernodviadteior/nCs:onsumer Should Power Role Swap Consumer/Provider s using large external sources (\"Unconstrained Power\" bit set) always deny requests from s not using external sources (\"Unconstrained Power\" bit cleared).", "tables": [], "figures": ["Figure 8.1"], "page_range": [421, 422]}
{"section_path": "8.2.7 Interface to the Policy Engine", "start_heading": "8.2.7 Interface to the Policy Engine", "content": "- Provider/Consumer Should Power Role Swap Consumer/Provider s not using large external sources (\"Unconstrained Powered\" bit cleared) always accPerpotv aid er/Consumer request from a using large external power sources (\"Unconstrained Power\" bit set) unless the requester is not able to provide the requirements of the 8.2.7present Interface to. the Policy Engine Device Policy ManagerShall Policy Engine Port T8h.2e.7.1 Dev ice P moailnitcayin Man ainntearfgaceer t oi nth ea Provide fror each in the device. Device Policy Manager ProviderShall Policy Engine The- Policy En ignin ae also provide tAhtet afochllmowenintg functions to the : - Inform the Policy Engine of changes in cSaobulerc/e d Ceavpicaeb ilities status forP oar gtiven cable. - Inform the wheAntteavcehre tdhCe onsumer available for a Pcohliacny gEen.gine - Evaluate requests from an and provide rPeoslpicoy nEsnegsin teo the. - Respond to rePqouliecys tEsn fgoirn epower supply transitions from the. - Indication to when power supply transitPioonrst are complete. 8.2.7.M2aintain a p o Dweerv reisceerv Pe ofolri dceyvi cMesa onpearagteinrg oinn a a Co ant lseussm thaenr maximum power. Device Policy Manager ConsumerShall Policy Engine The- Policy En ignin ae also provideA ttthaec hfomlleonwting functions to the : - Inform the Policy Engine of changes in cable/device stPaoturst. - Inform thSeo urce Capabi lwitiheesnever the power requirements for a change. Evaluate Cap aanbdil iptrieosvide suitable responses:  Request from offered. - Indicate whether addSitiinoknal power is required.Policy Engine 8.2.7.R3espond to r eDqueevstisc foer Pol itrcayn sMitioanns afrogme rth ien a Dual-.Role Power Device Device Policy Manager Dual-Role Power DeviceShall Policy Engine The- ProviderDevice Pol iicny a M anager provide the following functions to the : - Consume rDevice Policy Manager - Policy Engine Source Sink - Interface for thPeo licy Engine to reqPuowesetr p Roowlee rS wsuappply transitions from to and vice versa. 8.2.7.I4ndications t o D evice Po dluircinyg Manager in tara Dnsuitiaonl-s.Role Power Device Dead Battery handling Device Policy Manager Dual-Role Power Device Dead BatteryShould The- Sin kin a SinkDFP with a : AttachedSource - SwitVchBU PSorts to At-toanclhye odrS ourc e operation to obtain power from the next. Negotiation Use from the to power the USB Power Delivery communications as well as charging to enable the of higher input power.", "tables": [], "figures": [], "page_range": [423, 423]}
{"section_path": "8.3 Policy Engine", "start_heading": "8.3 Policy Engine", "content": "Policy Engine Port Device Policy Manager Local Policy Port There is one instance per that interacts with the in order to implement the - presAenMtS for that particular. This section includes: - s for various operations. Sink Cable Plug State diagrams covering operation of Sources, s and s.", "tables": [], "figures": [], "page_range": [424, 424]}
{"section_path": "8.3.1 Introduction", "start_heading": "8.3.1 Introduction", "content": "Policy Engine Port Device Policy Manager Local Policy Port There is one instance per that interacts with the in order to implement the - presAenMtS for that particular. This section includes: - s for various operations. Sink Cable Plug State diagrams covering operation of Sources, s and s.", "tables": [], "figures": [], "page_range": [424, 424]}
{"section_path": "8.3.2 Atomic Message Sequence Diagrams", "start_heading": "8.3.2 Atomic Message Sequence Diagrams", "content": "Policy Engine Atomic Message Sequence AMS AMS Local Policy The drives the s ( ) and responses based on both the expected s and the ApMreSseSnhta ll. Message PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready Section 8.3.3.2, \"Policy Engine Source Port State Diagram\" Section 8A.n3.3.3, \" Policy b Een dgeinfien Seidn ka sP ao rt State D sieaqguraemnc\"e thatS estcatirotsn a8n.3d.3/.o2r5 e, n\"Cdasb ilne ePiltuhge rS pthecei fic State Diagra,m s\" or states (see, Cable Plug and Section 8.3.3.25.3, \"Source Startup Structured )V. DM Discover Identity of a Cable Plug State Diagram\"Shall AMS In addition, the discovery sequence specified in Source Sink Protocol Layer be AdeMfiSned as an. PE_SRC_Ready PE_SNK_Ready Section 8.3.3.2, \"Policy Engine Source Port State Diagram\" Section 8.3.3.3, \"Policy Engine STihnek Port St aanted Diag rianmdi\"cate to the when an starts and ends on entry to/exit from or (see and AMSShall ). Initiator Policy Engine GoodCRCMessage Message An Por tbe coAnMsiSdeSrheadl lto have been started by the when the proMteoscsoalg eengine signals the that transmission is a success (the has been received in response to the initial ). For the receAiMviSngS hall the be considered to have started when the initial has arrived. An - be coPnrostidoecorel dLa tyoe hrave ended:Policy Engine Message AMS Port Message When the signals the that transmission of the final in the is a - suScocefts_sR aensdet fMore tshsaeg oeppHoasridte R eset wSihgenna tlihneg finalS OP’ SO hPa’’s beCeanb rleec Reievseedt.Signaling A, for or or has been sent or Section 8r.e3c.2ei.1v.e3d,.\"Atomic Message Sequences\" AMS gives details of these 's. Informative This section contains sequence diagrams that highlight some of the more interesting transactions. It is by no means a complete summary of all possible combinations but is in nature. Figure 8.2, \"Basic Message Exchange (Successful)\" Message Table8.1, \"Basic Message Flow\" Source Sink Sink Source Message below illustrates how a is senMte. ssage Protocol Layer details the steps in Ptholei cfylo Ewn.g Ninoete that theM seesnsadgeer might be either a PHY Loar yer while the receiver might be either a or. The basic sequence is the same. It starts when the Sender's at the behest of its Figure 8fo.2rm Bsa as ic Messa gthea Et xitc phaasnsgees (toS uthccee ssful). Message Sender Message Receiver : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send message 2: Message 3: Message + CRC 4: Message Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Message received 6: GoodCRC 8: GoodCRC 7: GoodCRC + CRC Consume message Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Message sent Table8.1 Basic Message Flow Step Message Sender Message Receiver Policy Engine Protocol Layer Message Protocol Layer Message PHY Layer PHY Layer CRC Message PHY Layer Message CRC. CRCReceiveTimer Message PHY Layer CRC Message. verify the. Protocol Layer Protocol Layer MessageID to the. Message is different from the previously stored value Protocol Layer Message and then stores a copy of the new value. Policy Engine forwards the received Protocol Layer GoodCRCMessage information to the that consumes it. PHY Layer PHY Layer Message CRC PHY Layer CRC GoodCRC passes it to the. Message Message PHY Layer CRC GoodCRC verify the.. Message Protocol Layer Protocol Layer to the. MessageIDCounter CRCReceiveTimer checks and increments the Protocol Layer Policy Engine and stops. Message was successfully sent. Message Figure 8.3, \"Basic Message flow indicating possible errors\" Figure 8.2, \"Basic Message TExhcehraen agree (vSaurcicoeusss fpuol)i\"nts during the flow where failures Tina bcolem8m.2u, \"nPiocatetniotnia ol irs southese irn i sBsauseics Mcaens soacgceu Fr.l ow\" is an annotated version of indicating at which point issues can occur. details the steps in the flowF.igure 8.3 Basic Message flow indicating possible errors - Message currently being received - Message does not arrive - Message is a retry - Channel unavailable - Message has bad CRC Message Sender Message Receiver : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send message 2: Message A B C 3: Message + CRC 4: Message Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID D 5: Message received E F 6: GoodCRC G 8: GoodCRC 7: GoodCRC + CRC Consume message Check and increment MessageIDCounter Stop CRCReceiveTimer - Message currently being received - Channel unavailable 9: Message sent - GoodCRC does not arrive - Message is unexpected - GoodCRC has the wrong MessageID - GoodCRC has a bad CRC - Message is unknown - Response is not GoodCRC Table8.2 Potential issues in Basic Message Flow Point Possible issues Message PHY Layer Message Message A 1) There is an incoming on the channel meaning that the is unable to send. In this case the outgoing is removed from the queue and the incoming processed. Message Discarded PHY Layer Protocol Layer 2) Due to some sort of noise on the line it is not possible to transmit. In this case the outgoing is Message PHY Layer by the. Retransmission is via the ’s normal mechanism. B 1) Message does not arrive at the due to noise oCnR Cthe channel. 2) Mess aargreives but has been cPorrortuopctoel dL aaynedr has a bad. GoodCRCMessage CRCReceiveTimer Message There is no to pass up to the on the receiver which means a is not MessageID Message MessageID Message sent. This leads to a timeout in the Sender. Policy Engine C 1) of received matches stored so this is a retry. is not passed Policy Engine Message up to the. D 1) Policy Engine receives a knUonwrenc ognized M thesasta igt ewas not expecting. 2) receives an. Soft_ResetMessage Message These cases are errors in the protocol which could lead to the generation of a. E Same as point A but at the Receiver side. Table8.2 Potential issues in Basic Message Flow Point Possible issues GoodCRCMessage Message F 1) GoodCRC Message response does not arrive at the CRC Sender side due to the noise on the channel. 2)GoodCRCMessa ge response arrivesM beusts ahgaes a bad P.rotocol Layer CRCReceiveTimer Message A is not received by the Sender’s. This leads to a GoodCRCMessage MessageID Message timeout in the Sender. G 1) Message is received but dGooeosd cCoRnCta Mine stshaeg seame as the transmitted. Message Protocol Layer 2) A is received but it is not a (similar case to that of an unexpected or unknown but this time detected in the ).GoodCRCMessage CRCReceiveTimer Protocol Layer Cable Both of these issues indicate errors in receiving an expected which will lead to a Plug timeout in the and a subsequent retry (except for communications with s). Figure 8.4, \"Basic Message Flow with Bad followed by a Retry\" Message CRC Message Message Protocol Layer Policy Engine Message illuPsHtrYa tLeasy oerne of thPeroseto ccaosle Lsa; ythere basic flow with a retry due to a bad at the RencReievterry. CIto sutnatrtsT wahbelen8 t.h3e, \"Basic Me Ssseangdee rF'lso w with CRC fail uatr et\"he behest of its forms a that it passes to the. The is responsible for retries on a “'n' strikes and you are out\" basis ( ). details the steps in the floFwig.ure 8.4 Basic Message Flow with Bad followed by a Retry Message Sender Message Receiver : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send message 2: Message 3: Message + CRC Start CRCReceiveTimer Message is not received or CRC is bad so message is not passed to the protocol layer CRCReceiveTimer expires Retry and increment RetryCounter 4: Message 5: Message + CRC 6: Message Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 8: GoodCRC 7: Message received 10: GoodCRC 9: GoodCRC + CRC Consume message Check and increment MessageIDCounter Reset RetryCounter Stop CRCReceiveTimer 11: Message sent Table8.3 Basic Message Flow with CRC failure Step Message Sender Message Receiver Policy Engine Protocol Layer Message Protocol Layer Message PHY Layer PHY Layer CRC Message PHY Layer Message Message. CRCReceiveTimer CRC Protocol Layer CRCReceiveTimer. incorrect. Nothing is passed to. Protocol will expire and trigger the first retry by the Message PHY Layer. The is incremented. PHY Layer CRC Message PHY Layer Message CRC passes the to the. CRCReceiveTimer Message PHY Layer CRC Message. verify the. Protocol Layer Protocol Layer MessageID to the. Message is different from the previously stored value Protocol Layer Message and then stores a copy of the new value. Policy Engine forwards the received Protocol Layer GoodCRCMessage information to the that consumes it. PHY Layer PHY Layer Message CRC PHY Layer CRC GoodCRC passes it to the. Message Message PHY Layer CRC GoodCRC verify the.. Message Protocol Layer Protocol Layer MessageID to the. CRCReceiveTimer RetryCounter and resets the. Message informs the that the was successfully sent. Atomic Message Sequence AMS Table8.4, \"Atomic Message Sequences\" Message Message AMS TNhoen -tiynpteersr oufp tible s ( ) arAeM liSsted in Message. ATMheS followinRg tables list sequCenolcleissi oonf eAivthoeidra nce sS oerc ctioomn b5i.7n,a \"tCioonllsi soiof n Avoidasn caen\"d oSnhea lolr more embedded es which are. Where there is an embedded the entirMe essage sequence is treated as an and the p value used AfoMr S (see ) only be changed on leaving or entering the ready state at the beginning or end of the entire sequence, and not at the start or end of the eNmotbee:dded AM.S Message GoodCRCMessage Message An is has not started until the first in the sequence has been successfully sent (i.e., a Table8.31, \"AMS: Ha rd Reset \"has been rHecaeridv Redes aectknowledgiSnigg nthaeli ng ).AMS SPR Contract NegotiationAMS Shall Non-interruptible details a (which is not an ) followed by an which be treatTeadb alse 8.4 Atomic Mess.age Sequences Type of AMS Table Reference Section Reference Negotiation Table8.5, \"AMS: Power Negotiation (SPR)\" Section 8.3.2.2.1 Negotiation Table8.6, \"AMS: Power Negotiation (EPR)\" Section 8.3.2.2.2 Power (SPR) Unsupported Message Table8.7, \"AMS: Unsupported Message\" Section 8.3.2.3 Power (EPR) Soft Reset Table8.8, \"AMS: Soft Reset\" Section 8.3.2.4 Data Reset Table8.9, \"AMS: Data Reset\" Section 8.3.2.5 Hard Reset Table8.31, \"AMS: Hard Reset\" Section 8.3.2.6 Power Role Swap Table8.10, \"AMS: Power Role Swap\" Section 8.3.2.7 Fast Role Swap Table8.11, \"AMS: Fast Role Swap\" Section 8.3.2.8 Data Role Swap Table8.12, \"AMS: Data Role Swap\" Section 8.3.2.9 VCONN Swap Table8.13, \"AMS: VCONN Swap\" Section 8.3.2.10 Table8.14, \"AMS: Alert\" Section 8.3.2.11.1 Table8.15, \"AMS: Status\" Section 8.3.2.11.2 Alert Source Capabilities Status Table8.16, \"AMS: Source/Sink Capabilities (SPR)\" Section 8.3.2.11.3.1 Sink Capabilities / Source Capabilities (SPR) Table8.17, \"AMS: Source/Sink Capabilities (EPR)\" Section 8.3.2.11.3.2 Sink Capabilities / Extended Capabilities Table8.18, \"AMS: Extended Capabilities\" Section 8.3.2.11.4 (EPR) BatteryCapabilities Table8.19, \"AMS: Battery Capabilities\" Section 8.3.2.11.5 Table8.20, \"AMS: Manufacturer Information\" Section 8.3.2.11.6 and Status Table8.21, \"AMS: Country Codes\" Section 8.3.2.11.7 Manufacturer Information Table8.22, \"AMS: Country Information\" Section 8.3.2.11.8 Country Codes Table8.23, \"AMS: Revision Information\" Section 8.3.2.11.9 Country Information Source Table8.24, \"AMS: Source Information\" Section 8.3.2.11.10 Revision Information Table8.25, \"AMS: Security\" Section 8.3.2.12 Information Table8.26, \"AMS: Firmware Update\" Section 8.3.2.13 Security Structured VDM Table8.27, \"AMS: Structured VDM\" Section 8.3.2.14 Firmware Update Table8.28, \"AMS: Built-In Self-Test (BIST)\" Section 8.3.2.15 Table8.29, \"AMS: Enter USB\" Section 8.3.2.16 Built-In Self-Test (BIST) Unstructured VDM Table8.30, \"AMS: Unstructured VDM\" Section 8.3.2.17 Enter USB Table8.5 AMS: Power Negotiation (SPR) AMS Message Sequence Conditions AMS Ref State Machine Ref Source_Capabilities Message 1. RequestMessage Section 8.3.2.2.1.1.1 Negotiation SPR Explicit Contract AcceptMessage 2. (Accept) PS_RDYMessage 3. Source_Capabilities 4. Source Section 8.3.3.2 Message 1. SPR Mode Section 8.3.2.2.1.1.2 Section 8.3.3.3 Negotiation RequestMessage Started by,, SPR Explicit Contract RejectMessage (Reject) 2. Source_Capabilities 3. Message 1. Section 8.3.2.2.1.1.3 Negotiation RequestMessage SPR Explicit Contract WaitMessage (Wait) 2. RequestMessage 3. SPR PPS AcceptMessage Section 8.3.2.2.1.2 Section 8.3.3.3 1. PS_RDYMessage Keep Alive 2. RequestMessage 3. SPR Sink AcceptMessage Sink Section 8.3.2.2.1.3.1 1. Makes Request PS_RDYMessage SPR Mode (Accept) 2. Started by, Section 8.3.3.2 SPR Sink 3. Request Message Section 8.3.2.2.1.3.2 Section 8.3.3.3 RejectMessage, Makes Request 1. (SRPeRj eScint)k 2. Reque stMessage Section 8.3.2.2.1.3.3 WaitMessage Makes Request 1. (Wait) 2. Table8.6 AMS: Power Negotiation (EPR) AMS Message Sequence Conditions AMS Ref State Machine Ref EPR_Mode Message 1. (Enter) EPR_Mode Message 2. (Enter VCONN Source Section 8.3.3.25.1 Acknowledge) VCONN Section 8.3.2.2.2.1 Section 8.3.3.25.2 3. Source Swap,, EPR Mode (Iin nOi ip tti it aait toe o n (d rAa bl c )y c.R en p eo stn p) - oA nM dS er SPR Mode Sink S Se ec ct ti io on n 8 8..3 3..2 2..1 10 0..1 2,, S Se ec ct ti io on n 8 8..3 3..3 3..1 29 0,.1, Entering Started by, Section 8.3.2.12.3 Section 8.3.3.21.1 (Success) 4. Op ttoio nal Section 8.3.2.2.2.4, Section 8.3.3.2, Discover Identity (ACK),, AMS ( for Section 8.3.3.3, Sources with captive EPR_Mode cables) Message 5. (Enter Succeeded) 6. EPR Explicit Contract EPR_Mode Negotiation AMS Message 1. (Enter) EPR_Mode Message 2. (Enter VCONN Source Section 8.3.3.25.1 Acknowledge) VCONN Section 8.3.2.2.2.2 Section 8.3.3.25.2 EPR Mode 3. Source Swap, Sink Section 8.3.2.10.1, EPR initiatOepdt bioyn naoln-, Section 8.3.3.19 ECanbtelering Initiato ( rAcc Rep est p) onder SS tP aR r tM edo d be y, Section 8.3.2.10.2, Section 8.3.3.20.1, (Failure due to non- AMS( ). Section 8.3.2.12.3,, Section 8.3.3.21.1 ) 4. Op ttoio nal, Discover Identity (ACK) AMS ( for Sources with captive EPR_Mode cables) Message 5. (Enter Failed) EPR_Mode Message 1. (Enter) EPR_Mode. Message Section 8.3.2.2.2.3 Section 8.3.3.25.1 EP VR C OM No Nd Se wap 2. AVC cO kN nN o wSo leu dr c g( eE e)n ter V CONN. SPR Mode Sink Section 8.3.2.10.1, Section 8.3.3.25.2, Entering 3. Source Swap, Started by, Section 8.3.2.10.2, Section 8.3.3.19, (Failure of ) initiatOepdt bioyn naoln (Reject) EPR_Mode AMS( ). Message 4. (Enter Failed) Table8.6 AMS: Power Negotiation (EPR) AMS Message Sequence Conditions AMS Ref State Machine Ref EPR_Source_Capabilities Message 1. Source EPR_RequestMessage Section 8.3.2.2.2.2.1 Negotiation EPR Mode EPR Explicit Contract AcceptMessage Started by, 2. (Accept) PS_RDYMessage 3. EPR_Source_Capabilities 4. Message 1. Section 8.3.2.2.2.2.2 Negotiation EPR_RequestMessage Section 8.3.3.2 EPR Explicit Contract RejectMessage Section 8.3.3.3 (Reject) 2., EPR_Source_Capabilities 3. Message 1. Section 8.3.2.2.2.2.3 Negotiation EPR_RequestMessage EPR Explicit Contract WaitMessage (Wait) 2. EPR_KeepAliveMessage 3. Sink EPR_KeepAlive_Ack Section 8.3.2.2.2.3 1. EPR Mode Message Started by, EPR Keep Alive 2. EPR_Mode EPR Mode Sink Message Sink Section 8.3.2.2.2.4.1 1. (Exit) EPR Mode Section 8.3.2.2.1.1 Section 8.3.3.25.3 Exiting ( Started by,, Section 8.3.3.25.4 Initiated) 2. SPR Explicit Contract, EPR_Mode Section 8.3.3.2 Negotiation AMS, EPR Mode Message Source Section 8.3.2.2.2.4.2 Section 8.3.3.3 1. (Exit), Source EPR Mode Section 8.3.2.2.1.1 Exiting Started by,, ( Initiated) 2. SPR Explicit Contract EPR_RequestMessage Negotiation AMS EPR Sink Sink AcceptMessage Section 8.3.2.2.2.5.1 1. EPR Mode Makes PS_RDYMessage Started by, 2. Request (Accept) Section 8.3.3.2 EPR Sink 3. EPR_Req uestMessage Sink Section 8.3.2.2.2.5.2 Section 8.3.3.3 RejectMessage EPR Mode, Makes 1. Started by, REePqRu Seisnt k(Reject) 2. EPR_R equestMessage Sink Section 8.3.2.2.2.5.3 WaitMessage EPR Mode Makes 1. Started by, Request (Wait) 2. Table8.7 AMS: Unsupported Message AMS Message Sequence Conditions AMS Ref State Machine Ref Message Section Unsupported Message Source Sink Section 8.3.2.3 1. Any which is not supported Source Sink 8.3.3.6.2 Not_SupportedMessage Started by by the or or 2. Table8.8 AMS: Soft Reset AMS Message Sequence Conditions AMS Ref State Machine Ref Soft_ResetMessage Section AcceptMessage 8.3.3.4.1 1. Section 2. SPR M ode Section 8.3.2.4 8.3.3.4.2, 3. I Nn e gotE iP atR io M no A: d S MeP SR Explicit Contract S 8e.3c.t 2io.2n.1.1, 8Se.3c.t 3i.o 2n 5., 2.1 Soft Reset 4. or in : EPR Explicit Contract Source Sink Section, Section Negotiation AMS. Started by 8.3.2.2.1.1 8.3.3.25.2.3, or Section, Section 8.3.3.25.2.4 Section 8.3.3.2, Section 8.3.3.3, Table8.9 AMS: Data Reset AMS Message Sequence Conditions AMS Ref State Machine Ref DFP Data Reset Data_ResetMessage DFP VCONN AcceptMessage DFP Section 8.3.2.5.1 Initiated 1. Source Data_Reset_CompleteMessage where the is the 2. Started by DFP Data Reset 3. Data_ResetMessage DFP VCONN AcceptMessage UFP Section 8.3.2.5.2 Receives 1. Source Data_Reset_CompleteMessage where the is the 2. Started by Section Data_ResetMessage 8.3.3.5.1 3. DFP Data Reset AcceptMessage Section UFP VCONN 1. DFP Section 8.3.2.5.3 8.3.3.5.2, Sour Icneitiated 2. PS_RDY Message where the is the Data_Reset_CompleteMessage Started by 3. Data_ResetMessage 4. DFP Data Reset AcceptMessage UFP VCONN 1. UFP Section 8.3.2.5.4 Sour Rceeceives 2. PS_RDY Message where the is the Data_Reset_CompleteMessage Started by 3. 4. Table8.10 AMS: Power Role Swap AMS Message Sequence Conditions AMS Ref State Machine Ref PR_SwapMessage AcceptMessage Section 1. Source Power Role PS_RDYMessage 8.3.2.7.1.1 2. Swap Initiated 3. PS_RDY Message 8Se.3c.t 2i.o 2n.1.1, (Accept) 4. Source 5. SPR Explicit Contract Negotiation Started by Source Power Role P AR M_ SSwapMessage Section Swap RejectMessage 8.3.2.7.1.2 Initiated 1. Section Sourc e(Reject) Power Role 2. PR_Sw apMessage Section 8.3.3.19.3 Swap WaitMessage 8.3.2.7.1.1 Section Initiated 1., 8.3.3.19.4 (Wait) 2. PR_Sw apMessage Section 8.3.3.2 AcceptMessage Section, 1. Sink Power Role PS_RDYMessage 8.3.2.7.2.1 Section 8.3.3.3, 2. Swap Initiated 3. PS_RDY Message 8Se.3c.t 2i.o 2n.1.1, (Accept) 4. Sink 5. SPR Explicit Contract Negotiation Sink Power Role P AR M_ SSwapMessage Started by Section Swap RejectMessage 8.3.2.7.2.2 Initiated 1. Sink (Reject)Power Role 2. PR_Sw apMessage Section Swap WaitMessage 8.3.2.7.2.3 Initiated 1. (Wait) 2. Table8.11 AMS: Fast Role Swap AMS Message Sequence Conditio AMS Ref State Machine ns Ref FR_SwapMessage AcceptMessage Section 8.3.3.2 1. Fast Role Swap 2. PS_RDY Message Section 8.3.2.8 Section 8.3.3.3, 3. PS_RDY Message SS tin ak rted by Section 8.3.2.2.,1.1 Section 8.3.3.19,.5 Section 8.3.3.19.6 4., 5. SPR Explicit Contract Negotiation AMS Table8.12 AMS: Data Role Swap AMS Message Sequence Conditions AMS Ref State Machine Ref Data Role Swap DR_SwapMessage Section UFP, InS itin iak ted by 1. AcceptMe ssage Sink 8.3.2.9.1.1 Operating as 2. Started by Data Role Swap DR_SwapMessage (Accept) Section UFP, InS itin iak ted by 1. RejectMe ssage 8.3.2.9.1.2 Operating as 2. Data Role Swap DR_SwapMessage (Reject) Section UFP, InS itin iak ted by 1. WaitMes sage 8.3.2.9.1.3 Operating as 2. Data Role Swap DR_SwapMessage (Wait) Section UFP, InS ito iu ar tece d by 1. AcceptMe ssage Source 8.3.2.9.2.1 Started by Operating as 2. Data Role Swap DR_SwapMessage (Accept) Section UFP, InS ito iu ar tece d by 1. RejectMe ssage 8.3.2.9.2.2 Operating as 2. Data Role Swap DR_SwapMessage (Reject) Section UFP, InS ito iu ar tece d by 1. WaitMes sage 8.3.2.9.2.3 Section 8.3.3.19.1 Operating as 2. Data Role Swap DR_SwapMessage Section (Wait) Section, DFP, InS ito iu ar tece d by 1. AcceptMe ssage Source 8.3.2.9.3.1 8.3.3.19.2 Started by Operating as 2. Data Role Swap DR_SwapMessage (Accept) Section DFP, InS ito iu ar tece d by 1. RejectMe ssage 8.3.2.9.3.2 Operating as 2. Data Role Swap DR_SwapMessage (Reject) Section DFP, InS ito iu ar tece d by 1. WaitMes sage 8.3.2.9.3.3 Operating as 2. Data Role Swap DR_SwapMessage (Wait) Section DFP, InS itin iak ted by 1. AcceptMe ssage Sink 8.3.2.9.4.1 Operating as 2. Started by Data Role Swap DR_SwapMessage (Accept) Section DFP, InS itin iak ted by 1. RejectMe ssage 8.3.2.9.4.2 Operating as 2. Data Role Swap DR_SwapMessage (Reject) Section DFP, InS itin iak ted by 1. WaitMes sage 8.3.2.9.4.3 Operating as 2. (Wait) Table8.13 AMS: VCONN Swap AMS Message Sequence Conditions AMS Ref State Machine Ref VCONN Source VCONN_SwapMessage Section VCONN AcceptMessage VCONN Source Source Swap, 1. PS_RDYMess age 8.3.2.10.1.1 initiated by 2. Started by VCONN S (oAucrcceept) 3. VCONN_S wapMessage Section VCONN RejectMessage 8.3.2.10.1.2 Source Swap, 1. initiated by VCONN S (o Ru er jc ee ct) 2. VCONN_ SwapMessage Section VCONN WaitMessage 8.3.2.10.1.3 Source Swap, 1. initiated by VCONN S (o Wur ac ite ) 2. VCONN _SwapMessage Section 8.3.3.20 VCONN Source Swap, 1. AcceptMess age VCONN Source 8Se.3c.t 2i.o 1n initiated by non- PS_RDYMessage 2. Started by non V (ACO ccN eN p S t)ource 3. VCONN_S wapMessage RejectMessage Section VCONN Source Swap, 1. 8.3.2.10.2.2 initiated by non 2. V (RCO ejN eN c tS )ource VCONN_SwapMessage Section WaitMessage 8.3.2.10.2.3 VCONN Source Swap, 1. initiated by non 2. (Wait) Table8.14 AMS: Alert AMS Message Sequence Conditions AMS Ref AMS Ref Source Alert Message Sink sends Alert to 1. SenderResponseTi am er Source Section Section 8.3.3.7.1 ( 8.3.2.11.1.1 Section 8.3.3.7.2 Source AlertMessage, Timeout) Started by Sink Get_Status sends Alert to 1. Message a ( 2. Sink Gets Source Status AMS Sink AlertMessage ) Source sends Alert to a 1. SenderResponseTi mer Sink Section Section 8.3.3.7.3 ( 8.3.2.11.1.2 Section 8.3.3.7.4 Sink AlertMessage, Timeout) Started by Source Get_Status sends Alert to a 1. Message ( 2. Source Gets Sink Status AMS ) Table8.15 AMS: Status AMS Message Sequence Conditions AMS Ref State Machine Ref Sink Source Get_StatusMessage Section StatusMessage Sink 8.3.2.11.2.1 Gets 1. SSotautrucse Sink 2. Get_Sta tusMessage Started by Source Section, Section 8.3.3.10.1 8.3.2.11.2.2 StatusMessage Section 8.3.3.10.2 Gets 1. Started by, VStCaOtNuNs Source 2. Get_Sta tusMessage Section Cable Plug StatusMessage VCONN Source 8.3.2.11.2.3 Gets 1. Sink S oSutarctues 2. Get_PP S_StatusMessage Started by Sink Section, Section 8.3.3.10.3 8.3.2.11.2.4 PPS_StatusMessage Section 8.3.3.10.4 Gets PPS 1. Started by, Status 2. Table8.16 AMS: Source/Sink Capabilities (SPR) AMS Message Sequence Conditions AMS Ref State Machine Ref Sink Source Get_Source_CapMessage Capabilities EPR Source_Capabilities Gets 1. Mode Message ( 2. Sink ) Source Get_Source_CapMessage Source_Capabilities Capabilities 1. Gets Message SPR 2. SPR Mode Mode (Accept in Section 8.3.2.11.3.1.1 3. In only: SPR Sink ) MGe at k_ eS so u Rr ec qe u_ eC sa tp (AM ce cs es pa t)g Ae MS Sink Section 8.3.2.2.1.3.1, Section 8.3.3.2 Sink Source Source_Capabilities Section 8.3.2.2.1.3.2, Section 8.3.3.3, 1. Capabilities Message Started by Section 8.3.2.2.1.3.3 SP G Re Mts o de 2. SPR Mode,, (Reject in ) 3. In only: SPR Sink Get_Source_CapMessage Makes Request (Reject) AMS Sink Source Source_Capabilities 1. Capabilities Message SP G Re Mts o de 2. SPR Mode (Wait in ) 3. In only: SPR Sink Dual-Role Power Get_Source_CapMessage Makes Request (Wait) AMS Source Source Source_Capabilities Section 8.3.3.19.7 Capabilities 1. Message Source Section 8.3.2.11.3.1.2 Gets Section 8.3.3.19.10 Dual-Role Power 2., from a Started by Sink Source Sink Get_Sink_CapMessage Section 8.3.3.2 Source Section 8.3.2.11.3.1.3 Capabilities Sink_CapabilitiesMessage Section 8.3.3.3 Gets 1., Dual-Role Power Get_Sink_CapMessage Started by 2., Sink Sink Sink_CapabilitiesMessage Section 8.3.3.19.9 Capabilities 1. Sink Section 8.3.2.11.3.1.4 Dual -GReotl e Power 2. Section 8.3.3.19.8, Source from a Started by Table8.17 AMS: Source/Sink Capabilities (EPR) AMS Message Sequence Conditions AMS Ref State Machine Ref EPR_Get_Source_Cap Sink Message Source Capabilities 1. Gets EPR EPR_Source_Capabilities SPR Mode Message 2. ( ) EPR_Get_Source_Cap Sink Message 1. Source Capabilities EPR_Source_Capabilities Gets EPR EPR Message 2. Mode EPR Mode EPR Sink (Accept in Section 8.3.2.11.3.2.1 ) 3. In only: Section 8.3.2.2.2.5.1 Section 8.3.3.2 MEP aR k_ eG s e Rt e_S qo uu er sc t e (_ AC ca cp ept) AMS Sink, Message Section 8.3.2.2.2.5.2 Section 8.3.3.3 Sink 1.,, EPR_Source_Capabilities Started by Section 8.3.2.2.2.5.3 Source Capabilities,, Gets EPR Message EPR Mode 2. EPR Mode EPR Sink (Reject in ) 3. In only: EPR_Get_Source_Cap Makes Request (Reject) AMS Message Sink 1. EPR_Source_Capabilities Source Capabilities Gets EPR Message EPR Mode 2. EPR Mode EPR Sink (Wait in ) 3. In only: Dual-Role Power EPR_Get_Source_Cap Makes Request (Wait) AMS Source Source Message Section 8.3.3.19.7 Capabilities 1. EPR_Source_Capabili ties Section 8.3.2.11.3.2.2 Gets Source Section 8.3.3.19.10 Dual-Role Power Message Started by, EPR Sink from a 2. EPR_Get_Sink_CapMessage Source SinkEPR Section 8.3.3.2 EPR_Sink_Capabilities Section 8.3.2.11.3.2.3 Capabilities 1. Source Section 8.3.3.3 Gets Message Started by, 2. Dual-Role Power EPR_Get_Sink_CapMessage, Sink SinkEPR EPR_Sink_Capabilities Section 8.3.3.19.8 1. Capabilities Message Sink Section 8.3.2.11.3.2.4 Get Section 8.3.3.19.9 Dual-Role Power 2., from a Started by Source Table8.18 AMS: Extended Capabilities AMS Interruptible Message Conditions AMS Ref Sequence Get_Source_Cap_Extended Sink Source Message Section 8.3.3.8.1 Extended 1. Sink Section 8.3.2.11.4.1 Gets Source_Capabilities_Extended M Section 8.3.3.8.2 Capabilities, essage Started by 2. Dual-Role Power Get_Source_Cap_Extended Source Source Message Extended 1. Source_Capabilities_Exten ded M Section 8.3.3.19.11 Gets Section 8.3.2.11.4.2 Capabilities essage Source Section 8.3.3.19.12 Dual-Role Power 2. Started by, from a Sink Get_Sink_Cap_Extended Source Sink Message Section 8.3.3.8.3 Extended 1. Section 8.3.2.11.4.3 Gets Sink_Capabilities_Extended Source Section 8.3.3.8.4 Capabilities Started by, Message 2. Dual-Role Power Get_Sink_Cap_Extended Sink Sink Message Extended 1. Sink_Capabilities_Exten ded Section 8.3.3.19.13 Gets Sink Section 8.3.2.11.4.4 Capabilities Message Section 8.3.3.19.14, Dual-Role Power 2. Started by from a Source Table8.19 AMS: Battery Capabilities AMS Message Sequence Conditions AMS Ref State Machine Ref Get_Battery_CapMessage Sink Battery Battery_Capabilities Sink Section 8.3.2.11.5.1 Capabilities 1. Gets Message Section 8.3.3.11.1 2. Started by Get_Battery_CapMessage Section 8.3.3.11.2 Source Battery, Battery_Capabilities Section 8.3.2.11.5.2 Capabilities 1. Source Gets Message Started by 2. Sink Battery Get_Battery_StatusMessage Sink Section 8.3.2.11.5.3 Battery_StatusMessage Section 8.3.3.12.1 Gets 1. SSitnaktus Battery 2. Get_Battery_Ca pMessage Started by Sink Section 8.3.2.11.5.4 Section 8.3.3.12.2, Battery_StatusMessage Gets 1. Started by Status 2. Table8.20 AMS: Manufacturer Information AMS Message Sequence Conditions AMS Ref State Machine Ref Source Port Get_Manufacturer_InfoMessage Gets 1. Manufacturer_InfoMes sage Source Section 8.3.2.11.6.1 Sink Started by Manufacturer 2. Sink Port Get_Manufacturer_InfoMessage Information from a Gets 1. Manufacturer_InfoMes sage Sink Section 8.3.2.11.6.2 MSoaunrucefacturer 2. Started by Information from a Source Battery Get_Manufacturer_InfoMessage Gets 1. Manufacturer_InfoMes sage Source Section 8.3.2.11.6.3 Section 8.3.3.12.1 Sink Started by Section 8.3.3.12.2 Manufacturer 2., Sink Battery Get_Manufacturer_InfoMessage Information from a Gets 1. Manufacturer_InfoMes sage Sink Section 8.3.2.11.6.4 MSoaunrucefacturer 2. Started by Information from a VCONN Source Get_Manufacturer_InfoMessage Gets Cable 1. Manufacturer_InfoMes sage VCONN Source Section 8.3.2.11.6.5 M Pla un gufacturer 2. Started by Information from a Table8.21 AMS: Country Codes AMS Message Sequence Conditions AMS Ref State Machine Ref Source Get_Country_CodesMessage Section 8.3.2.11.7.1 Sink Country_CodesMessage Source Gets Country 1. Started by CSiondkes from a 2. Get_Country_Co desMessage Sink Section 8.3.2.11.7.2 Section 8.3.3.14.1 Source Country_CodesMessage Gets Country 1. Section 8.3.3.14.2, CV oCOdNeNs fS ro ou mrc ae 2. Get_Country_Co desMessage Started by Cable Plug Gets 1. Country_CodesMes sage VCONN Source Section 8.3.2.11.7.3 Started by Country Codes from 2. a Table8.22 AMS: Country Information AMS Message Sequence Conditions AMS Ref State Machine Ref Source Get_Country_InfoMessage Gets Country 1. Country_InfoMes sage Source Section 8.3.2.11.8.1 Sink Started by Information from a 2. Sink Get_Country_InfoMessage Section 8.3.3.14.3 Country_InfoMessage Sink Section 8.3.2.11.8.2 Sour cG eets Country 1. Section 8.3.3.14.4, Information from a 2. Started by VCONN Source Get_Country_InfoMessage Cable P Gluegts 1. Country_InfoMes sage VCONN Source Section 8.3.2.11.8.3 Started by Country Information 2. from a Table8.23 AMS: Revision Information AMS Message Sequence Conditions AMS Ref State Machine Ref Source Get_RevisionMessage Gets Revision 1. RevisionMes sage Source Section 8.3.2.11.9.1 Sink Started by Information from a 2. Sink Get_RevisionMessage RevisionMessage Sink Section 8.3.2.11.9.2 Section 8.3.3.15.1 Gets Revision 1. Source Section 8.3.3.15.2 Information from a 2. Started by, VCONN Source Get_RevisionMessage Gets 1. RevisionMes sage VCONN Source Section 8.3.2.11.9.1 RCaebvliesi Polnu g 2. Started by Information from a Table8.24 AMS: Source Information AMS Message Sequence Conditions AMS Ref State Machine Ref Get_Source_Cap_Extended Sink Source Message Section 8.3.3.9.1 1. Sink Section 8.3.2.11.10.1 Source_Capabilities_Extended M Section 8.3.3.9.2 Gets, essage Started by Information 2. Dual-Role Power Get_Source_Cap_Extended Source Source Message Section 8.3.3.19.15 Dual-R oGlee tPso wer 1. eS so su ar gc ee_Capabilities_Exten ded SSM o tau rr tc ee d by Section 8.3.2.11.10.2 Section 8.3.3.19.16, ISninfokrmation from a 2. Table8.25 AMS: Security AMS Message Sequence Conditions AMS Ref State Machine Ref Source Security_RequestMessage Section 8.3.2.12.1 requests 1. Source Sink Started by security exchange Sink Security_RequestMessage with Sink Section 8.3.2.12.2 requests 1. Source security exchange Started by VCONN Source Security_RequestMessage with Cable 1. VCONN Source Section 8.3.2.12.3 r Pe luq guests security Started by Section 8.3.3.17.1 exchange with Section 8.3.3.17.2 Source Security_ResponseMessage, Section 8.3.3.17.3 Section 8.3.2.12.1, responds to 1. Source Sink Started by security exchange Sink Security_ResponseMessage with Sink Section 8.3.2.12.2 responds to 1. Source security exchange Started by VCONN Source Security_ResponseMessage with Cable 1. VCONN Source Section 8.3.2.12.3 r Pe luq guests security Started by exchange with Table8.26 AMS: Firmware Update AMS Message Sequence Conditions AMS Ref State Machine Ref Source Firmware_Update_Request Message Section 8.3.2.13.1 requests 1. Source Sink Started by firmware update Sink Firmware_Update_Request exchange with Message requests 1. Sink Section 8.3.2.13.2 fSiormurwceare update Started by exchange with VCONN Source Firmware_Update_Request Message 1. VCONN Source Section 8.3.2.13.3 requeCsatbs lfei rPmluwgare Started by Section 8.3.3.18.1 update exchange Source Firmware_Update_Response Section 8.3.3.18.2 with, Message Section 8.3.2.13.1 Section 8.3.3.18.3 responds to 1. Source, Sink Started by firmware update Sink Firmware_Update_Response exchange with Message responds to 1. Sink Section 8.3.2.13.2 fSiormurwceare update Started by exchange with VCONN Source Firmware_Update_Response Message 1. Section 8.3.2.13.3 responds to Cable VCONN Source Started by firmware update Plug exchange with Table8.27 AMS: Structured VDM AMS Message Sequence Conditions AMS Ref State Machine Ref Discover IdentityREQ Initiator Command Responder 1. Section 8.3.2.14.1.1 to Discover IdentityACK Discover Command 2. Identity (ACK) Discover IdentityREQ Initiator Command Section 8.3.3.21.1 Responder 1. Section 8.3.2.14.1.2 to Discover IdentityNAK Section 8.3.3.22.1, Discover Command 2. Identity (NAK) Discover IdentityREQ Initiator Command Responder 1. Section 8.3.2.14.1.3 to Discover IdentityBUSY Discover Command 2. I Id nie tn iati tt oy r (BUSY) Discover SVIDsREQ Responder Command Section 8.3.2.14.2.1 to 1. SVID Discover SVIDsACKCommand Discover Initiast o(ArCK) 2. Discover SVIDs REQ Command Responder 1. Section 8.3.2.14.2.2 Section 8.3.3.21.2 to Discover SVIDsNAK SVID Initiator Section 8.3.3.22.2 Discover Command Started by, 2. s (NAK) Discover SVIDsREQ Initiator Command Responder 1. Section 8.3.2.14.2.3 to Discover SVIDsBUSY SVID Discover Command 2. s (BUSY) Discover ModesREQ Initiator Command Responder 1. Section 8.3.2.14.3.1 to Discover ModesACK Discover Command 2. Modes (ACK) Discover ModesREQ Initiator Command Section 8.3.3.21.3 Responder 1. Section 8.3.2.14.3.2 to Discover ModesNAK Section 8.3.3.22.3, Discover Command 2. Modes (NAK) Discover ModesREQ Initiator Command Responder 1. Section 8.3.2.14.3.3 to Discover ModesBUSY Discover Command 2. M DFo Pdes U(B FU PSY) Enter ModeREQCommand Section 8.3.3.23.1 Section 8.3.2.14.4.1 Enter ModeACKCommand Section 8.3.3.24.1 to Enter 1., DMFoPde UFP 2. Exit ModeR EQC ommand Section 8.3.3.23.2 Section 8.3.2.14.4.2 Exit ModeACKCommand Section 8.3.3.24.2 to Exit 1. DFP, DMFoPde Cable Plug 2. Enter Mod eRE QCommand Section 8.3.3.23.1 Section 8.3.2.14.4.3 Enter ModeACKCommand Started by Section 8.3.3.25.4.1 to 1., EDnFtPer MCoadbele Plug 2. Exit ModeR EQC ommand Section 8.3.3.23.2 Section 8.3.2.14.4.4 Exit ModeACKCommand Section 8.3.3.25.4.2 to 1., EInxiitti aMtoorde 2. Attention REQ Command Section 8.3.2.14.4.5 Section 8.3.3.21.4 Responder Initiator Section 8.3.3.22.4 to 1. Started by, Attention Table8.28 AMS: Built-In Self-Test (BIST) AMS Message Sequence Conditions AMS Ref State Machine Ref BIST BIST Carrier Mode BIST Carrier Mode Section 8.3.2.15.1 Section 8.3.3.27.1 1. ( ) BIST BIST Test Data BIST Test Data Mode Message Section 8.3.2.15.2 Section 8.3.3.27.2 1. ( ) MBI eS sT saB geIST Shared Test Mode Tester Entry Started by BIST Shared 1. ( Section 8.3.2.15.3 Section 8.3.3.27.3 Capacity Test Mode ) Message BIST BIST Shared Test Mode 2. Series of Messages Exit 3. ( ) Message Table8.29 AMS: Enter USB AMS Message Sequence Conditions AMS Ref State Machine Ref UFP Enter_USB Section 8.3.2.16.1.1 ® Accept Entering USB4 1. Message MUFoPde (Accept) 2. Enter_U MSB essage Section 8.3.2.16.1.2 Reject Entering USB4 1. Message MUFoPde (Reject) 2. Enter_ U MS eB ssage Section 8.3.2.16.1.3 Wait Section 8.3.3.16.1 Entering USB4 1. Message DFP MCaobdlee P(Wlugait) 2. Enter M_U eS sB sage Section 8.3.2.16.2.1 Section 8.3.3.16.2, Accept Started by Entering 1. Message UCaSbBl4e MPloudge (Accept) 2. Enter_U MSB essage Section 8.3.2.16.2.2 Reject Entering 1. Message UCaSbBl4e MPloudge (Reject) 2. Enter_ U MS eB ssage Section 8.3.2.16.2.3 Wait Entering 1. Message USB4 Mode (Wait) 2. Message Table8.30 AMS: Unstructured VDM AMS Message Sequence AMS Ref State Machine Ref Vendor_Defined Unstructured VDM Section 8.3.2.17.1 1. Unstructured VDEM Vendor_Defined_Extended Section 8.3.2.17.2 Message 1. Message Table8.31 AMS: Hard Reset AMS Interruptibl Message Sequence Conditions AMS Ref State e Machine Ref Hard ResetSignaling Source Section 8.3.2.6.1 Hard Reset 1. Source Section 8.3.2.2.1.1 Initiated Started by, No 2. SPR Explicit Contract Hard ResetSignaling Sink Hard Negotiation AMS Section 8.3.2.6.2 Section 8.3.3.2 Reset 1. Sink Section 8.3.2.2.1.1 Section 8.3.3.3 Initiated Started by,, No 2. SPR Explicit Contract Source Hard ResetSignaling Negotiation AMS Section 8.3.2.6.3 Hard Reset Sink Initiated 1. Source Section 8.3.2.2.1.1 Started by, – No 2. SPR Explicit Contract Long Reset Negotiation AMS Figure 8.5, \"Successful Fixed, Variable or Battery SPR Power Negotiation\" Message Explicit Contract SPR Mode Negotiation illustrates an example of a successful - flowS owuhriclee negotiating an Capabilities in Source_.C Tahpea bilitiesMess gaogees through 5 distinct phases: - The Sink sends out its pCoawpaebr ilities in a. RequestMessage The evaluates these, and, in the request, phase selects one power level by sending a - Sour ce. AcceptMessage - The Source evaluates the request and accepts the request with an Sink. PS_RDYMessage - The Sink transitions to the new power level and then informs the by sending a. - The SPR P sPtaSrts using the new power level. - For Source operation: - the Sink starts its keep alive timer. RequestMessage the starts its request timer to send periodic s. Figure 8.5 Successful Fixed, Variable or Battery SPR Power Negotiation Source Sink : Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine Cable Capabilities detected Plug type detected 1: Send Capabilities 2: Capabilities 3: Capabilities + CRC Start CRCReceiveTimer 4: Capabilities Check MessageID against local copy Store copy of MessageID 5: Capabilities received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Capabilities sent Evaluate Capabilities Start SenderResponseTimer Detect plug type 10: Send Request 11: Request 12: Request + CRC 13: Request Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Request received 15: GoodCRC Stop SenderResponseTimer 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Request sent Evaluate Request Start SenderResponseTimer 19: Send Accept 20: Accept 21: Accept + CRC Start CRCReceiveTimer 22: Accept Check MessageID against local copy Store copy of MessageID 23: Accept received 24: GoodCRC 25: GoodCRC + CRC Stop SenderResponseTimer 26: GoodCRC Start PSTransitionTimer Reduce current Check and increment MessageIDCounter Stop CRCReceiveTimer 27: Accept sent Power supply adjusted to negotiated output Prepare for new power 28: Send PS_RDY 29: PS_RDY 30: PS_RDY + CRC Start CRCReceiveTimer 31: PS_RDY Check MessageID against local copy Store copy of MessageID 32: PS_RDY received 33: GoodCRC 34: GoodCRC + CRC 35: GoodCRC Stop PSTransitionTimer For PPS operation start Check and increment MessageIDCounter PPSRequestTimer Stop CRCReceiveTimer 36: PS_RDY sent For PPS operation start PPSTimeoutTimer New Power level Table8.32, \"Steps for a successful Power Negotiation\" Figure 8.5, \"Successful Fixed, Variable or Battery SPR Power Negotiation\" below provides a detailed explanation of what happens at each labeled step in Table8.32 Steps for a successful Power Negotiation above. Step Source Sink Cable Capabilities Section 4.4, \"Cable Type DTh ete e ction\" Policy En gorin Pelug Type are P d re ot te oc ct oe ld L i af yth erese are not already known (see Source_CapabilitiesMessage send a that represents the Protocol Layer Message PHY power supply’s present capabilities. Layer creates the and passes to. Source_CapabilitiesMessage CRCReceiveTimer CRC Message appends and sends the receives the. Starts. and checks the to verify the. Source_Capabilities Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Source_CapabilitiesMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine Source_Capabilities starts. Message Source evaluates the Section 4.4, \"Cable Type Detection\" sent by the, detects the plug tyPpreo itfo tchoisl is selects which power it would like. It tells the Request Message to form the data (e.g., ) that Protocol Layer RequestMessage represents its into a. PHY Layer creates the and passes tPoH Y Layer. CRC Request CRC receives the and Message CRCReceiveTimer Message appends a and sends the PHY Layer CRC Request. Starts. verify the. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The passes the Request information to SenderResponseTimer the. stops. Table8.32 Steps for a successful Power Negotiation Step Source Sink Protocol Layer GoodCRCMessage PHY Layer The generates a and pPaHsYs eLsa iyte tro its CRC. Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the RequestMessage Protocol. It informs the that Layer CRCReceiveTimer Policy Engine SenderResponseTimer stops the. Policy Engine RequestMessage The starts. Sink evaluates the sent by Protocol Layer Accept Message Protocol Layer Accept Message to form an. PHY Layer The forms the that is passed to the. CRCReceiveTimer Message appends and sends the. receives the and compares the Starts. it calculated with the one sent to verify the. Layer forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine Accept and then stores a copy of the new value. Message Policy Engine informs the that an SenderResponseTimer, PSTransitionTimer starts the DPM and reduces its current draw. The prepares the Power supply for transition to Protocol Layer GoodCRCMessage the new power level. PHY Layer The generates a and pPHasYs eLsa iyte tro its CRC. Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer Protocol Layer forwards the to the MessageIDCounter. The verifies and increments the and stops the Protocol Layer Policy Engine. Accept Message The informs the that an was successfully sent. Negotiated DPM Policy Engine Power supply Adjusts its Output to the Value The informs the that the power Protocol Layer PS_RDYMessage Protocol Layer PS_RDYMessage tells the to send a. PHY Layer PS_RDY Message CRC Message CRCReceiveTimer receives the and compares appends and sends the Message. Starts. PHY Layer PS_RDYMessage. Protocol Layer forwards the to the. Table8.32 Steps for a successful Power Negotiation Step Source Sink Protocol Layer MessageID Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine and then stores a copy of the new value. Policy Engine informs the that a RS_RDY has been received. The stops the SPR PPS Mode Policy Engine. SinkPPSPeriodicTimer When in the starts the Protocol Layer GoodCRCMessage. PHY Layer The generates a and pPHasYs eLsa iyte tro its CRC. Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer Protocol Layer forwards the to the MessageIDCounter. The verifies and increments the. Stops the Protocol Layer Policy Engine. PS_RDYMessage The informs the that the was successfully sent. SourcePPSCommTimer When in the starts the. Negotiated New Power Level Figure 8.6, \"Rejected Fixed, Variable or Battery SPR Power Negotiation\" Message Explicit Contract SPR Mode Negotiation illustrates an example of a flow where the request is rejected while negotiating an in. The goes through the follo- wing phSaosuesrc:e Capabilities Source_CapabilitiesMessage - The Sink sends out its pCoawpaebr ilities in a. RequestMessage The evaluates these, and, in the request, phase selects one power level by sending a - Sour ce. RejectMessage The eFvigauluraet e8s.6 th Ree rjeeqcuteedst F ainxde dr,e Vjeacrtsia tbhlee r oerq uBeasttt ewriyth S aP R Pow er Negot.iation Source Sink : Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine Cable Capabilities detected Plug type detected 1: Send Capabilities 2: Capabilities 3: Capabilities + CRC Start CRCReceiveTimer 4: Capabilities Check MessageID against local copy Store copy of MessageID 5: Capabilities received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Capabilities sent Evaluate Capabilities Start SenderResponseTimer Detect plug type 10: Send Request 11: Request 12: Request + CRC 13: Request Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Request received 15: GoodCRC Stop SenderResponseTimer 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Request sent Evaluate Request Start SenderResponseTimer 19: Send Reject 20: Reject 21: Reject + CRC Start CRCReceiveTimer 22: Reject Check MessageID against local copy Store copy of MessageID 23: Reject received 24: GoodCRC 25: GoodCRC + CRC 26: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 27: Reject sent Table8.33, \"Steps for a rejected Power Negotiation\" Figure 8.6, \"Rejected Fixed, Variable or Battery SPR Power Negotiation\" below provides a detailed explanation of what happens at each labeled step in Table8.33 Steps for a rejected Power Negotiation above. Step Source Sink Cable Capabilities Section 4.4, \"Cable Type DTh ete e ction\" Policy En gorin Pelug Type are P d re ot te oc ct oe ld L i af yth erese are not already known (see Source_CapabilitiesMessage send a that represents the Protocol Layer Message PHY power supply’s present capabilities. Layer creates the and passes to. Source_CapabilitiesMessage CRCReceiveTimer CRC Message appends and sends the receives the. Starts. and checks the to verify the. Source_Capabilities Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Source_CapabilitiesMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine Source_Capabilities starts. Message Source evaluates the Section 4.4, \"Cable Type Detection\" sent by the, detects the plug tyPpreo itfo tchoisl is selects which power it would like. It tells the Message to form the data (e.g., ) that Protocol Layer RequestMessage represents its Request into a. PHY Layer creates the and passes tPoH Y Layer. CRC Request CRC receives the and compares Message CRCReceiveTimer Message appends a and sends the PHY Layer CRC Request. Starts.. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The passes the Request information to SenderResponseTimer the. stops. Table8.33 Steps for a rejected Power Negotiation Step Source Sink Protocol Layer GoodCRCMessage PHY Layer The generates a and pPaHsYs eLsa iyte tro its CRC. Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the RequestMessage Protocol. It informs the that Layer CRCReceiveTimer Policy Engine SenderResponseTimer stops the. Policy Engine RequestMessage The starts. Sink evaluates the sent by Protocol Layer Reject Message Protocol Layer Reject Message to form a. PHY Layer The forms the that is passed to the. CRCReceiveTimer Message appends and sends the. receives the and compares the Starts. it calculated with the one sent to verify the. Layer forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine Reject and then stores a copy of the new value. informs the that a SenderResponseTimer. has been received. The stops Protocol Layer GoodCRCMessage PHY Layer The generates a and PpHasYs eLsa yite tro its CRC. Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer Protocol Layer forwards the to the MessageIDCounter. The verifies and increments the and stops the Protocol Layer Policy Engine. Reject Message The informs the that a was successfully sent. Figure 8.7, \"Wait response to Fixed, Variable or Battery SPR Power Negotiation\" Message Explicit Contract SPR Mode Negotiation illustrates an example of a flow where the request is responded to with wait while negotiating an in. The - gSooeusr ctehrough the following pChaapsaebsi:lities Source_CapabilitiesMessage - The Sink sends out its Cpaopwaebri lities in a. RequestMessage The evaluates these, and, in the request, phase selects one power level by sending a - Sour ce. WaitMessage The Figu ervea 8lu.7a tWesa tiht er eresqpuoensste a tnod F riexjeecdt,s V tahrei arebqleu eosrt Bwaitthte ar y SPR Power.Negotiation Source Sink : Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine Cable Capabilities detected Plug type detected 1: Send Capabilities 2: Capabilities 3: Capabilities + CRC Start CRCReceiveTimer 4: Capabilities Check MessageID against local copy Store copy of MessageID 5: Capabilities received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Capabilities sent Evaluate Capabilities Start SenderResponseTimer Detect plug type 10: Send Request 11: Request 12: Request + CRC 13: Request Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Request received 15: GoodCRC Stop SenderResponseTimer 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Request sent Evaluate Request Start SenderResponseTimer 19: Send Wait 20: Wait 21: Wait + CRC Start CRCReceiveTimer 22: Wait Check MessageID against local copy Store copy of MessageID 23: Wait received 24: GoodCRC 25: GoodCRC + CRC 26: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 27: Wait sent Table8.34, \"Steps for a Wait response to a Power Negotiation\" Figure 8.7, \"Wait response to Fixed, Variable or Battery SPR Power Negotiation\" below provides a detailed explanation of what happens at each labeled step in above. Table8.34 Steps for a Wait response to a Power Negotiation Step Source Sink Cable Capabilities Section 4.4, \"Cable Type DTh ete e ction\" Policy En gorin Pelug Type are P d re ot te oc ct oe ld L i af yth erese are not already known (see Source_CapabilitiesMessage send a that represents the Protocol Layer Message PHY power supply’s present capabilities. Layer creates the and passes to. Source_CapabilitiesMessage CRCReceiveTimer CRC Message appends and sends the receives the. Starts. and checks the to verify the. Source_Capabilities Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Source_CapabilitiesMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine Source_Capabilities starts. Message Source evaluates the Section 4.4, \"Cable Type Detection\" sent by the, detects the plug tyPpreo itfo tchoisl is selects which power it would like. It tells the Message to form the data (e.g., ) that Protocol Layer RequestMessage represents its Request into a. PHY Layer creates the and passes tPoH Y Layer. CRC Request CRC receives the and Message CRCReceiveTimer Message appends a and sends the PHY Layer CRC Request. Starts. verify the. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The passes the Request information to SenderResponseTimer the. stops. Table8.34 Steps for a Wait response to a Power Negotiation Step Source Sink Protocol Layer GoodCRCMessage PHY Layer The generates a and pPaHsYse Lsa ity teor its CRC. Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the RequestMessage Protocol. It informs the that Layer CRCReceiveTimer Policy Engine SenderResponseTimer stops the. Policy Engine RequestMessage The starts. Sink evaluates the sent by Protocol Layer Wait Message Protocol Layer Wait Message to form a. PHY Layer The forms the that is passed to the. CRCReceiveTimer Message appends and sends the. receives the and compares the it Starts. calculated with the one sent to verify the. Layer forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine Wait and then stores a copy of the new value. informs the that a SenderResponseTimer has been received. The stops Protocol Layer GoodCRCMessage. PHY Layer The generates a and pPHasYs eLsa iyte tro its CRC. Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer Protocol Layer forwards the to the MessageIDCounter. The verifies and increments the and stops the Protocol Layer Policy Engine. Wait Message The informs the that a was successfully sent. SPR PPS Explicit Contract SPR PPS APDO Figure 8.8, \"SPR PPS Keep Alive\" Message This is an example of keep alive operation during an with as the. shows the s as they flow across the bus and within the devices to accomplish the keep alive. Figure 8.8 SPR PPS Keep Alive Source Sink : Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine PPSRequestTimer Timeout 1: Send Request 2: Request 3: Request + CRC 4: Request Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Request received 6: GoodCRC 7: GoodCRC + CRC Stop SenderResponseTimer 8: GoodCRC Stop PPSCommTimer Check and increment MessageIDCounter Stop CRCReceiveTimer Evaluate Request 9: Request sent Start SenderResponseTimer Stop PPSRequestTimer 10: Send Accept 11: Accept 12: Accept + CRC Start CRCReceiveTimer 13: Accept Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Start PSTransitionTimer Reduce current Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Accept sent Power supply adjusted to negotiated output Send Ping if required to maintain activity Prepare for new power 19: Send PS_RDY 20: PS_RDY 21: PS_RDY + CRC Start CRCReceiveTimer 22: PS_RDY Check MessageID against local copy Store copy of MessageID 23: PS_RDY received 24: GoodCRC 25: GoodCRC + CRC 26: GoodCRC Stop PSTransitionTimer Start PPSRequestTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 27: PS_RDY sent Start PPSCommTimer New Power level Table8.35, \"Steps for SPR PPS Keep Alive\" Figure 8.8, \"SPR PPS Keep Alive\" below provides a detailed explanation of what happens at each labeled step in Tab alebo8v.3e5. Steps for SPR PPS Keep Alive Step Source Sink SinkPPSPeriodicTimer Policy Engine Policy Engine Protocol Layer The times out in the RequestMessage. The tells the to Protocol Layer RequestMessage PHY Layer The creates the and PHY Layer RequestMessage pPaHsYse Lsa ity teor.CRC Request CRC receives the and Message CRCReceiveTimer Message appends a and sends the PHY Layer CRC Request. Starts. verify the. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The passes the Request information to SourcePPSCommTimer. the. stops the Protocol Layer GoodCRCMessage PHY Layer The generates a and PpHasYs eLsa yite tro its CRC. GoodCRC CRC Message receives the and appends and sends the Message. PHY Layer GoodCRCMessage the. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the RequestMessage Protocol. It informs the that Layer CRCReceiveTimer Policy Engine SenderResponseTimer stops the. Policy Engine DPM The starts. RequestMessage Sink requests the to evaluate the Source Policy Engine sent by the and decides if the can meet the request. The tells Protocol Layer Accept Message the to form an. PHY Layer The forms the that is pPaHsYs eLda yteor the CRC. AcceptMessage CRC CRCReceiveTimer receives the and compares appends and sends the. Message Starts. PHY Layer AcceptMessage Protocol. Layer forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine Accept and then stores a copy of the new value. Message Policy Engine informs the that an SenderResponseTimer PSTransitionTimer, starts the DPM and reduces its current draw. The prepares the Power supply for transition to the new power level. Table8.35 Steps for SPR PPS Keep Alive Step Source Sink Protocol Layer GoodCRCMessage PHY Layer The generates a and pPHasYs eLsa iyte tro its CRC. GoodCRC CRC receives the and Message Message appends and sends the PHY Layer GoodCRC Message. verify the. Protocol Layer Protocol Layer forwards the to the MessageIDCounter. The verifies and increments the and stops the Protocol Layer Policy Engine. Accept Message The informs the that an was successfully sent. Negotiated DPM Policy Engine Power supply Adjusts its Output to the Value The informs the that the power Protocol Layer PS_RDYMessage Protocol Layer PS_RDYMessage tells the to send a. PHY Layer PS_RDY Message CRC CRCReceiveTimer receives the and compares appends and sends the. Message Starts. PHY Layer PS_RDYMessage Protocol. Layer forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine and then stores a copy of the new value. Policy Engine informs the that a RS_RDY has been received. The stops the SPR PPS Mode Policy Engine. SinkPPSPeriodicTimer When in the starts the Protocol Layer GoodCRCMessage. PHY Layer The generates a and pPHasYs eLsa iyte tro its CRC. GoodCRC CRC receives the and Message Message appends and sends the PHY Layer GoodCRCMessage. verify the. Protocol Layer Protocol Layer forwards the to the MessageIDCounter. The verifies and increments the. Stops the Protocol Layer Policy Engine. PS_RDYMessage The informs the that the was successfully sent. SourcePPSCommTimer When in the starts the. Sink Explicit Contract Figure 8.9, \"SPR Sink Makes Request (Accept)\" Message This is an example of SPR when a makes a Request which is Accepted during an. shows the s as they flow across the bus and within the devices to accomplish the keep alive. Figure 8.9 SPR Sink Makes Request (Accept) Source Sink : Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine 1: Send Request 2: Request 3: Request + CRC 4: Request Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Request received 6: GoodCRC 7: GoodCRC + CRC Stop SenderResponseTimer 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Evaluate Request 9: Request sent Start SenderResponseTimer 10: Send Accept 11: Accept 12: Accept + CRC Start CRCReceiveTimer 13: Accept Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Start PSTransitionTimer Reduce current Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Accept sent Power supply adjusted to negotiated output Prepare for new power 19: Send PS_RDY 20: PS_RDY 21: PS_RDY + CRC Start CRCReceiveTimer 22: PS_RDY Check MessageID against local copy Store copy of MessageID 23: PS_RDY received 24: GoodCRC 25: GoodCRC + CRC 26: GoodCRC Stop PSTransitionTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 27: PS_RDY sent New Power level Table8.36, \"Steps for SPR Sink Makes Request (Accept)\" Figure 8.9, \"SPR Sink Makes Request (Accept)\" below provides a detailed explanation of what happens at each labeled step in Table8.36 Steps for SPR Sink Make as bRoevqeu. est (Accept) Step Source Sink DPM Policy Engine Policy Engine Protocol Layer tells the to request a different RequestMessage power level. The tells the Protocol Layer RequestMessage PHY Layer The creates the and PHY Layer RequestMessage pPHasYs eLsa iyte tro C.RC Request CRC receives the and compares Message CRCReceiveTimer Message appends a and sends the PHY Layer CRC Request. Starts.. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine The passes the Request information to Protocol Layer GoodCRCMessage the. PHY Layer The generates a and pPaHsYse Lsa ity teor its CRC. GoodCRC CRC Message receives the and compares appends and sends the Message. PHY Layer GoodCRCMessage. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the RequestMessage Protocol. It informs the that Layer CRCReceiveTimer Policy Engine SenderResponseTimer stops the. Policy Engine DPM The starts. RequestMessage Sink requests the to evaluate the Source Policy Engine sent by the and decides if the can meet the request. The tells Protocol Layer Accept Message the to form an. PHY Layer The forms the that is pPaHsYse Lda tyoe trhe CRC. AcceptMessage CRC CRCReceiveTimer receives the and compares appends and sends the. Message Starts. PHY Layer AcceptMessage Protocol. Layer forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine Accept and then stores a copy of the new value. Message Policy Engine informs the that an SenderResponseTimer PSTransitionTimer, starts the DPM and reduces its current draw. The prepares the Power supply for transition to the new power level. Table8.36 Steps for SPR Sink Makes Request (Accept) Step Source Sink Protocol Layer GoodCRCMessage PHY Layer The generates a and pPaHsYse Lsa ity teor its CRC. GoodCRC CRC receives the and Message Message appends and sends the PHY Layer GoodCRC Message. verify the. Protocol Layer Protocol Layer forwards the to the MessageIDCounter. The verifies and increments the and stops the Protocol Layer Policy Engine. Accept Message The informs the that an was successfully sent. Negotiated DPM Policy Engine Power supply Adjusts its Output to the Value The informs the that the power Protocol Layer PS_RDYMessage Protocol Layer PS_RDYMessage tells the to send a. PHY Layer PS_RDY Message CRC Message CRCReceiveTimer receives the and compares appends and sends the Message. Starts. PHY Layer PS_RDYMessage Protocol. Layer forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine and then stores a copy of the new value. informs the that a RS_RDY PSTransitionTimer has been received. The stops the Protocol Layer GoodCRCMessage. PHY Layer The generates a and pPHasYs eLsa iyte tro its CRC. GoodCRC CRC receives the and Message Message appends and sends the PHY Layer GoodCRCMessage. verify the. Protocol Layer Protocol Layer forwards the to the MessageIDCounter. The verifies and increments the. Stops the Protocol Layer Policy Engine. PS_RDYMessage The informs the that the was successfully sent. Negotiated New Power Level Sink Explicit Contract Figure 8.10, \"SPR Sink Makes Request (Reject)\" Message This is an example of SPR when a makes a Request which is Rejected during an. shows the s as they flow across the bus and within the devices to accomplish the keep alive. Figure 8.10 SPR Sink Makes Request (Reject) Source Sink : Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine 1: Send Request 2: Request 3: Request + CRC 4: Request Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Request received 6: GoodCRC 7: GoodCRC + CRC Stop SenderResponseTimer 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Evaluate Request 9: Request sent Start SenderResponseTimer 10: Send Reject 11: Reject 12: Reject + CRC Start CRCReceiveTimer 13: Reject Check MessageID against local copy Store copy of MessageID 14: Reject received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Reject sent Table8.37, \"Steps for SPR Sink Makes Request (Reject)\" Figure 8.10, \"SPR Sink Makes Request (Reject)\" below provides a detailed explanation of what happens at each labeled step in Table8.37 Steps for SPR Sink Make sa bRoevqeu.est (Reject) Step Source Sink DPM Policy Engine Policy Engine Protocol Layer tells the to request a different RequestMessage power level. The tells the Protocol Layer RequestMessage PHY Layer The creates the and PHY Layer RequestMessage pPaHsYse Lsa ity teor.CRC Request CRC receives the and Message CRCReceiveTimer Message appends a and sends the PHY Layer CRC Request. Starts. verify the. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine The passes the Request information to Protocol Layer GoodCRCMessage the. PHY Layer The generates a and pPaHsYs eLsa iyte tro its CRC. GoodCRC CRC Message receives the and appends and sends the Message. PHY Layer GoodCRCMessage the. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the RequestMessage Protocol. It informs the that Layer CRCReceiveTimer. Policy Engine SenderResponseTimer stops the Policy Engine DPM The starts. RequestMessage Sink requests the to evaluate the Source Policy Engine sent by the and decides that the can’t meet the request. The tells Protocol Layer Reject Message the to form a. PHY Layer The forms the that is pPaHsYs eLda ytoer the CRC. Reject Message CRC CRCReceiveTimer receives the and compares appends and sends the. Message Starts. PHY Layer Reject Message Protocol. Layer forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine Reject and then stores a copy of the new value. informs the that an DPM has been received. The informs Protocol Layer GoodCRCMessage the that the Request has been rejected. PHY Layer The generates a and passes it to its. Table8.37 Steps for SPR Sink Makes Request (Reject) Step Source Sink PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC receives the and Message Message appends and sends the PHY Layer GoodCRC Message. verify the. Protocol Layer Protocol Layer forwards the to the MessageIDCounter. The verifies and increments the and stops the Protocol Layer Policy Engine. Reject Message The informs the that a was successfully sent. Sink WaitMessage Explicit Contract Figure 8.11, \"SPR Sink Makes Request (Wait)\" Message This is an example of SPR when a makes a Request which is responded to with a during an. shows the s as they flow across the bus and within the devices to accomplish tFhieg ukreee p8.a1li1v eS.PR Sink Makes Request (Wait) Source Sink : Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine 1: Send Request 2: Request 3: Request + CRC 4: Request Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Request received 6: GoodCRC 7: GoodCRC + CRC Stop SenderResponseTimer 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Evaluate Request 9: Request sent Start SenderResponseTimer 10: Send Wait 11: Wait 12: Wait + CRC Start CRCReceiveTimer 13: Wait Check MessageID against local copy Store copy of MessageID 14: Wait received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Wait sent Table8.38, \"Steps for SPR Sink Makes Request (Wait)\" Figure 8.11, \"SPR Sink Makes Request (Wait)\" below provides a detailed explanation of what happens at each labeled step in Table8.38 Steps for SPR Sink Mak aebso Rvee.quest (Wait) Step Source Sink DPM Policy Engine Policy Engine Protocol Layer tells the to request a different RequestMessage power level. The tells the Protocol Layer RequestMessage PHY Layer The creates the and PHY Layer RequestMessage pPHasYs eLsa iyte tro CR.C Request CRC receives the and compares Message CRCReceiveTimer Message appends a and sends the PHY Layer CRC Request. Starts.. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine The passes the Request information to Protocol Layer GoodCRCMessage the. PHY Layer The generates a and PpHasYs eLsa yite tro its CRC. GoodCRC CRC Message receives the and appends and sends the Message. PHY Layer GoodCRCMessage the. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the RequestMessage Protocol. It informs the that Layer CRCReceiveTimer Policy Engine SenderResponseTimer stops the. Policy Engine DPM The starts. RequestMessage Sink requests the to evaluate the Source Policy Engine sent by the and decides if the can meet the request. The tells Protocol Layer WaitMessage the to form a. PHY Layer The forms the that is pPaHsYs eLda ytoer the CRC. WaitMessage CRC CRCReceiveTimer receives the and compares appends and sends the. Message Starts. PHY Layer WaitMessage Protocol. Layer forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine Wait and then stores a copy of the new value. informs the that an DPM has been received. The informs Protocol Layer GoodCRCMessage the that the Request has been rejected. PHY Layer The generates a and passes it to its. Table8.38 Steps for SPR Sink Makes Request (Wait) Step Source Sink PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC receives the and Message Message appends and sends the PHY Layer GoodCRC Message. verify the. Protocol Layer Protocol Layer forwards the to the MessageIDCounter. The verifies and increments the and stops the Protocol Layer Policy Engine. WaitMessage The informs the that a was successfully sent. EPR Mode Sink EPR Mode Figure 8.12, \"Entering EPR Mode (Success)\" Message This is an example of an Enter operation where the requests when this process succeeds. shows the s as they flow across the bus and within the devices to accomplish the Enter EPR procesFsi.gure 8.12 Entering EPR Mode (Success) Sink Source : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send EPR_Mode (Enter) 2: EPR_Mode (Enter) 3: EPR_Mode (Enter) + CRC Start CRCReceiveTimer 4: EPR_Mode (Enter) 5: EPR_Mode (Enter) received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: EPR_Mode (Enter) sent Start SinkEPREnterTimer Start SenderResponseTimer 10: Send EPR_Mode (Enter Acknowledged) 11: EPR_Mode (Enter Acknowledged) 12: EPR_Mode (Enter Acknowledged) + CRC Start CRCReceiveTimer 13: EPR_Mode (Enter Acknowledged) Store copy of MessageID 14: EPR_Mode (Enter Acknowledged) received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: EPR_Mode (Enter Acknowledged) sent 19: Optional VCONN Swap Process – Source becomes VCONN Source 20: Source reads Cable E-Marker to determine EPR capability – Cable is EPR Capable 21: Send EPR_Mode (Enter Succeeded) 22: EPR_Mode (Enter Succeeded) 23: EPR_Mode (Enter Succeeded) + CRC Start CRCReceiveTimer 24: EPR_Mode (Enter Succeeded) Store copy of MessageID 25: EPR_Mode (Enter Succeeded) received 26: GoodCRC 27: GoodCRC + CRC 28: GoodCRC Stop SinkEPREnterTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 29: EPR_Mode (Enter Succeeded) sent EPR Mode entered Table8.39, \"Steps for Entering EPR Mode (Success)\" Figure 8.12, \"Entering EPR Mode (Success)\" below provides a detailed explanation of what happens at each labeled step in Table8.39 Steps for Enter ainbgo vEeP. R Mode (Success) Step Sink Source Policy Engine Protocol Layer EPR_Mode Message The directs the to EPR Mode Protocol Layer Message PHY entry to. Layer creates the and passes to PHY L.ayer CRC EPR_Mode CRC Message CRCReceiveTimer receives the (Enter) and appends and sends the Message (Enter). Starts. PHY Layer CRC EPR_Mode the. Message Protocol Layer removes the and forwards the (Enter) to the. Message checks the in the incoming is different from the previously stored value Protocol Layer EPR_Mode and then stores a copy of the new value. The forwards the received (Enter) information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. Message Message receives the and checks the to appends and sends the verify the.. GoodCRC Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. EPR_Mode Source_CapabilitiesMessage informs the that the (Enter) was SenderResponseTimer SinkEPREnterTimer successfully sent. The starts the Policy Engine EPR_Mode Message and the. Sink Protocol Layer evaluates the (Enter) EPR_Mode Message Protocol Layer EPR_Mode (Enter Acknowledged). Message PHY Layer creates the (Enter Acknowledged) and passes to. Message CRC Message receives the (Enter appends a and sends the Message CRCReceiveTimer PHY Layer CRC calculated with the one sent to verify the.. EPR_Mode Message removes the and forwards the Protocol Layer Protocol Layer MessageID. Message checks the in the incoming is different from the previously stored value Protocol Layer EPR_Mode and then stores a copy of the new value. The passes the (Enter Policy Engine SenderResponseTimer Acknowledged) information to the. The Protocol Layer GoodCRCMessage stops the. PHY Layer The generates a and passes it to its. Table8.39 Steps for Entering EPR Mode (Success) Step Sink Source PHY Layer Message CRC PHY Layer CRC Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the EPR_Mode Message. It informs the that Protocol Layer CRCReceiveTimer successfully sent. The stops the Source VCONN Source Source VCONN Swap. Section 8.3.2.10, \"VCONN Swap\" If the is not the the initiates the process as described in. Section 8.3.2.14.1, \"Discover Identity\" The performs to determine whether the cable supports EPR. The process is described in. Source VCONN Source Sink EPR Capable The is now the and has determined Policy Engine Protocol Layer that the and the cable are. The tells the to form a Protocol Layer EPR_Mode (Enter Succeeded). Message PHY Layer creates the (Enter Succeeded) PHY Lay aenrd passes to CRC. EPR_Mode Message CRC receives the (Enter Succeeded) Message CRCReceiveTimer Message appends a and sends the PHY Layer CRC (Enter Succeeded). Starts. sent to verify the. EPR_Mode Message Protocol removes the and forwards the Layer Protocol Layer MessageID. Message checks the in the incoming is different from the previously stored value Protocol Layer EPR_Mode and then stores a copy of the new value. The passes the (Enter Policy Engine SinkEPREnterTimer Succeeded) information to the. The Protocol Layer GoodCRCMessage stops the. PHY Layer The generates a and PpHasYs eLsa yite tro its CRC. Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the EPR_Mode Message. It informs the that Protocol Layer CRCReceiveTimer successfully sent. The stops the EPR Mode. Entered EPR Mode Sink EPR Mode Figure 8.13, \"Entering EPR Mode (Failure due to non-EPR cable)\" TMheisss aisg aen example of an Enter operation where the requests when this process fails due to the cable not being capable of EPR. shows the s as they flow aFcirgoussr eth 8e. 1b3u sE anntedr winitgh EinP tRh eM doedveic (eFsa tiolu arcec odmuep ltiosh n tohne- EEnPtRe rc EabPRle )process. Sink Source : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send EPR_Mode (Enter) 2: EPR_Mode (Enter) 3: EPR_Mode (Enter) + CRC Start CRCReceiveTimer 4: EPR_Mode (Enter) 5: EPR_Mode (Enter) received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: EPR_Mode (Enter) sent Start SinkEPREnterTimer Start SenderResponseTimer 10: Send EPR_Mode (Enter Acknowledged) 11: EPR_Mode (Enter Acknowledged) 12: EPR_Mode (Enter Acknowledged) + CRC Start CRCReceiveTimer 13: EPR_Mode (Enter Acknowledged) Store copy of MessageID 14: EPR_Mode (Enter Acknowledged) received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: EPR_Mode (Enter Acknowledged) sent 19: Optional VCONN Swap Process – Source becomes VCONN Source 20: Source reads Cable E-Marker to determine EPR capability – Cable is not EPR Capable 21: Send EPR_Mode (Enter Failed) 22: EPR_Mode (Enter Failed) 23: EPR_Mode (Enter Failed) + CRC Start CRCReceiveTimer 24: EPR_Mode (Enter Failed) Store copy of MessageID 25: EPR_Mode (Enter Failed) received 26: GoodCRC 27: GoodCRC + CRC 28: GoodCRC Stop SinkEPREnterTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 29: EPR_Mode (Enter Failed) sent EPR Mode is not entered. Sink Initiates Soft Reset. Table8.40, \"Steps for Entering EPR Mode (Failure due to non-EPR cable)\" Figure 8.13, \"Entering EPR Mode (Failure due to non-EPR cable)\" below provides a detailed explanation of what happens at eaTcahb llaeb8e.l4ed0 s Stetepp ins for Entering EPR Mode (Failure due to non-EPR cable) above. Step Sink Source Policy Engine Protocol Layer EPR_Mode Message The directs the to EPR Mode Protocol Layer Message PHY entry to. Layer creates the and passes to PHY L.ayer CRC EPR_Mode CRC Message CRCReceiveTimer receives the (Enter) and appends and sends the Message (Enter). Starts. PHY Layer CRC EPR_Mode the. Message Protocol Layer removes the and forwards the (Enter) to the. Message checks the in the incoming is different from the previously stored value Protocol Layer EPR_Mode and then stores a copy of the new value. The forwards the received (Enter) information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. Message Message receives the and checks the to appends and sends the verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. EPR_Mode Message informs the that the (Enter) was successfully sent. The SinkEPREnterTimer starts the and Policy Engine EPR_Mode Message the. Sink Protocol Layer evaluates the (Enter) EPR_Mode Message Protocol Layer EPR_Mode (Enter Acknowledged). Message PHY Layer creates the (Enter Acknowledged) and passes to. Message CRC Message receives the (Enter appends a and sends the Message CRCReceiveTimer PHY Layer CRC calculated with the one sent to verify the.. EPR_Mode Message removes the and forwards the Protocol Layer Protocol Layer MessageID. Message checks the in the incoming is different from the previously stored value Protocol Layer EPR_Mode and then stores a copy of the new value. The passes the (Enter Policy Engine SenderResponseTimer. Acknowledged) information to the. The Protocol Layer GoodCRCMessage stops the PHY Layer The generates a and passes it to its. Table8.40 Steps for Entering EPR Mode (Failure due to non-EPR cable) Step Sink Source PHY Layer Message CRC PHY Layer CRC Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the EPR_Mode Message. It informs the that Protocol Layer CRCReceiveTimer successfully sent. The stops the Source VCONN Source Source VCONN Swap. Section 8.3.2.10, \"VCONN Swap\" If the is not the the initiates the process as described in. Cable Discovery Section 8.3.2.14.1, \"Discover Identity\" The performs to determine whether the cable supports EPR; cable is not. The process is described in. Section 6T.h4e.1 0, \"EPR d_Metoedrme Mineesss athgaet\" there has been a failure or incompatibility during the EPR process (see Policy Engine Protocol Layer EPR_Mode Message The tells the to form a Protocol Layer EPR_Mode (Enter Failed). Message PHY Layer creates the (Enter Failed) PHY Lay aenrd passes to CRC. EPR_Mode Message CRC receives the (Enter Failed) Message CRCReceiveTimer Message appends a and sends the PHY Layer CRC (Enter Failed). Starts. sent to verify the. EPR_Mode Message Protocol Layer removes the and forwards the (Enter Failed) to the. Message checks the in the incoming is different from the previously stored value Protocol Layer EPR_Mode and then stores a copy of the new value. The passes the (Enter Failed) SinkEPREnterTimer information to the. The Protocol Layer GoodCRCMessage stops the. PHY Layer The generates a and pPaHsYs eLsa iyte tro its CRC. Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the EPR_Mode Message. It informs the that the (Enter Failed) was successfully EPR Mode Sinksent. TheS oft Reset stops the. is not entered. Initiates EPR Mode Sink EPR Mode VCONN Swap Figure 8.14, \"Entering EPR Mode (Failure of VCONN Swap)\" MTheisss aisg aen example of an Enter operation where the requests when this process fails due to a failure of the process. shows the s as they flow acrosFsi gthuer eb u8s.1 a4n dE nwtietrhiinng t hEeP dRe Mviocedse t (oF aacicluormep olifs Vh CtOhNeN E Snwtear pE)PR process. Sink Source : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send EPR_Mode (Enter) 2: EPR_Mode (Enter) 3: EPR_Mode (Enter) + CRC Start CRCReceiveTimer 4: EPR_Mode (Enter) 5: EPR_Mode (Enter) received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: EPR_Mode (Enter) sent Start SinkEPREnterTimer Start SenderResponseTimer 10: Send EPR_Mode (Enter Acknowledged) 11: EPR_Mode (Enter Acknowledged) 12: EPR_Mode (Enter Acknowledged) + CRC Start CRCReceiveTimer 13: EPR_Mode (Enter Acknowledged) Store copy of MessageID 14: EPR_Mode (Enter Acknowledged) received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: EPR_Mode (Enter Acknowledged) sent 19: Optional VCONN Swap Process – Source fails to become VCONN Source 20: Send EPR_Mode (Enter Failed) 21: EPR_Mode (Enter Failed) 22: EPR_Mode (Enter Failed) + CRC Start CRCReceiveTimer 23: EPR_Mode (Enter Failed) Store copy of MessageID 24: EPR_Mode (Enter Failed) received 25: GoodCRC 26: GoodCRC + CRC 27: GoodCRC Stop SinkEPREnterTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 28: EPR_Mode (Enter Failed) sent EPR Mode is not entered. Sink Initiates Soft Reset. Table8.41, \"Steps for Entering EPR Mode (Failure of VCONN Swap)\" Figure 8.14, \"Entering EPR Mode (Failure of VCONN Swap)\" below provides a detailed explanation of what happens at each labeleTda sbtelep 8in.4 1 Steps for Entering EPR Mode (Failure of VCONN Swa pa)bove. Step Sink Source Policy Engine Protocol Layer EPR_Mode Message The directs the to EPR Mode Protocol Layer Message PHY entry to. Layer creates the and passes to PHY L.ayer CRC EPR_Mode CRC Message CRCReceiveTimer receives the (Enter) and appends and sends the Message (Enter). Starts. PHY Layer CRC EPR_Mode the. Message Protocol Layer removes the and forwards the (Enter) to the. Message checks the in the incoming is different from the previously stored value Protocol Layer EPR_Mode and then stores a copy of the new value. The forwards the received (Enter) information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. Message Message receives the and checks the to appends and sends the verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. EPR_Mode Message informs the that the (Enter) was successfully sent. The SinkEPREnterTimer starts the and Policy Engine EPR_Mode Message the. Sink Protocol Layer evaluates the (Enter) EPR_Mode Message Protocol Layer EPR_Mode (Enter Acknowledged). Message PHY Layer creates the (Enter Acknowledged) and passes to. Message CRC Message receives the (Enter appends a and sends the Message CRCReceiveTimer PHY Layer CRC calculated with the one sent to verify the.. EPR_Mode Message removes the and forwards the Protocol Layer Protocol Layer MessageID. Message checks the in the incoming is different from the previously stored value Protocol Layer EPR_Mode and then stores a copy of the new value. The passes the (Enter Policy Engine SenderResponseTimer Acknowledged) information to the. The Protocol Layer GoodCRCMessage stops the. PHY Layer The generates a and passes it to its. Table8.41 Steps for Entering EPR Mode (Failure of VCONN Swap) Step Sink Source PHY Layer Message CRC PHY Layer CRC Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the EPR_Mode Message. It informs the that Protocol Layer CRCReceiveTimer successfully sent. The stops the Source VCONN Source Source VCONN Swap. Section 8.3.2.10, \"VCONN Swap\" VCONN Swap If the is not the the initiates the process as described in. In this case the process fails. Section 6T.h4e.1 0, \"EPR d_Metoedrme Mineesss athgaet\" there has been a failure or incompatibility during the EPR process (see Policy Engine Protocol Layer EPR_Mode Message The tells the to form a Protocol Layer EPR_Mode (Enter Failed). Message PHY Layer creates the (Enter Failed) PHY Lay aenrd passes to CRC. EPR_Mode Message CRC receives the (Enter Failed) Message CRCReceiveTimer Message appends a and sends the PHY Layer CRC (Enter Failed). Starts. sent to verify the. EPR_Mode Message Protocol Layer removes the and forwards the (Enter Failed) to the. Message checks the in the incoming is different from the previously stored value Protocol Layer EPR_Mode and then stores a copy of the new value. The passes the (Enter Failed) SinkEPREnterTimer information to the. The Protocol Layer GoodCRCMessage stops the. PHY Layer The generates a and pPaHsYs eLsa iyte tro its CRC. Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the EPR_Mode Message. It informs the that the (Enter Failed) was successfully EPR Mode Sinksent. TheS oft Reset stops the. is not entered. Initiates Figure 8.15, \"Successful Fixed EPR Power Negotiation\" Message Explicit Contract EPR Mode Negotiation illustrates an example of a successful flow while neg- otiating aSno urce in Capab. iTlihteie s EPR_ Sgoouers cteh_rCoaupgahb sielivteieraslM deisstsiangcet phases: - The Sink sends out its pCoawpearb ilities in an. EPR_RequestMessage The evaluates these and, in the request phase, selects one power level by sending an - Source. AcceptMessage - The Source evaluates the request and accepts the request with an Sink. PS_RDYMessage - The Sink transitions to the new power level and then informs the by sending a. - TheS ourc estarts using the new power level. - the Sink starts its keep alive timer EPR_KeepAliveMessage the starts its request timer to send periodic s Figure 8.15 Successful Fixed EPR Power Negotiation Source Sink : Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine Cable EPR_Source_Capabilities detected 1: Send EPR_Source_Capabilities 2: EPR_Source_Capabilities 3: EPR_Source_Capabilities + CRC Start CRCReceiveTimer 4: EPR_Source_Capabilities Check MessageID against local copy Store copy of MessageID 5: EPR_Source_Capabilities received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: EPR_Source_Capabilities sent Start SenderResponseTimer Evaluate EPR Capabilities 10: Send EPR_Request 11: EPR_Request 12: EPR_Request + CRC 13: EPR_Request Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: EPR_Request received 15: GoodCRC Stop SenderResponseTimer 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: EPR_Request sent Evaluate EPR Request Start SenderResponseTimer 19: Send Accept 20: Accept 21: Accept + CRC Start CRCReceiveTimer 22: Accept Check MessageID against local copy Store copy of MessageID 23: Accept received 24: GoodCRC 25: GoodCRC + CRC Stop SenderResponseTimer 26: GoodCRC Start PSTransitionTimer Reduce current Check and increment MessageIDCounter Stop CRCReceiveTimer 27: Accept sent Power supply adjusted to negotiated output Prepare for new power 28: Send PS_RDY 29: PS_RDY 30: PS_RDY + CRC Start CRCReceiveTimer 31: PS_RDY Check MessageID against local copy Store copy of MessageID 32: PS_RDY received 33: GoodCRC 34: GoodCRC + CRC 35: GoodCRC Stop PSTransitionTimer Check and increment MessageIDCounter Start SinkEPRKeepAliveTimer Stop CRCReceiveTimer 36: PS_RDY sent Start SourceEPRKeepAliveTimer New Power level Table8.42, \"Steps for a successful EPR Power Negotiation\" Figure 8.15, \"Successful Fixed EPR Power Negotiation\" below provides a detailed explanation of what happens at each labeled step in Table8.42 Steps for a successful EPR Power N eagbootviea.tion Step Source Sink Cable Capabilities Section 4.4, \"Cable Type Detection\" PThoeli cy Engine are d Pe rote tc ot ce od l Lif a t yh ee rse are not already known (see ). EPR_Source_CapabilitiesMessage that represents the Protocol Layer Message PHY power supply’s present capabilities. Layer creates the and passes to. Source_CapabilitiesMessage CRCReceiveTimer Message CRC Message appends and sends the receives the. Starts. and checks the to verify the. EPR_Source_CapabilitiesMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. EPR_Source_CapabilitiesMessage Policy Engine SenderResponseTimer was successfully Policy Engine EPR_Source_Capabilities sent. starts. Message Source evaluates the Protocol Layer sent by the and selects which power it Power Data Object Message (e.g., ) that represents its Request into Protocol Layer EPR_RequestMessage a. PHY Layer creates the and pPaHsYse Lsa toye r. CRC EPR_Request CRC receives the and Message CRCReceiveTimer Message appends a and sends the PHY Layer CRC. Starts. verify the. EPR_RequestMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The passes the Request information to SenderResponseTimer the. stops Protocol Layer GoodCRCMessage. PHY Layer The generates a and passes it to its. Table8.42 Steps for a successful EPR Power Negotiation Step Source Sink PHY Layer Message CRC PHY Layer CRC Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the EPR_RequestMessage. It informs the that Protocol Layer CRCReceiveTimer Policy Engine SenderResponseTimer stops the. Policy Engine EPR_RequestMessage The starts. Sink evaluates the Protocol Layer AcceptMessage Protocol Layer AcceptMessage tells the to form an. PHY Layer The forms the that is passed to the. CRCReceiveTimer Message appends and sends the. receives the and compares the Starts. it calculated with the one sent to verify the. Layer forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine Accept and then stores a copy of the new value. Message Policy Engine informs the that an SenderResponseTimer PSTransitionTimer, starts the DPM and reduces its current draw. The prepares the Power supply for transition to Protocol Layer GoodCRCMessage the new power level. PHY Layer The generates a and pPaHsYse Lsa ity teor its CRC. Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer Protocol Layer forwards the to the MessageIDCounter. The verifies and increments the and stops the Protocol Layer Policy Engine. AcceptMessage The informs the that an was successfully sent. Negotiated DPM Policy Engine Power supply Adjusts its Output to the Value The informs the that the power Protocol Layer PS_RDYMessage Protocol Layer PS_RDYMessage tells the to send a. PHY Layer PS_RDYMessage CRC CRCReceiveTimer receives the and compares appends and sends the. Message Starts. PHY Layer PS_RDYMessage. Protocol Layer forwards the to the. Table8.42 Steps for a successful EPR Power Negotiation Step Source Sink Protocol Layer MessageID Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine and then stores a copy of the new value. Policy Engine PSTransitionTimer has been received. The stops the Policy Engine SinkEPRKeepAliveTimer. Protocol Layer GoodCRCMessage The starts the. PHY Layer The generates a and pPHasYs eLsa iyte tro its CRC. Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer Protocol Layer forwards the to the MessageIDCounter. The verifies and increments the. Stops the Protocol Layer Policy Engine. PS_RDYMessage The informs the that the was successfully sent. SourceEPRKeepAliveTimer When in EPR operation the starts the. Figure 8.16, \"Rejected Fixed EPR Power Negotiation\" Message Explicit Contract EPR Mode Negotiation illustrates an example of a flow where the request is reje- cted whiSleo unrecgeotiating an Capabil iitni es EP.R T_hSeo urce_Capab iglioteies sthMreosusgahg eseveral distinct phases: - The Sink sends out its pCoawpearb ilities in an. EPR_RequestMessage The evaluates these and, in the request phase, selects one power level by sending an - Source. RejectMessage The evaluates tFhieg ruerqeu 8es.1t 6a nRde ajecccteepdts F tihxee dre EqPuRes Pt wowitehr a N egotia tion. Source Sink : Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine Cable EPR_Source_Capabilities detected 1: Send EPR_Source_Capabilities 2: EPR_Source_Capabilities 3: EPR_Source_Capabilities + CRC Start CRCReceiveTimer 4: EPR_Source_Capabilities Check MessageID against local copy Store copy of MessageID 5: EPR_Source_Capabilities received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: EPR_Source_Capabilities sent Start SenderResponseTimer Evaluate EPR Capabilities 10: Send EPR_Request 11: EPR_Request 12: EPR_Request + CRC 13: EPR_Request Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: EPR_Request received 15: GoodCRC Stop SenderResponseTimer 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: EPR_Request sent Evaluate EPR Request Start SenderResponseTimer 19: Send Reject 20: Reject 21: Reject + CRC Start CRCReceiveTimer 22: Reject Check MessageID against local copy Store copy of MessageID 23: Reject received 24: GoodCRC 25: GoodCRC + CRC Stop SenderResponseTimer 26: GoodCRC Start PSTransitionTimer Reduce current Check and increment MessageIDCounter Stop CRCReceiveTimer 27: Reject sent Table8.43, \"Steps for a Rejected EPR Power Negotiation\" Figure 8.16, \"Rejected Fixed EPR Power Negotiation\" below provides a detailed explanation of what happens at each labeled step in Table8.43 Steps for a Rejected EPR Powe ra bNoevgeo.tiation Step Source Sink Cable Capabilities Section 4.4, \"Cable Type Detection\" PThoeli cy Engine are d Pe rote tc ot ce od l Lif a t yh ee rse are not already known (see ). EPR_Source_CapabilitiesMessage that represents the Protocol Layer Message PHY power supply’s present capabilities. Layer creates the and passes to. Source_CapabilitiesMessage CRCReceiveTimer Message CRC Message appends and sends the receives the. Starts. and checks the to verify the. EPR_Source_CapabilitiesMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. EPR_Source_CapabilitiesMessage Policy Engine SenderResponseTimer was successfully Policy Engine EPR_Source_Capabilities sent. starts. Message Source evaluates the Protocol Layer sent by the and selects which power it Power Data Object Message (e.g., ) that represents its Request into Protocol Layer EPR_RequestMessage a. PHY Layer creates the and pPaHsYse Lsa toye r. CRC EPR_Request CRC receives the and Message CRCReceiveTimer Message appends a and sends the PHY Layer CRC. Starts. verify the. EPR_RequestMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The passes the Request information to SenderResponseTimer the. stops Protocol Layer GoodCRCMessage. PHY Layer The generates a and passes it to its. Table8.43 Steps for a Rejected EPR Power Negotiation Step Source Sink PHY Layer Message CRC PHY Layer CRC Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the EPR_RequestMessage. It informs the that Protocol Layer CRCReceiveTimer Policy Engine SenderResponseTimer stops the. Policy Engine EPR_RequestMessage The starts. Sink evaluates the Protocol Layer RejectMessage Protocol Layer RejectMessage tells the to form a. PHY Layer The forms the that is passed to the. CRCReceiveTimer Message appends and sends the. receives the and compares the it Starts. calculated with the one sent to verify the. Layer forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine Reject and then stores a copy of the new value. informs the that a SenderResponseTimer has been received. The stops Protocol Layer GoodCRCMessage. PHY Layer The generates a and pPHasYs eLsa iyte tro its CRC. Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer Protocol Layer forwards the to the MessageIDCounter. The verifies and increments the and stops the Protocol Layer Policy Engine. RejectMessage The informs the that a was successfully sent. Figure 8.17, \"Wait response to Fixed EPR Power Negotiation\" Message Explicit Contract EPR Mode Negotiation illustrates an example of a flow where the request is responded to with wait while negotiating an in. The goes through seve- ral distinSocut rpcheases: Capabilities EPR_Source_CapabilitiesMessage - The Sink sends out its pCoawpearb ilities in an. EPR_RequestMessage The evaluates these and, in the request phase, selects one power level by sending an - Source. WaitMessage The evaluaFteigs uthree r8e.1q7ue Wsta aint dr eascpceopntsse t htoe Freixqeude sEt PwRit Pho aw er N egotiatio.n Source Sink : Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine Cable EPR_Source_Capabilities detected 1: Send EPR_Source_Capabilities 2: EPR_Source_Capabilities 3: EPR_Source_Capabilities + CRC Start CRCReceiveTimer 4: EPR_Source_Capabilities Check MessageID against local copy Store copy of MessageID 5: EPR_Source_Capabilities received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: EPR_Source_Capabilities sent Start SenderResponseTimer Evaluate EPR Capabilities 10: Send EPR_Request 11: EPR_Request 12: EPR_Request + CRC 13: EPR_Request Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: EPR_Request received 15: GoodCRC Stop SenderResponseTimer 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: EPR_Request sent Evaluate EPR Request Start SenderResponseTimer 19: Send Wait 20: Wait 21: Wait + CRC Start CRCReceiveTimer 22: Wait Check MessageID against local copy Store copy of MessageID 23: Wait received 24: GoodCRC 25: GoodCRC + CRC Stop SenderResponseTimer 26: GoodCRC Start PSTransitionTimer Reduce current Check and increment MessageIDCounter Stop CRCReceiveTimer 27: Wait sent Table8.44, \"Steps for a Wait response to an EPR Power Negotiation\" Figure 8.17, \"Wait response to Fixed EPR Power Negotiation\" below provides a detailed explanation of what happens at each labelTeadb slteep8.i4n4 Steps for a Wait response to an EPR Power Negotiation above. Step Source Sink Cable Capabilities Section 4.4, \"Cable Type Detection\" PThoeli cy Engine are d Pe rote tc ot ce od l Lif a t yh ee rse are not already known (see ). EPR_Source_CapabilitiesMessage that represents the Protocol Layer Message PHY power supply’s present capabilities. Layer creates the and passes to. Source_CapabilitiesMessage CRCReceiveTimer Message CRC Message appends and sends the receives the. Starts. and checks the to verify the. EPR_Source_CapabilitiesMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. EPR_Source_CapabilitiesMessage Policy Engine SenderResponseTimer was successfully Policy Engine EPR_Source_Capabilities sent. starts. Message Source evaluates the Protocol Layer sent by the and selects which power it Power Data Object Message (e.g., ) that represents its Request into Protocol Layer EPR_RequestMessage a. PHY Layer creates the and pPaHsYse Lsa toye r. CRC EPR_Request CRC receives the and Message CRCReceiveTimer Message appends a and sends the PHY Layer CRC. Starts. verify the. EPR_RequestMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The passes the Request information to SenderResponseTimer the. stops Protocol Layer GoodCRCMessage. PHY Layer The generates a and passes it to its. Table8.44 Steps for a Wait response to an EPR Power Negotiation Step Source Sink PHY Layer Message CRC PHY Layer CRC Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the EPR_RequestMessage. It informs the that Protocol Layer CRCReceiveTimer Policy Engine SenderResponseTimer stops the. Policy Engine EPR_RequestMessage The starts. Sink evaluates the Protocol Layer WaitMessage Protocol Layer WaitMessage tells the to form a. PHY Layer The forms the that is passed to the. CRCReceiveTimer Message appends and sends the. receives the and compares the Starts. it calculated with the one sent to verify the. Layer forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine Wait and then stores a copy of the new value. informs the that a SenderResponseTimer has been received. The stops Protocol Layer GoodCRCMessage. PHY Layer The generates a and PpHasYs eLsa yite tro its CRC. Message Message receives the and compares the it calculated with the one sent to verify the. Protocol Layer Protocol Layer forwards the to the MessageIDCounter. The verifies and increments the and stops the Protocol Layer Policy Engine. WaitMessage The informs the that a was successfully sent. Explicit Contract EPR Mode Figure 8.18, \"EPR Keep Alive\" Message This is an example of keep alive operation during an in. shows the s as they flow acroFsigs uthree b8u.1s8 a nEdP Rw iKtheienp t hAeli dveevices to accomplish the keep alive. Source Sink : Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine SinkEPRKeepAliveTimer Timeout Stop SinkEPRKeepAliveTimer 1: Send EPR_KeepAlive 2: EPR_KeepAlive 3: EPR_KeepAlive + CRC 4: EPR_KeepAlive Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: EPR_KeepAlive received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Stop SourceEPRKeepAliveTimer Check and increment MessageIDCounter Stop CRCReceiveTimer Evaluate EPR_KeepAlive 9: EPR_KeepAlive sent Start SenderResponseTimer 10: Send EPR_KeepAlive_Ack 11: EPR_KeepAlive_Ack 12: EPR_KeepAlive_Ack + CRC Start CRCReceiveTimer 13: EPR_KeepAlive_Ack Check MessageID against local copy Store copy of MessageID 14: EPR_KeepAlive_Ack received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Start SinkEPRKeepAliveTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: EPR_KeepAlive_Ack sent Start SourceEPRKeepAliveTimer EPR Mode Continues Table8.45, \"Steps for EPR Keep Alive\" Figure 8.18, \"EPR Keep Alive\" below provides a detailed explanation of what happens at each labeled step in aboveT.able8.45 Steps for EPR Keep Alive Step Source Sink SinkEPRKeepAliveTimer Policy Engine Policy Engine The times out in the SinkEPRKeepAliveTimer Protocol. The stops the timer and tells the Protocol Layer EPR_KeepAliveMessage to form an. PHY Layer Protocol Layer The creates the PanHdY p Laassyeesr it to CRC. The Requ.est CRC receives the and Message CRCReceiveTimer Message appends a and sends the PHY Layer CRC. Starts. verify the. EPR_KeepAliveMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The passes the Request information to SourceEPRKeepAliveTimer. the. stops the Protocol Layer GoodCRCMessage PHY Layer The generates a and pPaHsYse Lsa ity teor its CRC. GoodCRC CRC Message receives the and appends and sends the Message. PHY Layer GoodCRCMessage the. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the SinkEPRKeepAliveTimerMessage. It informs the that Protocol Layer CRCReceiveTimer Policy Engine SenderResponseTimer sent. The stops the. Policy Engine DPM The starts. SourceEPRKeepAliveTimerMessage Sink requests the to evaluate the Source sent by the Policy Engine Protocol Layer EPR_KeepAlive_Ack Message tells the to form an Protocol Layer EPR_KeepAlive_Ack. Message PHY Layer The forms the PHY Laye trhat is passCeRd Cto the. CRC EPR_KeepAlive_AckMessage CRCReceiveTimer receives the appends and sends the Message. Starts. PHY Layer EPR_KeepAlive_AckMessage verify the. Protocol Layer forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine Accept and then stores a copy of the new value. Message Policy Engine SenderResponseTimer SinkEPR Khaese pbAeelinv ereTcimeiveerd. The stops, starts the. Table8.45 Steps for EPR Keep Alive Step Source Sink Protocol Layer GoodCRCMessage PHY Layer The generates a and pPHasYs eLsa iyte tro its CRC. GoodCRC CRC receives the and Message Message appends and sends the PHY Layer GoodCRC Message. verify the. Protocol Layer Protocol Layer forwards the to the MessageIDCounter. The verifies and increments the and stops the Protocol Layer Policy Engine. EPR_KeepAlive_Ack Message The informs the that an Policy Engine was successfully sent. The starts the. EPR Mode Continues EPR Mode Sink EPR Mode Figure 8.19, \"Exiting EPR Mode (Sink Initiated)\" Message This is an example of an Exit operation where the requests to be exited. shows the s as they flow across the bus and within the devices to accomplish the Exit EPR processF.igure 8.19 Exiting EPR Mode (Sink Initiated) Sink Source : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Ports in EPR Mode with SPR PDO Explicit Contract 1: Send EPR_Mode (Exit) 2: EPR_Mode (Exit) 3: EPR_Mode (Exit) + CRC Start CRCReceiveTimer 4: EPR_Mode (Exit) 5: EPR_Mode (Exit) received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: EPR_Mode (Exit) sent 10: Send Source_Capabilities 11: Source_Capabilities 12: Source_Capabilities + CRC Start CRCReceiveTimer 13: Source_Capabilities Store copy of MessageID 14: Source_Capabilities received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Source_Capabilities sent EPR Mode exited Table8.46, \"Steps for Exiting EPR Mode (Sink Initiated)\" Figure 8.19, \"Exiting EPR Mode (Sink Initiated)\" below provides a detailed explanation of what happens at each labeled step in Table8.46 Steps for Exiting EPR Mod aeb (oSvine.k Initiated) Step Sink Source Port Partner Explicit Contract SPR (A)PDO Policy Engine Protocol Layer The s are in an using an (Voltage <= 20V) EPR_Mode Message The directs the to EPR Mode Protocol Layer Message PHY to. Layer creates the and passes to PHY L.ayer CRC EPR_Mode CRC Message CRCReceiveTimer receives the (Exit) and appends and sends the Message (Exit). Starts. PHY Layer CRC EPR_Mode the. Message Protocol Layer removes the and forwards the (Exit) to the. Message checks the in the incoming is different from the previously stored value Protocol Layer EPR_Mode and then stores a copy of the new value. The forwards the received (Exit) information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. Message Message receives the and checks the appends and sends the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Policy Engine EPR_Mode Message (Exit) was successfully sent. Sink Protocol Layer evaluates the (Exit) Source_CapabilitiesMessage Protocol Layer Source_CapabilitiesMessage. PHY Layer creates the aPnHdY pLaasyseers to CRC. CRC receives the Source_CapabilitiesMessage CRCReceiveTimer Message appends a and sends the PHY Layer CRC. Starts. verify the. Source_CapabilitiesMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer EPR_Mode Policy Engine The passes the (Enter Protocol Layer GoodCRCMessage Succeeded) information to the. PHY Layer The generates a and pPaHsYse Lsa ity teor its CRC. Message Message receives the and compares the it calculated with the one sent to verify the. Table8.46 Steps for Exiting EPR Mode (Sink Initiated) Step Sink Source PHY Layer GoodCRCMessage Protocol Layer forwards the to the. MessageIDCounter. Policy Engine The verifies and increments the Source_CapabilitiesMessage It informs the that the was successfully sent. EPR Mode Negotiation SecTtihoen 8.3.2.2.1.1, \"SP Rs tEoxppsl itchite Contract Negotiatio.n\" Exited. Power proceeds as defined in. EPR Mode Source EPR Mode Figure 8.20, \"Exiting EPR Mode (Source Initiated)\" Message This is an example of an Exit operation where the requests to be exited. shows the s as they flow across the bus and within the devices to accomplish the Exit EPR procesFsi.gure 8.20 Exiting EPR Mode (Source Initiated) Sink Source : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Ports in EPR Mode with SPR PDO Explicit Contract 1: Send EPR_Mode (Exit) 2: EPR_Mode (Exit) 3: EPR_Mode (Exit) + CRC 4: EPR_Mode (Exit) Start CRCReceiveTimer 5: EPR_Mode (Exit) received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: EPR_Mode (Exit) sent 10: Send Source_Capabilities 11: Source_Capabilities 12: Source_Capabilities + CRC Start CRCReceiveTimer 13: Source_Capabilities Store copy of MessageID 14: Source_Capabilities received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Source_Capabilities sent EPR Mode exited Table8.47, \"Steps for Exiting EPR Mode (Source Initiated)\" Figure 8.20, \"Exiting EPR Mode (Source Initiated)\" below provides a detailed explanation of what happens at each labeled step in Table8.47 Steps for Exiting EPR Mode (Sou arbcoev Ien. itiated) Step Sink Source Port Partner Explicit Contract SPR (A)PDO Policy Engine Protocol Layer The s are in an using an (Voltage <= 20V) EPR_Mode Message The directs the to EPR Mode Protocol Layer Message PHY to. Layer creates the and passes to PHY L.ayer CRC EPR_Mode CRC receives the (Exit) and Message CRCReceiveTimer Message appends and sends the PHY Layer CRC (Exit). Starts. verify the. EPR_Mode Message Protocol Layer removes the and forwards the (Exit) to the. Message checks the in the incoming is different from the previously stored value Protocol Layer EPR_Mode and then stores a copy of the new value. The forwards the received (Exit) information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. Message Message appends and sends the receives the and checks the to. verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Policy Engine EPR_Mode Message (Exit) was successfully sent. Sink Protocol Layer evaluates the (Exit) Source_CapabilitiesMessage Protocol Layer Source_CapabilitiesMessage. PHY Layer CRCReceiveTimer creates the aPnHdY p Laassyeesr to CRC. Starts. CRC receives the Source_CapabilitiesMessage Message appends a and sends the PHY Layer CRC. verify the. Source_CapabilitiesMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer EPR_Mode Policy Engine The passes the (Enter Protocol Layer GoodCRCMessage Succeeded) information to the. PHY Layer The generates a and PpHasYs eLsa yite tro its CRC. Message Message receives the and compares the it calculated with the one sent to verify the. Table8.47 Steps for Exiting EPR Mode (Source Initiated) Step Sink Source PHY Layer GoodCRCMessage Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the Source_CapabilitiesMessage. It informs the that the was successfully sent. EPR Mode Negotiation SecTtihoen 8.3.2.2.1.1, \"SP Rs tEoxppsl itchiet Contract Negotiatio.n\" Exited. Power proceeds as defined in. Sink Explicit Contract Figure 8.21, \"EPR Sink Makes Request (Accept)\" Message This is an example of EPR when a makes a Request which is Accepted during an. shows the s as they flow across the bus and within the devices to accomplish the keep alive. Figure 8.21 EPR Sink Makes Request (Accept) Source Sink : Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine 1: Send EPR_Request 2: EPR_Request 3: EPR_Request + CRC 4: EPR_Request Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: EPR_Request received 6: GoodCRC 7: GoodCRC + CRC Stop SenderResponseTimer 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Evaluate EPR_Request 9: EPR_Request sent Start SenderResponseTimer 10: Send Accept 11: Accept 12: Accept + CRC Start CRCReceiveTimer 13: Accept Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Start PSTransitionTimer Reduce current Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Accept sent Power supply adjusted to negotiated output Prepare for new power 19: Send PS_RDY 20: PS_RDY 21: PS_RDY + CRC Start CRCReceiveTimer 22: PS_RDY Check MessageID against local copy Store copy of MessageID 23: PS_RDY received 24: GoodCRC 25: GoodCRC + CRC 26: GoodCRC Stop PSTransitionTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 27: PS_RDY sent New Power level Table8.48, \"Steps for EPR Sink Makes Request (Accept)\" Figure 8.21, \"EPR Sink Makes Request (Accept)\" below provides a detailed explanation of what happens at each labeled step in Table8.48 Steps for EPR Sink Makes aRbeoqvuee.st (Accept) Step Source Sink DPM Policy Engine Policy Engine Protocol Layer tells the to request a different EPR_RequestMessage power level. The tells the Protocol Layer EPR_RequestMessage PHY Layer The creates the PHY Layer EPR_RequestMessage aPnHdY pLaasyseers it to CRC. EPR_Request CRC receives the and Message CRCReceiveTimer Message appends a and sends the PHY Layer CRC. Starts. verify the. EPR_RequestMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine The passes the Request information to Protocol Layer GoodCRCMessage the. PHY Layer The generates a and pPaHsYse Lsa ity teor its CRC. GoodCRC CRC Message receives the and appends and sends the Message. PHY Layer GoodCRCMessage the. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the EPR_RequestMessage. It informs the that Protocol Layer CRCReceiveTimer Policy Engine SenderResponseTimer stops the. Policy Engine DPM The starts. EPR_RequestMessage Sink requests the to evaluate the Source Policy Engine sent by the and decides if the can meet the request. The Protocol Layer Accept Message tells the to form an. PHY Layer The forms the that is pPaHsYs eLda yteor the CRC. AcceptMessage CRC CRCReceiveTimer receives the and compares appends and sends the. Message Starts. PHY Layer AcceptMessage Protocol. Layer forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine Accept and then stores a copy of the new value. Message Policy Engine informs the that an SenderResponseTimer PSTransitionTimer, starts the DPM and reduces its current draw. The prepares the Power supply for transition to the new power level. Table8.48 Steps for EPR Sink Makes Request (Accept) Step Source Sink Protocol Layer GoodCRCMessage PHY Layer The generates a and pPaHsYse Lsa ity teor its CRC. GoodCRC CRC receives the and Message Message appends and sends the PHY Layer GoodCRCMessage. verify the. Protocol Layer Protocol Layer forwards the to the MessageIDCounter. The verifies and increments the and stops the Protocol Layer Policy Engine. Accept Message The informs the that an was successfully sent. Negotiated DPM Policy Engine Power supply Adjusts its Output to the Value The informs the that the power Protocol Layer PS_RDYMessage Protocol Layer PS_RDYMessage tells the to send a. PHY Layer PS_RDY Message CRC CRCReceiveTimer receives the and compares appends and sends the. Message Starts. PHY Layer PS_RDYMessage. Protocol Layer forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine and then stores a copy of the new value. informs the that a RS_RDY PSTransitionTimer has been received. The stops the Protocol Layer GoodCRCMessage. PHY Layer The generates a and pPaHsYse Lsa ity teor its CRC. GoodCRC CRC receives the and Message Message appends and sends the PHY Layer GoodCRCMessage. verify the. Protocol Layer Protocol Layer forwards the to the MessageIDCounter. The verifies and increments the. Stops the Protocol Layer Policy Engine. PS_RDYMessage The informs the that the was successfully sent. Negotiated New Power Level Sink Explicit Contract Figure 8.22, \"EPR Sink Makes Request (Reject)\" Message This is an example of EPR when a makes a Request which is Rejected during an. shows the s as they flow across the bus and within the devices to accomplish the keep alive. Figure 8.22 EPR Sink Makes Request (Reject) Source Sink : Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine 1: Send EPR_Request 2: EPR_Request 3: EPR_Request + CRC 4: EPR_Request Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: EPR_Request received 6: GoodCRC 7: GoodCRC + CRC Stop SenderResponseTimer 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Evaluate EPR_Request 9: EPR_Request sent Start SenderResponseTimer 10: Send Reject 11: Reject 12: Reject + CRC Start CRCReceiveTimer 13: Reject Check MessageID against local copy Store copy of MessageID 14: Reject received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Reject sent Table8.49, \"Steps for EPR Sink Makes Request (Reject)\" Figure 8.22, \"EPR Sink Makes Request (Reject)\" below provides a detailed explanation of what happens at each labeled step in Table8.49 Steps for EPR Sink Makes a Rboevqeu.est (Reject) Step Source Sink DPM Policy Engine Policy Engine Protocol Layer tells the to request a different EPR_RequestMessage power level. The tells the Protocol Layer RequestMessage PHY Layer The creates the and PHY Layer EPR_RequestMessage pPaHsYse Lsa ity teor C.RC EPR_Request CRC receives the and Message CRCReceiveTimer Message appends a and sends the PHY Layer CRC. Starts. verify the. EPR_RequestMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine The passes the Request information to Protocol Layer GoodCRCMessage the. PHY Layer The generates a and pPaHsYse Lsa ity teor its CRC. GoodCRC CRC Message receives the and compares appends and sends the Message. PHY Layer GoodCRC Message. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the EPR_RequestMessage. It informs the that Protocol Layer CRCReceiveTimer Policy Engine SenderResponseTimer stops the. Policy Engine DPM The starts. EPR_RequestMessage Sink requests the to evaluate the Source Policy Engine sent by the and decides that the can’t meet the request. The Protocol Layer RejectMessage tells the to form a. PHY Layer The forms the that is pPaHsYs eLda ytoer the CRC. RejectMessage CRC CRCReceiveTimer receives the and compares appends and sends the. Message Starts. PHY Layer RejectMessage Protocol. Layer forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine Reject and then stores a copy of the new value. informs the that an DPM has been received. The informs Protocol Layer GoodCRCMessage the that the Request has been rejected. PHY Layer The generates a and passes it to its. Table8.49 Steps for EPR Sink Makes Request (Reject) Step Source Sink PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC receives the and Message Message appends and sends the PHY Layer GoodCRC Message. verify the. Protocol Layer Protocol Layer forwards the to the MessageIDCounter. The verifies and increments the and stops the Protocol Layer Policy Engine. RejectMessage The informs the that a was successfully sent. Sink WaitMessage Explicit Contract Figure 8.23, \"EPR Sink Makes Request (Wait)\" Message This is an example of SPR when a makes a Request which is responded to with a during an. shows the s as they flow across the bus and within the devices to accomplish tFhieg ukreee p8.a2li3v eE.PR Sink Makes Request (Wait) Source Sink : Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine 1: Send EPR_Request 2: EPR_Request 3: EPR_Request + CRC 4: EPR_Request Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: EPR_Request received 6: GoodCRC 7: GoodCRC + CRC Stop SenderResponseTimer 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Evaluate EPR_Request 9: EPR_Request sent Start SenderResponseTimer 10: Send Wait 11: Wait 12: Wait + CRC Start CRCReceiveTimer 13: Wait Check MessageID against local copy Store copy of MessageID 14: Wait received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Wait sent Table8.50, \"Steps for SPR Sink Makes Request (Wait)\" Figure 8.23, \"EPR Sink Makes Request (Wait)\" below provides a detailed explanation of what happens at each labeled step in Table8.50 Steps for SPR Sink Mak aebso Rveeq. uest (Wait) Step Source Sink DPM Policy Engine Policy Engine Protocol Layer tells the to request a different EPR_RequestMessage power level. The tells the Protocol Layer EPR_RequestMessage PHY Layer The creates the PHY Layer EPR_RequestMessage aPnHdY p Laassyeesr it to CRC. EPR_Request CRC receives the and Message CRCReceiveTimer Message appends a and sends the PHY Layer CRC. Starts. verify the. EPR_RequestMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine The passes the Request information to Protocol Layer GoodCRCMessage the. PHY Layer The generates a and pPaHsYs eLsa iyte tro its CRC. GoodCRC CRC Message receives the and compares appends and sends the Message. PHY Layer GoodCRCMessage. Protocol Layer forwards the to the. MessageIDCounter Policy Engine The verifies and increments the RequestMessage Protocol. It informs the that Layer CRCReceiveTimer Policy Engine SenderResponseTimer stops the. Policy Engine DPM The starts. EPR_RequestMessage Sink requests the to evaluate the Source Policy Engine sent by the and decides if the can meet the request. The Protocol Layer WaitMessage tells the to form a. PHY Layer The forms the that is passed to the. CRCReceiveTimer CRC Message appends and sends the. receives the and compares the Starts. it calculated with the one sent to verify the. Layer forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Policy Engine Wait and then stores a copy of the new value. informs the that an DPM has been received. The informs Protocol Layer GoodCRCMessage the that the Request has been rejected. PHY Layer The generates a and passes it to its. Table8.50 Steps for SPR Sink Makes Request (Wait) Step Source Sink PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC receives the and Message Message appends and sends the PHY Layer GoodCRC Message. verify the. Protocol Layer Protocol Layer forwards the to the MessageIDCounter. The verifies and increments the and stops the Protocol Layer Policy Engine. WaitMessage The informs the that a was successfully sent. Unsupported Message Figure 8.24, \"Unsupported message\" Message This is an example of the response to an. shows the s as they flow across the bus anFidg wuriteh 8in.2 t4h eU dnesvuicpepso.rted message Message Initiator Message Responder : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Message Reset MessageIDCounter, stored MessageIDand RetryCounter 2: Message 3: Message + CRC Start CRCReceiveTimer 4: Message Reset MessageIDCounter, stored MessageIDand RetryCounter 5: Message received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Message sent Start SenderResponseTimer 10: Send Not_supported 11: Not_supported 12: Not_supported + CRC Start CRCReceiveTimer 13: Not_supported Store copy of MessageID 14: Not_supported received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Not_supported sent Table8.51, \"Steps for an Unsupported Message\" Figure 8.24, \"Unsupported message\" below provides a detailed explanation of what happens at each labeled step in Table8.51 Steps faobro avne. Unsupported Message Step Message Initiator Message Responder Policy Engine Protocol Layer Message The directs the to generate a. MessageID RetryCounter Protocol Layer resets, stored Message PHY Layer PHY Layer CRC Message PHY Layer Message CRC the and passes to. CRCReceiveTimer Message appends and sends the. Starts receives the and compares the. it calculated with the one sent to verify the. Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Message Policy Engine The forwards the received Protocol Layer GoodCRCMessage information to the that consumes it. PHY Layer generates a and passes it. Message Message receives the and checks the appends and sends the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Message Policy Engine SenderResponseTimer was successfully sent. starts Policy Engine Protocol Layer. Not_Supported Message tells the to form an. PHY Layer creates the and pPHasYs eLsa ytoe r. CRC Not_Supported CRC receives the and Message CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID. Starts. verify the. Message stores the of the incoming. Not_Supported Message Policy The forwards the received Engine Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and PpaHsYse Lsa ity er. CRC GoodCRC CRC Message receives and compares appends a and sends the Message.. Table8.51 Steps for an Unsupported Message Step Message Initiator Message Responder PHY Layer CRC GoodCRC Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the was successfully sent. Soft Reset Figure 8.25, \"Soft Reset\" Message Soft Reset This is an example of a operation. shows the s as they flow across the bus and within the devices to accomplish the Figure 8.2.5 Soft Reset Reset Initiator Reset Responder : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Soft Reset Reset MessageIDCounter, stored MessageIDand RetryCounter 2: Soft Reset 3: Soft Reset + CRC Start CRCReceiveTimer 4: Soft Reset Reset MessageIDCounter, stored MessageIDand RetryCounter 5: Soft Reset received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Soft Reset sent Start SenderResponseTimer 10: Send Accept 11: Accept 12: Accept + CRC Start CRCReceiveTimer 13: Accept Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Accept sent Reset Complete, Explicit Contract negotiation Table8.52, \"Steps for a Soft Reset\" Figure 8.25, \"Soft Reset\" below provides a detailed explanation of what happens at each labeled step in above. Table8.52 Steps for a Soft Reset Step Reset Initiator Reset Responder Policy Engine Protocol Layer Soft_Reset Message Soft Reset The directs the to generate a to request a. MessageID RetryCounter Protocol Layer resets, stored Message PHY Layer PHY Layer Soft_ResetMessage tPhHe Y Layer and passCeRs Cto. Soft_Reset CRC Message CRCReceiveTimer receives the and appends and sends the Message. Starts. PHY Layer CRC the. Soft_ResetMessage Protocol Layer removes the and forwards the to the. Message MessageIDCounter does not check the in the MessageID RetryCounter incoming and resets, Protocol Layer Soft_Reset stored and. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. Message Message receives the and checks the appends and sends the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Soft_ResetMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine Protocol Layer Accept starts. Message tells the to form an. Layer creates the and passes to. Message CRCReceiveTimer receives the and compares the appends a and sends the. it calculated with the one sent to verify the. Starts. Message stores the of the incoming. Message Policy Engine The forwards the received Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and pPaHsYs eLsa iyte r. CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. Table8.52 Steps for a Soft Reset Step Reset Initiator Reset Responder Protocol Layer MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Port Partner Explicit ContractNegotiation was successfully sent. The reset is complete and protocol communication can restart. s perform an to resynchronize their state machines. Data Reset DFP VCONN Source Data Reset Figure 8.26, \"DFP Initiated Data Reset where the DFP is the VCONN Source\" Message This is an example of a operation wherDea tthae R eset is also the and initiates a. shows the s as they flow across the bus and withinF tihgeu dree v8ic.2e6s tDoF aPc cIonmitipalitsehd t Dhea ta Reset w.here the DFP is the VCONN Source DFP/VCONNSource UFP (Reset Initiator) (Reset Responder) : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Data_Reset 2: Data_Reset 3: Data_Reset + CRC Start CRCReceiveTimer 4: Data_Reset 5: Data_Reset received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Inform DPM that Data_Reset Stop CRCReceiveTimer has been received 9: Data_Reset sent Start SenderResponseTimer 10: Send Accept 11: Accept 12: Accept + CRC Start CRCReceiveTimer 13: Accept Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Tell DPM to perform Data Reset Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Accept sent DPM indicates that Data Reset process is complete 19: Send Data_Reset_Complete 20: Data_Reset_Complete 21: Data_Reset_Complete + CRC Start CRCReceiveTimer 22: Data_Reset_Complete 23: Data_Reset_Complete received 24: GoodCRC 25: GoodCRC + CRC 26: GoodCRC Inform DPM that Check and increment MessageIDCounter Data_Reset_Complete has Stop CRCReceiveTimer been received 27: Data_Reset_Complete sent Inform DPM that Data_Reset_Complete has been sent Data_Reset Complete, USB Connection Established Table8.53, \"Steps for a DFP Initiated Data Reset where the DFP is the VCONN Source\" Figure 8.26, \"DFP Initiated Data Reset where the DFP is the VCONN Source\" below provides a detailed explanation of what happens at each labeled step in T aabbloev8e.. 53 Steps for a DFP Initiated Data Reset where the DFP is the VCONN Source Step DFP/VCONN Source (Reset Initiator) UFP (Reset Responder) Policy Engine Protocol Layer Data_ResetMessage Data Reset The directs the to generate a to request a. Layer creates the and passes to PHY L.ayer CRC Data_Reset CRC Message CRCReceiveTimer receives the and appends and sends the Message. Starts. PHY Layer CRC the. Data_ResetMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Data_Reset and then stores a copy of the new value. Message Policy Engine The forwards the received information to the that Policy Engine DPM Data_Reset consumes it. Message The informs the that a Protocol Layer GoodCRCMessage has been received. PHY Layer generates a and passes it. Message Message receives the and checks the to appends and sends the verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Data_ResetMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine Protocol Layer Accept starts. Message tells the to form an. Layer creates the and passes to. Message CRCReceiveTimer receives the and compares the appends a and sends the. it calculated with the one sent to verify the. Starts. Message stores the of the incoming. Message Policy Engine The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. DPM Data Reset DPM VCONN and tells the to perform a. The proceeds to cycle and then reset the Protocol Layer GoodCRCMessage data connection. PHY Layer generates a and passes it. Table8.53 Steps for a DFP Initiated Data Reset where the DFP is the VCONN Source Step DFP/VCONN Source (Reset Initiator) UFP (Reset Responder) PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the DPM Data Reset was successfully sent. The indicates that the process is Policy Engine Protocol Layer complete. The directs the to Protocol Layer Message PHY generate a. Layer creates the and passes to. Data_Reset_CompleteMessage CRC appends and sends the receives the CRCReceiveTimer Message PHY Layer CRC. verify the. Data_Reset_CompleteMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. Data_Reset_Complete Message The forwards the received Policy Engine information to the Policy Engine DPM that consumes it. Data_Reset_Complete Message The informs the that a Protocol Layer GoodCRCMessage has been received. PHY Layer generates a and passes it. Message Message receives the and checks the to appends and sends the verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Data_Reset_Complete Message informs the that the was successfully sent. Data_Reset_Complete Message The informs the that the Data Reset Section 6.3.14, \"Data_Reset Message\" 5 Port Partner was successfully sent. The is complete as defined in Step. s re-establish a USB data connection. Data Reset DFP Data_ResetMessage VCONN Source Figure 8.27, \"DFP Receives Data Reset where the DFP is the VCONN Source\" Message This is an example of a operation whereD tahtea Rese rteceives a and is the. shows the s as they flow across the bus and withinF tihgeu dree v8ic.2e7s tDoF aPc cRoemcepilivsehs t Dhea ta Reset w.here the DFP is the VCONN Source DFP/VCONNSource UFP (Reset Initiator) (Reset Responder) : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Data_Reset 2: Data_Reset 3: Data_Reset + CRC Start CRCReceiveTimer 4: Data_Reset 5: Data_Reset received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Inform DPM that Data_Reset Stop CRCReceiveTimer has been received 9: Data_Reset sent Start SenderResponseTimer 10: Send Accept 11: Accept 12: Accept + CRC Start CRCReceiveTimer 13: Accept Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Accept sent Tell DPM to perform a Data Reset Tell DPM indicates Data Reset process is complete 19: Send Data_Reset_Complete 20: Data_Reset_Complete 21: Data_Reset_Complete + CRC Start CRCReceiveTimer 22: Data_Reset_Complete Store copy of MessageID 23: Data_Reset_Complete received 24: GoodCRC 25: GoodCRC + CRC 26: GoodCRC Inform DPM Data Reset is complete Check and increment MessageIDCounter Stop CRCReceiveTimer 27: Data_Reset_Complete sent Inform DPM Data Reset Message sent Data_Reset Complete, USB Connection Established Table8.54, \"Steps for a DFP Receiving a Data Reset where the DFP is the VCONNSource\" Figure 8.27, \"DFP Receives Data Reset where the DFP is the VCONN Source\" below provides a detailed explanation of what happens at each labeled step in F Ta balbeo8ve.5.4 Steps for a DFP Receiving a Data Reset where the DFP is the VCONNSource Step UFP (Reset Initiator) DFP/VCONN Source (Reset Responder) Policy Engine Protocol Layer Data_Reset Message Data Reset The directs the to generate a to request a. Layer creates the and passes to PHY L.ayer CRC Data_Reset CRC Message CRCReceiveTimer receives the and appends and sends the Message. Starts. PHY Layer CRC verify the. Data_ResetMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Data_Reset and then stores a copy of the new value. Message Policy Engine The forwards the received information to the that Policy Engine DPM Data_Reset consumes it. Message The informs the that a Protocol Layer GoodCRCMessage has been received. PHY Layer generates a and passes it. Message Message receives the and checks the to appends and sends the verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Data_Reset Message Policy Engine SenderResponseTimer was successfully sent. Policy Engine Protocol Layer Accept starts. Message tells the to form an. Layer creates the and passes to. Message CRCReceiveTimer receives the and compares the appends a and sends the. Starts it calculated with the one sent to verify the.. Message stores the of the incoming. Message Policy Engine The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. The stops the. The proceeds to cycle and then reset the Protocol Layer GoodCRCMessage data connection. PHY Layer generates a and passes it. Table8.54 Steps for a DFP Receiving a Data Reset where the DFP is the VCONNSource Step UFP (Reset Initiator) DFP/VCONN Source (Reset Responder) PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. AcceptMessage informs the that the was successfully sent. Reset The tells the to perform a DPM Data Reset. The indicates that the process is Policy Engine Protocol Layer complete. The directs the to Protocol Layer Message PHY generate a. Layer creates the and passes to. Message CRC Data_Reset_CompleteMessage receives the appends and sends the Message CRCReceiveTimer PHY Layer CRC one sent to verify the.. Data_Reset_CompleteMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. Data_Reset_Complete Message The forwards the received Policy Engine information to the Policy Engine DPM that consumes it. Data_Reset_Complete Message The informs the that a Protocol Layer GoodCRCMessage has been received. PHY Layer generates a and passes it. Message Message appends and sends the receives the and checks the to. verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Data_Reset_Complete Message informs the that the was successfully sent. Data_Reset_Complete Message The informs the that the Section 6.3.14, \"Data_Reset Message\" 5 Port Partner was successfully sent. The reset is complete as defined in Step. s re-establish a USB data connection. Data Reset DFP Data Reset UFP VCONN Source Figure 8.28, \"DFP Initiated Data Reset where the UFP is the VCONN Source\" Message This is an example of a operation wherDea tthae R eset initiates a and the is the. shows the s as they flow across the bus and withinF tihgeu dreev 8ic.2e8s tDoF aPc cIonmitpialitsehd t Dhea ta Reset w.here the UFP is the VCONN Source DFP UFP/VCONNSource (Reset Initiator) (Reset Responder) : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Data_Reset 2: Data_Reset 3: Data_Reset + CRC Start CRCReceiveTimer 4: Data_Reset 5: Data_Reset received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Inform DPM that Data_Reset Stop CRCReceiveTimer has been received 9: Data_Reset sent Start SenderResponseTimer 10: Send Accept 11: Accept 12: Accept + CRC Start CRCReceiveTimer 13: Accept Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Start VCONNDischargeTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Accept sent Request DPM to turn off VCONN DPM indicates VCONN is off 19: Send PS_RDY 20: PS_RDY 21: PS_RDY + CRC Start CRCReceiveTimer 22: PS_RDY Store copy of MessageID 23: PS_RDY received 24: GoodCRC 25: GoodCRC + CRC 26: GoodCRC Stop VCONNDischargeTimer Check and increment MessageIDCounter Request DPM to perform a Data Reset Stop CRCReceiveTimer 27: PS_RDY sent DPM indicates that Data Reset process is complete 28: Send Data_Reset_Complete 29: Data_Reset_Complete 30: Data_Reset_Complete + CRC Start CRCReceiveTimer 31: Data_Reset_Complete 32: Data_Reset_Complete received 33: GoodCRC 34: GoodCRC + CRC 35: GoodCRC Inform DPM that Check and increment MessageIDCounter Data_Reset_Complete has Stop CRCReceiveTimer been received 36: Data_Reset_Complete sent Inform DPM that Data_Reset_Complete has been sent Data_Reset Complete, USB Connection Established Table8.55, \"Steps for a DFP Initiated Data Reset where the UFP is the VCONN Source\" Figure 8.28, \"DFP Initiated Data Reset where the UFP is the VCONN Source\" below provides a detailed explanation of what happens at each labeled step in T aabbloev8e.. 55 Steps for a DFP Initiated Data Reset where the UFP is the VCONN Source Step DFP (Reset Initiator) UFP/VCONN Source (Reset Responder) Policy Engine Protocol Layer Data_ResetMessage Soft Reset The directs the to generate a to request a. Layer creates the and passes to PHY L.ayer CRC Data_Reset CRC Message CRCReceiveTimer receives the and appends and sends the Message. Starts. PHY Layer CRC the. Data_ResetMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Data_Reset and then stores a copy of the new value. Message Policy Engine The forwards the received information to the that Policy Engine DPM Data_Reset consumes it. Message The informs the that a Protocol Layer GoodCRCMessage has been received. PHY Layer generates a and passes it. Message Message receives the and checks the to appends and sends the verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Data_ResetMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine Protocol Layer Accept starts. Message tells the to form an. Layer creates the and passes to. Message CRCReceiveTimer receives the and compares the it appends a and sends the. Starts calculated with the one sent to verify the.. Message stores the of the incoming. Policy Engine The forwards the received Policy Engine SenderResponseTimer information to the that consumes it. The stops the and Protocol Layer GoodCRCMessage starts the. PHY Layer generates a and passes iPt HY Layer. CRC GoodCRC CRC Message receives and compares appends a and sends the Message.. Table8.55 Steps for a DFP Initiated Data Reset where the UFP is the VCONN Source Step DFP (Reset Initiator) UFP/VCONN Source (Reset Responder) PHY Layer CRC GoodCRC Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. AcceptMessage Policy Engine DPM VCONN was successfully sent. The DPM requesV tCsO tNhNe to turn off. Policy Engine Protocol Layer When the indicates has been turned off the PS_RDYMessage Protocol Layer Message PHY. Layer creates the and passes to. Message Message CRCReceiveTimer receives the and compares the it appends a and sends the calculated with the one sent to verify the.. Starts. Message stores the of the incoming. Message Policy Engine The forwards the received information to the that consumes Policy Engine VCONNDischargeTimer it. DPM Data Reset DPM VCONN tells the to perform a. The proceeds to turn on and then reset the Protocol Layer GoodCRCMessage data connection. PHY Layer generates a and passes iPt HY Layer. CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the DPM Data Reset was successfully sent. The indicates that the process is Policy Engine Protocol Layer complete. The directs the to generate Protocol Layer Message PHY a. Layer creates the and passes to PHY L.ayer CRC CRC Data_Reset_CompleteMessage CRCReceiveTimer receives the appends and sends the Message. Starts. PHY Layer CRC verify the. Data_Reset_CompleteMessage Protocol Layer removes the and forwards the to the. Table8.55 Steps for a DFP Initiated Data Reset where the UFP is the VCONN Source Step DFP (Reset Initiator) UFP/VCONN Source (Reset Responder) Protocol Layer MessageID Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. Data_Reset_Complete Message The forwards the received Policy Engine information to the Policy Engine DPM that consumes it. Data_Reset_Complete Message The informs the that a Protocol Layer GoodCRCMessage has been received. PHY Layer generates a and passes it. Message Message receives the and checks the to appends and sends the verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Data_Reset_Complete Message informs the that the was successfully sent. Data_Reset_Complete Message The informs the that the Section 6.3.14, \"Data_Reset Message\" 5 Port Partner was successfully sent. The reset is complete as defined in Step. s re-establish a USB data connection. Data Reset DFP Data_ResetMessage UFP VCONN Source Figure 8.29, \"DFP Receives a Data Reset where the UFP is the VCONN Source\" Message This is an example of a operation where the Da rteac eRievseest a and the is the. shows the s as they flow across the bus andF iwguitrhein 8 t.h2e9 dDeFvPic Rese tcoe iavcecso ma pDlaistha tRhees et where t.he UFP is the VCONN Source UFP/VCONNSource DFP (Reset Initiator) (Reset Responder) : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Data_Reset 2: Data_Reset 3: Data_Reset + CRC Start CRCReceiveTimer 4: Data_Reset 6: GoodCRC 5: Data_Reset received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Inform DPM that Data_Reset Stop CRCReceiveTimer has been received 9: Data_Reset sent Start SenderResponseTimer 10: Send Accept 11: Accept 12: Accept + CRC Start CRCReceiveTimer 13: Accept Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Tell DPM to turn off VCONN. Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Accept sent Start VCONNDischargeTimer DPM indicates that VCONN has been turned off. 19: Send PS_RDY Reset MessageIDCounter, stored MessageIDand RetryCounter 20: PS_RDY 21: PS_RDY + CRC Start CRCReceiveTimer 22: PS_RDY Reset MessageIDCounter, stored MessageIDand RetryCounter 24: GoodCRC 23: PS_RDY received 25: GoodCRC + CRC 26: GoodCRC Check an Sd t oin pc Cre Rm Ce Rn et c M eie vs es Ta ig me eID rCounter RequS et so tp D V PC MO tN oN pD ei rs fc oh rmar g ae DT aim tae Rr eset 27: PS_RDY sent Tell DPM indicates Data Reset process is complete 28: Send Data_Reset_Complete 29: Data_Reset_Complete 30: Data_Reset_Complete + CRC Start CRCReceiveTimer 31: Data_Reset_Complete Store copy of MessageID 32: Data_Reset_Complete received 33: GoodCRC 34: GoodCRC + CRC 35: GoodCRC Inform DPM Data Reset is complete Check and increment MessageIDCounter Stop CRCReceiveTimer 36: Data_Reset_Complete sent Inform DPM Data Reset Message sent Data_Reset Complete, USB Connection Established Table8.56, \"Steps for a DFP Receiving a Data Reset where the UFP is the VCONN Source\" Figure 8.29, \"DFP Receives a Data Reset where the UFP is the VCONN Source\" below provides a detailed explanation of what happens at each labeled step in Tab albeo8v.e5.6 Steps for a DFP Receiving a Data Reset where the UFP is the VCONN Source Step UFP/VCONN Source (Reset Initiator) DFP (Reset Responder) Policy Engine Protocol Layer Data_ResetMessage Soft Reset The directs the to generate a to request a. Layer creates the and passes to PHY La.yer CRC Data_Reset CRC Message CRCReceiveTimer receives the and appends and sends the Message. Starts. PHY Layer CRC the. Data_ResetMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Data_Reset and then stores a copy of the new value. Message Policy Engine The forwards the received information to the that Policy Engine DPM Data_Reset consumes it. Message The informs the that a Protocol Layer GoodCRCMessage has been received. PHY Layer generates a and passes it. Message Message receives the and checks the appends and sends the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Data_ResetMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine Protocol Layer Accept starts. Message tells the to form an. Layer creates the and passes to. Message CRCReceiveTimer receives the and compares the appends a and sends the. Starts it calculated with the one sent to verify the.. Message stores the of the incoming. Message Policy Engine The forwards the received information to the that Policy Engine SenderResponseTimer DPM VCONN The stops the Protocol Layer GoodCRCMessage and tells the to turn off. PHY Layer generates a and passes it. Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Table8.56 Steps for a DFP Receiving a Data Reset where the UFP is the VCONN Source Step UFP/VCONN Source (Reset Initiator) DFP (Reset Responder) PHY Layer CRC GoodCRC Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. AcceptMessage Policy Engine VCONNDischargeTimer was successfully sent. DPM VCONN The starts the. Policy Engine Protocol Layer When the indicates that has been turned off PS_RDYMessage Soft Reset Protocol Layer Message PHY generate a to request a. Layer creates the and passes to PHY L.ayer CRC PS_RDY CRC Message CRCReceiveTimer receives the and compares appends and sends the Message. Starts. PHY Layer CRC PS_RDY. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer PS_RDY and then stores a copy of the new value. Message Policy Engine The forwards the received information to the that consumes it. DPM Data Reset The stops the DPM VCONN and requests the perform a. The proceeds to turn on and then reset the Protocol Layer GoodCRCMessage data connection. PHY Layer generates a and pPHasYs eLsa iyte r C.RC GoodCRC CRC receives and compares Message Message appends and sends the PHY Layer CRC GoodCRC.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the DPM Data Reset was successfully sent. The indicates that the process is Policy Engine Protocol Layer complete. The directs the to Protocol Layer Message PHY generate a. Layer creates the and passes to. Message CRC Data_Reset_CompleteMessage receives the appends and sends the Message CRCReceiveTimer PHY Layer CRC one sent to verify the.. Data_Reset_CompleteMessage Protocol Layer removes the and forwards the to the. Table8.56 Steps for a DFP Receiving a Data Reset where the UFP is the VCONN Source Step UFP/VCONN Source (Reset Initiator) DFP (Reset Responder) Protocol Layer MessageID Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. Data_Reset_CompleteMessage The forwards the received Policy Engine information to the Policy Engine DPM that consumes it. Data_Reset_CompleteMessage The informs the that a Protocol Layer GoodCRCMessage has been received. PHY Layer generates a and passes it. Message Message appends and sends the receives the and checks the to. verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Data_Reset_CompleteMessage informs the that the was successfully sent. Data_Reset_Complete Message The informs the that the Section 6.3.14, \"Data_Reset Message\" 5 Port Partner was successfully sent. The reset is complete as defined in Step. s re-establish a USB data connection. Hard Reset Hard Reset Power Role Data Role TheH foalrldo wRiensget sections describe the PstHeYp sL areyqeruired for a USB PowShear lDlelivery. The returns the operationP oofr tt hPea rUtSnBer Power Delivery to default / and operating voltage/current. During the USB Power Delivery communications be disabled preventing communication bNeottwe:een thHea rd Reset. Port Hard Reset Hard Reset Port, in this case, is applied to the USB Power Delivery capability of an individual on which the is requested. A side effect of the is that it might reset other functions on the Hard Reset Source Figure 8.30, \"Source initiated Hard Reset\" Message Hard Reset This is an example of a operation when initiated by a. shows the s as they flow acrFoisgsu trhee 8 b.3us0 aSnodu wrcieth iinni ttihaet eddev Hicaersd t oR aecsceotmplish the. Source Sink : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Hard Reset Start NoResponseTimer Wait tPSHardReset Reset MessageIDCounterand Reset Power Supply RetryCounter Reset Port Data Role to DFP Turn off VCONN 2: Send Hard Reset 3: Hard Reset 4: Hard Reset received Channel disabled Channel disabled Reset MessageIDCounterand RetryCounter 5: Hard Reset received Reset Power Sink Reset Port Data Role to UFP Turn off VCONN Power Sink Reset 6: Power Sink Reset 7: Hard Reset Complete Channel enabled Power Supply Reset Turn on VCONN 8: Power Supply Reset 9: Hard Reset Complete Channel enabled Hard Reset Complete 10: Send Capabilities 11: Capabilities 12: Capabilities + CRC Start CRCReceiveTimer 13: Capabilities Store copy of MessageID 14: Capabilities received 15: GoodCRC 16: GoodCRC + CRC Evaluate Capabilities 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Capabilities sent Stop NoResponseTimer Start SenderResponseTimer Table8.57, \"Steps for Source initiated Hard Reset\" Figure 8.30, \"Source initiated Hard Reset\" below provides a detailed explanation of what happens at each labeled step in Table8.57 Steps for Sou arbcoev ien.itiated Hard Reset Step Source Sink Policy Engine Protocol Layer Hard ResetSignaling The directs the to Policy Engine NoResponseTimer generate. DPM USB The starts the and Default Operation Policy Engine DPM Port Data Role DFP. The requests the VCONN to reset the to and to turn off Protocol Layer MessageIDCounter if this is on. RetryCounter. resets and Protocol Layer PHY Layer Hard Reset requests the send PHY Layer Hard ResetSignaling PHY Layer Hard ResetSignaling. PHY Layer PHY Layer sends and then receives the and PHY Layer Protocol Layer Hard Reset transmission and reception. transmission and reception. Protocol Layer MessageIDCounter informs the of the. RetryCounter Protocol Layer Policy Engine. Hard Reset The informs the of the Policy Engine DPM. Sink USB Default Operation Policy Engine The requests the to reset the Power to. The VCONN requests the to reset the to Sink USB Default Operation and to turn off if this is on. Policy Engine Protocol Layer The Power returns to. Sink Protocol Layer PHY Layer Hard Power has been reset. Reset The informs the that the PHY Layer PHY Layer is complete. The enables the communications USB Default Operation channel for transmission and reception. VCONN The power supply is reset to. and Policy Engine Protocol Layer is turned on. The informs the that the Protocol Layer PHY Layer Hard power supply has been reset. Reset PHY Layer PHY Layer The informs the that the is complete. The enables the communications channel for transmission and reception. Policy Engine Protocol Layer The reset is complete and protocol communication can restart. Source_CapabilitiesMessage directs the to send a Protocol Layer Message PHY power supply’s present capabilities. Layer creates the and passes to. Source_CapabilitiesMessage CRCReceiveTimer CRC Message appends and sends the receives the. Starts. and checks the to verify the. Table8.57 Steps for Source initiated Hard Reset Step Source Sink PHY Layer CRC Source_CapabilitiesMessage Protocol Layer removes the and forwards the to the. Message stores the of the incoming Protocol Layer. Source_CapabilitiesMessage Policy Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Source_CapabilitiesMessage informs the that the was successfully sent. SenderResponseTimer stops the and starts the. USB Power Delivery communication is re-established. Hard Reset Sink Figure 8.31, \"Sink Initiated Hard Reset\" Message Hard Reset This is an example of a operation when initiated by a. shows the s as they flow across the Fbiugsu arned 8 w.3i1th Sinin tkh eI ndietviaicteesd t Ho aarcdco Rmepsleisth the. Source Sink : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Hard Reset Reset MessageIDCounter, Reset Power Sink stored copy of MessageIDand Reset Port Data Role to UFP RetryCounter Turn off VCONN 2: Send Hard Reset 3: Hard Reset 4: Hard Reset received Channel disabled Reset MessageIDCounter, stored Channel disabled copy of MessageIDand RetryCounter Power Sink Reset 5: Hard Reset received 6: Power Sink Reset 7: Hard Reset Complete Start NoResponseTimer Reset Power Supply Reset Port Data Role to DFP Channel enabled Turn off VCONN Power Supply Reset Turn on VCONN 8: Power Supply Reset 9: Hard Reset Complete Channel enabled Hard Reset Complete 10: Send Capabilities 11: Capabilities 12: Capabilities + CRC Start CRCReceiveTimer 13: Capabilities Store copy of MessageID 14: Capabilities received 15: GoodCRC 16: GoodCRC + CRC Evaluate Capabilities 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Capabilities sent Stop NoResponseTimer Start SenderResponseTimer Table8.58, \"Steps for Sink initiated Hard Reset\" Figure 8.31, \"Sink Initiated Hard Reset\" below provides a detailed explanation of what happens at each labeled step in Table8.58 Steps for aSbinovke i.nitiated Hard Reset Step Source Sink Policy Engine Protocol Layer Hard ResetSignaling The directs the to Policy Engine DPM generate. USB Default Operation Policy Engine The requests the to reset the power supply to. The VCONN requests the to reset the to Protocol Layer MessageIDCounter and to turn off if this is on. MessageID RetryCounter resets, stored copy Protocol Layer PHY Layer Hard Reset of and. requests the send PHY Layer Hard ResetSignaling PHY Layer Hard ResetSignaling. PHY Layer PHY Layer receives the and sends the and then PHY Layer Protocol Layer Hard transmission and reception. transmission and reception. Reset informs the of the Protocol Layer MessageIDCounter. resets, stored copy Protocol Layer Policy Engine of and. Hard Reset The Informs the of the Policy Engine NoResponseTimer. DPM Sink USB Default The starts the and Operation Policy Engine DPM Port Data Role DFP VCONN. The requests the to reset the to and to turn off if Sink USB Default Operation this is on. Policy Engine Protocol Layer The Power returns to. Sink Protocol Layer PHY Layer Hard Power has been reset. Reset The informs the that the PHY Layer PHY Layer is complete. The enables the communications USB Default Operation channel for transmission and reception. VCONN The power supply is reset to and Policy Engine Protocol Layer is turned on. The informs the that the Protocol Layer PHY Layer Hard power supply has been reset. Reset PHY Layer PHY Layer The informs the that the is complete. The enables the communications channel for transmission and reception. Policy Engine Protocol Layer The reset is complete and protocol communication can restart. Source_CapabilitiesMessage directs the to send a Protocol Layer Message PHY power supply’s present capabilities. Layer creates the and passes to. Source_CapabilitiesMessage CRCReceiveTimer CRC Message appends and sends the receives the. Starts. and checks the to verify the. Table8.58 Steps for Sink initiated Hard Reset Step Source Sink PHY Layer CRC Source_CapabilitiesMessage Protocol Layer removes the and forwards the to the. Message stores the of the incoming Protocol Layer. Source_CapabilitiesMessage Policy Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Source_Capabilities Message informs the that the was successfully sent. SenderResponseTimer stops the and starts the. USB Power Delivery communication is re-established. Hard Reset Source Sink Source Source_CapabilitiesMessage GoodCRC MTheisss aisg aen example oFfi gau re 8.32, \"So ouprecrea itnioitnia wtehde rne isneitt -i aStiendk bloyn ag reset\". In this exaMmepslsea tghee is slow responding to the reset causing the to send multipHlea rd Reset s before it receives a response. shows the s as they flow across the bus and within the devices to aFcigcoumrep 8li.s3h2 t hSeo urce initia.ted reset - Sink long reset Source Sink : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Hard Reset 2: Send Hard Reset Start NoResponseTimer 3: Hard Reset Wait tPSHardReset 4: Hard Reset received Reset Power Supply 5: Hard Reset received Reset Port Data Role to DFP Channel disabled Turn off VCONN Channel disabled Reset Power Sink Reset Port Data Role to UFP Turn off VCONN Power Supply Reset Turn on VCONN 6: Power Supply Reset Reset MessageIDCounter, stored copy of MessageIDand RetryCounter 7: Hard Reset Complete Channel enabled 8: Send Capabilities 9: Capabilities 10: Capabilities + CRC Run SourceCapabilityTimer Power Sink Reset Send Capabilities messages until GoodCRC response is 11: Power Sink Reset received. Reset MessageIDCounter, stored copy of MessageIDand RetryCounter 12: Hard Reset Complete Channel enabled Hard Reset Complete 13: Send Capabilities 14: Capabilities 15: Capabilities + CRC Start CRCReceiveTimer 16: Capabilities Store copy of MessageID 17: Capabilities received 18: GoodCRC 19: GoodCRC + CRC 20: GoodCRC Evaluate Capabilities Check and increment MessageIDCounter Stop CRCReceiveTimer 21: Capabilities sent Stop SourceCapabilitiesTimer Stop NoResponseTimer Start SenderResponseTimer Table8.59, \"Steps for Source initiated Hard Reset - Sink long reset\" Figure 8.32, \"Source initiated reset - Sink long reset\" below provides a detailed explanation of what happens at each labeleTda sbtleep8 i.n5 9 Steps for Source initiated Hard Reset - Sink lo nabgo rvees.et Step Source Sink Policy Engine Protocol Layer Hard ResetSignaling The directs the to Policy Engine NoResponseTimer generate. DPM USB The starts the and Default Operation Policy Engine DPM Port Data Role DFP. The requests the VCONN to reset the to and to turn off Protocol Layer MessageIDCounter if this is on. MessageID RetryCounter resets, stored copy Protocol Layer PHY Layer Hard Reset of and. requests the send PHY Layer Hard Reset Signaling PHY Layer Hard ResetSignaling. PHY Layer PHY Layer sends the and then receives the and PHY Layer Protocol Layer Hard Reset transmission and reception. transmission and reception. Protocol Layer MessageIDCounter informs the of the. MessageID RetryCounter Protocol Layer Policy Engine of and. Hard Reset The Informs the of the Policy Engine DPM. Sink USB Default Operation Policy Engine The requests the to reset the Power to. The VCONN requests the to reset the to USB Default Operation and to turn off if this is on. VCONN The power supply is reset to and Policy Engine Protocol Layer is turned on. The informs the that the Protocol Layer PHY Layer Hard power supply has been reset. Reset The informs the that the PHY Layer PHY Layer is complete. The enables the communications channel for transmission and reception. Policy Engine Protocol Layer The reset is complete and protocol communication can restart. Source_CapabilitiesMessage directs the to send a Policy Engine that represents the SourceCapabilityTimer pSoouwrecre sCuapppalyb’isl iptyrTesimenetr capabilities. starts t Gh oe odCRC Message. The times out one or more times Protocol Layer Message PHY until a response is received. Layer creates the and passes to. Source_CapabilitiesMessage CRCReceiveTimer appends and sends the not received since Policy Engine Protocol Layer The Power returns to. The Sink Power has been reset. Table8.59 Steps for Source initiated Hard Reset - Sink long reset Step Source Sink Protocol Layer PHY Layer Hard Reset The informs the that the PHY Layer PHY Layer is complete. The enables the communications channel for transmission and reception. Policy Engine Protocol Layer The reset is complete and protocol communication can restart. Source_CapabilitiesMessage directs the to send a power supply’s present capabilities. Starts the Protocol Layer Message PHY. Layer creates the and passes to. Source_CapabilitiesMessage CRCReceiveTimer CRC Message appends and sends the receives the. Starts. and checks the to verify the. Source_CapabilitiesMessage Protocol Layer removes the and forwards the to the. Message stores the of the incoming Protocol Layer. Source_CapabilitiesMessage Policy Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Source_Capabilities Message informs the that the Policy Engine SourceCapabilityTimer NoResponseTimer SenderRespon ssteoTpism there, stops the and starts the. USB Power Delivery communication is re-established. Power Role Swap Port Message Source R CC This is an example oNfe ag osuticacteiosnsful operation initiated by Eax plici tw Choincthr aincittially, Saetc tthioen s 8ta.3rt.2 o.2f,t his \"Power N seegqouteiantcioen, i\"s acting as a and therefore has p pulled up on its wire. It does not include any subsequent Power which is required in order to establish an (see ). Power Role Swap The- re are PfoRu_rS wdiastpinMcet spshaagsees to the : - A AcceptM essage is sent. PR_SwapMessage - An New S ink in response to the vSafe0V. R PS_RDYMessage The sets its power output to, then asserts d and sends a when this - procNesesw i sS ocuomrcpelete. R vSafe5V PS_RDYMessage The asserts p, then sets its power output to and sends a when it Figure 8i.3s 3r,e \"aSduyc ctoes ssufuplp Plyo wpeorw Reorl.e Swap Sequence Initiated by the Source\" Message Power Role Swap shows the s as they flow across the bus and within the devices to accomplish the sequence. Figure 8.33 Successful Power Role Swap Sequence Initiated by the Source Initial Source Port Initial Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send PR_Swap 2:PR_Swap 3: PR_Swap + CRC Start CRCReceiveTimer 4: PR_Swap Check MessageID against local copy Store copy of MessageID 5: PR_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9:PR_Swap sent Evaluate PR_Swap Start SenderResponseTimer request 10: Send Accept 11: Accept 12: Accept + CRC 13: Accept Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Tell Power Supply to stop sourcing power Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Accept sent Start PSSourceOffTimer Power Supply stops sourcing power Tell Power Sink to stop CC -> Rd sinking current 19: Send PS_RDY Port Power Role -> Sink 20: PS_RDY 21: PS_RDY + CRC Start CRCReceiveTimer 22: PS_RDY Check MessageID against local copy Store copy of MessageID 23: PS_RDY received 24: GoodCRC 25: GoodCRC + CRC 26: GoodCRC Port Power Role -> Source Check and increment MessageIDCounter Stop CRCReceiveTimer Stop PSSourceOffTimer 27: PS_RDY sent Set Power SC uC p - p> ly R tp o 5V output Start PSSourceOnTimer Power Supply reaches 5V output 28: Send PS_RDY 29: PS_RDY 30: PS_RDY + CRC 31: PS_RDY Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 32: PS_RDY received 33: GoodCRC 34: GoodCRC + CRC Stop PSSourceOnTimer 35: GoodCRC Tell Power Sink to start sinking power Check and increment MessageIDCounter Reset Protocol Layer Stop CRCReceiveTimer 36: PS_RDY sent Reset CapsCounter Reset Protocol Layer Start SwapSourceStartTimer New Power Roles Table8.60, \"Steps for a Successful Source Initiated Power Role Swap Sequence\" Figure 8.33, \"Successful Power Role Swap Sequence Initiated by the Source\" below provides a detailed explanation of what happens at each labeled step in aboTvea.ble8.60 Steps for a Successful Source Initiated Power Role Swap Sequence Step Initial Source Port Initially Sink Port Port Port Power Role Source R CC Port Port Power Role Sink R The has set to and the p Policy Engine Protocol Layer CC pull up on its wire. The has set to with the d pull directs the to send a down on its wire. Protocol Layer Message PHY. Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and checks. Starts. the to verify the. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer PR_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. PR_SwapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine PR_SwapMessage starts. Source evaluates the sent by Power Role Swap Protocol Layer the and decides that it is able and willing to do the. It tells the to form an Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC Accept Accept receives the and compares the Message CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer Accept and then stores a copy of the new value. The forwards the received information to the that Policy Engine consumes it. SenderResponseTimer The requests its power supply to stop supplying power and stops the. PHY Layer generates a and passes it. Table8.60 Steps for a Successful Source Initiated Power Role Swap Sequence Step Initial Source Port Initially Sink Port PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. AcceptMessage Policy informs the that the was successfully sent. The starts the and tells the power Policy Engine supply to stop sinking current. VBUS Policy Engine The determines its power supply is no DPM R CC longer supplying. The requests the Policy Engine Protocol Layer to assert the d pull down on the wire. The PS_RDYMessage Port Power Role Message Sink Port Partner generate a, with the VBUS set to, to tell its that it can Protocol Layer Port Power RoleMessage begin to source. Sink Message PHY Layer sets the to, creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and checks the. Starts. to verify the. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer PS_RDY and then stores a copy of the new value. Message Policy Engine The forwards the received Policy Engine PSSourceOffTimer DPM R consumes it. The stops the, directs the to apply the p pull vSafe5VSource up and then starts switching the power supply to Protocol Layer GoodCRCMessage operation. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. PS_RDYMessage Policy Engine PSSourceOnTimer was successfully sent. Policy Engine starts. Protocol Layer PS_RDY, when its power supply is ready to supply Message Port Power RoleMessage Source Protocol Layer PS_RDYMessage. The is set to. PHY Layer creates the and passes to. Table8.60 Steps for a Successful Source Initiated Power Role Swap Sequence Step Initial Source Port Initially Sink Port PHY Layer PS_RDYMessage PHY Layer CRC PS_RDY CRC receives the and compares Message CRCReceiveTimer Message appends a and sends the PHY Layer CRC PS_RDY. Starts.. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer PS_RDY and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. PHY Layer GoodCRCMessage Message Policy Engine appends a and sends the CRC PSSourceOnTimer receives and compares Message, informs the power supply it can PHY Lay.er CRC GoodCRC now sink power and resets the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. PS_RDYMessage Policy informs the that the Engine CapsCounter Protocol was successfully sent. The resets the, resets the Source_Capabilities and starts the which Message must timeout before sending any Power Role Swap Power Role Port Partner Negotiate s. The is complete, the s have been reversed and the s are free to for more power. Power Role Swap Port Message Source R CC This is an example of a rejected operation initiated by a which initially, at the start of this sequence, is acting as aP ower R aonled Stwhearpefore has p pulled up on its wire. The- re are PseRv_eSrwaal pphMaesesssa tgoe the : - A RejectM essage is sent. PR_SwapMessage Figure 8A.3n4, \"Rejec ted Powe irn R roelsep Sownaspe tSoe qthueen ce Initiat ed by the. Source\" Message shows the s as they flow across the bus and withinF tihgeu rdee v8i.c3e4s.Rejected Power Role Swap Sequence Initiated by the Source Initial Source Port Initial Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send PR_Swap 2:PR_Swap 3: PR_Swap + CRC Start CRCReceiveTimer 4: PR_Swap Check MessageID against local copy Store copy of MessageID 5: PR_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9:PR_Swap sent Evaluate PR_Swap Start SenderResponseTimer request 10: Send Reject 11: Reject 12: Reject + CRC 13: Reject Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Reject received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Tell Power Supply to stop sourcing power Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Reject sent Table8.61, \"Steps for a Rejected Source Initiated Power Role Swap Sequence\" Figure 8.34, \"Rejected Power Role Swap Sequence Initiated by the Source\" below provides a detailed explanation of what happens at each labeled step in above. Table8.61 Steps for a Rejected Source Initiated Power Role Swap Sequence Step Initial Source Port Initially Sink Port Port Port Power Role Source R CC Port Port Power Role Sink R The has set to and the p Policy Engine Protocol Layer CC pull up on its wire. The has set to with the d pull directs the to send a down on its wire. Protocol Layer Message PHY. Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and checks. Starts. the to verify the. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer PR_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. PR_SwapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine PR_SwapMessage starts. Source evaluates the sent by Power Role Swap Protocol Layer the and decides that it is unable and unwilling to do the. It tells the to Protocol Layer Message PHY form a. Layer creates the and passes to PHY L.ayer CRC Reject Reject receives the and compares the Message CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer Reject and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.61 Steps for a Rejected Source Initiated Power Role Swap Sequence Step Initial Source Port Initially Sink Port PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the was successfully sent. Power Role Swap Port Message Source R CC This is an example of a operation, with a wait response, initiated by a which initially, at the start of this sequence, isP oawcteinr gR oasle a S wap and therefore has p pulled up on its wire. The- re are PseRv_eSrwaal pphMaesesssa tgoe the : - A WaitMes sage is sent. PR_SwapMessage Figure 8A.3 5, \"Po wer Role iSnw raeps pSoenqusee ntoce t hwei th wait Ini tiated by. the Source\" Message shows the s as they flow across the bus and withinF itghue rdee 8vi.c3e5s.Power Role Swap Sequence with wait Initiated by the Source Initial Source Port Initial Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send PR_Swap 2:PR_Swap 3: PR_Swap + CRC Start CRCReceiveTimer 4: PR_Swap Check MessageID against local copy Store copy of MessageID 5: PR_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9:PR_Swap sent Evaluate PR_Swap Start SenderResponseTimer request 10: Send Wait 11: Wait 12: Wait + CRC 13: Wait Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Wait received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Tell Power Supply to stop sourcing power Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Wait sent Table8.62, \"Steps for a Source Initiated Power Role Swap with Wait Sequence\" Figure 8.35, \"Power Role Swap Sequence with wait Initiated by the Source\" below provides a detailed explanation of what happens at each labeled step in above. Table8.62 Steps for a Source Initiated Power Role Swap with Wait Sequence Step Initial Source Port Initially Sink Port Port Port Power Role Source R CC Port Port Power Role Sink R The has set to and the p Policy Engine Protocol Layer CC pull up on its wire. The has set to with the d pull directs the to send a down on its wire. Protocol Layer Message PHY. Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and checks. Starts. the to verify the. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer PR_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. PR_SwapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine PR_SwapMessage starts. Source evaluates the sent by Power Role Swap Protocol the and decides that it is able and willing to do the but not at this time. It tells the Protocol Layer Message PHY to form a. Layer creates the and passes to PHY L.ayer CRC WaitMessage Wait receives the and compares the CRCReceiveTimer Message appends a and sends the. Protocol Layer MessageID Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer WaitMessage Policy Engine The forwards the received Policy Engine SenderResponseTimer information to the that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.62 Steps for a Source Initiated Power Role Swap with Wait Sequence Step Initial Source Port Initially Sink Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine Wait and stops. informs the that the was successfully sent. Power Role Swap Port Message Sink R CC This is an example oNfe ag osuticacteiosnsful operation initiated by Eax plici tw Choincthr aincittially, Saetc tthioen s 8ta.3rt.2 o.2f,t his \"Power N seegqouteiantcioen, i\"s acting as a and therefore has d pulled down on its wire. It does not include any subsequent Power which is required in order to establish an (see ). Power Role Swap The- re are PfoRu_rS wdiastpinMcet spshaagsees to the : - A AcceptM essage is sent. PR_SwapMessage - An New S ink in response to the vSafe0V. R PS_RDYMessage The sets its power output to, then asserts d and sends a when this - procNesesw i sS ocuomrcpelete. R vSafe5V PS_RDYMessage The asserts p, then sets its power output to and sends a when it Figure 8i.3s 6r,e \"aSduyc ctoes ssufuplp Ployw peorw Reorl.e Swap Sequence Initiated by the Sink\" Message Power Role Swap shows the s as they flow across the bus and within the devices to accomplish the. Figure 8.36 Successful Power Role Swap Sequence Initiated by the Sink Initial Sink Port Initial Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send PR_Swap 2:PR_Swap 3: PR_Swap + CRC Start CRCReceiveTimer 4: PR_Swap Check MessageID against local copy Store copy of MessageID 5: PR_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9:PR_Swap sent Evaluate PR_Swap Start SenderResponseTimer request 10: Send Accept 11: Accept 12: Accept + CRC 13: Accept Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Start PSSourceOffTimer Check and increment MessageIDCounter Tell Power Sink to stop Stop CRCReceiveTimer sinking current 18: Accept sent Tell Power Supply to stop sourcing power Power Supply stops sourcing power CC -> Rd 19: Send PS_RDY Port Power Role -> Sink 20: PS_RDY 21: PS_RDY + CRC 22: PS_RDY Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 23: PS_RDY received 24: GoodCRC 25: GoodCRC + CRC Port Power Role -> Source 26: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Stop PSSourceOffTimer CC -> Rp 27: PS_RDY sent Set Power Supply to 5V output Start PSSourceOnTimer Power Supply reaches 5V output 28: Send PS_RDY 29: PS_RDY 30: PS_RDY + CRC Start CRCReceiveTimer 31: PS_RDY Check MessageID against local copy Store copy of MessageID 32: PS_RDY received 33: GoodCRC 34: GoodCRC + CRC 35: GoodCRC Stop PSSourceOnTimer Check and increment MessageIDCounter Tell Power Supply to start Stop CRCReceiveTimer sinking power Reset Protocol Layer 36: PS_RDY sent Reset CapsCounter Reset Protocol Layer Start SwapSourceStartTimer New Power Roles Table8.63, \"Steps for a Successful Sink Initiated Power Role Swap Sequence\" Figure 8.36, \"Successful Power Role Swap Sequence Initiated by the Sink\" below provides a detailed explanation of what happens at each labeled step in above. Table8.63 Steps for a Successful Sink Initiated Power Role Swap Sequence Step Initial Sink Port Initial Source Port Port Port Power Role Sink R CC Port Port Power Role Source R The has set to with the d Policy Engine Protocol Layer CC pull down on its wire. The has set to and the p directs the to send a pull up on its wire. Protocol Layer Message PHY. Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and checks. Starts. the to verify the. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer PR_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. PR_SwapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine PR_SwapMessage starts. Sink evaluates the sent by Power Role Swap Protocol Layer the and decides that it is able and willing to do the. It tells the to form an Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC AcceptMessage Accept receives the and compares the CRCReceiveTimer Message appends a and sends the. Protocol Layer MessageID Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer Accept and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. PSSourceOffTimer The stops the, to stop sinking current. Table8.63 Steps for a Successful Sink Initiated Power Role Swap Sequence Step Initial Sink Port Initial Source Port Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. AcceptMessage Policy Engine was successfully sent. The Policy Engine tells the power supply to stop supplying power. VBUS Policy Engine The determines its power supply is no DPM R CC longer supplying. The requests the Policy Engine Protocol Layer to assert the d pull down on the wire. The PS_RDYMessage Port Power Role Message Sink Port Partner generate a, with the VBUS set to, to tell its that it can Protocol Layer Port Power RoleMessage Sink begin to source. Message PHY Layer sets the to, creates the and passes to. CRC Message CRCReceiveTimer receives the and checks the appends and sends the. to verify the. Starts. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer PS_RDY and then stores a copy of the new value. Message Policy Engine The forwards the received Policy Engine PSSourceOffTimer DPM R consumes it. The stops the, directs the to apply the p vSafe5VSource pull up and then starts switching the power supply to Protocol Layer GoodCRCMessage operation. PHY Layer generates a and passes it. Message CRC Message appends and sends the receives the and checks. the to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. PS_RDYMessage Policy Engine PSSourceOnTimer was successfully sent. Policy Engine starts. Protocol Layer PS_RDY, when its power supply is ready to Message Port Power RoleMessage Source Protocol Layer PS_RDYMessage. The is set to. PHY Layer creates the and passes to. Table8.63 Steps for a Successful Sink Initiated Power Role Swap Sequence Step Initial Sink Port Initial Source Port PHY Layer PS_RDYMessage PHY Layer CRC PS_RDY CRC Message CRCReceiveTimer receives the and compares appends a and sends the Message. Starts. PHY Layer CRC PS_RDY. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer PS_RDY and then stores a copy of the new value. Message Policy Engine The forwards the received information to the that PSSourceOnTimer consumes it. The stops the, informs the power supply that it can Protocol Layer GoodCRCMessage start consuming power. PHY Layer generates a and PHY Layer GoodCRCMessage passes it. Message Policy Engine CRC appends a and sends the receives and compares PSSourceOnTimer Message, informs the power supply it can PHY Laye.r CRC GoodCRC now sink power and resets the. Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. PS_RDYMessage Policy informs the that the Engine CapsCounter Protocol was successfully sent. The resets the, resets the Source_Capabilities and starts the which Message must timeout before sending any Power Role Swap Power Role Port Partner Negotiate s. The is complete, the s have been reversed and the s are free to for more power. Power Role Swap Port Message Sink R CC This is an example of a rejected operation initiated by a which initially, at the start of this sequence, is acting as aP owe ar nRdo lteh Sewreafopre has d pulled down on its wire. The- re are PseRv_eSrwaal pphMaesesssa tgoe the : - A RejectMe ssage is sent. PR_SwapMessage Figure 8A.3 7, \"Reje cted Pow ienr rReoslpeo Snwsae pt oS ethqeu ence Initia ted by th.e Sink\" Message shows the s as they flow across the bus and within the dFeigvuicrees.8.37 Rejected Power Role Swap Sequence Initiated by the Sink Initial Sink Port Initial Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send PR_Swap 2:PR_Swap 3: PR_Swap + CRC Start CRCReceiveTimer 4: PR_Swap Check MessageID against local copy Store copy of MessageID 5: PR_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9:PR_Swap sent Evaluate PR_Swap Start SenderResponseTimer request 10: Send Reject 11: Reject 12: Reject + CRC 13: Reject Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Reject received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Reject sent Table8.64, \"Steps for a Rejected Sink Initiated Power Role Swap Sequence\" Figure 8.37, \"Rejected Power Role Swap Sequence Initiated by the Sink\" below provides a detailed explanation of Table8.64 Steps for a Rejected Sink Initiated Power Role Swap Sequence what happens at each labeled step in above. Step Initial Sink Port Initial Source Port Port Port Power Role Sink R CC Port Port Power Role Source R The has set to with the d Policy Engine Protocol Layer CC pull down on its wire. The has set to and the p directs the to send a pull up on its wire. Protocol Layer Message PHY. Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and checks. Starts. the to verify the. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer PR_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. PR_SwapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine PR_SwapMessage starts. Sink evaluates the sent by Power Role Swap Protocol Layer the and decides that it is unable and unwilling to do the. It tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC Accept Reject receives the and compares the Message CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer Reject and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.64 Steps for a Rejected Sink Initiated Power Role Swap Sequence Step Initial Sink Port Initial Source Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the was successfully sent Power Role Swap Port Message Sink R CC This is an example of a operation, responded to with wait, initiated by a which initially, at the start of this sequence, isP oawcteinr gR oasle a S wap and therefore has d pulled down on its wire. The- re are PseRv_eSrwaal pphMaesesssa tgoe the : - A WaitMes sage is sent. PR_SwapMessage Figure 8A.3 8, \"Po wer Role Sinw raeps pSeoqnuseen tcoe t wheit h wait Init iated by t.he Sink\" Message shows the s as they flow across the bus and within the Fdiegvuicrees 8..38 Power Role Swap Sequence with wait Initiated by the Sink Initial Sink Port Initial Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send PR_Swap 2:PR_Swap 3: PR_Swap + CRC Start CRCReceiveTimer 4: PR_Swap Check MessageID against local copy Store copy of MessageID 5: PR_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9:PR_Swap sent Evaluate PR_Swap Start SenderResponseTimer request 10: Send Wait 11: Wait 12: Wait + CRC 13: Wait Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Wait received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Wait sent Table8.65, \"Steps for a Sink Initiated Power Role Swap with Wait Sequence\" Figure 8.38, \"Power Role Swap Sequence with wait Initiated by the Sink\" below provides a detailed explanation of what happens at each labeled step in above. Table8.65 Steps for a Sink Initiated Power Role Swap with Wait Sequence Step Initial Sink Port Initial Source Port Port Port Power Role Sink R CC Port Port Power Role Source R The has set to with the d Policy Engine Protocol Layer CC pull down on its wire. The has set to and the p directs the to send a pull up on its wire. Protocol Layer Message PHY. Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and checks. Starts. the to verify the. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer PR_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. PR_SwapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine PR_SwapMessage starts. Sink evaluates the sent by Power Role Swap Protocol the and decides that it is able and willing to do the but not at this time. It tells the Protocol Layer Message PHY to form a. Layer creates the and passes to PHY La.yer CRC WaitMessage Wait receives the and compares the CRCReceiveTimer Message appends a and sends the. Protocol Layer MessageID Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer WaitMessage Policy Engine The forwards the received Policy Engine SenderResponseTimer information to the that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.65 Steps for a Sink Initiated Power Role Swap with Wait Sequence Step Initial Sink Port Initial Source Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Wait Message receives and compares the appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine Wait and stops. informs the that the was successfully sent Fast Role Swap Port Source R CC vSafe5V This is an example oNf eag soutciacetisosnful operation initiated by a Exp tlhicaitt iCso innittriaacllty a Secti aonnd 8 t.3h.e2r.2e,f ore h\"Paosw ep r p Nuellgeodt uiapt ioonn \"its wire and which has lost power and needs to get quickly. It does not include any subsequent Power which is required in order to establish an (see ). Fast Role SwapNegotiation The- re are seIvneirtaial ld Siostuirnccet phases to the : vSafe0V Fast Role Swap Request CC The stops driving its power output which starts transitioning to and send the - Initial Sink on the wire; these could ocNceuwr iSno euirtcheer order oRr simultaneously. New Sink R The stops sinking power. At this point the still has d asserted and the - stillF hRa_sS wpa apsMseerstseadg.e New Source tFRSwapInit - An AcceptM essage is sent by thNee w Sink within FR_Sw aopf dMeetesscatigneg the Fast Swap signal. - An New S ink is Rsent by the PS_RD iYnM reesspsaognese to the. VBUS vSafe5V The asserts d and sends a indicating that the voltage on is at or below - New. Source R PS_RDYMessage Source vSafe5V The asserts p and sends a indicating that it is acting as a and is sup Note: plying New Sour.ce VBUS VBUS vSafe5V VBUS vSafe5V tSrcFRSwap Fast Role Swap Request VBUS The canv sStaarfet 5aVpplying when is at or below (max) but will start driving to no later than after detecting both the and that Figure 8.39h,a \"sS durcocepspsefudl bFealsotw R ole Swap (Smeqiune).nce\" Message Fast Role Swap shows the s as they flow across the bus and within the devices to accomplish the. Figure 8.39 Successful Fast Role Swap Sequence Initial Sink Port Initial Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp Fast Swap signal (CC driven to Gnd through Tell Power Supply to Stop sourcing power and rFRSwapTx or switch to Sink operation rFRSwapCableTx) Signal Fast Swap on the CC Wire Fast Role Swap signal detected on CC Wire Tell Power Supply to stop sinking current. 1: Send FR_Swap 2:FR_Swap 3: FR_Swap + CRC Start CRCReceiveTimer 4: FR_Swap Check MessageID against local copy Store copy of MessageID 6: GoodCRC 5: FR_Swap received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9:FR_Swap sent Evaluate FR_Swap request Start SenderResponseTimer 10: Send Accept 11: Accept 12: Accept + CRC 13: Accept Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Start PSSourceOffTimer Stop CRCReceiveTimer 18: Accept sent Power Supply acting as a Sink and VBUSat or below vSafe5V CC -> Rd 19: Send PS_RDY Port Power Role -> Sink 20: PS_RDY 21: PS_RDY + CRC 22: PS_RDY Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 23: PS_RDY received 24: GoodCRC 25: GoodCRC + CRC Port Power Role -> Source 26: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 27: PS_RDY sent Start PSSourceOnTimer vSafe5V is being sourced by the new Source Stop PSSourceOffTimer CC -> Rp 28: Send PS_RDY 29: PS_RDY 30: PS_RDY + CRC Start CRCReceiveTimer 31: PS_RDY Check MessageID against local copy Store copy of MessageID 33: GoodCRC 32: PS_RDY received 34: GoodCRC + CRC 35: GoodCRC Check an Sd t oin pc Cre Rm Ce Rn et c M eie vs es Ta ig me eID rCounter S Rto ep s P etS PS ro ou torc ce oO l Ln aT yim erer 36: PS_RDY sent Reset CapsCounter Reset Protocol Layer Start SwapSourceStartTimer New Power Roles Table8.66, \"Steps for a Successful Fast Role Swap Sequence\" Figure 8.39, \"Successful Fast Role Swap Sequence\" below provides a detailed explanation of what happens at each labeled step in Table8.66 Steps for a Successful Fast Role Sawboavpe S.equence Step Initial Sink Port Initial Source Port Port Port Power Role Sink R Port Port Power Role Source R CC CC The has set to with the d The has set to and the p DPM CC DPM pull down on its wire. pull up on its wire. Sink The detects Fast Swap on the wire and tells the The tells the Power Supply to stop sourcing power Policy Engine Protocol Layer DPM CC CC FR_SwapMessage tFRSwapInit rFRSwapTx The directs the to send an The tF sRiSgwnaalps TFaxst Swap on the wire by driving within of detecting the to ground with a resistance of less than for Protocol Layer Message PHY Fast Swap signal. at least. Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and checks. Starts. the to verify the. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer FR_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. FR_SwapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine PR_SwapMessage starts. Sink evaluates the sent by Power Role Swap Protocol Layer the and decides that it is able and willing to do the. It tells the to form an Protocol Layer Message PHY. Layer creates the and passes to PHY La.yer CRC AcceptMessage Accept receives the and compares the CRCReceiveTimer Message appends a and sends the. Protocol Layer MessageID Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer PR_Swap and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. PSSourceOffTimer The stops the, starts the. Table8.66 Steps for a Successful Fast Role Swap Sequence Step Initial Sink Port Initial Source Port Protocol Layer GoodCRCMessage PHY Layer generates a and PpHasYs eLsa yite r.CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Policy Engine was successfully sent. VBUS Sink Policy The determines its power supply is no Engine DPM R longer supplying and is acting as a. The CC Policy Engine Protocol requests the to assert the d pull down on Layer PS_RDYMessage Port Power RoleMessage Sink Port Partner to generate a, with the VBUS set to, to tell its Protocol Layer Port Power RoleMessage Sink that it can begin to source. Message PHY Layer sets the to, creates the and passes to. CRC Message CRCReceiveTimer receives the and checks appends and sends the. the to verify the. Starts. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer PS_RDY and then stores a copy of the new value. Message Policy Engine Policy Engine information to the that PSSourceOffTimer consumes it. The stops the Protocol Layer GoodCRCMessage. PHY Layer generates a and passes it. Message CRC Message appends and sends the receives the and checks. the to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. PS_RDYMessage Policy Engine PSSourceOnTimer was successfully sent. starts. Table8.66 Steps for a Successful Fast Role Swap Sequence Step Initial Sink Port Initial Source Port Policy Engine DPM R The directs the to apply the p pull uNpo.te: PS_RDY Message New Source At somvSea pfoei5nVt (either beforet Sorrc aFfRteSrw raepceiving the Fast Ro)l eth Sew ap Request has appVl Bi Ue Sd no later thvanSa fe5V after detecting the and that Policy Engi nheas dropped below. Protocol Layer PS_RDY, when its power supply is ready to Message Port Power RoleMessage Source supply power, tells the to form a Protocol Layer PS_RDYMessage. The is set to. PHY Layer creates the and passes tPoH Y Layer. CRC PS_RDY CRC Message CRCReceiveTimer receives the and compares appends a and sends the Message. Starts. PHY Layer CRC PS_RDY. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer PS_RDY and then stores a copy of the new value. Message Policy Engine Policy Engine information to the that PSSourceOnTimer consumes it. The stops the Protocol Layer GoodCRCMessage. PHY Layer generates a and pPHasYs eLsa iyte r. CRC GoodCRC CRC receives and compares Message Policy Engine Protocol Layer Message appends a and sends the PHY Layer CRC. The resets the.. GoodCRC Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. PS_RDYMessage Policy informs the that the Engine CapsCounter Protocol was successfully sent. The resets the, resets the Source_Capabilities and starts the which Message must timeout before sending any Fast Role Swap Power Role Port Partner Negotiate s. The is complete, the s have been reversed and the s are free to for more power. Figure 8.40, \"Data Role Swap, UFP operating as Sink initiates\" Port UFP Device Sink R Port DFP Host Source R Data Role Swap UFP shoPwosr ta nP aerxtanmerple sequence between a, which is iSnoiutiraclely a Sin (k ) and aR R ( d asserted), and a which isD iantitai aRlolyle a ( D) FaPndH ao st (Up F PassDeervteicde). A is initiated by the. During the process the s maintain their operation as either a or a (power anFdig upr/e 8d.r4e0m Daiant aco Rnostlean Stw) baupt, eUxFcPh aonpgeer ating as Ssi bnekt wineietina tes ( ) and ( ). Initial UFP Sink Port Initial DFP Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port DatC aC R = o lR e d =( USi Fn Pk ) (Device) Port DC aC ta = R R op le( S =o Du Frc Pe ) (Host) 1: Send Dr_Swap 2:Dr_Swap 3: Dr_Swap + CRC Start CRCReceiveTimer 4: Dr_Swap Check MessageID against local copy Store copy of MessageID 5: Dr_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Evaluate Dr_Swap request CC = Rp (Source) Check and increment MessageIDCounter Port Data Role = DFP (Host) Stop CRCReceiveTimer 9:Dr_Swap sent Start SenderResponseTimer CC = Rd (Sink) 10: Send Accept Port Data Role = UFP (Device) 11: Accept 12: Accept + CRC 13: Accept Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Accept sent Port DaC taC R = o R led -( >S Din Fk P) (Host) Port DaC taC R= o R lep -( >S o Uu Fr Pc e () Device) New Host/Device Roles Table8.67, \"Steps for Data Role Swap, UFP operating as Sink initiates\" Figure 8.40, \"Data Role Swap, UFP operating as Sink initiates\" below provides a detailed explanation of what happens at each labeTleadb lsete8p.6 in7 Steps for Data Role Swap, UFP operating as Sink initiate sabove. Step Initial UFP Sink Port Initial DFP Source Port Port UFP Device Sink R Port Data Role UFP Policy Port DFP Host Source R starts as a ( ) operating as a with d Engine Protocol Layer DR_Swap Port Data Role DFP asserted and set to. The starts as a ( ) operating as with p directs the to send a asserted and set to. Protocol Layer DR_SwapMessage. PHY Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and checks. Starts. the to verify the. DR_SwapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer DR_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. DR_SwapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DR_SwapMessage starts. Data Role evaluates the and Swap Protocol Layer Accept decides that it is able and willing to do the. It tells the to form an Protocol Layer AcceptMessage. PHY Layer creates the and passes to. CRC Message Message CRCReceiveTimer receives the and checks appends a and sends the the to verify the.. Starts. Message checks the in the incoming is different from the previously stored value Protocol Layer Accept and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and PpaHsYse Lsa ity er. CRC GoodCRC CRC Message receives and compares appends a and sends the Message.. Table8.67 Steps for Data Role Swap, UFP operating as Sink initiates Step Initial UFP Sink Port Initial DFP Source Port PHY Layer CRC GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer Policy Engine Data Role verifies and increments the Protocol Layer Policy Engine UFP Device DFP Host and stops. The requests that is changed AcceptMessage Data Role DFP Host informs the that the from ( ) to ( ). Policy Engine Data Role Port Data Role DFP Sink was successfully sent. R The requests that the is with set to, still operating as a UFP Source R changed to ( ), with set to ( d asserted). and continues supplying power as a ( p Data Role Swap Data Role asserted). The is complete; the s have been reversed while maintaining the direction of power flow. Figure 8.41, \"Rejected Data Role Swap, UFP operating as Sink initiates\" Port UFP Device Sink R Port DFP Host Source R Data Role Swap UFP showPs oarnt ePxaarmtnpelre sequence between a, which is iniStoiaulrlyc ea S (ink ) and a R (Rd asserted), and a which is initially aD ata R (ole ) and a ( p asserted). A is initiated by the. During the process the s maintain their operation as either a orF ai gure (8p.o4w1 eRre ajnecdt edp/ Dda trae mRoailne cSownaspta, nUtF) Pan odp tehrea etixncgh aansg Sei nokf initiatess is rejected. Initial UFP Sink Port Initial DFP Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port DatC aC R = o lR e d =( USi Fn Pk ) (Device) Port DC aC ta = R R op le( S =o Du Frc Pe ) (Host) 1: Send Dr_Swap 2:Dr_Swap 3: Dr_Swap + CRC Start CRCReceiveTimer 4: Dr_Swap Check MessageID against local copy Store copy of MessageID 5: Dr_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Evaluate Dr_Swap request CC = Rp (Source) Check and increment MessageIDCounter Port Data Role = DFP (Host) Stop CRCReceiveTimer 9:Dr_Swap sent Start SenderResponseTimer CC = Rd (Sink) 10: Send Reject Port Data Role = UFP (Device) 11: Reject 12: Reject + CRC 13: Reject Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Reject received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Reject sent Port DatC a C R o= l eR -d >( S Ui Fn Pk) (Device) Port DC aC ta = R R op le( S ->o u Dr Fc Pe ) (Host) Table8.68, \"Steps for Rejected Data Role Swap, UFP operating as Sink initiates\" Figure 8.41, \"Rejected Data Role Swap, UFP operating as Sink initiates\" below provides a detailed explanation of what happens at each labeled step in aboveT. able8.68 Steps for Rejected Data Role Swap, UFP operating as Sink initiates Step Initial UFP Sink Port Initial DFP Source Port Port UFP Device Sink R Port Data Role UFP Policy Port DFP Host Source R starts as a ( ) operating as a with d Engine Protocol Layer DR_Swap Port Data Role DFP asserted and set to. The starts as a ( ) operating as with p directs the to send a asserted and set to. Protocol Layer DR_SwapMessage. PHY Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and checks. Starts. the to verify the. DR_SwapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer DR_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. DR_SwapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DR_SwapMessage starts. Data evaluates the and Role Swap Protocol Layer Reject decides that it is unable and unwilling to do the. It tells the to form a Protocol Layer Reject Message. PHY Layer creates the and passes to. CRC Message Message CRCReceiveTimer receives the and checks the appends a and sends the to verify the.. Starts. Message checks the in the incoming is different from the previously stored value Protocol Layer Reject and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.68 Steps for Rejected Data Role Swap, UFP operating as Sink initiates Step Initial UFP Sink Port Initial DFP Source Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the was successfully sent. Figure 8.42, \"Data Role Swap with Wait, UFP operating as Sink initiates\" Port UFP Device Sink R Port DFP Host Source R Data Role Swap UFP showPso arnt ePxaarmtnperle sequence between a, which is iniStoiaulrlyc ea S (ink ) and a R (Rd asserted), and a which is initially Da ata R (ole ) and a ( p asserted). A is initiated by the. During the process the s maintain their operation as either a or a (power and p/ d remain constant) and the exchange of s is delayed with a wait. Figure 8.42 Data Role Swap with Wait, UFP operating as Sink initiates Initial UFP Sink Port Initial DFP Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port DatC aC R = o lR e d =( USi Fn Pk ) (Device) Port DC aC ta = R R op le( S =o Du Frc Pe ) (Host) 1: Send Dr_Swap 2:Dr_Swap 3: Dr_Swap + CRC Start CRCReceiveTimer 4: Dr_Swap Check MessageID against local copy Store copy of MessageID 5: Dr_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Evaluate Dr_Swap request CC = Rp (Source) Check and increment MessageIDCounter Port Data Role = DFP (Host) Stop CRCReceiveTimer 9:Dr_Swap sent Start SenderResponseTimer CC = Rd (Sink) 10: Send Wait Port Data Role = UFP (Device) 11: Wait 12: Wait + CRC 13: Wait Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Wait received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Wait sent Port DatC a C R o= l eR -d >( S Ui Fn Pk) (Device) Port DC aC ta = R R op le( S ->o u Dr Fc Pe ) (Host) Table8.69, \"Steps for Data Role Swap with Wait, UFP operating as Sink initiates\" Figure 8.42, \"Data Role Swap with Wait, UFP operating as Sink initiates\" below provides a detailed explanation of what happens at each labeled step in aboveT.able8.69 Steps for Data Role Swap with Wait, UFP operating as Sink initiates Step Initial UFP Sink Port Initial DFP Source Port Port UFP Device Sink R Port Data Role UFP Policy Port DFP Host Source R starts as a ( ) operating as a with d Engine Protocol Layer DR_Swap Port Data Role DFP asserted and set to. The starts as a ( ) operating as with p directs the to send a asserted and set to. Protocol Layer DR_SwapMessage. PHY Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and checks. Starts. the to verify the. DR_SwapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer DR_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. DR_SwapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DR_SwapMessage starts. Data Role evaluates the and Swap Protocol Layer decides that it is able and willing to do the but not at this time. It tells the Protocol Layer WaitMessage to form a. PHY Layer creates the and passes to. CRC Message CRCReceiveTimer receives the and checks the appends a and sends the. to verify the. Starts. Message checks the in the incoming is different from the previously stored value Protocol Layer Wait and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.69 Steps for Data Role Swap with Wait, UFP operating as Sink initiates Step Initial UFP Sink Port Initial DFP Source Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the was successfully sent. Figure 8.43, \"Data Role Swap, UFP operating as Source initiates\" Port UFP Device Source R Port DFP Host Sink R Data Role Swap UFP shows an exPaomrpt lPea sretqnuerence between a, which is initially aS ourc e( Si)n aknd a (Rp aRsserted), and a which is initiaDllya taa Role ( ) and Da FP H (osd t UasFsPertDeedv)i.c Ae is initiated by the. During the process the s maintain their operation as either a or a (power and p/ d remain constant) but exchange s between ( ) and ( ). Figure 8.43 Data Role Swap, UFP operating as Source initiates Initial UFP Source Port Initially DFP Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine CC = Rp(Source) CC = Rd(Sink) Port Data Role = UFP (Device) Port Data Role = DFP (Host) 1: Send Dr_Swap 2:Dr_Swap 3: Dr_Swap + CRC Start CRCReceiveTimer 4: Dr_Swap Check MessageID against local copy Store copy of MessageID 5: Dr_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Evaluate Dr_Swap request Stop CRCReceiveTimer CC = Rd (Sink) 9:Dr_Swap sent Port Data Role = DFP (Host) Start SenderResponseTimer CC = Rp (Source) 10: Send Accept Port Data Role = UFP (Device) 11: Accept 12: Accept + CRC 13: Accept Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Accept sent CC = Rp(Source) CC = Rd(Sink) Port Data Role -> DFP (Host) Port Data Role -> UFP (Device) New Host/Device Roles Table8.70, \"Steps for Data Role Swap, UFP operating as Source initiates\" Figure 8.43, \"Data Role Swap, UFP operating as Source initiates\" below provides a detailed explanation of what happens at eaTcahb lalebe8l.e7d0 s tSetpe pins for Data Role Swap, UFP operating as Source initiates above. Step Initial UFP Source Port Initial DFP Sink Port Port UFP Device Source R Port Data Role UFP Policy Port DFP Host Sink R starts as a ( ) operating as with Engine Protocol Layer DR_Swap Port Data Role DFP p asserted and set to. The starts as a ( ) operating as a with d directs the to send a asserted and set to. Protocol Layer DR_SwapMessage. PHY Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and checks. Starts. the to verify the. DR_SwapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer DR_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. DR_SwapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DR_SwapMessage starts. Data Role evaluates the and Swap Protocol Layer Accept decides that it is able and willing to do the. It tells the to form an Protocol Layer AcceptMessage. PHY Layer creates the and passes to. CRC Message Message CRCReceiveTimer receives the and checks appends a and sends the the to verify the.. Starts. Message checks the in the incoming is different from the previously stored value Protocol Layer Accept and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and pPaHsYs eLsa iyte r. CRC GoodCRC CRC Message receives and compares appends a and sends the Message.. Table8.70 Steps for Data Role Swap, UFP operating as Source initiates Step Initial UFP Source Port Initial DFP Sink Port PHY Layer CRC GoodCRCMessage Protocol Layer removes the and forwards the to the. Policy Engine Data Role MessageIDCounter CRCReceiveTimer verifies and increments the UFP Device DFP Host Protocol Layer Policy Engine The requests that is changed and stops. Data Role DFP Host AcceptMessage Policy from ( ) to ( ). informs the that the Port Data Role DFP Engine Data Role UFP set to and continues supplying reques Sts in t kha Rt the is changed to power as a ( p asserted). ( ), with set to and still Data Role Swap Data Role operating as a ( p asserted). The is complete; the s have been reversed while maintaining the direction of power flow. Figure 8.44, \"Rejected Data Role Swap, UFP operating as Source initiates\" Port UFP Device Source R Port DFP Host Sink R Data Role Swap UFP showsP aonr te Pxaamrtnpeler sequence between a, which is initiallyS ao urce ( Sin)k and a (Rp aRsserted), and a which is initially a Da (ta Ro)l eand a ( d asserted). A is initiated by the. During the process the s maintain their operation as either a or a (power and p/ d remain constant) and the exchange of s is rejected. Figure 8.44 Rejected Data Role Swap, UFP operating as Source initiates Initial UFP Source Port Initially DFP Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine CC = Rp(Source) CC = Rd(Sink) Port Data Role = UFP (Device) Port Data Role = DFP (Host) 1: Send Dr_Swap 2:Dr_Swap 3: Dr_Swap + CRC Start CRCReceiveTimer 4: Dr_Swap Check MessageID against local copy Store copy of MessageID 5: Dr_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Evaluate Dr_Swap request Stop CRCReceiveTimer CC = Rd (Sink) 9:Dr_Swap sent Port Data Role = DFP (Host) Start SenderResponseTimer CC = Rp (Source) 10: Send Reject Port Data Role = UFP (Device) 11: Reject 12: Reject + CRC 13: Reject Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Reject received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Reject sent CC = Rp(Source) CC = Rd(Sink) Port Data Role -> UFP (Device) Port Data Role -> DFP (Host) Table8.71, \"Steps for Rejected Data Role Swap, UFP operating as Source initiates\" Figure 8.44, \"Rejected Data Role Swap, UFP operating as Source initiates\" below provides a detailed explanation of what happens at each labeled step in abovTea. ble8.71 Steps for Rejected Data Role Swap, UFP operating as Source initiates Step Initial UFP Source Port Initial DFP Sink Port Port UFP Device Source R Port Data Role UFP Policy Port DFP Host Sink R starts as a ( ) operating as with Engine Protocol Layer DR_Swap Port Data Role DFP p asserted and set to. The starts as a ( ) operating as a with d directs the to send a asserted and set to. Protocol Layer DR_SwapMessage. PHY Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and checks. Starts. the to verify the. DR_SwapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer DR_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. DR_SwapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DR_SwapMessage starts. Data evaluates the and Role Swap Protocol Layer Reject decides that it is unable and unwilling to do the. It tells the to form a Protocol Layer RejectMessage. PHY Layer creates the and passes to. CRC Message Message CRCReceiveTimer receives the and checks the appends a and sends the to verify the.. Starts. Message checks the in the incoming is different from the previously stored value Protocol Layer Reject and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.71 Steps for Rejected Data Role Swap, UFP operating as Source initiates Step Initial UFP Source Port Initial DFP Sink Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the was successfully sent. Figure 8.45, \"Data Role Swap with Wait, UFP operating as Source initiates\" Port UFP Device Source R Port DFP Host Sink R Data Role Swap UFP showPso arnt Peaxratmneprle sequence between a, which is initiallyS oa urce ( Sink) and a R ( p R asserted), and a which is initially a Data ( Role) and a ( d asserted). A is initiated by the. During the process the s maintain their operation as either a or a (power and p/ d remain constant) and the exchange of s is delayed with a wait. Figure 8.45 Data Role Swap with Wait, UFP operating as Source initiates Initial UFP Source Port Initially DFP Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine CC = Rp(Source) CC = Rd(Sink) Port Data Role = UFP (Device) Port Data Role = DFP (Host) 1: Send Dr_Swap 2:Dr_Swap 3: Dr_Swap + CRC Start CRCReceiveTimer 4: Dr_Swap Check MessageID against local copy Store copy of MessageID 5: Dr_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Evaluate Dr_Swap request Stop CRCReceiveTimer CC = Rd (Sink) 9:Dr_Swap sent Port Data Role = DFP (Host) Start SenderResponseTimer CC = Rp (Source) 10: Send Wait Port Data Role = UFP (Device) 11: Wait 12: Wait + CRC 13: Wait Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Wait received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Wait sent CC = Rp(Source) CC = Rd(Sink) Port Data Role -> UFP (Device) Port Data Role -> DFP (Host) Table8.72, \"Steps for Data Role Swap with Wait, UFP operating as Source initiates\" Figure 8.45, \"Data Role Swap with Wait, UFP operating as Source initiates\" below provides a detailed explanation of what happens at each labeled step in abovTea.ble8.72 Steps for Data Role Swap with Wait, UFP operating as Source initiates Step Initial UFP Source Port Initial DFP Sink Port Port UFP Device Source R Port Data Role UFP Policy Port DFP Host Sink R starts as a ( ) operating as with Engine Protocol Layer DR_Swap Port Data Role DFP p asserted and set to. The starts as a ( ) operating as a with d directs the to send a asserted and set to. Protocol Layer DR_SwapMessage. PHY Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and checks. Starts. the to verify the. DR_SwapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer DR_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. DR_SwapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DR_SwapMessage starts. Data Role evaluates the and Swap Protocol Layer decides that it is able and willing to do the but not at this time. It tells the to Protocol Layer WaitMessage form a. PHY Layer creates the and passes to. CRC Message CRCReceiveTimer receives the and checks the appends a and sends the. to verify the. Starts. Message checks the in the incoming is different from the previously stored value Protocol Layer Wait and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.72 Steps for Data Role Swap with Wait, UFP operating as Source initiates Step Initial UFP Source Port Initial DFP Sink Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the was successfully sent. Figure 8.46, \"Data Role Swap, DFP operating as Source initiates\" Port UFP Device Sink R Port DFP Source R Data Role Swap DFP Psohrotw Psa artnn eexrample sequence between a, which iSso iunricteially aS ink ( ) anRd a R ( d asserted), and a whicDha itsa i Rnoitlieally a aDnFdP a Host ( p U aFsPserDteedvi)c. eA is initiated by the. During the process the s maintain their operation as either a or a (power aFnigdu rpe/ 8.d4 r6e mDaaitna cRoonlset aSnwt)a bpu, tD eFxPc hoapnegrea ting as Sos ubrectew ieneint iates ( ) and ( ). Initial UFP Sink Port Initial DFP Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port DatC aC R = o lR e d =( USi Fn Pk ) (Device) Port DC aC ta = R R op le( S =o Du Frc Pe ) (Host) 1: Send Dr_Swap 2: Dr_Swap 3: Dr_Swap + CRC 4: Dr_Swap Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Dr_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Evaluate Dr_Swap request CC = Rd (Sink) Check and increment MessageIDCounter Port Data Role =UFP (Device) Stop CRCReceiveTimer 9: Dr_Swap sent Start SenderResponseTimer 10: Send Accept CC = Rp (Source) 11:Accept Port Data Role = DFP (Host) 12: Accept + CRC Start CRCReceiveTimer 13: Accept Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18:Accept sent CC = Rd(Sink) CC = Rp(Source) Port Data Role -> DFP (Host) Port Data Role -> UFP (Device) New Host/Device Roles Table8.73, \"Steps for Data Role Swap, DFP operating as Source initiates\" Figure 8.46, \"Data Role Swap, DFP operating as Source initiates\" below provides a detailed explanation of what happens at eaTcahb lalebe8l.e7d3 s tSetpe pins for Data Role Swap, DFP operating as Source initiates above. Step Initial UFP Sink Port Initial DFP Source Port Port DFP Host Source R Port UFP Device Sink R Port Data Role DFP Policy starts as a ( ) operating as with p Port Data Role UFP Engine Protocol Layer DR_Swap starts as a ( ) operating as a with d asserted and set to. The asserted and set to. directs the to send a Protocol Layer DR_SwapMessage. PHY Layer creates the and passes to. CRC Message Message CRCReceiveTimer receives the and checks appends and sends the the to verify the.. Starts. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer DR_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. Message CRC Message appends and sends the receives the and checks. the to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. DR_SwapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DR_SwapMessage starts. Data Role evaluates the and Swap Protocol Layer Accept decides that it is able and willing to do the. It tells the to form an Protocol Layer AcceptMessage. PHY Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends a and sends the receives the and checks the. Starts. to verify the. Message checks the in the incoming is different from the previously stored value Protocol Layer Accept and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and PpaHsYse Lsa ity er. CRC GoodCRC CRC receives and compares Message Message appends a and sends the.. Table8.73 Steps for Data Role Swap, DFP operating as Source initiates Step Initial UFP Sink Port Initial DFP Source Port PHY Layer CRC GoodCRC Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer Policy Engine Data Role Protocol Layer verifies and Pin oc lr ie cm y Een nt gs i t nh ee DFP Host UFP Device and stops. The requests that is changed AcceptMessage Policy Data Role UFP Device informs the that the from ( ) to ( ). Engine Data Role DFP Port Data Role UFP Sink R requests that the is changed to with set to and continues supplying ( ), with set to, still operating as power as a ( p asserted). Data Roal e Sw a(pd asserted). Data Role The is complete; the s have been reversed while maintaining the direction of power flow. Figure 8.47, \"Rejected Data Role Swap, DFP operating as Source initiates\" Port UFP Device Sink R Port DFP Source R Data Role Swap DFP shPoowrst aPna retxnaemr ple sequence between a, whichS iosu irncietially aS ink ( ) anRd a R ( d asserted), and a which is iniDtiaatlaly R ao le and a ( p asserted). A is initiated by the. During the process the s maintain their operation as either a oFri ga ure 8 (.p4o7w Reerj eacntde dp D/adta r eRmolaein S cwoanps,t aDnFtP) aonpde trhaet ienxgc haasn Sgoeu orfc e initiatess is rejected. Initial UFP Sink Port Initial DFP Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port DatC aC R = o lR e d =( USi Fn Pk ) (Device) Port DC aC ta = R R op le( S =o Du Frc Pe ) (Host) 1: Send Dr_Swap 2: Dr_Swap 3: Dr_Swap + CRC 4: Dr_Swap Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Dr_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Evaluate Dr_Swap request CC = Rd (Sink) Check and increment MessageIDCounter Port Data Role =UFP (Device) Stop CRCReceiveTimer 9: Dr_Swap sent Start SenderResponseTimer 10: Send Reject CC = Rp (Source) 11:Reject Port Data Role = DFP (Host) 12: Reject + CRC Start CRCReceiveTimer 13: Reject Check MessageID against local copy Store copy of MessageID 14: Reject received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18:Reject sent CC = Rd(Sink) CC = Rp(Source) Port Data Role -> UFP (Device) Port Data Role -> DFP (Host) Table8.74, \"Steps for Rejected Data Role Swap, DFP operating as Source initiates\" Figure 8.47, \"Rejected Data Role Swap, DFP operating as Source initiates\" below provides a detailed explanation of what happens at each labeled step in abovTea.ble8.74 Steps for Rejected Data Role Swap, DFP operating as Source initiates Step Initial UFP Sink Port Initial DFP Source Port Port DFP Host Source R Port UFP Device Sink R Port Data Role DFP Policy starts as a ( ) operating as with p Port Data Role UFP Engine Protocol Layer DR_Swap starts as a ( ) operating as a with d asserted and set to. The asserted and set to. directs the to send a Protocol Layer DR_SwapMessage. PHY Layer creates the and passes to. CRC Message Message CRCReceiveTimer receives the and checks appends and sends the the to verify the.. Starts. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer DR_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. Message CRC Message appends and sends the receives the and checks. the to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. DR_SwapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DR_SwapMessage starts. Data evaluates the and Role Swap Protocol Layer Reject decides that it is unable and unwilling to do the. It tells the to form an Protocol Layer RejectMessage. PHY Layer creates the and passes to. CRCReceiveTimer CRC Message appends a and sends the. receives the and checks the Starts. to verify the. Message checks the in the incoming is different from the previously stored value Protocol Layer Reject and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.74 Steps for Rejected Data Role Swap, DFP operating as Source initiates Step Initial UFP Sink Port Initial DFP Source Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC receives and compares Message Message appends a and sends the PHY Layer CRC GoodCRC.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the was successfully sent. Figure 8.48, \"Data Role Swap with Wait, DFP operating as Source initiates\" Port UFP Device Sink R Port DFP Source R Data Role Swap DFP sPhoorwt sP aanrt nexerample sequence between a, whichS iosu irncietially aS ink ( ) anRd a R ( d asserted), and a which is iniDtiaatlaly R ao le and a ( p asserted). A is initiated by the. During the process the s maintain their operation as either a oFrig au re 8.(4p8o wDeart aa nRdo lep /Swda rpe mwaitinh cWonasitt,a DntF)P a ondp ethraet einxcgh aasn Sgeo uorf ce initiatess is delayed by wait. Initial UFP Sink Port Initial DFP Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port DatC aC R = o lR e d =( USi Fn Pk ) (Device) Port DC aC ta = R R op le( S =o Du Frc Pe ) (Host) 1: Send Dr_Swap 2: Dr_Swap 3: Dr_Swap + CRC 4: Dr_Swap Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Dr_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Evaluate Dr_Swap request CC = Rd (Sink) Check and increment MessageIDCounter Port Data Role =UFP (Device) Stop CRCReceiveTimer 9: Dr_Swap sent Start SenderResponseTimer 10: Send Wait CC = Rp (Source) 11:Wait Port Data Role = DFP (Host) 12: Wait + CRC Start CRCReceiveTimer 13: Wait Check MessageID against local copy Store copy of MessageID 14: Wait received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18:Wait sent CC = Rd(Sink) CC = Rp(Source) Port Data Role -> UFP (Device) Port Data Role -> DFP (Host) Table8.75, \"Steps for Data Role Swap with Wait, DFP operating as Source initiates\" Figure 8.48, \"Data Role Swap with Wait, DFP operating as Source initiates\" below provides a detailed explanation of what happens at each labeled step in Tab albeo8v.e7.5 Steps for Data Role Swap with Wait, DFP operating as Source initiates Step Initial UFP Sink Port Initial DFP Source Port Port DFP Host Source R Port UFP Device Sink R Port Data Role DFP Policy starts as a ( ) operating as with p Port Data Role UFP Engine Protocol Layer DR_Swap starts as a ( ) operating as a with d asserted and set to. The asserted and set to. directs the to send a Protocol Layer DR_SwapMessage. PHY Layer creates the and passes to. CRC Message Message CRCReceiveTimer receives the and checks appends and sends the the to verify the.. Starts. DR_SwapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer DR_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. Message CRC Message appends and sends the receives the and checks. the to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. DR_SwapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DR_SwapMessage starts. Data Role evaluates the and Swap Protocol Layer decides that it is able and willing to do the but not at this time. It tells the to Protocol Layer WaitMessage form an. PHY Layer creates the and passes to. CRCReceiveTimer CRC Message appends a and sends the. receives the and checks the Starts. to verify the. Message checks the in the incoming is different from the previously stored value Protocol Layer WaitMessage Policy Engine The forwards the received Policy Engine SenderResponseTimer information to the that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and PpaHsYse Lsa ity er. CRC GoodCRC CRC receives and compares Message Message appends a and sends the.. Table8.75 Steps for Data Role Swap with Wait, DFP operating as Source initiates Step Initial UFP Sink Port Initial DFP Source Port PHY Layer CRC GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine Wait and stops. informs the that the was successfully sent. Figure 8.49, \"Data Role Swap, DFP operating as Sink initiates\" Port UFP Device Source R Port DFP Host Sink R Data Role Swap DFP shoPwosr ta nP aerxtanmerple sequence between a, which is iSnoiutiraclely a Sin (k ) and aR R ( p asserted), and a whichD iast ian Ritoialelly a ( DFP) anHdo sat (Ud F PassDeervteicde). A is initiated by the. During the process the s maintain their operation as either a or a (power anFdig upr/e 8d.r4e9m Daiant aco Rnosltea nStw) baupt, eDxFcPh aonpgeer ating as Ssi bnekt wineietnia tes ( ) and ( ). Initial UFP Source Port Initial DFP Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port DaC tC a R= oR lep ( =S Uou Fr Pc e (D) evice) Port DaC taC R= o R led =(S Din Fk P) (Host) 1: Send Dr_Swap 2: Dr_Swap 3: Dr_Swap + CRC 4: Dr_Swap Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Dr_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Evaluate Dr_Swap request CC = Rp(Source) Check and increment MessageIDCounter Port Data Role = UFP (Device) Stop CRCReceiveTimer 9: Dr_Swap sent Start SenderResponseTimer 10: Send Accept CC = Rd(Sink) 11:Accept Port Data Role = DFP (Host) 12: Accept + CRC Start CRCReceiveTimer 13: Accept Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18:Accept sent CC = Rp (Source) CC = Rd (Sink) Port Data Role -> DFP (Host) Port Data Role -> UFP (Device) New Host/Device Roles Table8.76, \"Steps for Data Role Swap, DFP operating as Sink initiates\" Figure 8.49, \"Data Role Swap, DFP operating as Sink initiates\" below provides a detailed explanation of what happens at each labeTleadb lsete8p.7 in6 Steps for Data Role Swap, DFP operating as Sink initiate sabove. Step Initial UFP Source Port Initial DFP Sink Port Port DFP Host Sink R Port UFP Device Source Port Data Role DFP Policy starts as a ( ) operating as a with d R Port Data Role UFP Engine Protocol Layer DR_Swap starts as a ( ) operating as with asserted and set to. The p asserted and set to. directs the to send a Protocol Layer DR_Swap Message. PHY Layer creates the and passes to. CRC Message Message CRCReceiveTimer receives the and checks appends and sends the the to verify the.. Starts. DR_SwapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer DR_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. Message CRC Message appends and sends the receives the and checks. the to verify the. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. DR_SwapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DR_SwapMessage starts. Data Role evaluates the and Swap Protocol Layer Accept decides that it is able and willing to do the. It tells the to form an Protocol Layer AcceptMessage. PHY Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends a and sends the receives the and checks the. Starts. to verify the. Message checks the in the incoming is different from the previously stored value Protocol Layer Accept and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and PpaHsYse Lsa ity er. CRC GoodCRC CRC receives and compares Message Message appends a and sends the.. Table8.76 Steps for Data Role Swap, DFP operating as Sink initiates Step Initial UFP Source Port Initial DFP Sink Port PHY Layer CRC GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer Policy Engine Data Role verifies and increments the Protocol Layer Policy Engine DFP Host UFP Device and stops. The requests that is changed AcceptMessage Policy Data Role UFP Device informs the that the from ( ) to ( ). Engine Data Role DFP Port Data Role UFP Sink requests that Sth oe u rce R is changed to with set to, still operating as a ( ), with set to and continues ( d asserted). Data Rosluep Spwlyaipng power as a Dat (a Rpo alseserted). The is complete; the s have been reversed while maintaining the direction of power flow. Figure 8.50, \"Rejected Data Role Swap, DFP operating as Sink initiates\" Port UFP Device Source R Port DFP Host Sink R Data Role Swap DFP showPs oarnt ePxaarmtnpelre sequence between a, which is iniStoiaulrlyc ea S (ink ) and a R R ( p asserted), and a which is initialDlya at a Rol (e ) and a ( d asserted). A is initiated by the. During the process the s maintain their operation as either a orF ai gure (8p.o5w0 eRre ajencdt edp/ Dda trae mRoailne cSownaspta, nDtF) Pan odp tehrea etixncgh aansg Sei nokf initiatess is rejected. Initial UFP Source Port Initial DFP Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port DaC tC a R= oR lep ( =S Uou Fr Pc e (D) evice) Port DaC taC R= o R led =(S Din Fk P) (Host) 1: Send Dr_Swap 2: Dr_Swap 3: Dr_Swap + CRC 4: Dr_Swap Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Dr_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Evaluate Dr_Swap request CC = Rp (Source) Check and increment MessageIDCounter Port Data Role = UFP (Device) Stop CRCReceiveTimer 9: Dr_Swap sent Start SenderResponseTimer 10: Send Reject CC = Rd (Sink) 11:Reject Port Data Role = DFP (Host) 12: Reject + CRC Start CRCReceiveTimer 13: Reject Check MessageID against local copy Store copy of MessageID 14: Reject received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18:Reject sent CC = Rp(Source) CC = Rd(Sink) Port Data Role -> UFP (Device) Port Data Role -> DFP (Host) Table8.77, \"Steps for Rejected Data Role Swap, DFP operating as Sink initiates\" Figure 8.50, \"Rejected Data Role Swap, DFP operating as Sink initiates\" below provides a detailed explanation of what happens at each labeled step in aboveT.able8.77 Steps for Rejected Data Role Swap, DFP operating as Sink initiates Step Initial UFP Source Port Initial DFP Sink Port Port DFP Host Sink R Port UFP Device Source Port Data Role DFP Policy starts as a ( ) operating as a with d R Port Data Role UFP Engine Protocol Layer DR_Swap starts as a ( ) operating as with asserted and set to. The p asserted and set to. directs the to send a Protocol Layer DR_Swap Message. PHY Layer creates the and passes to. CRC Message Message CRCReceiveTimer receives the and checks appends and sends the the to verify the.. Starts. DR_SwapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer DR_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. Message CRC Message appends and sends the receives the and checks. the to verify the. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. DR_SwapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DR_SwapMessage starts. Data evaluates the and Role Swap Protocol Layer Reject decides that it is unable and unwilling to do the. It tells the to form an Protocol Layer RejectMessage. PHY Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends a and sends the receives the and checks the. Starts. to verify the. Message checks the in the incoming is different from the previously stored value Protocol Layer Reject and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.77 Steps for Rejected Data Role Swap, DFP operating as Sink initiates Step Initial UFP Source Port Initial DFP Sink Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC receives and compares Message Message appends a and sends the PHY Layer CRC.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the was successfully sent. Figure 8.51, \"Data Role Swap with Wait, DFP operating as Sink initiates\" Port UFP Device Source R Port DFP Host Sink R Data Role Swap DFP showPso arnt ePxaarmtnperle sequence between a, which is iniStoiaulrlyc ea S (ink ) and a R R ( p asserted), and a which is initialDlya at a Rol (e ) and a ( d asserted). A is initiated by the. During the process the s maintain their operation as either a or a (power and p/ d remain constant) and the exchange of s is delayed with a wait. Figure 8.51 Data Role Swap with Wait, DFP operating as Sink initiates Initial UFP Source Port Initial DFP Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port DaC tC a R= oR lep ( =S Uou Fr Pc e (D) evice) Port DaC taC R= o R led =(S Din Fk P) (Host) 1: Send Dr_Swap 2: Dr_Swap 3: Dr_Swap + CRC 4: Dr_Swap Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Dr_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Evaluate Dr_Swap request CC = Rp (Source) Check and increment MessageIDCounter Port Data Role = UFP (Device) Stop CRCReceiveTimer 9: Dr_Swap sent Start SenderResponseTimer 10: Send Wait CC = Rd (Sink) 11:Wait Port Data Role = DFP (Host) 12: Wait + CRC Start CRCReceiveTimer 13: Wait Check MessageID against local copy Store copy of MessageID 14: Wait received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18:Wait sent CC = Rp(Source) CC = Rd(Sink) Port Data Role -> UFP (Device) Port Data Role -> DFP (Host) Table8.78, \"Steps for Data Role Swap with Wait, DFP operating as Sink initiates\" Figure 8.51, \"Data Role Swap with Wait, DFP operating as Sink initiates\" below provides a detailed explanation of what happens at each labeled step in aboveT.able8.78 Steps for Data Role Swap with Wait, DFP operating as Sink initiates Step Initial UFP Source Port Initial DFP Sink Port Port DFP Host Sink R Port UFP Device Source Port Data Role DFP Policy starts as a ( ) operating as a with d R Port Data Role UFP Engine Protocol Layer DR_Swap starts as a ( ) operating as with asserted and set to. The p asserted and set to. directs the to send a Protocol Layer DR_Swap Message. PHY Layer creates the and passes to. CRC Message Message CRCReceiveTimer receives the and checks appends and sends the the to verify the.. Starts. DR_SwapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer DR_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. Message CRC Message appends and sends the receives the and checks. the to verify the. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. DR_SwapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DR_SwapMessage starts. Data Role evaluates the and Swap Protocol Layer decides that it is able and willing to do the but not at this time. It tells the to Protocol Layer WaitMessage form a. PHY Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends a and sends the receives the and checks the. Starts. to verify the. Message checks the in the incoming is different from the previously stored value Protocol Layer Reject and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.78 Steps for Data Role Swap with Wait, DFP operating as Sink initiates Step Initial UFP Source Port Initial DFP Sink Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC receives and compares Message Message appends a and sends the PHY Layer CRC.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the was successfully sent. Figure 8.52, \"Successful VCONN Source Swap, initiated by VCONN Source\" VCONN Source Port Partner VCONN Port Partner Power Role Source Sink Source Sink shows an example sequence where the VCONN Source and tells its to supply. During the process the s, keep their as or, maintain their operation as either a or a (power remains constant) but exchange the role. Figure 8.52 Successful VCONN Source Swap, initiated by VCONN Source Initially VCONNSource Port Initially VCONNoff : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine VCONN Source VCONN off 1: Send VCONN_Swap 2:VCONN_Swap 3: VCONN_Swap + CRC Start CRCReceiveTimer 4: VCONN_Swap Check MessageID against local copy Store copy of MessageID 5: VCONN_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9:VCONN_Swap sent Evaluate VCONN_Swap Start SenderResponseTimer request 10: Send Accept 11: Accept 12: Accept + CRC 13: Accept Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Start VCONNOnTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Accept sent Tell power supply to start supplying VCONN Vconn is on 19: Send PS_RDY 20: PS_RDY 21: PS_RDY + CRC 22: PS_RDY Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 23: PS_RDY received 24: GoodCRC 25: GoodCRC + CRC Stop VCONNOnTimer 26: GoodCRC Tell power supply to turn off VCONN Check and increment MessageIDCounter Stop CRCReceiveTimer 27: PS_RDY sent VCONN is off VCONN has been swapped Table8.79, \"Steps for Source to Sink VCONN Source Swap\" Figure 8.52, \"Successful VCONN Source Swap, initiated by VCONN Source\" below provides a detailed explanation of what happens at each labeled step in Table8.79 Steps for Source to Sink VCONN Source Swap above. Step Initially VCONN Source Initially VCONN off VCONN Source Policy Engine Protocol VCONN Layer VCONN_SwapMessage The ’s directs the a VC ONN_Swa.pMessage is off. PHY Layer creates the and se L sa ty oe r.CRC VCONN_Swap PHY Layer VCONN_SwapMessage Message CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. VCONN_SwapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer VCONN_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. VCONN_SwapMessage Policy Engine SenderResponseTimer was successfully sent. starts. Policy Engine VCONN_SwapMessage Source evaluates the sent VCONN Swap Protocol Layer by the and decides that it is able and willing to do the. It tells the to form an Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC Accept CRC receives the and compares Message CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer Accept and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. VCONNOnTimer The stops the and starts the. PHY Layer generates a and pPaHsYse Lsa ity er. CRC GoodCRC CRC Message receives and compares appends a and sends the Message.. Table8.79 Steps for Source to Sink VCONN Source Swap Step Initially VCONN Source Initially VCONN off PHY Layer CRC GoodCRC Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. AcceptMessage Policy Engine DPM VCONN was successfully sent. The DPM Policy Engine asks the to turn on. VCONN Policy Engine The informs the that its power Protocol Layer PS_RDYMessage supply is supplying. The directs the to generate a to tell Protocol Layer PS_RDYMessage the it can turn off. PHY Layer creates the and passes tPoH Y Layer. CRC PS_RDY CRC receives the and compares Message CRCReceiveTimer Message appends a and sends the PHY Layer CRC PS_RDY. Starts.. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer PS_RDY and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. PHY Layer GoodCRCMessage Message Policy Engine VCONNOnTimer appends a and sends the CRC Message VCONN receives and compares the PHY i Lt caaylecurlated with theC RonCe sent to verify theG oodCRC. and tells the power supply to stop sourcing. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer VCONN verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Port Partner VCONN Source was successfully sent. The s have swapped role. Figure 8.53, \"Rejected VCONN Source Swap, initiated by VCONN Source\" VCONN Source Port Partner VCONN Port Partner Power Role Source Sink So usrhcoews anS einxkample sequence where the and tells its VCONN Source to supply and is rejected. During the process the s, keep their as or, maintain their operation as either a or a (power remains constant) and don't exchange the Figure 8.53 Rroeljee.cted VCONN Source Swap, initiated by VCONN Source Initially VCONNSource Port Initially VCONNoff : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine VCONN Source VCONN off 1: Send VCONN_Swap 2:VCONN_Swap 3: VCONN_Swap + CRC Start CRCReceiveTimer 4: VCONN_Swap Check MessageID against local copy Store copy of MessageID 5: VCONN_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9:VCONN_Swap sent Evaluate VCONN_Swap Start SenderResponseTimer request 10: Send Reject 11: Reject 12: Reject + CRC 13: Reject Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Reject received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Reject sent Table8.80, \"Steps for Rejected VCONN Source Swap\" Figure 8.53, \"Rejected VCONN Source Swap, initiated by VCONN Source\" below provides a detailed explanation of what happens at each labeled step in Table8.80 Steps for Rejected VCONN Source Swap above. Step Initially VCONN Source Initially VCONN off VCONN Source Policy Engine Protocol VCONN Layer VCONN_SwapMessage The ’s directs the a VC ONN_Swa.pMessage is off. PHY Layer creates the and s eL sa y toe r CR. C VCONN_Swap PHY Layer VCONN_SwapMessage Message CRCReceiveTimer CRC Message appends and sends the receives the and checks. Starts. the to verify the. VCONN_SwapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer VCONN_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. VCONN_SwapMessage Policy Engine SenderResponseTimer was successfully sent. starts. Policy Engine VCONN_SwapMessage Source evaluates the sent VCONN Swap Protocol Layer by the and decides that it is unable and unwilling to do the. It tells the to form Protocol Layer Message PHY an. Layer creates the and passes to PHY L.ayer CRC RejectMessage CRC receives the and compares CRCReceiveTimer Message appends a and sends the. Protocol Layer MessageID Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer Reject and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. VCONNOnTimer The stops the and starts the. PHY Layer generates a and passes it. Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Table8.80 Steps for Rejected VCONN Source Swap Step Initially VCONN Source Initially VCONN off PHY Layer CRC GoodCRC Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the was successfully sent Figure 8.54, \"VCONN Source Swap with Wait, initiated by VCONN Source\" VCONN Source Port Partner VCONN Port Partner Power Role Source Sink Sou srhcoews anS einxkample sequence where the and tells its VCONN Sourc teo supply and is told to wait. During the process the s, keep their as or, maintain their operation as either a or a (power remains constant) and don't exchange the Figure 8.54 VroClOeN.N Source Swap with Wait, initiated by VCONN Source Initially VCONNSource Port Initially VCONNoff : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine VCONN Source VCONN off 1: Send VCONN_Swap 2:VCONN_Swap 3: VCONN_Swap + CRC Start CRCReceiveTimer 4: VCONN_Swap Check MessageID against local copy Store copy of MessageID 5: VCONN_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9:VCONN_Swap sent Evaluate VCONN_Swap Start SenderResponseTimer request 10: Send Wait 11: Wait 12: Wait + CRC 13: Wait Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Wait received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Wait sent Table8.81, \"Steps for VCONN Source Swap with Wait\" Figure 8.54, \"VCONN Source Swap with Wait, initiated by VCONN Source\" below provides a detailed explanation of what happens at each labeled step in Table8.81 Steps for VCONN Source Swap with Wait above. Step Initially VCONN Source Initially VCONN off VCONN Source Policy Engine Protocol VCONN Layer VCONN_SwapMessage The ’s directs the a VC ONN_Swa.pMessage is off. PHY Layer creates the and s eL sa y toe r CR. C VCONN_Swap PHY Layer VCONN_SwapMessage Message CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. VCONN_SwapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer VCONN_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. VCONN_SwapMessage Policy Engine SenderResponseTimer was successfully sent. starts. Policy Engine VCONN_SwapMessage Source evaluates the sent VCONN Swap Protocol by the and decides that it is able and willing to do the but not at this time. It tells the Protocol Layer Message PHY to form an. Layer creates the and passes to. CRC Message CRCReceiveTimer receives the and compares the appends a and sends the. it calculated with the one sent to verify the. Starts. Message checks the in the incoming is different from the previously stored value Protocol Layer WaitMessage Policy Engine The forwards the received Policy Engine SenderResponseTimer information to the that consumes it. VCONNOnTimer The stops the and starts the. PHY Layer generates a and pPaHsYs eLsa iyte r. CRC GoodCRC CRC Message receives and compares appends a and sends the Message.. Table8.81 Steps for VCONN Source Swap with Wait Step Initially VCONN Source Initially VCONN off PHY Layer CRC GoodCRC Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine Wait and stops. informs the that the was successfully sent Figure 8.55, \"VCONN Source Swap, initiated by non-VCONN Source\" Port VCONN VCONN Swap Port Partner Power Role Source Sink Source sShionwks an example where the which is not Vin Ci Oti Na Nll yS osuurpcpelying and requests a. During the process the s, keep their as or, maintain their operation as either a or a (power remains constant) but exchange the. Figure 8.55 VCONN Source Swap, initiated by non-VCONN Source Initially VCONNoff Initially VCONNSource Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine VCONN Off VCONN Source 1: Send VCONN_Swap 2:VCONN_Swap 3: VCONN_Swap + CRC Start CRCReceiveTimer 4: VCONN_Swap Check MessageID against local copy Store copy of MessageID 5: VCONN_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9:VCONN_Swap sent Evaluate VCONN_Swap Start SenderResponseTimer request 10: Send Accept 11: Accept 12: Accept + CRC 13: Accept Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Tell power supply to start Check and increment MessageIDCounter supplying VCONN Stop CRCReceiveTimer 18: Accept sent Start VCONNOnTimer Vconn is on 19: Send PS_RDY 20: PS_RDY 21: PS_RDY + CRC Start CRCReceiveTimer 22: PS_RDY Check MessageID against local copy Store copy of MessageID 23: PS_RDY received 24: GoodCRC 25: GoodCRC + CRC 26: GoodCRC Stop VCONNOnTimer Tell power supply to turn off VCONN Check and increment MessageIDCounter Stop CRCReceiveTimer 27: PS_RDY sent VCONN is off Source is supplying VCONN Table8.82, \"Steps for VCONN Source Swap, Initiated by non-VCONN Source\" Figure 8.55, \"VCONN Source Swap, initiated by non-VCONN Source\" below provides a detailed explanation of what happens at eaTcahb llaeb8el.8ed2 s Stetepp ins for VCONN Source Swap, Initiated by non-VCONN Source above. Step Initially VCONN off Initially VCONN Source Source VCONN Policy Engine Protocol Layer VCONN_Swap Sink VCONN Source The starts with off. The Message Protocol. Layer VCONN_SwapMessage PHY Layer creates the and se L sa ty oe r C.RC VCONN_Swap PHY Layer VCONN_SwapMessage Message CRCReceiveTimer CRC Message appends and sends the receives the and checks. Starts. the to verify the. VCONN_SwapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer VCONN_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. VCONN_SwapMessage Policy Engine SenderResponseTimer was successfully sent. starts. Policy Engine VCONN_SwapMessage Source evaluates the sent VCONN Swap Protocol Layer by the and decides that it is able and willing to do the. It tells the to form an Protocol Layer Message PHY. Layer creates the and passes to PHY La.yer CRC AcceptMessage CRC receives the and compares CRCReceiveTimer Message appends a and sends the. Protocol Layer MessageID Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer Accept and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Policy Engine DPM VCONN The stops the. The tells the to turn on. PHY Layer generates a and passes it. Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Table8.82 Steps for VCONN Source Swap, Initiated by non-VCONN Source Step Initially VCONN off Initially VCONN Source PHY Layer CRC GoodCRC Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. AcceptMessage Policy Engine VCONNOnTimer was successfully sent. DPM Policy Engine The starts the. VCONN Policy Engine The tells the that its power supply Protocol Layer PS_RDYMessage is supplying. The directs the to generate a to tell the Protocol Layer PS_RDYMessage it can turn off. PHY Layer creates the and passes PtoH Y Layer. CRC PS_RDY CRC Message CRCReceiveTimer receives the and compares appends a and sends the Message. Starts. PHY Layer CRC PS_RDY. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer PS_RDY and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and se L sa ity er. CRC GoodCRC CRC Message Policy Engine VCONNOnTimer receives and compares appends a and sends the Message VCONN PHY Laye.r CRC GoodCRC and tells the power supply to stop sourcing. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the VCONN Protocol Layer Policy Engine and stops. informs the that the was successPfuolrlyt Pseanrttn.er VCONN Source The s have swapped role. Figure 8.56, \"Rejected VCONN Source Swap, initiated by non-VCONN Source\" Port VCONN VCONN Swap Port Partner Power Role Source Sink showSosu arnce examSpilnek where the which is not initially supplying andV Cr Oeq NNu eSsotus rac e which is rejected. During the process the s, keep their as or, maintain their operation as either a or a (power remains constant) and don'Ft iegxucrhea n8g.5e6 t hRee jected VCONN. Source Swap, initiated by non-VCONN Source Initially VCONNoff Initially VCONNSource Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine VCONN Off VCONN Source 1: Send VCONN_Swap 2:VCONN_Swap 3: VCONN_Swap + CRC Start CRCReceiveTimer 4: VCONN_Swap Check MessageID against local copy Store copy of MessageID 5: VCONN_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9:VCONN_Swap sent Evaluate VCONN_Swap Start SenderResponseTimer request 10: Send Reject 11: Reject 12: Reject + CRC 13: Reject Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Reject received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Reject sent Table8.83, \"Steps for Rejected VCONN Source Swap, Initiated by non-VCONN Source\" Figure 8.56, \"Rejected VCONN Source Swap, initiated by non VCONN Source\" below provides a detailed explanation of what happens at each labeled step in T aabbolvee8..83 Steps for Rejected VCONN Source Swap, Initiated by non-VCONN Source Step Initially VCONN off Initially VCONN Source Source VCONN Policy Engine Protocol Layer VCONN_Swap Sink VCONN Source The starts with off. The Message Protocol. Layer VCONN_SwapMessage PHY Layer creates the and s eL sa y toe r CR. C VCONN_Swap PHY Layer VCONN_SwapMessage Message CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. VCONN_SwapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer VCONN_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. VCONN_SwapMessage Policy Engine SenderResponseTimer was successfully sent. starts. Policy Engine VCONN_SwapMessage Source evaluates the sent VCONN Swap Protocol Layer by the and decides that it is unable and unwilling to do the. It tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY La.yer CRC RejectMessage CRC receives the and compares CRCReceiveTimer Message appends a and sends the. Protocol Layer MessageID Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer Reject and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Policy Engine DPM VCONN The stops the. The tells the to turn on. PHY Layer generates a and passes it. Table8.83 Steps for Rejected VCONN Source Swap, Initiated by non-VCONN Source Step Initially VCONN off Initially VCONN Source PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the was successfully sent. Figure 8.57, \"VCONN Source Swap with Wait\" Port VCONN Swap Port Partner Power Role Source Sink Source Sink shows an example where the requests aV CONN Source which is delayed with a wait. During the process the s, keep their as or, maintain their operation as either a or a Fig (uproew 8e.r5 7re VmCaOiNnNs cSoonusrtcaen tS)w aanpd wdoitnh't Wexacihtange the. Initially VCONNoff Initially VCONNSource Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine VCONN Off VCONN Source 1: Send VCONN_Swap 2:VCONN_Swap 3: VCONN_Swap + CRC Start CRCReceiveTimer 4: VCONN_Swap Check MessageID against local copy Store copy of MessageID 5: VCONN_Swap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9:VCONN_Swap sent Evaluate VCONN_Swap Start SenderResponseTimer request 10: Send Wait 11: Wait 12: Wait + CRC 13: Wait Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Wait received 15: GoodCRC 16: GoodCRC + CRC Stop SenderResponseTimer 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Wait sent Table8.84, \"Steps for VCONN Source Swap with Wait\" Figure 8.57, \"VCONN Source Swap with Wait\" below provides a detailed explanation of what happens at each labeled step in Table8.84 Steps for VCONN aSboouvrec.e Swap with Wait Step Initially VCONN off Initially VCONN Source Source VCONN Policy Engine Protocol Layer VCONN_Swap Sink VCONN Source The starts with off. The Message Protocol. Layer VCONN_SwapMessage PHY Layer creates the and se L sa ty oe r C.RC VCONN_Swap PHY Layer VCONN_SwapMessage Message CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. VCONN_SwapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer VCONN_Swap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. VCONN_SwapMessage Policy Engine SenderResponseTimer was successfully sent. starts. Policy Engine VCONN_SwapMessage Source evaluates the sent VCONN Swap Protocol by the and decides that it is able and willing to do the but not at this time. It tells the Protocol Layer Message PHY to form a. Layer creates the and passes to. CRC Message CRCReceiveTimer receives the and compares the appends a and sends the. it calculated with the one sent to verify the. Starts. Message checks the in the incoming is different from the previously stored value Protocol Layer WaitMessage Policy Engine The forwards the received Policy Engine SenderResponseTimer information to the that consumes it. Policy Engine DPM VCONN The stops the. The tells the to turn on. PHY Layer generates a and PpaHsYse Lsa ity er. CRC GoodCRC CRC Message receives and compares appends a and sends the Message.. Table8.84 Steps for VCONN Source Swap with Wait Step Initially VCONN off Initially VCONN Source PHY Layer CRC GoodCRC Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine Wait and stops. informs the that the was successfully sent. Figure 8.58, \"Source Alert to Sink\" Source Sink Source Sink Source Se schtioown s8.a3n.2 e.1x1am.2,p \"lSet saetuqus\"ence between a and a where the alerts the that there has been a status change. This AMS will be followed by getting the status to determine further details of the alert (see Figure 8.58 Sour)c.e Alert to Sink Sink Port Source Port : Sink Policy Engine : Protocol : PHY : PHY : Protocol : Source Policy Engine 1: Send Alert 2: Alert 3: Alert + CRC 4: Alert Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Alert received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Alert sent Table8.85, \"Steps for Source Alert to Sink\" Figure 8.58, \"Source Alert to Sink\" below provides a detailed explanation of what happens at each labeled step in Table a8b.o8v5e.Steps for Source Alert to Sink Step Sink Source DPM Source Policy Engine Protocol Layer Alert The indicates a alert condition. The Message Protocol Layer AlertMessage. PHY Layer creates the and passes to. CRC Message CRCReceiveTimer receives the and compares the appends a and sends the. it calculated with the one sent to verify the. Starts. Message checks the in the incoming is different from the previously stored value Protocol Layer Alert Message Policy Engine The forwards the received Policy Engine DPM to the that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine Alert and stops. informs the that the was successfully sent. Figure 8.59, \"Sink Alert to Source\" Source Sink Sink Source Sink Se csthioonw 8s. 3a.n2.e1x1a.2m, p\"Sleta steuqsu\"ence between a and a where the alerts the that there has been a status change. This AMS will be followed by getting the status to determine further details of the alert (see Figure 8.59 Sink) A. lert to Source Source Port Sink Port : Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine 1: Send Alert 2: Alert 3: Alert + CRC 4: Alert Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Alert received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Alert sent Table8.86, \"Steps for Sink Alert to Source\" Figure 8.59, \"Sink Alert to Source\" below provides a detailed explanation of what happens at each labeled step in Table a8b.o8v6e.Steps for Sink Alert to Source Step Source Sink DPM Sink Policy Engine Protocol Layer Alert The indicates a alert condition. The Message Protocol Layer AlertMessage. PHY Layer creates the and passes to. CRC Message CRCReceiveTimer receives the and compares the appends a and sends the. it calculated with the one sent to verify the. Starts. Message checks the in the incoming is different from the previously stored value Protocol Layer Alert Message Policy Engine The forwards the received Policy Engine DPM to the that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and pPaHsYse Lsa ity er. CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine Alert and stops. informs the that the was successfully sent. Figure 8.60, \"Sink Gets Source Status\" Source Sink Sink Section 8.3.2.11.2, \"Status\" Sink shows an example sequence between a and a where, after the has received an alert (see ) that there has been a status change, the gets more details on the change. Figure 8.60 Sink Gets Source Status Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Status 2:Get_Status 3: Get_Status + CRC Start CRCReceiveTimer 4: Get_Status Check MessageID against local copy Store copy of MessageID 5: Get_Status received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Source Status 9:Get_Status sent Information from DPM Start SenderResponseTimer 10: Send Status 11: Status 12: Status + CRC 13: Status Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Status received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Status sent Table8.87, \"Steps for a Sink getting Source Status Sequence\" Figure 8.60, \"Sink Gets Source Status\" below provides a detailed explanation of what happens at each labeled step in Table8.87 Steps for a Sink getti nabgo Svoeu.rce Status Sequence Step Sink Port Source Port Port Port Power Role Sink R CC Port Port Power Role Source R The has set to with the d Policy Engine Protocol Layer CC pull down on its wire. The has set to and the p directs the to send a pull up on its wire. Protocol Layer Message PHY. Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and checks. Starts. the to verify the. Get_StatusMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Get_Status and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_StatusMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Source starts. requests the for the present Policy Engine Protocol Layer status which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC Status Status receives the and compares the Message CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer Status and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.87 Steps for a Sink getting Source Status Sequence Step Sink Port Source Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Source Sink was successfully sent. The has informed the of its present status. Figure 8.61, \"Source Gets Sink Status\" Source Sink Source Section 8.3.2.11.2, \"Status\" Source shows an example sequence between a and a where, after the has received an alert (see ) that there has been a status change, the gets more details on the change. Figure 8.61 Source Gets Sink Status Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Status 2:Get_Status 3: Get_Status + CRC Start CRCReceiveTimer 4: Get_Status Check MessageID against local copy Store copy of MessageID 5: Get_Status received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Sink Status 9:Get_Status sent Information from DPM Start SenderResponseTimer 10: Send Status 11: Status 12: Status + CRC 13: Status Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Status received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Status sent Table8.88, \"Steps for a Source getting Sink Status Sequence\" Figure 8.61, \"Source Gets Sink Status\" below provides a detailed explanation of what happens at each labeled step in Table8.88 Steps for a Source ge attbionvge S.ink Status Sequence Step Source Port Sink Port Port Port Power Role Source R CC Port Port Power Role Sink R The has set to and the p Policy Engine Protocol Layer CC pull up on its wire. The has set to with the d pull directs the to send a down on its wire. Protocol Layer Message PHY. Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and checks. Starts. the to verify the. Get_StatusMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Get_Status and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_StatusMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Source starts. requests the for the present Policy Engine Protocol Layer status which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC StatusMessage Status receives the and compares the CRCReceiveTimer Message appends a and sends the. Protocol Layer MessageID Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer Status and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.88 Steps for a Source getting Sink Status Sequence Step Source Port Sink Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Sink Source was successfully sent. The has informed the of its present status. Figure 8.62, \"VCONN Source Gets Cable Plug Status\" VCONN Source Cable Plug VCONN Source Section 8.3.2.11.2, \"Status\" VCONN Source shows an example sequence between a and a where, after the has received an alert (see ) that there has been a status change, the F gigeutsr em 8o.r6e2 d VetCaOiNlsN o Sno tuhrec ceh Ganetgse.C able Plug Status VCONNSource Port Cable Plug : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Get_Status 2:Get_Status 3: Get_Status + CRC Start CRCReceiveTimer 4: Get_Status Check MessageID against local copy Store copy of MessageID 5: Get_Status received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Status Information 9:Get_Status sent from DPM Start SenderResponseTimer 10: Send Status 11: Status 12: Status + CRC 13: Status Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Status received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Status sent Table8.89, \"Steps for a VCONN Source getting Cable Plug Status Sequence\" Figure 8.62, \"VCONN Source Gets Cable Plug Status\" below provides a detailed explanation of what happens at eaTcahb llaeb8el.8ed9 s Stetpep ins for a VCONN Source getting Cable Plug Status Se qabuoevnec.e Step VCONN Source Port Cable Plug Policy Engine Protocol Layer Get_StatusMessage directs the to send a. Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and checks. Starts. the to verify the. Get_StatusMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Get_Status and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_StatusMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Source starts. requests the for the present Policy Engine Protocol Layer status which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC Status Status receives the and compares the Message CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer Status and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. Table8.89 Steps for a VCONN Source getting Cable Plug Status Sequence Step VCONN Source Port Cable Plug Protocol Layer MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Cable Plug VCONN Source was successfully sent. The has informed the of its present status. Figure 8.63, \"Sink Gets Source PPS Status\" Source Sink Sink Section 8.3.2.11.2, \"Status\" Sink shows an example sequence between a and a where, after the has received an alert (see ) that there has been a PPS status change, the gets more details on the change. Figure 8.63 Sink Gets Source PPS Status Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_PPS_Status 2:Get_PPS_Status 3: Get_PPS_Status + CRC Start CRCReceiveTimer 4: Get_PPS_Status Check MessageID against local copy Store copy of MessageID 5: Get_PPS_Status received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Source PPS Status 9:Get_PPS_Status sent Information from DPM Start SenderResponseTimer 10: Send PPS_Status 11: PPS_Status 12: PPS_Status + CRC 13: PPS_Status Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: PPS_Status received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: PPS_Status sent Table8.90, \"Steps for a Sink getting Source PPS status Sequence\" Figure 8.63, \"Sink Gets Source PPS Status\" below provides a detailed explanation of what happens at each labeledT satbelpe i8n. 90 Steps for a Sink getting Source PPS satbaotvues. Sequence Step Sink Port Source Port Port Port Power Role Sink R CC Port Port Power Role Source R The has set to with the d Policy Engine Protocol Layer CC pull down on its wire. The has set to and the p directs the to send a pull up on its wire. Protocol Layer Message PHY. Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Get_StatusMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_PPS_StatusMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Source starts. requests the for the present Policy Engine Protocol Layer status which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC PPS_Status PPS_Status receives the and compares the Message CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer PPS_Status and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.90 Steps for a Sink getting Source PPS status Sequence Step Sink Port Source Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Source Sink was successfully sent. The has informed the of its present PPS status. Figure 8.64, \"Sink Gets Source's Capabilities\" Source Sink Sink Source Capabilities shows an example sequence between a and a when the gets the. Figure 8.64 Sink Gets Source's Capabilities Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Source_Cap 2:Get_Source_Cap 3: Get_Source_Cap + CRC Start CRCReceiveTimer 4: Get_Source_Cap Check MessageID against local copy Store copy of MessageID 5: Get_Source_Cap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Source capability 9:Get_Source_Cap sent Information from DPM Start SenderResponseTimer 10: Send Source_Capabilities 11: Source_Capabilities 12: Source_Capabilities + CRC 13: Source_Capabilities Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Source_Capabilities received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Source_Capabilities sent Table8.91, \"Steps for a Sink getting Source Capabilities Sequence\" Figure 8.64, \"Sink Gets Source's Capabilities\" below provides a detailed explanation of what happens at each labeleTda sbtelep 8in.9 1 Steps for a Sink getting Source Capabil aitbieosv eS.equence Step Sink Port Source Port Port Port Power Role Sink R CC Port Port Power Role Source R The has set to with the d Policy Engine Protocol Layer CC pull down on its wire. The has set to and the p directs the to send a pull up on its wire. Protocol Layer Message PHY. Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Get_Source_CapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Source_CapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Source starts. Capabilities requests the for the present Policy Engine Protocol Layer which are provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC receives the and compares the Source_CapabilitiesMessage CRCReceiveTimer Source_CapabilitiesMessage appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Policy Engine SenderResponseTimer that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.91 Steps for a Sink getting Source Capabilities Sequence Step Sink Port Source Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Source Sink was successfully sent. The has informed the of its capabilities. Figure 8.65, \"Dual-Role Source Gets Dual-Role Sink's Capabilities as a Source\" Dual-Role PowerSource Dual-Role PowerSink Source Sink Capabilities Source shows an example sequence between a Fi gure 8.a6n5d D au al-Role Source Gets wDhueanl- Rthoel e Sink' sg eCtasp tahbe ilities as a Sourc aes a. Dual-Role Source Port Dual-Role Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Source_Cap 2:Get_Source_Cap 3: Get_Source_Cap + CRC Start CRCReceiveTimer 4: Get_Source_Cap Check MessageID against local copy Store copy of MessageID 5: Get_Source_Cap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Source capability 9:Get_Source_Cap sent Information from DPM Start SenderResponseTimer 10: Send Source_Capabilities 11: Source_Capabilities 12: Source_Capabilities + CRC 13: Source_Capabilities Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Source_Capabilities received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Source_Capabilities sent Table8.92, \"Steps for a Dual-Role Source getting Dual-Role Sink's capabilities as a Source Sequence\" Figure 8.65, \"Dual-Role Source Gets Dual-Role Sink's Capabilities as a Source\" below provides a detailed explanation of what happens at each labeled step in Table8.92 Steps fo arb ao Dveu.al-Role Source getting Dual-Role Sink's capabilities as a Source Sequence Step Dual-Role Source Port Dual-Role Sink Port Port Port Power Role Source R CC Port Port Power Role Sink R The has set to and the p Policy Engine Protocol Layer CC pull up on its wire. The has set to with the d pull directs the to send a down on its wire. Protocol Layer Message PHY. Layer creates the and passes to. Get_Source_CapMessage CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Get_Source_CapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Source_CapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Source starts. Capabilities requests the for the present Policy Engine Protocol Layer which are provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC receives the and compares the Source_Capabilities Message CRCReceiveTimer Source_CapabilitiesMessage appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Policy Engine SenderResponseTimer that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.92 Steps for a Dual-Role Source getting Dual-Role Sink's capabilities as a Source Sequence Step Dual-Role Source Port Dual-Role Sink Port PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Dual-Role PowerSink Dual-Role PowerSource was successfully sent. The has informed the of its capabilities. Figure 8.66, \"Source Gets Sink's Capabilities\" Source Sink Source Sink Capabilities shows an example sequence between a and a when the gets the. Figure 8.66 Source Gets Sink's Capabilities Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Sink_Cap 2:Get_Sink_Cap 3: Get_Sink_Cap + CRC Start CRCReceiveTimer 4: Get_Sink_Cap Check MessageID against local copy Store copy of MessageID 5: Get_Sink_Cap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Sink capability 9:Get_Sink_Cap sent Information from DPM Start SenderResponseTimer 10: Send Sink_Capabilities 11: Sink_Capabilities 12: Sink_Capabilities + CRC 13: Sink_Capabilities Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Sink_Capabilities received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Sink_Capabilities sent Table8.93, \"Steps for a Source getting Sink Capabilities Sequence\" Figure 8.66, \"Source Gets Sink's Capabilities\" below provides a detailed explanation of what happens at each labeleTda sbtelep 8in.9 3 Steps for a Source getting Sink Capabil aitbieosv eS.equence Step Source Port Sink Port Port Port Power Role Source R CC Port Port Power Role Sink R The has set to and the p Policy Engine Protocol Layer CC pull up on its wire. The has set to with the d pull directs the to send a down on its wire. Protocol Layer Message PHY. Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Get_Sink_CapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Get_Sink_Cap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Sink_CapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Sink starts. Capabilities requests the for the present Policy Engine Protocol Layer which are provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC receives the and compares the Sink_CapabilitiesMessage CRCReceiveTimer Sink_CapabilitiesMessage appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Policy Engine SenderResponseTimer that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Table8.93 Steps for a Source getting Sink Capabilities Sequence Step Source Port Sink Port PHY Layer CRC GoodCRC Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Sink Source was successfully sent. The has informed the of its capabilities. Figure 8.67, \"Dual-Role Sink Gets Dual-Role Source's Capabilities as a Sink\" Dual-Role PowerSource Dual-Role PowerSink Dual-Role PowerSink Dual-Role PowerSource Capabilities Sink shows an example sequence between a and a when the gets the as a Fig.u re 8.67 Dual-Role Sink Gets Dual-Role Source's Capabilities as a Sink Dual-Role Sink Port Dual-Role Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Sink_Cap 2:Get_Sink_Cap 3: Get_Sink_Cap + CRC Start CRCReceiveTimer 4: Get_Sink_Cap Check MessageID against local copy Store copy of MessageID 5: Get_Sink_Cap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Sink capability 9:Get_Sink_Cap sent Information from DPM Start SenderResponseTimer 10: Send Sink_Capabilities 11: Sink_Capabilities 12: Sink_Capabilities + CRC 13: Sink_Capabilities Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Sink_Capabilities received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Sink_Capabilities sent Table8.94, \"Steps for a Dual-Role Sink getting Dual-Role Source capabilities as a Sink Sequence\" Figure 8.67, \"Dual-Role Sink Gets Dual-Role Source's Capabilities as a Sink\" below provides a detailed explanation of what happens at each labeled step in Table8.94 Ste pabs ofover.a Dual-Role Sink getting Dual-Role Source capabilities as a Sink Sequence Step Dual-Role Sink Port Dual-Role Source Port Port Port Power Role Dual-Role Power Sink R CC Port Port Power Role Dual-Role Power The has set to Polic wy iE thn tg hi en e d pull downP or no t io tsc ol L way ire er. TSo hu er ce has R seC tC to directs the to send a and the p pull up on its wire. Protocol Layer Message PHY. Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Get_Sink_CapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Get_Sink_Cap and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Sink_CapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Dualstarts. Role PowerSource Capabilities requests the for the present Policy Engine Protocol Layer which are provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY La.yer CRC receives the and compares the Sink_CapabilitiesMessage CRCReceiveTimer Sink_CapabilitiesMessage appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Policy Engine SenderResponseTimer that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.94 Steps for a Dual-Role Sink getting Dual-Role Source capabilities as a Sink Sequence Step Dual-Role Sink Port Dual-Role Source Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Dual-Role PowerSource Dual-Role PowerSink Capabi lwitiaess succeSsinsfkully sent. The has informed the of its as a. Figure 8.68, \"Sink Gets Source's EPR Capabilities\" Source Sink Sink Source EPR Capabilities shows an example sequence between a and a when the gets the 's Figure 8.6. 8 Sink Gets Source's EPR Capabilities Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send EPR_Get_EPR_Source_Cap 2:EPR_Get_EPR_Source_Cap 3: EPR_Get_EPR_Source_Cap + CRC Start CRCReceiveTimer 4: EPR_Get_EPR_Source_Cap Check MessageID against local copy Store copy of MessageID 5: EPR_Get_EPR_Source_Cap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Get EPR Source capability Stop CRCReceiveTimer Information from DPM 9:EPR_Get_EPR_Source_Cap sent Start SenderResponseTimer 11: EPR_Source_Capabilities 10: Send EPR_Source_Capabilities 12: EPR_Source_Capabilities + CRC 13: EPR_Source_Capabilities Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: EPR_Source_Capabilities received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: EPR_Source_Capabilities sent Table8.95, \"Steps for a Sink getting EPR Source Capabilities Sequence\" Figure 8.68, \"Sink Gets Source's EPR Capabilities\" below provides a detailed explanation of what happens at eacTha lbalbee8le.d9 5st eSpte inp s for a Sink getting EPR Source Capabilities Se aqbuoevnec.e Step Sink Port Source Port Port Port Power Role Sink R CC Port Port Power Role Source R The has set to with the d Policy Engine Protocol Layer CC pull down on its wire. The has set to and the p directs the to send a pull up on its wire. Protocol Layer Message PHY. Layer creates the and passes to. PHY Layer EPR_Get_Source_CapMessage EPR_Get_Source_CapMessage appends and sends the CRC Message CRCReceiveTimer receives the aPnHdY cLhaeycekrs the to veCrRifCy the.. EPR_Get_Source_CapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. EPR_Get_Source_CapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM starts. Source Capabilities requests the for the present EPR Policy Engine Protocol Layer which are provided. The tells the to form an Protocol Layer Message PHY. Layer creates the and passes to. EPR_Source_Capabilities Message receives the and compares the appends a and sends the EPR_Source_CapabilitiesMessage CRCReceiveTimer Protocol Layer MessageID.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Policy Engine SenderResponseTimer that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.95 Steps for a Sink getting EPR Source Capabilities Sequence Step Sink Port Source Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Source Sink EPR Capabilities was successfully sent. The has informed the of its. Sink Figure 8.69, \"Dual-Role Source Gets Dual-Role Sink's Capabilities as an EPR Source\" Dual-Role PowerSource Dual-Role PowerSink Source Sink Capabilities EPR Source shows an example sequence between a and a when the gets the as an. Figure 8.69 Dual-Role Source Gets Dual-Role Sink's Capabilities as an EPR Source Dual-Role Source Port Dual-Role Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send EPR_Get_EPR_Source_Cap 2:EPR_Get_EPR_Source_Cap 3: EPR_Get_EPR_Source_Cap + CRC Start CRCReceiveTimer 4: EPR_Get_EPR_Source_Cap Check MessageID against local copy Store copy of MessageID 5: EPR_Get_EPR_Source_Cap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get EPR Source capability 9:EPR_Get_EPR_Source_Cap sent Information from DPM Start SenderResponseTimer 10: Send EPR_Source_Capabilities 11: EPR_Source_Capabilities 13: EPR_Source_Capabilities 12: EPR_Source_Capabilities + CRC Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: EPR_Source_Capabilities received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: EPR_Source_Capabilities sent Table8.96, \"Steps for a Dual-Role Source getting Dual-Role Sink's capabilities as an EPR Source Sequence\" Figure 8.69, \"Dual-Role Source Gets Dual Role Sink's Capabilities as an EPR Source\" below provides a detailed explanation of what happens at each labeled step in Table8.96 Steps for a Dual-Role Sour aceb ogveet.ting Dual-Role Sink's capabilities as an EPR Source Sequence Step Dual-Role Source Port Dual-Role Sink Port Port Port Power Role Source R CC Port Port Power Role Sink R The has set to and the p Policy Engine Protocol Layer CC pull up on its wire. The has set to with the d pull directs the to send a down on its wire. Protocol Layer Message PHY. Layer creates the and passes to. PHY Layer EPR_Get_Source_CapMessage EPR_Get_Source_CapMessage appends and sends the CRC Message CRCReceiveTimer receives the aPnHdY c Lhaecykesr the to verCiRfyC the.. EPR_Get_Source_CapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. EPR_Get_Source_CapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Source starts. Capabilities requests the for the present Policy Engine Protocol Layer which are provided. The tells the to form an Protocol Layer Message PHY. Layer creates the and passes to. EPR_Source_Capabilities Message receives the and compares the appends a and sends the EPR_Source_CapabilitiesMessage CRCReceiveTimer Protocol Layer MessageID.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Policy Engine SenderResponseTimer that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.96 Steps for a Dual-Role Source getting Dual-Role Sink's capabilities as an EPR Source Sequence Step Dual-Role Source Port Dual-Role Sink Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. EPR_Source_CapabilitiesMessage was successfully Dual-Role PowerSink Dual-Rosleen Pto.werSource EPR Capabilities The has informed the of its. Figure 8.70, \"Source Gets Sink's EPR Capabilities\" Source Sink Source Sink EPR Capabilities shows an example sequence between a and a when the gets the 's Figure 8.7. 0 Source Gets Sink's EPR Capabilities Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send EPR_Get_EPR_Sink_Cap 2:EPR_Get_EPR_Sink_Cap 3: EPR_Get_EPR_Sink_Cap + CRC Start CRCReceiveTimer 4: EPR_Get_EPR_Sink_Cap Check MessageID against local copy Store copy of MessageID 5: EPR_Get_EPR_Sink_Cap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Get EPR Sink capability Stop CRCReceiveTimer Information from DPM 9:EPR_Get_EPR_Sink_Cap sent Start SenderResponseTimer 11: EPR_Sink_Capabilities 10: Send EPR_Sink_Capabilities 12: EPR_Sink_Capabilities + CRC 13: EPR_Sink_Capabilities Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: EPR_Sink_Capabilities received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: EPR_Sink_Capabilities sent Table8.97, \"Steps for a Source getting Sink EPR Capabilities Sequence\" Figure 8.70, \"Source Gets Sink's EPR Capabilities\" below provides a detailed explanation of what happens at eacTha lbalbee8le.d9 7st eSpte inp s for a Source getting Sink EPR Capabilities Se aqbuoevnec.e Step Source Port Sink Port Port Port Power Role Source R CC Port Port Power Role Sink R The has set to and the p Policy Engine Protocol Layer CC pull up on its wire. The has set to with the d pull directs the to send a down on its wire. Protocol Layer Message PHY. Layer creates the and passes to. EPR_Get_Sink_CapMessage CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. EPR_Get_Sink_CapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. EPR_Get_Sink_CapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Sink starts. Capabilities requests the for the present Policy Engine Protocol Layer which are provided. The tells the to form an Protocol Layer Message PHY. Layer creates the and passes to. EPR_Sink_CapabilitiesMessage receives the and compares the appends a and sends the EPR_Sink_CapabilitiesMessage CRCReceiveTimer Protocol Layer MessageID.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Policy Engine SenderResponseTimer that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.97 Steps for a Source getting Sink EPR Capabilities Sequence Step Source Port Sink Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Sink Source EPR Capabilities was successfully sent. The has informed the of its. Source Figure 8.71, \"Dual-Role Sink Gets Dual-Role Source's Capabilities as an EPR Sink\" Dual-Role PowerSource Dual-Role PowerSink Dual-Role PowerSink Dual-Role PowerSource Capabilities Sink shows an example sequence between a and a when the gets the Figure 8.71 a sD au al-R.o le Sink Gets Dual-Role Source's Capabilities as an EPR Sink Dual-Role Sink Port Dual-Role Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send EPR_Get_EPR_Sink_Cap 2:EPR_Get_EPR_Sink_Cap 3: EPR_Get_EPR_Sink_Cap + CRC Start CRCReceiveTimer 4: EPR_Get_EPR_Sink_Cap Check MessageID against local copy Store copy of MessageID 5: EPR_Get_EPR_Sink_Cap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get EPR Sink capability 9:EPR_Get_EPR_Sink_Cap sent Information from DPM Start SenderResponseTimer 10: Send EPR_Sink_Capabilities 11: EPR_Sink_Capabilities 13: EPR_Sink_Capabilities 12: EPR_Sink_Capabilities + CRC Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: EPR_Sink_Capabilities received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: EPR_Sink_Capabilities sent Table8.98, \"Steps for a Dual-Role Sink getting Dual-Role Source Capabilities as an EPR Sink Sequence\" Figure 8.71, \"Dual-Role Sink Gets Dual-Role Source's Capabilities as an EPR Sink\" below provides a detailed explanation of what happens at each labeled step in Table8.98 Steps for a Dual-Rol aeb Soivnek. getting Dual-Role Source Capabilities as an EPR Sink Sequence Step Dual-Role Sink Port Dual-Role Source Port Port Port Power Role Dual-Role Power Sink R CC Port Port Power Role Dual-Role Power The has set to Polic wy iE thn tg hi en e d pull downP or no t io tsc ol L way ire er. TSo hu er ce has R seC tC to directs the to send a and the p pull up on its wire. Protocol Layer Message PHY. Layer creates the and passes to. EPR_Get_Sink_CapMessage CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. EPR_Get_Sink_Cap Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. EPR_Get_Sink_CapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Dualstarts. Role PowerSource Capabilities requests the for the present Policy Engine Protocol Layer which are provided. The tells the to form an Protocol Layer Message PHY. Layer creates the and passes to. EPR_Sink_Capabilities Message receives the and compares the appends a and sends the EPR_Sink_CapabilitiesMessage CRCReceiveTimer Protocol Layer MessageID.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Policy Engine SenderResponseTimer that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.98 Steps for a Dual-Role Sink getting Dual-Role Source Capabilities as an EPR Sink Sequence Step Dual-Role Sink Port Dual-Role Source Port PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Dual-Role PowerSource Dual-Role PowerSink Capabi lities waEsP sRu cSciensksfully sent. The has informed the of its as an. Figure 8.72, \"Sink Gets Source's Extended Capabilities\" Source Sink Sink Source Extended Capabilities shows an example sequence between a and a when the gets the F'isg ure 8.72 Sink Gets S.o urce's Extended Capabilities Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Source_Cap_Extended 2:Get_Source_Cap_Extended 3: Get_Source_Cap_Extended + CRC Start CRCReceiveTimer 4: Get_Source_Cap_Extended Check MessageID against local copy Store copy of MessageID 5: Get_Source_Cap_Extended 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get extended Source 9:Get_Source_Cap_Extended sent capability Information from DPM Start SenderResponseTimer 10: Send Source_Capabilities_Extended 12: Source_Capabilities_Extended 11: Source_Capabilities_Extended + CRC 13: Source_Capabilities_Extended Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Source_Capabilities_Extended received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Source_Capabilities_Extended sent Table8.99, \"Steps for a Sink getting Source Extended Capabilities Sequence\" Figure 8.72, \"Sink Gets Source's Extended Capabilities\" below provides a detailed explanation of what happens Tata ebalech8 l.a9b9e lSetde sptse pfo irn a Sink getting Source Extended Capabilities Sequen acbeove. Step Sink Port Source Port Port Port Power Role Sink R CC Port Port Power Role Source R The has set to with the d Policy Engine Protocol Layer CC pull down on its wire. The has set to and the p directs the to send a pull up on its wire. Protocol Layer Message PHY. Layer creates the and passes to. PHY Layer Get_Source_Cap_Extended Get_Source_Cap_ExtendedMessage appends and sends the Message CRC Message CRCReceiveTimer receives the PHY Laye arnd checks the CRC to verify the.. Get_Source_Cap_ExtendedMessage Protocol removes the and forwards the Layer Protocol Layer MessageID. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Source_Cap_ExtendedMessage Policy Engine SenderResponseTimer was successfully Policy Engine DPM Source sent. starts. Extended Capabilities requests the for the present Policy Engine Protocol Layer which are provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to. Source_Capabilities_Extended Message receives the and compares the appends a and sends the Source_Capabilities_ExtendedMessage CRCReceiveTimer Protocol Layer MessageID.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to Policy Engine SenderResponseTimer the that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.99 Steps for a Sink getting Source Extended Capabilities Sequence Step Sink Port Source Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Source_Capabilities_ExtendedMessage was Source Sink sucEcxetsesnfudelldy Cseanpta.bilities The has informed the of its. Role Sink Figure 8.73, \"Dual-Role Source Gets Dual-Role Sink's Extended Capabilities\" Source Sink Dual-Role PowerSource Dual-Role PowerSink Extended Capabilities Source shows an example sequence between a and a when the gets the 's as a. Figure 8.73 Dual-Role Source Gets Dual-Role Sink's Extended Capabilities Dual-Role Source Port Dual-Role Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Source_Cap_Extended 2:Get_Source_Cap_Extended 3: Get_Source_Cap_Extended + CRC Start CRCReceiveTimer 4: Get_Source_Cap_Extended Check MessageID against local copy Store copy of MessageID 5: Get_Source_Cap_Extended 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get extended Source 9:Get_Source_Cap_Extended sent capability Information from DPM Start SenderResponseTimer 10: Send Source_Capabilities_Extended 12: Source_Capabilities_Extended 11: Source_Capabilities_Extended + CRC 13: Source_Capabilities_Extended Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Source_Capabilities_Extended received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Source_Capabilities_Extended sent Table8.100, \"Steps for a Dual-Role Source getting Dual-Role Sink Extended Capabilities Sequence\" Figure 8.73, \"Dual-Role Source Gets Dual-Role Sink's Extended Capabilities\" below provides a detailed explanation of what happens at each labeled step in Table8.100 Step asb ofovre.a Dual-Role Source getting Dual-Role Sink Extended Capabilities Sequence Step Dual-Role Source Port Dual-Role Sink Port Port Port Power Role Source R CC Port Port Power Role Sink R The has set to and the p Policy Engine Protocol Layer CC pull up on its wire. The has set to with the d pull directs the to send a down on its wire. Protocol Layer Message PHY. Layer creates the and passes to. PHY Layer Get_Source_Cap_Extended Get_Source_Cap_ExtendedMessage appends and sends the Message CRC Message CRCReceiveTimer receives the PHY Lay aenrd checks the CRC to verify the.. Get_Source_Cap_ExtendedMessage Protocol removes the and forwards the Layer Protocol Layer MessageID. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Source_Cap_ExtendedMessage Policy Engine SenderResponseTimer was successfully Policy Engine DPM Extended sent. starts. Capabilities Source requests the for the Policy Engine Protocol Layer as a which are provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to. Source_Capabilities_Extended Message receives the and compares the appends a and sends the Source_Capabilities_ExtendedMessage CRCReceiveTimer Protocol Layer MessageID.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to Policy Engine SenderResponseTimer the that consumes it. Table8.100 Steps for a Dual-Role Source getting Dual-Role Sink Extended Capabilities Sequence Step Dual-Role Source Port Dual-Role Sink Port Protocol Layer GoodCRCMessage PHY Layer generates a and PpaHsYse Lsa ity er. CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Source_Capabilities_ExtendedMessage was Dual-Role PowerSink Dual-Role PowersuScocuerscsefully seEnxtt.ended Capabilities Source The has informed the of its as a. Figure 8.74, \"Source Gets Sink's Extended Capabilities\" Source Sink Source Sink Extended Capabilities shows an example sequence between a and a when the gets the F'isg ure 8.74 Source Get.s Sink's Extended Capabilities Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Sink_Cap_Extended 2:Get_Sink_Cap_Extended 3: Get_Sink_Cap_Extended + CRC Start CRCReceiveTimer 4: Get_Sink_Cap_Extended Check MessageID against local copy Store copy of MessageID 5: Get_Sink_Cap_Extended 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get extended Sink 9:Get_Sink_Cap_Extended sent capability Information from DPM Start SenderResponseTimer 10: Send Sink_Capabilities_Extended 12: Sink_Capabilities_Extended 11: Sink_Capabilities_Extended + CRC 13: Sink_Capabilities_Extended Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Sink_Capabilities_Extended received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Sink_Capabilities_Extended sent Table8.101, \"Steps for a Source getting Sink Extended Capabilities Sequence\" Figure 8.74, \"Source Gets Sink's Extended Capabilities\" below provides a detailed explanation of what happensT aatb elaec8h.l1a0b1e l eSdte sptesp f oinr a Source getting Sink Extended Capabilities Seque anbcoeve. Step Sink Port Source Port Port Port Power Role Source R CC Port Port Power Role Sink R The has set to and the p Policy Engine Protocol Layer CC pull up on its wire. The has set to with the d pull directs the to send a down on its wire. Protocol Layer Message PHY. Layer creates the and passes to. PHY Layer Get_Sink_Cap_Extended Get_Source_Cap_ExtendedMessage appends and sends the Message CRC Message CRCReceiveTimer receives the PHY Lay aenrd checks the CRC to verify the.. Get_Sink_Cap_ExtendedMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Sink_Cap_ExtendedMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Sink starts. Extended Capabilities requests the for the present Policy Engine Protocol Layer which are provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to. Sink_Capabilities_ExtendedMessage receives the and compares the appends a and sends the Sink_Capabilities_ExtendedMessage CRCReceiveTimer Protocol Layer MessageID.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to Policy Engine SenderResponseTimer the that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.101 Steps for a Source getting Sink Extended Capabilities Sequence Step Sink Port Source Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Sink_Capabilities_ExtendedMessage was successfully Sink Source senEtx.tended Capabilities The has informed the of its. Source Figure 8.75, \"Dual-Role Sink Gets Dual-Role Source's Extended Capabilities\" Source Sink Dual-Role PowerSink Dual-Role PowerSource Extended Capabilities Sink shows an example sequence between a and a Fwighuenre t h8e.7 5 Dual-Role Sin k Ge gtest Ds tuhael -Role Source's E xtende'sd Capabilities as a. Dual-Role Sink Port Dual-Role Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Sink_Cap_Extended 2:Get_Sink_Cap_Extended 3: Get_Sink_Cap_Extended + CRC Start CRCReceiveTimer 4: Get_Sink_Cap_Extended Check MessageID against local copy Store copy of MessageID 5: Get_Sink_Cap_Extended 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get extended Sink 9:Get_Sink_Cap_Extended sent capability Information from DPM Start SenderResponseTimer 10: Send Sink_Capabilities_Extended 12: Sink_Capabilities_Extended 11: Sink_Capabilities_Extended + CRC 13: Sink_Capabilities_Extended Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Sink_Capabilities_Extended received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Sink_Capabilities_Extended sent Table8.102, \"Steps for a Dual-Role Sink getting Dual-Role Source Extended Capabilities Sequence\" Figure 8.75, \"Dual-Role Sink Gets Dual-Role Source's Extended Capabilities\" below provides a detailed explanation of what happens at each labeled step in Table8.102 Step asb ofovre.a Dual-Role Sink getting Dual-Role Source Extended Capabilities Sequence Step Dual-Role Source Port Dual-Role Sink Port Port Port Power Role Sink R CC Port Port Power Role Source R The has set to with the d Policy Engine Protocol Layer CC pull down on its wire. The has set to and the p directs the to send a pull up on its wire. Protocol Layer Message PHY. Layer creates the and passes to. PHY Layer Get_Sink_Cap_Extended Get_Sink_Cap_ExtendedMessage appends and sends the Message CRC Message CRCReceiveTimer receives the PHY Lay aenrd checks the CRC to verify the.. Get_Sink_Cap_ExtendedMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Sink_Cap_ExtendedMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Extended starts. Capabilities Sink requests the for the Policy Engine Protocol Layer as a which are provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to. Sink_Capabilities_Extended Message receives the and compares the appends a and sends the Sink_Capabilities_ExtendedMessage CRCReceiveTimer Protocol Layer MessageID.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to Policy Engine SenderResponseTimer the that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.102 Steps for a Dual-Role Sink getting Dual-Role Source Extended Capabilities Sequence Step Dual-Role Source Port Dual-Role Sink Port PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Sink_Capabilities_ExtendedMessage was successfully Dual-Role PowerSource Dual-Role Poswenetr.Sink Extended Capabilities Sink The has informed the of its as a. Figure 8.76, \"Sink Gets Source's Battery Capabilities\" Source Sink Sink Source Battery Battery shows an example sequence between a and a when the gets the 's Figu craep a8b.7il6it iSeisn fko rG ae tgsi vSeonu rce's Ba. ttery Capabilities Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Battery_Cap 2:Get_Battery_Cap 3: Get_Battery_Cap + CRC Start CRCReceiveTimer 4: Get_Battery_Cap Check MessageID against local copy Store copy of MessageID 5: Get_Battery_Cap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Battery capability 9:Get_Battery_Cap sent Information from DPM Start SenderResponseTimer 10: Send Battery_Capabilities 11: Battery_Capabilities 12: Battery_Capabilities + CRC 13: Battery_Capabilities Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Battery_Capabilities received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Battery_Capabilities sent Table8.103, \"Steps for a Sink getting Source Battery capabilities Sequence\" Figure 8.76, \"Sink Gets Source's Battery Capabilities\" below provides a detailed explanation of what happens at eTaacbhl ela8be.1le0d3 s tSetpe pins for a Sink getting Source Battery capabilities Seq aubeonvcee. Step Sink Port Source Port Port Port Power Role Sink R CC The has set to with the d Port Port Power Role Source R Policy Engine Protocol Layer pull down on its wire. CC Get_Battery_CapMessage The has set to and the p Battery pull up on its wire. containing the number of the Protocol Layer Message PHY for which capabilities are being requested. Layer creates the and passes to. Get_Battery_CapMessage CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Get_Battery_CapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Battery_CapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Source starts. Battery Battery requests the for the present capabilities, for the requested number, Policy Engine Protocol Layer Battery_CapabilitiesMessage The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY La.yer CRC receives the and compares the Battery_CapabilitiesMessage CRCReceiveTimer Battery_CapabilitiesMessage appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Policy Engine SenderResponseTimer that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.103 Steps for a Sink getting Source Battery capabilities Sequence Step Sink Port Source Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Source Sink Battery B awttaesr syuccessfully sent. The has informed the of the capabilities for the requested. Figure 8.77, \"Source Gets Sink's Battery Capabilities\" Source Sink Source Sink Battery Battery shows an example sequence between a and a when the gets the 's Figu craep a8b.7il7it iSeosu forcr ea Ggeivtesn S ink's Ba. ttery Capabilities Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Battery_Cap 2:Get_Battery_Cap 3: Get_Battery_Cap + CRC Start CRCReceiveTimer 4: Get_Battery_Cap Check MessageID against local copy Store copy of MessageID 5: Get_Battery_Cap received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Battery capability 9:Get_Battery_Cap sent Information from DPM Start SenderResponseTimer 10: Send Battery_Capabilities 11: Battery_Capabilities 12: Battery_Capabilities + CRC 13: Battery_Capabilities Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Battery_Capabilities received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Battery_Capabilities sent Table8.104, \"Steps for a Source getting Sink Battery capabilities Sequence\" Figure 8.77, \"Source Gets Sink's Battery Capabilities\" below provides a detailed explanation of what happens at eTaacbhl ela8be.1le0d4 s tSetpe pins for a Source getting Sink Battery capabilities Seq aubeonvcee. Step Source Port Sink Port Port Port Power Role Source R CC The has set to and the p Port Port Power Role Sink R Policy Engine Protocol Layer pull up on its wire. CC Get_Battery_CapMessage The has set to with the d pull Battery down on its wire. containing the number of the Protocol Layer Message PHY for which capabilities are being requested. Layer creates the and passes to. Get_Battery_CapMessage CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Get_Battery_CapMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Battery_CapMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Source starts. Battery Battery requests the for the present capabilities, for the requested number, Policy Engine Protocol Layer Battery_CapabilitiesMessage The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY La.yer CRC receives the and compares the Battery_CapabilitiesMessage CRCReceiveTimer Battery_CapabilitiesMessage appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Policy Engine SenderResponseTimer that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.104 Steps for a Source getting Sink Battery capabilities Sequence Step Source Port Sink Port PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Sink Source Battery B awttaesr syuccessfully sent. The has informed the of the capabilities for the requested. Figure 8.78, \"Sink Gets Source's Battery Status\" Source Sink Sink Source Battery Battery shows an example sequence between a and a when the gets the 's statFuigs uforre a8 g.7iv8e Sni nk Gets. Source's Battery Status Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Battery_Status 2:Get_Battery_Status 3: Get_Battery_Status + CRC Start CRCReceiveTimer 4: Get_Battery_Status Check MessageID against local copy Store copy of MessageID 5: Get_Battery_Status received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Battery status 9:Get_Battery_Status sent Information from DPM Start SenderResponseTimer 10: Send Battery_Status 11: Battery_Status 12: Battery_Status + CRC 13: Battery_Status Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Battery_Status received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Battery_Status sent Table8.105, \"Steps for a Sink getting Source Battery status Sequence\" Figure 8.78, \"Sink Gets Source's Battery Status\" below provides a detailed explanation of what happens at each labeTleadb slete8p. 1in0 5 Steps for a Sink getting Source Battery sta atbuosv See.quence Step Sink Port Source Port Port Port Power Role Sink R CC The has set to with the d Port Port Power Role Source R Policy Engine Protocol Layer pull down on its wire. CC Get_Battery_StatusMessage The has set to and the p Battery pull up on its wire. containing the number of Protocol Layer Message PHY the for which status is being requested. Layer creates the and passes to. Get_Battery_StatusMessage CRCReceiveTimer CRC Message appends and sends the receives the. Starts. and checks the to verify the. Get_Battery_StatusMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Battery_StatusMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Source starts. Battery Battery requests the for the present status, for the requested number, which Policy Engine Protocol Layer Battery_StatusMessage The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC Battery_Status receives the and compares the Message CRCReceiveTimer Battery_StatusMessage appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Policy Engine SenderResponseTimer that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.105 Steps for a Sink getting Source Battery status Sequence Step Sink Port Source Port PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Source Sink Battery wBaas tstuercycessfully sent. The has informed the of the status for the requested. Figure 8.79, \"Source Gets Sink's Battery Status\" Source Sink Source Sink Battery Battery shows an example sequence between a and a when the gets the 's statFuisg fuorre a 8 g.i7v9e nS ource G. ets Sink's Battery Status Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Battery_Status 2:Get_Battery_Status 3: Get_Battery_Status + CRC Start CRCReceiveTimer 4: Get_Battery_Status Check MessageID against local copy Store copy of MessageID 5: Get_Battery_Status received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Battery status 9:Get_Battery_Status sent Information from DPM Start SenderResponseTimer 10: Send Battery_Status 11: Battery_Status 12: Battery_Status + CRC 13: Battery_Status Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Battery_Status received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Battery_Status sent Table8.106, \"Steps for a Source getting Sink Battery status Sequence\" Figure 8.79, \"Source Gets Sink's Battery Status\" below provides a detailed explanation of what happens at each labeTleadb slete8p. 1in0 6 Steps for a Source getting Sink Battery sta atbuosv See.quence Step Source Port Sink Port Port Port Power Role Source R CC The has set to and the p Port Port Power Role Sink R Policy Engine Protocol Layer pull up on its wire. CC Get_Battery_StatusMessage The has set to with the d pull Battery down on its wire. containing the number of Protocol Layer Message PHY the for which status is being requested. Layer creates the and passes to. Get_Battery_StatusMessage CRCReceiveTimer CRC Message appends and sends the receives the. Starts. and checks the to verify the. Get_Battery_StatusMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Battery_StatusMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Source starts. Battery Battery requests the for the present status, for the requested number, which Policy Engine Protocol Layer Battery_StatusMessage The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC Battery_Status receives the and compares the Message CRCReceiveTimer Battery_StatusMessage appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Policy Engine SenderResponseTimer that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.106 Steps for a Source getting Sink Battery status Sequence Step Source Port Sink Port PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Sink Source Battery wBaas tstuercycessfully sent. The has informed the of the status for the requested. Figure 8.80, \"Source Gets Sink's Port Manufacturer Information\" Source Sink Source Sink Port shows an example sequence between a and a when the gFeitgsu trhee 8.80' sS oMuarncuef aGcetutsr eSri ninkf'osr Pmoartti oMna fnoru ftahcet urer. Information Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Manufacturer_Info 2:Get_Manufacturer_Info 3: Get_Manufacturer_Info + CRC Start CRCReceiveTimer 4: Get_Manufacturer_Info Check MessageID against local copy Store copy of MessageID 5: Get_Manufacturer_Info 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Manufacturer 9:Get_Manufacturer_Info sent Information from DPM Start SenderResponseTimer 10: Send Manufacturer_Info 12: Manufacturer_Info 11: Manufacturer_Info + CRC 13: Manufacturer_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Manufacturer_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Manufacturer_Info sent Table8.107, \"Steps for a Source getting Sink's Port Manufacturer Information Sequence\" Figure 8.80, \"Source Gets Sink's Port Manufacturer Information\" below provides a detailed explanation of what happens at each labeled step in above. Table8.107 Steps for a Source getting Sink's Port Manufacturer Information Sequence Step Source Port Sink Port Port Port Power Role Source R CC The has set to and the p Port Port Power Role Sink R Policy Engine Protocol Layer pull up on its wire. CC Get_Manufacturer_InfoMessage The has set to with the d pull Port down on its wire. with a request for Protocol Layer Message PHY information. Layer creates the and passes to. PHY Layer Get_Manufacturer_InfoMessage Get_Manufacturer_InfoMessage appends and sends the CRC Message CRCReceiveTimer receives the PanHdY c Lhaecykesr the to verCiRfyC the.. Get_Manufacturer_InfoMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Manufacturer_InfoMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Port starts. requests the for the ’s Policy Engine Protocol Layer manufacturer information which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC receives the and compares the Manufacturer_InfoMessage CRCReceiveTimer Manufacturer_InfoMessage appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Policy Engine SenderResponseTimer that consumes it. Table8.107 Steps for a Source getting Sink's Port Manufacturer Information Sequence Step Source Port Sink Port Protocol Layer GoodCRCMessage PHY Layer generates a and PpHasYs eLsa yite r.CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Sink Source Pwoarst successfully sent. The has informed the of the manufacturer information for the. Figure 8.81, \"Sink Gets Source's Port Manufacturer Information\" Source Sink Source Sink Port shows an example sequence between a and a when the gFeitgsu trhee 8.81' sS iMnakn Guefatcst Suoreurr icnef'osr Pmoartti oMna fnoru ftahcet urer. Information Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Manufacturer_Info 2:Get_Manufacturer_Info 3: Get_Manufacturer_Info + CRC Start CRCReceiveTimer 4: Get_Manufacturer_Info Check MessageID against local copy Store copy of MessageID 5: Get_Manufacturer_Info 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Manufacturer 9:Get_Manufacturer_Info sent Information from DPM Start SenderResponseTimer 10: Send Manufacturer_Info 12: Manufacturer_Info 11: Manufacturer_Info + CRC 13: Manufacturer_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Manufacturer_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Manufacturer_Info sent Table8.108, \"Steps for a Source getting Sink's Port Manufacturer Information Sequence\" Figure 8.81, \"Sink Gets Source's Port Manufacturer Information\" below provides a detailed explanation of what happens at each labeled step in above. Table8.108 Steps for a Source getting Sink's Port Manufacturer Information Sequence Step Sink Port Source Port Port Port Power Role Sink R CC The has set to with the d Port Port Power Role Source R Policy Engine Protocol Layer pull down on its wire. CC Get_Manufacturer_InfoMessage The has set to and the p Port pull up on its wire. with a request for Protocol Layer Message PHY information. Layer creates the and passes to. PHY Layer Get_Manufacturer_InfoMessage Get_Manufacturer_InfoMessage appends and sends the CRC Message CRCReceiveTimer receives the PanHdY c Lhaecykesr the to verCiRfyC the.. Get_Manufacturer_InfoMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Manufacturer_Info Message Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Port starts. requests the for the ’s Policy Engine Protocol Layer manufacturer information which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC receives the and compares the Manufacturer_InfoMessage CRCReceiveTimer Manufacturer_InfoMessage appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Policy Engine SenderResponseTimer that consumes it. Table8.108 Steps for a Source getting Sink's Port Manufacturer Information Sequence Step Sink Port Source Port Protocol Layer GoodCRCMessage PHY Layer generates a and PpaHsYse Lsa ity er. CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Sink Source Pwoarst successfully sent. The has informed the of the manufacturer information for the. Figure 8.82, \"Source Gets Sink's Battery Manufacturer Information\" Source Sink Source Sink shows an example sequence between a and a when the Figur gee 8ts. 8th2e S ourc'se M Gaentsu fSaicntkur'se rB iantftoerrmy aMtiaonnu fofarc otnuer eorf Iitnsf oBramtteartiieosn. Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Manufacturer_Info 2:Get_Manufacturer_Info 3: Get_Manufacturer_Info + CRC Start CRCReceiveTimer 4: Get_Manufacturer_Info Check MessageID against local copy Store copy of MessageID 5: Get_Manufacturer_Info 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Manufacturer 9:Get_Manufacturer_Info sent Information from DPM Start SenderResponseTimer 10: Send Manufacturer_Info 12: Manufacturer_Info 11: Manufacturer_Info + CRC 13: Manufacturer_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Manufacturer_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Manufacturer_Info sent Table8.109, \"Steps for a Source getting Sink's Battery Manufacturer Information Sequence\" Figure 8.82, \"Source Gets Sink's Battery Manufacturer Information\" below provides a detailed explanation of what happens at each labeled step in Tabl aeb8o.v1e0.9 Steps for a Source getting Sink's Battery Manufacturer Information Sequence Step Source Port Sink Port Port Port Power Role Source R CC The has set to and the p Port Port Power Role Sink R Policy Engine Protocol Layer pull up on its wire. CC Get_Manufacturer_InfoMessage The has set to with the d pull Battery Battery down on its wire. with a request for Protocol Layer Message PHY information for a given. Layer creates the and passes to. PHY Layer Get_Manufacturer_Info Get_Manufacturer_InfoMessage appends and sends the Message CRC Message CRCReceiveTimer receives the PHY Lay aenrd checks the CRC to verify the.. Get_Manufacturer_InfoMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Manufacturer_Info Message Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Battery starts. Battery requests the for the ’s manufacturer information for a given which is Policy Engine Protocol Layer Manufacturer_InfoMessage The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC receives the and compares the Manufacturer_InfoMessage CRCReceiveTimer Manufacturer_InfoMessage appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Policy Engine SenderResponseTimer that consumes it. Table8.109 Steps for a Source getting Sink's Battery Manufacturer Information Sequence Step Source Port Sink Port Protocol Layer GoodCRCMessage PHY Layer generates a and PpaHsYse Lsa ity er. CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Sink Source wasB sauttcecreyssfully sent. The has informed the of the manufacturer information for the requested. Figure 8.83, \"Sink Gets Source's Battery Manufacturer Information\" Source Sink Source Sink Port shows an example sequence between a and a when the Figur gee 8ts. 8th3e S ink 'Gs eMtsa nSuofuarcctuer'se rB iantftoerrmy aMtiaonnu fofarc tthuer er In. formation Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Manufacturer_Info 2:Get_Manufacturer_Info 3: Get_Manufacturer_Info + CRC Start CRCReceiveTimer 4: Get_Manufacturer_Info Check MessageID against local copy Store copy of MessageID 5: Get_Manufacturer_Info 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Manufacturer 9:Get_Manufacturer_Info sent Information from DPM Start SenderResponseTimer 10: Send Manufacturer_Info 12: Manufacturer_Info 11: Manufacturer_Info + CRC 13: Manufacturer_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Manufacturer_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Manufacturer_Info sent Table8.110, \"Steps for a Source getting Sink's Battery Manufacturer Information Sequence\" Figure 8.83, \"Sink Gets Source's Battery Manufacturer Information\" below provides a detailed explanation of what happens at each labeled step in Tabl aeb8o.v1e1.0 Steps for a Source getting Sink's Battery Manufacturer Information Sequence Step Sink Port Source Port Port Port Power Role Sink R CC The has set to with the d Port Port Power Role Source R Policy Engine Protocol Layer pull down on its wire. CC Get_Manufacturer_InfoMessage The has set to and the p Battery Battery pull up on its wire. with a request for Protocol Layer Message PHY information for a given. Layer creates the and passes to. PHY Layer Get_Manufacturer_Info Get_Manufacturer_InfoMessage appends and sends the Message CRC Message CRCReceiveTimer receives the PHY Lay aenrd checks the CRC to verify the.. Get_Manufacturer_InfoMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Manufacturer_Info Message Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Battery starts. Battery requests the for the ’s manufacturer information for a given which is Policy Engine Protocol Layer Manufacturer_InfoMessage The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC receives the and compares the Manufacturer_InfoMessage CRCReceiveTimer Manufacturer_InfoMessage appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Policy Engine SenderResponseTimer that consumes it. Table8.110 Steps for a Source getting Sink's Battery Manufacturer Information Sequence Step Sink Port Source Port Protocol Layer GoodCRCMessage PHY Layer generates a and pPaHsYs eLsa iyte r. CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Sink Source wasB sauttcecreyssfully sent. The has informed the of the manufacturer information for the requested. Figure 8.84, \"VCONN Source Gets Cable Plug's Manufacturer Information\" VCONN Source Source Sink Cable Plug VCONN Source Cable Plug shows an example sequence between a ( or ) and a when the gets the 's Manufacturer information. Figure 8.84 VCONN Source Gets Cable Plug's Manufacturer Information VCONNSource Port Cable Plug : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Get_Manufacturer_Info 2:Get_Manufacturer_Info 3: Get_Manufacturer_Info + CRC Start CRCReceiveTimer 4: Get_Manufacturer_Info Check MessageID against local copy Store copy of MessageID 5: Get_Manufacturer_Info 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Manufacturer 9:Get_Manufacturer_Info sent Information from DPM Start SenderResponseTimer 10: Send Manufacturer_Info 12: Manufacturer_Info 11: Manufacturer_Info + CRC 13: Manufacturer_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Manufacturer_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Manufacturer_Info sent Table8.111, \"Steps for a VCONN Source getting Sink's Port Manufacturer Information Sequence\" Figure 8.84, \"VCONN Source Gets Cable Plug's Manufacturer Information\" below provides a detailed explanation of what happens at each labeled step in Table8.111 Steps f aobro av Ve.CONN Source getting Sink's Port Manufacturer Information Sequence Step VCONN Source Cable Plug Port VCONN Source Policy Engine Protocol Layer The is currently acting as the. Get_Manufacturer_InfoMessage directs the to send a with a request for Protocol Layer Message PHY information. Layer creates the and passes to. PHY Layer Get_Manufacturer_Info Get_Manufacturer_InfoMessage appends and sends the Message CRC Message CRCReceiveTimer receives the PHY Laye arnd checks the CRC to verify the.. Get_Manufacturer_InfoMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Manufacturer_Info Message Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Cable Plug starts. requests the for the ’s Policy Engine Protocol Layer manufacturer information which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY La.yer CRC receives the and compares the Manufacturer_InfoMessage CRCReceiveTimer Manufacturer_InfoMessage appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Policy Engine SenderResponseTimer that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.111 Steps for a VCONN Source getting Sink's Port Manufacturer Information Sequence Step VCONN Source Cable Plug PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Cable Plug Source was successfully sent. The has informed the of its manufacturer information. Figure 8.85, \"Source Gets Sink's Country Codes\" Source Sink Source Sink shows an example sequence between a and a when the gets the 's Country CodFeigsu. re 8.85 Source Gets Sink's Country Codes Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Country_Codes 2:Get_Country_Codes 3: Get_Country_Codes + CRC Start CRCReceiveTimer 4: Get_Country_Codes Check MessageID against local copy Store copy of MessageID 5: Get_Country_Codes 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Country Codes 9:Get_Country_Codes sent Information from DPM Start SenderResponseTimer 10: Send Country_Codes 12: Country_Codes 11: Country_Codes + CRC 13: Country_Codes Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Country_Codes received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Country_Codes sent Table8.112, \"Steps for a Source getting Country Codes Sequence\" Figure 8.85, \"Source Gets Sink's Country Codes\" below provides a detailed explanation of what happens at each labeledT asbtelpe i8n. 112 Steps for a Source getting Country Code asb Soevqe.uence Step Source Port Sink Port Port Port Power Role Source R CC The has set to and the p Port Port Power Role Sink R Policy Engine Protocol Layer pull up on its wire. CC Get_Country_CodesMessage Port The has set to with the d pull down on its wire. with a request for Protocol Layer Message PHY information. Layer creates the and passes to. Get_Country_CodesMessage CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Get_Country_Codes Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Country_Codes Message Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Port starts. requests the for the ’s Policy Engine Protocol Layer manufacturer information which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC receives the and compares the Country_Codes Message CRCReceiveTimer Country_Codes Message appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Policy Engine SenderResponseTimer that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.112 Steps for a Source getting Country Codes Sequence Step Source Port Sink Port PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Sink Source was successfully sent. The has informed the of the country codes. Figure 8.86, \"Sink Gets Source's Country Codes\" Source Sink Source Sink shows an example sequence between a and a when the gets the 's country codFeisg.u re 8.86 Sink Gets Source's Country Codes Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Country_Codes 2:Get_Country_Codes 3: Get_Country_Codes + CRC Start CRCReceiveTimer 4: Get_Country_Codes Check MessageID against local copy Store copy of MessageID 5: Get_Country_Codes 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get country codes 9:Get_Country_Codes sent Information from DPM Start SenderResponseTimer 10: Send Country_Codes 12: Country_Codes 11: Country_Codes + CRC 13: Country_Codes Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Country_Codes received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Country_Codes sent Table8.113, \"Steps for a Source getting Sink's Country Codes Sequence\" Figure 8.86, \"Sink Gets Source's Country Codes\" below provides a detailed explanation of what happens at eaTcha blalbee8le.1d1 s3te pSt ienp s for a Source getting Sink's Country Codes aSbeoqvuee.nce Step Sink Port Source Port Port Port Power Role Sink R CC The has set to with the d Port Port Power Role Source R Policy Engine Protocol Layer pull down on its wire. CC Get_Country_CodesMessage Port The has set to and the p pull up on its wire. with a request for Protocol Layer Message PHY information. Layer creates the and passes to. Get_Country_CodesMessage CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Get_Country_CodesMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Country_Codes Message Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Port starts. requests the for the ’s Policy Engine Protocol Layer manufacturer information which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC receives the and compares the Country_CodesMessage CRCReceiveTimer Country_CodesMessage appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Policy Engine SenderResponseTimer that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.113 Steps for a Source getting Sink's Country Codes Sequence Step Sink Port Source Port PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Sink Source was successfully sent. The has informed the of the country codes. Figure 8.87, \"VCONN Source Gets Cable Plug's Country Codes\" VCONN Source Source Sink Cable Plug VCONN Source Cable Plug shows an example sequence between a ( or ) and a Figure w 8h.8e7n VthCeO NN Source Ge tgse tCsa tbhlee Plug's Cou'sn Ctoryu nCtordy eCsodes. VCONNSource Port Cable Plug : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Get_Country_Codes 2:Get_Country_Codes 3: Get_Country_Codes + CRC Start CRCReceiveTimer 4: Get_Country_Codes Check MessageID against local copy Store copy of MessageID 5: Get_Country_Codes 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get country codes from 9:Get_Country_Codes sent DPM Start SenderResponseTimer 10: Send Country_Codes 12: Country_Codes 11: Country_Codes + CRC 13: Country_Codes Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Country_Codes received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Country_Codes sent Table8.114, \"Steps for a VCONN Source getting Sink's Country Codes Sequence\" Figure 8.87, \"VCONN Source Gets Cable Plug's Country Codes\" below provides a detailed explanation of what happensT aatb eleac8h. 1la1b4e l eSdte sptse pfo inr a VCONN Source getting Sink's Country Codes Sequence above. Step VCONN Source Cable Plug Port VCONN Source Policy Engine Protocol Layer The is currently acting as the. Get_Country_CodesMessage Port directs the to send a with a request for Protocol Layer Message PHY information. Layer creates the and passes to. Get_Country_CodesMessage CRCReceiveTimer CRC Message appends and sends the receives the. Starts. and checks the to verify the. Get_Country_CodesMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Country_CodesMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Cable Plug starts. requests the for the ’s Policy Engine Protocol Layer manufacturer information which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC Country_Codes receives the and compares the Message CRCReceiveTimer Country_Codes Message appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Policy Engine SenderResponseTimer that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.114 Steps for a VCONN Source getting Sink's Country Codes Sequence Step VCONN Source Cable Plug PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Cable Plug Source was successfully sent. The has informed the of its country codes. Figure 8.88, \"Source Gets Sink's Country Information\" Source Sink Source Sink shows an example sequence between a and a when the gets the 's counFtirgyu irnefo 8r.m88at Sioonu. rce Gets Sink's Country Information Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Country_Info 2:Get_Country_Info 3: Get_Country_Info + CRC Start CRCReceiveTimer 4: Get_Country_Info Check MessageID against local copy Store copy of MessageID 5: Get_Country_Info 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Country Information 9:Get_Country_Info sent from DPM Start SenderResponseTimer 10: Send Country_Info 12: Country_Info 11: Country_Info + CRC 13: Country_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Country_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Country_Info sent Table8.115, \"Steps for a Source getting Country Information Sequence\" Figure 8.88, \"Source Gets Sink's Country Information\" below provides a detailed explanation of what happens at eaTcha blalbee8le.1d1 s5te pS tienp s for a Source getting Country Information Seque anbcoeve. Step Source Port Sink Port Port Port Power Role Source R CC The has set to and the p Port Port Power Role Sink R Policy Engine Protocol Layer pull up on its wire. CC Get_Country_InfoMessage Port The has set to with the d pull down on its wire. with a request for Protocol Layer Message PHY information for a specific Country Code. Layer creates the and passes to. Get_Country_InfoMessage CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Get_Country_InfoMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Country_InfoMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Port starts. requests the for the ’s Policy Engine Protocol Layer manufacturer information which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC Country_Info receives the and compares the Message CRCReceiveTimer Country_Info Message appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer Country_Info and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.115 Steps for a Source getting Country Information Sequence Step Source Port Sink Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Sink Source was successfully sent. The has informed the of the country information. Figure 8.89, \"Sink Gets Source's Country Information\" Source Sink Source Sink shows an example sequence between a and a when the gets the 's counFtirgyu croed 8es.8. 9 Sink Gets Source's Country Information Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Country_Info 2:Get_Country_Info 3: Get_Country_Info + CRC Start CRCReceiveTimer 4: Get_Country_Info Check MessageID against local copy Store copy of MessageID 5: Get_Country_Info 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get country information 9:Get_Country_Info sent from DPM Start SenderResponseTimer 10: Send Country_Info 12: Country_Info 11: Country_Info + CRC 13: Country_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Country_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Country_Info sent Table8.116, \"Steps for a Source getting Sink's Country Information Sequence\" Figure 8.89, \"Sink Gets Source's Country Information\" below provides a detailed explanation of what happensT aatb eleac8h. 1la1b6e l eSdte sptesp fo inr a Source getting Sink's Country Information Sequ aebnocvee. Step Sink Port Source Port Port Port Power Role Sink R CC The has set to with the d Port Port Power Role Source R Policy Engine Protocol Layer pull down on its wire. CC Get_Country_InfoMessage Port The has set to and the p pull up on its wire. with a request for Protocol Layer Message PHY information for a specific country code. Layer creates the and passes to. Get_Country_InfoMessage CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Get_Country_InfoMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Country_InfoMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Port starts. requests the for the ’s Policy Engine Protocol Layer manufacturer information which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC Country_Info receives the and compares the Message CRCReceiveTimer Country_InfoMessage appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer Country_Info and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.116 Steps for a Source getting Sink's Country Information Sequence Step Sink Port Source Port PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Sink Source was successfully sent. The has informed the of the country information. Figure 8.90, \"VCONN Source Gets Cable Plug's Country Information\" VCONN Source Source Sink Cable Plug VCONN Source Cable Plug shows an example sequence between a ( or ) Faingdu rae 8.90 VCON wNh Seonu trhcee Gets Cable P lguegts's t Cheo untry Info'rsm coautinotnry information. VCONNSource Port Cable Plug : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Get_Country_Info 2:Get_Country_Info 3: Get_Country_Info + CRC Start CRCReceiveTimer 4: Get_Country_Info Check MessageID against local copy Store copy of MessageID 5: Get_Country_Info 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Country Information 9:Get_Country_Info sent from DPM Start SenderResponseTimer 10: Send Country_Info 12: Country_Info 11: Country_Info + CRC 13: Country_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Country_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Country_Info sent Table8.117, \"Steps for a VCONN Source getting Sink's Country Information Sequence\" Figure 8.90, \"VCONN Source Gets Cable Plug's Country Information\" below provides a detailed explanation of what happens at each labeled step in T aabbolvee8..117 Steps for a VCONN Source getting Sink's Country Information Sequence Step VCONN Source Cable Plug Port VCONN Source Policy Engine Protocol Layer The is currently acting as the. Get_Country_InfoMessage Port directs the to send a with a request for Protocol Layer Message PHY information for a specific country code. Layer creates the and passes to. Get_Country_InfoMessage CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Get_Country_InfoMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Country_Info Message Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Cable Plug starts. requests the for the ’s Policy Engine Protocol Layer manufacturer information which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY La.yer CRC Country_Info receives the and compares the Message CRCReceiveTimer Country_Info Message appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer Country_Info and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.117 Steps for a VCONN Source getting Sink's Country Information Sequence Step VCONN Source Cable Plug PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Cable Plug Source was successfully sent. The has informed the of its country information. Figure 8.91, \"Source Gets Sink's Revision Information\" Source Sink Source Sink shows an example sequence between a and a when the gets the 's ReviFsiigounr ien f8o.r9m1a Stoiounr.c e Gets Sink's Revision Information Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Revision 2:Get_Revision 3: Get_Revision + CRC Start CRCReceiveTimer 4: Get_Revision Check MessageID against local copy Store copy of MessageID 5: Get_Revision 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Country Information 9:Get_Revision sent from DPM Start SenderResponseTimer 10: Send Revision 12: Revision 11: Revision + CRC 13: Revision Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Revision received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Revision sent Table8.118, \"Steps for a Source getting Revision Information Sequence\" Figure 8.91, \"Source Gets Sink's Revision Information\" below provides a detailed explanation of what happens at eaTcha blalebe8l.e1d1 s8t e Spt ienp s for a Source getting Revision Information Seque anbcoeve. Step Source Port Sink Port Port Port Power Role Source R CC The has set to and the p Port Port Power Role Sink R Policy Engine Protocol Layer pull up on its wire. CC Get_RevisionMessage Port The has set to with the d pull down on its wire. with a request for Protocol Layer Message PHY information for a specific Revision Code. Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Get_RevisionMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Get_Revision and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Revision Message Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Port starts. requests the for the ’s Policy Engine Protocol Layer manufacturer information which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC Revision receives the and compares the Message CRCReceiveTimer Revision_InfoMessage appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer Revision and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.118 Steps for a Source getting Revision Information Sequence Step Source Port Sink Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Sink Source was successfully sent. The has informed the of the Revision information. Figure 8.92, \"Sink Gets Source's Revision Information\" Source Sink Source Sink shows an example sequence between a and a when the gets the 's ReviFsiigounr ceo 8de.9s2. Sink Gets Source's Revision Information Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Country_Info 2:Get_Country_Info 3: Get_Country_Info + CRC Start CRCReceiveTimer 4: Get_Country_Info Check MessageID against local copy Store copy of MessageID 5: Get_Country_Info 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get country information 9:Get_Country_Info sent from DPM Start SenderResponseTimer 10: Send Country_Info 12: Country_Info 11: Country_Info + CRC 13: Country_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Country_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Country_Info sent Table8.119, \"Steps for a Source getting Sink's Revision Information Sequence\" Figure 8.92, \"Sink Gets Source's Revision Information\" below provides a detailed explanation of what happenTs aatb eleac8h.1 la1b9e lSetde sptse pfo irn a Source getting Sink's Revision Information Sequ aebnocvee. Step Sink Port Source Port Port Port Power Role Sink R CC The has set to with the d Port Port Power Role Source R Policy Engine Protocol Layer pull down on its wire. CC Get_RevisionMessage Port The has set to and the p pull up on its wire. with a request for Protocol Layer Message PHY information for a specific Revision code. Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Get_RevisionMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Get_Revision and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Revision Message Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Port starts. requests the for the ’s Policy Engine Protocol Layer manufacturer information which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY La.yer CRC Revision receives the and compares the Message CRCReceiveTimer Revision_Info Message appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer Revision and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.119 Steps for a Source getting Sink's Revision Information Sequence Step Sink Port Source Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Sink Source was successfully sent. The has informed the of the Revision information. Figure 8.93, \"VCONN Source Gets Cable Plug's Revision Information\" VCONN Source Source Sink Cable Plug VCONN Source Cable Plug shows an example sequence between a ( or )F aingud rae 8.93 VCON wN hSeonu rthcee Gets Cable P lguegt'ss tRheev ision Info'rsm Reavtiiosinon information. VCONNSource Port Cable Plug : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Get_Country_Info 2:Get_Country_Info 3: Get_Country_Info + CRC Start CRCReceiveTimer 4: Get_Country_Info Check MessageID against local copy Store copy of MessageID 5: Get_Country_Info 6: GoodCRC received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Country Information 9:Get_Country_Info sent from DPM Start SenderResponseTimer 10: Send Country_Info 12: Country_Info 11: Country_Info + CRC 13: Country_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Country_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Country_Info sent Table8.120, \"Steps for a VCONN Source getting Sink's Revision Information Sequence\" Figure 8.93, \"VCONN Source Gets Cable Plug's Revision Information\" below provides a detailed explanation of what happens at each labeled step in T aabbolvee8..120 Steps for a VCONN Source getting Sink's Revision Information Sequence Step VCONN Source Cable Plug Port VCONN Source Policy Engine Protocol Layer The is currently acting as the. Get_RevisionMessage Port directs the to send a with a request for Protocol Layer Message PHY information for a specific Revision code. Layer creates the and passes to. Message CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Get_RevisionMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Get_Revision and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_RevisionMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Cable Plug starts. requests the for the ’s Policy Engine Protocol Layer manufacturer information which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC Revision Revision receives the and compares the Message CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer Revision and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.120 Steps for a VCONN Source getting Sink's Revision Information Sequence Step VCONN Source Cable Plug PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Cable Plug Source was successfully sent. The has informed the of its Revision information. Figure 8.94, \"Sink Gets Source's Information\" Source Sink Sink Source shows an example sequence between a and a when the gets the 's information. Figure 8.94 Sink Gets Source's Information Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Get_Source_Info 2:Get_Source_Info 3: Get_Source_Info + CRC Start CRCReceiveTimer 4: Get_Source_Info Check MessageID against local copy Store copy of MessageID 5: Get_Source_Info received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Source capability 9:Get_Source_Info sent Information from DPM Start SenderResponseTimer 10: Send Source_Info 11: Source_Info 12: Source_Info + CRC 13: Source_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Source_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Source_Info sent Table8.121, \"Steps for a Sink getting Source Information Sequence\" Figure 8.94, \"Sink Gets Source's Information\" below provides a detailed explanation of what happens at each labelTeda bstleep8 i.1n 21 Steps for a Sink getting Source Inform aatbioovne S.equence Step Sink Port Source Port Port Port Power Role Sink R CC Port Port Power Role Source R The has set to with the d Policy Engine Protocol Layer CC pull down on its wire. The has set to and the p directs the to send a pull up on its wire. Protocol Layer Message PHY. Layer creates the and passes to. Get_Source_InfoMessage CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Get_Source_InfoMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Source_InfoMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Source starts. requests the for the present Policy Engine Protocol Layer information which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC Source_Info Source_Info receives the and compares the Message CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer Source_Info and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.121 Steps for a Sink getting Source Information Sequence Step Sink Port Source Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Source Sink was successfully sent. The has provided the with its information. Figure 8.95, \"Dual-Role Source Gets Dual-Role Sink's Information as a Source\" Dual-Role PowerSource Dual-Role PowerSink Source Sink Source shows an example sequence between a Fi gure 8 a.9n5d Da ual-Role Source Gets w Dhueanl -tRhoel e Sink 'gse Itnsf tohrem atio'sn I ansfo ar mSoautirocne as a. Dual-Role Source Port Dual-Role Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Get_Source_Info 2:Get_Source_Info 3: Get_Source_Info + CRC Start CRCReceiveTimer 4: Get_Source_Info Check MessageID against local copy Store copy of MessageID 5: Get_Source_Info received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get Source capability 9:Get_Source_Info sent Information from DPM Start SenderResponseTimer 10: Send Source_Info 11: Source_Info 12: Source_Info + CRC 13: Source_Info Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Source_Info received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Source_Info sent Table8.122, \"Steps for a Dual-Role Source getting Dual-Role Sink's Information as a Source Sequence\" Figure 8.95, \"Dual-Role Source Gets Dual Role Sink's Information as a Source\" below provides a detailed explanation of what happens at each labeled step in Table8.122 Steps for a Dual-R aobleo vSeo.urce getting Dual-Role Sink's Information as a Source Sequence Step Dual-Role Source Port Dual-Role Sink Port Port Port Power Role Source R CC Port Port Power Role Sink R The has set to and the p Policy Engine Protocol Layer CC pull up on its wire. The has set to with the d pull directs the to send a down on its wire. Protocol Layer Message PHY. Layer creates the and passes to. Get_Source_InfoMessage CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Get_Source_InfoMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Get_Source_InfoMessage Policy Engine SenderResponseTimer was successfully sent. Policy Engine DPM Source starts. requests the for the present Policy Engine Protocol Layer information which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC Source_Info Source_Info receives the and compares the Message CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer Source_Info and then stores a copy of the new value. The forwards the received information to the that Policy Engine SenderResponseTimer consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Table8.122 Steps for a Dual-Role Source getting Dual-Role Sink's Information as a Source Sequence Step Dual-Role Source Port Dual-Role Sink Port PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Dual-Role PowerSink Dual-Role PowerSo urce was successfully sent. The has provided the with its information. Figure 8.96, \"Source requests security exchange with Sink\" Source Sink shows an example sequence for a security exchange between a and a F.i gure 8.96 Source requests security exchange with Sink Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Security_Request 2:Security_Request 3: Security_Request + CRC Start CRCReceiveTimer 4: Security_Request Check MessageID against local copy Store copy of MessageID 5: Security_Request received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get security response 9:Security_Request sent from DPM 10: Send Security_Response 11: Security_Response 12: Security_Response + CRC 13: Security_Response Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Security_Response received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Security_Response sent Table8.123, \"Steps for a Source requesting a security exchange with a Sink Sequence\" Figure 8.96, \"Source requests security exchange with Sink\" below provides a detailed explanation of what happens at each labeled step in above. Table8.123 Steps for a Source requesting a security exchange with a Sink Sequence Step Source Port Sink Port Port Port Power Role Source R CC The has set to and the p Port Port Power Role Sink R Policy Engine Protocol Layer pull up on its wire. CC Security_RequestMessage Payload The has set to with the d pull DPM down on its wire. using a supplied by Protocol Layer Message PHY the. Layer creates the and passes to. Security_RequestMessage CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Security_RequestMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Policy Engine DPM was successfully sent. requests the for the response to the Policy Engine Protocol Layer security request which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC receives the and compares the Security_ResponseMessage CRCReceiveTimer Security_ResponseMessage appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Table8.123 Steps for a Source requesting a security exchange with a Sink Sequence Step Source Port Sink Port PHY Layer CRC GoodCRC Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the was successfully sent. The security exchange is complete. Figure 8.97, \"Sink requests security exchange with Source\" Sink Source shows an example sequence for a security exchange between a and a F.i gure 8.97 Sink requests security exchange with Source Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Security_Request 2:Security_Request 3: Security_Request + CRC Start CRCReceiveTimer 4: Security_Request Check MessageID against local copy Store copy of MessageID 5: Security_Request received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get security response 9:Security_Request sent from DPM 10: Send Security_Response 11: Security_Response 12: Security_Response + CRC 13: Security_Response Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Security_Response received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Security_Response sent Table8.124, \"Steps for a Sink requesting a security exchange with a Source Sequence\" Figure 8.97, \"Sink requests security exchange with Source\" below provides a detailed explanation of what happens at each labeled step in above. Table8.124 Steps for a Sink requesting a security exchange with a Source Sequence Step Sink Port Source Port Port Port Power Role R CC The has set to Sink with the d Port Port Power Role Source R Policy Engine Protocol Layer pull down on its wire. CC Security_RequestMessage Payload The has set to and the p DPM pull up on its wire. using a supplied by Protocol Layer Message PHY the. Layer creates the and passes to. Security_RequestMessage CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Security_RequestMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Policy Engine DPM was successfully sent. requests the for the response to the Policy Engine Protocol Layer security request which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC receives the and compares the Security_Response Message CRCReceiveTimer Security_ResponseMessage appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. Table8.124 Steps for a Sink requesting a security exchange with a Source Sequence Step Sink Port Source Port PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the was successfully sent. The security exchange is complete. Figure 8.98, \"VCONN Source requests security exchange with Cable Plug\" VCONN Source Cable Plug shows an example sequence for a security exchange between aF igure 8.98 VC aOnNdN a S ource req.u ests security exchange with Cable Plug Vconn Source Cable Plug : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Security_Request 2:Security_Request 3: Security_Request + CRC Start CRCReceiveTimer 4: Security_Request Check MessageID against local copy Store copy of MessageID 5: Security_Request received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get security response 9:Security_Request sent from DPM 10: Send Security_Response 11: Security_Response 12: Security_Response + CRC 13: Security_Response Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Security_Response received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Security_Response sent Table8.125, \"Steps for a VCONN Source requesting a security exchange with a Cable Plug Sequence\" Figure 8.98, \"VCONN Source requests security exchange with Cable Plug\" below provides a detailed explanation of what happens at each labeled step in Table8.12 5a b Sotveep.s for a VCONN Source requesting a security exchange with a Cable Plug Sequence Step VCONN Source Cable Plug Policy Engine Protocol Layer Security_RequestMessage Payload directs the to send a DPM Protocol Layer Message PHY the. Layer creates the and passes to. Security_RequestMessage CRCReceiveTimer CRC Message appends and sends the receives the and. Starts. checks the to verify the. Security_RequestMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Policy Engine DPM was successfully sent. requests the for the response to the Policy Engine Protocol Layer security request which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to PHY L.ayer CRC receives the and compares the Security_Response Message CRCReceiveTimer Security_ResponseMessage appends a and sends the Protocol Layer MessageID. Starts.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and PpaHsYse Lsa ity er. CRC GoodCRC CRC Message receives and compares appends a and sends the Message.. Table8.125 Steps for a VCONN Source requesting a security exchange with a Cable Plug Sequence Step VCONN Source Cable Plug PHY Layer CRC GoodCRC Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the was successfully sent. The security exchange is complete. Figure 8.99, \"Source requests firmware update exchange with Sink\" Source Sink shows an example sequence for a firmware update exchange betwFeiegnu rae 8.99 Saonudr ac e req. uests firmware update exchange with Sink Source Port Sink Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Source Port Power Role = Sink CC = Rp CC = Rd 1: Send Firmware_Update_Request 2:Firmware_Update_Request Start CRCReceiveTimer 3: Firmware_Update_Request + CRC 4: Firmware_Update_Request Check MessageID against local copy Store copy of MessageID 6: GoodCRC 5: Firmware_Update_Request received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get firmware update 9:Firmware_Update_Request sent response from DPM 10: Send Firmware_Update_Response 11: Firmware_Update_Response 12: Firmware_Update_Response + CRC Start CRCReceiveTimer 13: Firmware_Update_Response Check MessageID against local copy Store copy of MessageID 14: Firmware_Update_Response received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Firmware_Update_Response sent Table8.126, \"Steps for a Source requesting a firmware update exchange with a Sink Sequence\" Figure 8.99, \"Source requests firmware update exchange with Sink\" below provides a detailed explanation of what happens at each labeled step in Table8.126 aSbtoevpes. for a Source requesting a firmware update exchange with a Sink Sequence Step Source Port Sink Port Port Port Power Role Source R CC The has set to and the p Port Port Power Role Sink R Policy Engine Protocol Layer pull up on its wire. CC Firmware_Update_RequestMessage Payload The has set to with the d pull DPM down on its wire. using a Protocol Layer Message PHY supplied by the. Layer creates the and passes to. PHY Layer Firmware_Update_Request Firmware_Update_RequestMessage appends and sends the Message CRC Message CRCReceiveTimer receives the PHY Lay aenrd checks the CRC to verify the.. Firmware_Update_RequestMessage Protocol removes the and forwards the Layer Protocol Layer MessageID. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Firmware_Update_RequestMessage was successfully Policy Engine DPM sent. requests the for the response to the Policy Engine Protocol Layer firmware update request which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to. Firmware_Update_ResponseMessage receives the and compares the appends a and sends the Firmware_Update_ResponseMessage CRCReceiveTimer Protocol Layer MessageID.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the that consumes it. Table8.126 Steps for a Source requesting a firmware update exchange with a Sink Sequence Step Source Port Sink Port Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Firmware_Update_ResponseMessage was successfully sent. The firmware update exchange is complete. Figure 8.100, \"Sink requests firmware update exchange with Source\" Sink Source shows an example sequence for a firmware update exchange betwFiegeunr ae 8.10 a0n Sdi na k requ. ests firmware update exchange with Source Sink Port Source Port : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Port Power Role = Sink Port Power Role = Source CC = Rd CC = Rp 1: Send Firmware_Update_Request 2:Firmware_Update_Request Start CRCReceiveTimer 3: Firmware_Update_Request + CRC 4: Firmware_Update_Request Check MessageID against local copy Store copy of MessageID 6: GoodCRC 5: Firmware_Update_Request received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get firmware update 9:Firmware_Update_Request sent response from DPM 10: Send Firmware_Update_Response 11: Firmware_Update_Response 12: Firmware_Update_Response + CRC Start CRCReceiveTimer 13: Firmware_Update_Response Check MessageID against local copy Store copy of MessageID 14: Firmware_Update_Response received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Firmware_Update_Response sent Table8.127, \"Steps for a Sink requesting a firmware update exchange with a Source Sequence\" Figure 8.100, \"Sink requests firmware update exchange with Source\" below provides a detailed explanation of what happens at each labeled step in Table a8b.o1v2e7. Steps for a Sink requesting a firmware update exchange with a Source Sequence Step Sink Port Source Port Port Port Power Role Sink R CC The has set to with the d Port Port Power Role Source R Policy Engine Protocol Layer pull down on its wire. CC Firmware_Update_RequestMessage Payload The has set to and the p DPM pull up on its wire. using a Protocol Layer Message PHY supplied by the. Layer creates the and passes to. PHY Layer Firmware_Update_Request Firmware_Update_RequestMessage appends and sends the Message CRC Message CRCReceiveTimer receives the PHY Lay aenrd checks the CRC to verify the.. Firmware_Update_RequestMessage Protocol removes the and forwards the Layer Protocol Layer MessageID. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Firmware_Update_RequestMessage was successfully Policy Engine DPM sent. requests the for the response to the Policy Engine Protocol Layer firmware update request which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to. Firmware_Update_ResponseMessage receives the and compares the appends a and sends the Firmware_Update_ResponseMessage CRCReceiveTimer Protocol Layer MessageID.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the that consumes it. Table8.127 Steps for a Sink requesting a firmware update exchange with a Source Sequence Step Sink Port Source Port Protocol Layer GoodCRCMessage PHY Layer generates a and PpaHsYse Lsa ity er. CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Firmware_Update_ResponseMessage was successfully sent. The firmware update exchange is complete. Plug Figure 8.101, \"VCONN Source requests firmware update exchange with Cable Plug\" VCONN Source Cable Plug shows an example sequence for a firmware updaFtieg euxrceh 8a.n1g0e1 b VetCwONeeNn S oa urce request sa nfidr ma ware upda. te exchange with Cable Plug VCONNSource Cable Plug : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Firmware_Update_Request 2:Firmware_Update_Request Start CRCReceiveTimer 3: Firmware_Update_Request + CRC 4: Firmware_Update_Request Check MessageID against local copy Store copy of MessageID 6: GoodCRC 5: Firmware_Update_Request received 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer Get firmware update 9:Firmware_Update_Request sent response from DPM 10: Send Firmware_Update_Response 11: Firmware_Update_Response 12: Firmware_Update_Response + CRC Start CRCReceiveTimer 13: Firmware_Update_Response Check MessageID against local copy Store copy of MessageID 14: Firmware_Update_Response received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Firmware_Update_Response sent Table8.128, \"Steps for a VCONN Source requesting a firmware update exchange with a Cable Plug Sequence\" Figure 8.101, \"VCONN Source requests firmware update exchange with Cable Plug\" below provides a detailed explanation of what happens at each labeled step in Table8.128 Steps for a VCONN Source req aubeosvtei.ng a firmware update exchange with a Cable Plug Sequence Step VCONN Source Cable Plug Policy Engine Protocol Layer Firmware_Update_RequestMessage Payload directs the to send a DPM Protocol Layer Message PHY supplied by the. Layer creates the and passes to. PHY Layer Firmware_Update_Request Firmware_Update_RequestMessage appends and sends the Message CRC Message CRCReceiveTimer receives the PHY Lay aenrd checks the CRC to verify the.. Firmware_Update_RequestMessage Protocol removes the and forwards the Layer Protocol Layer MessageID. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Firmware_Update_RequestMessage was successfully Policy Engine DPM sent. requests the for the response to the Policy Engine Protocol Layer firmware update request which is provided. The tells the to form a Protocol Layer Message PHY. Layer creates the and passes to. Firmware_Update_ResponseMessage receives the and compares the appends a and sends the Firmware_Update_ResponseMessage CRCReceiveTimer Protocol Layer MessageID.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the received Policy Engine information to Protocol Layer GoodCRCMessage the that consumes it. PHY Layer generates a and passes it. Table8.128 Steps for a VCONN Source requesting a firmware update exchange with a Cable Plug Sequence Step VCONN Source Cable Plug PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Firmware_Update_ResponseMessage was successfully sent. The firmware update exchange is complete. Figure 8.102, \"Initiator to Responder Discover Identity (ACK)\" Initiator Responder Port Partner Explicit Contract Initiator Responder shows an example sequence between an and, where both s are in an and the discovers identity information from the. Figure 8.102 Initiator to Responder Discover Identity (ACK) Initiator Responder : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Explicit PD Contract Explicit PD Contract 1: Send Discover Identity 2: Discover Identity 3: Discover Identity + CRC Start CRCReceiveTimer 4: Discover Identity Check MessageID against local copy Store copy of MessageID 5: Discover Identity received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Discover Identity sent Start VDMResponseTimer Request Identity information from Device Policy Manager 10: Send Discover Identity ACK 11: Discover Identity ACK 12: Discover Identity ACK + CRC 13: Discover Identity ACK Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Discover Identity ACK received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop VDMResponseTimer Check and increment MessageIDCounter DPM evaluates Identity Stop CRCReceiveTimer information 18: Discover Identity ACK sent Table8.129, \"Steps for Initiator to UFP Discover Identity (ACK)\" Figure 8.102, \"Initiator to Responder Discover Identity (ACK)\" below provides a detailed explanation of what happens at each labeledT satbeple in8.129 Steps for Initiator to UFP Discover Identity (ACK) above. Step Initiator Responder Initiator Explicit Contract Policy Engine Protocol Layer Discover Responder Explicit Contract The has an. The IdentityCommand Protocol Layer Discover IdentityCommand request. PHY Layer creates the request and passes to. IdentityCommand CRCReceiveTimer CRC Message appends and sends the receives the request. Starts. request and checks the to verify the. IdentityCommand Protocol Layer removes the and forwards the request to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Discover and then stores a copy of the new value. The forwards the received Engine request information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Discover IdentityCommand informs the that the request was successfully Policy Engine VDMResponseTimer sent. Policy Engine starts the. DPM Policy Engine Protocol Layer requests the identity information from Discover IdentityCommandACK Protocol Layer Discover IdentityCommand form a response. ACK PHY Layer creates the response and passes to. ACK CRC IdentityCommandACK receives the appends a and sends the Message CRCReceiveTimer Protocol Layer MessageID the one sent to verify the.. Message checks the in the incoming is different from the previously stored value Protocol Layer Discover and then stores a copy of the new value. The forwards the received Policy Engine response information to the Policy Engine VDMResponseTimer that consumes it. DPM The stops the and Protocol Layer GoodCRCMessage evaluation. PHY Layer generates a and passes it. Table8.129 Steps for Initiator to UFP Discover Identity (ACK) Step Initiator Responder PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Discover IdentityCommandACK response was successfully sent. Figure 8.103, \"Initiator to Responder Discover Identity (NAK)\" Initiator Responder Port Partner Explicit Contract Initiator Responder NAK shows an example sequence between an and, where both s are in an and the attempts to discover identity information from the Figure 8 b.u1t0 r3e cIneiivtieast ao r to R.esponder Discover Identity (NAK) Initiator Responder : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Explicit PD Contract Explicit PD Contract 1: Send Discover Identity 2: Discover Identity 3: Discover Identity + CRC Start CRCReceiveTimer 4: Discover Identity Check MessageID against local copy Store copy of MessageID 5: Discover Identity received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Discover Identity sent Start VDMResponseTimer Request Identity information from Device Policy Manager 10: Send Discover Identity NAK 11: Discover Identity NAK 12: Discover Identity NAK + CRC 13: Discover Identity NAK Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Discover Identity NAK received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop VDMResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Discover Identity NAK sent Table8.130, \"Steps for Initiator to UFP Discover Identity (NAK)\" Figure 8.103, \"Initiator to Responder Discover Identity (NAK)\" below provides a detailed explanation of what happens at each labeledT satbeple in8.130 Steps for Initiator to UFP Discover Identity (NAK) above. Step Initiator Responder Initiator Explicit Contract Policy Engine Protocol Layer Discover Responder Explicit Contract The has an. The IdentityCommand Protocol Layer Discover IdentityCommand request. PHY Layer creates the request and passes to. IdentityCommand CRCReceiveTimer CRC Message appends and sends the receives the request. Starts. request and checks the to verify the. IdentityCommand Protocol Layer removes the and forwards the request to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Discover and then stores a copy of the new value. The forwards the received Engine request information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Discover IdentityCommand informs the that the request was successfully Policy Engine VDMResponseTimer sent. Policy Engine starts the. DPM Policy Engine Protocol Layer requests the identity information from Discover IdentityCommandNAK Protocol Layer Discover IdentityCommand form a response. NAK PHY Layer creates the response and passes to. NAK CRC IdentityCommandNAK receives the appends a and sends the Message CRCReceiveTimer Protocol Layer MessageID the one sent to verify the.. Message checks the in the incoming is different from the previously stored value Protocol Layer Discover and then stores a copy of the new value. The forwards the received Policy Engine response information to the Policy Engine VDMResponseTimer that consumes it. DPM The stops the and Protocol Layer GoodCRCMessage evaluation. PHY Layer generates a and passes it. Table8.130 Steps for Initiator to UFP Discover Identity (NAK) Step Initiator Responder PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Discover IdentityCommandNAK response was successfully sent. Figure 8.104, \"Initiator to Responder Discover Identity (BUSY)\" Initiator Responder Port Partner Explicit Contract Initiator Responder BUSY shows an example sequence between an and, where both s are in an and the attempts to discover identity information from the Figure 8 b.1u0t 4re Icneiitvieast oar to Re.sponder Discover Identity (BUSY) Initiator Responder : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Explicit PD Contract Explicit PD Contract 1: Send Discover Identity 2: Discover Identity 3: Discover Identity + CRC Start CRCReceiveTimer 4: Discover Identity Check MessageID against local copy Store copy of MessageID 5: Discover Identity received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Discover Identity sent Start VDMResponseTimer Request Identity information from Device Policy Manager 10: Send Discover Identity BUSY 11: Discover Identity BUSY 12: Discover Identity BUSY + CRC 13: Discover Identity BUSY Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Discover Identity BUSY received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop VDMResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Discover Identity BUSY sent Table8.131, \"Steps for Initiator to UFP Discover Identity (BUSY)\" Figure 8.104, \"Initiator to Responder Discover Identity (BUSY)\" below provides a detailed explanation of what happens at each labeledT astbelpe i8n. 131 Steps for Initiator to UFP Discover Identity (BUSY) above. Step Initiator Responder Initiator Explicit Contract Policy Engine Protocol Layer Discover Responder Explicit Contract The has an. The IdentityCommand Protocol Layer Discover IdentityCommand request. PHY Layer creates the request and passes to. IdentityCommand CRCReceiveTimer CRC Message appends and sends the receives the request. Starts. request and checks the to verify the. IdentityCommand Protocol Layer removes the and forwards the request to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Discover and then stores a copy of the new value. The forwards the received Engine request information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Discover IdentityCommand informs the that the request was successfully Policy Engine VDMResponseTimer sent. Policy Engine starts the. DPM Policy Engine Protocol Layer requests the identity information from Discover IdentityCommandBUSY Protocol Layer Discover IdentityCommand form a response. BUSY PHY Layer creates the response and passes to. BUSY CRC IdentityCommandBUSY receives the appends a and sends the Message CRCReceiveTimer Protocol Layer MessageID the one sent to verify the.. Message checks the in the incoming is different from the previously stored value Protocol Layer Discover and then stores a copy of the new value. The forwards the received Policy Engine response information to the Policy Engine VDMResponseTimer that consumes it. DPM The stops the and Protocol Layer GoodCRCMessage evaluation. PHY Layer generates a and passes it. Table8.131 Steps for Initiator to UFP Discover Identity (BUSY) Step Initiator Responder PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Discover IdentityCommandNAK response was successfully sent. Figure 8.105, \"Initiator to Responder Discover SVIDs (ACK)\" Initiator Responder Port Partner Explicit Contract Initiator SVID Responder shows an example sequence between an and, where both s are in an and the discovers information from the. Figure 8.105 Initiator to Responder Discover SVIDs (ACK) Initiator Responder : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Explicit PD Contract Explicit PD Contract 1: Send Discover_SVIDs 2: Discover_SVIDs 3: Discover_SVIDs + CRC Start CRCReceiveTimer 4: Discover_SVIDs Check MessageID against local copy Store copy of MessageID 5: Discover_SVIDs received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Discover_SVIDs sent Start VDMResponseTimer Request SVIDs from Device Policy Manager 10: Send Discover_SVIDs ACK 11: Discover_SVIDs ACK 12: Discover_SVIDs ACK + CRC 13: Discover_SVIDs ACK Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Discover_SVIDs ACK received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop VDMResponseTimer Check and increment MessageIDCounter DPM evaluates SVIDs Stop CRCReceiveTimer information 18: Discover_SVIDs ACK sent Table8.132, \"Steps for DFP to UFP Discover SVIDs (ACK)\" Figure 8.105, \"Initiator to Responder Discover SVIDs (ACK)\" below provides a detailed explanation of what happens at each labeled step in Table8.132 Steps for DFP to UFP Discover SVID sa (bAoCveK.) Step Initiator Responder Initiator Explicit Contract Policy Engine Protocol Layer Discover Responder Explicit Contract The has an. The SVIDsCommand Protocol Layer Discover SVIDsCommand request. PHY Layer creates the request and passes to. Command CRCReceiveTimer CRC Message appends and sends the receives the request. Starts. request and checks the to verify the. SVIDsCommand Protocol Layer removes the and forwards the request to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Discover and then stores a copy of the new value. The forwards the received Engine request information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Discover SVIDsCommand informs the that the request was successfully Policy Engine VDMResponseTimer sent. Policy Engine starts the. DPM Policy Engine Protocol Layer requests the identity information from Discover SVIDsCommandACK Protocol Layer Discover SVIDsCommand form a response. ACK PHY Layer creates the PHY Lreasypeornse and pasCsReCs to.Discover SVIDs CRC receives the CommandACK CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID response. Starts. one sent to verify the. Message checks the in the incoming is different from the previously stored value Protocol Layer Discover and then stores a copy of the new value. The forwards the received Policy Engine response information to the Policy Engine VDMResponseTimer that consumes it. DPM The stops the and Protocol Layer GoodCRCMessage evaluation. PHY Layer generates a and passes it. Table8.132 Steps for DFP to UFP Discover SVIDs (ACK) Step Initiator Responder PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Discover SVIDsCommandACK response was successfully sent. Figure 8.106, \"Initiator to Responder Discover SVIDs (NAK)\" Initiator Responder Port Partner Explicit Contract Initiator SVID Responder NAK shows an example sequence between an and, where both s are in an and the attempts to discover information from the Figure b 8u.1t 0re6c eInivietisa at or to. Responder Discover SVIDs (NAK) Initiator Responder : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Explicit PD Contract Explicit PD Contract 1: Send Discover_SVIDs 2: Discover_SVIDs 3: Discover_SVIDs + CRC Start CRCReceiveTimer 4: Discover_SVIDs Check MessageID against local copy Store copy of MessageID 5: Discover_SVIDs received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Discover_SVIDs sent Start VDMResponseTimer Request SVIDs from Device Policy Manager 10: Send Discover_SVIDs NAK 11: Discover_SVIDs NAK 12: Discover_SVIDs NAK + CRC 13: Discover_SVIDs NAK Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Discover_SVIDs NAK received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop VDMResponseTimer Check and increment MessageIDCounter DPM evaluates SVIDs Stop CRCReceiveTimer information 18: Discover_SVIDs NAK sent Table8.133, \"Steps for DFP to UFP Discover SVIDs (NAK)\" Figure 8.106, \"Initiator to Responder Discover SVIDs (NAK)\" below provides a detailed explanation of what happens at Table8.133 Steps for DFP to UFP Discover SVIDs (NAK) each labeled step in above. Step Initiator Responder Initiator Explicit Contract Policy Engine Protocol Layer Discover Responder Explicit Contract The has an. The SVIDsCommand Protocol Layer Discover SVIDsCommand request. PHY Layer creates the request and passes to. Command CRCReceiveTimer CRC Message appends and sends the receives the request. Starts. request and checks the to verify the. SVIDsCommand Protocol Layer removes the and forwards the request to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Discover and then stores a copy of the new value. The forwards the received Engine request information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Discover SVIDsCommand informs the that the request was successfully Policy Engine VDMResponseTimer sent. Policy Engine starts the. DPM Policy Engine Protocol Layer requests the identity information from Discover SVIDsCommandNAK Protocol Layer Discover SVIDsCommand form a response. NAK PHY Layer creates the PHY Lraeysepronse and paCssReCs to D.iscover SVIDs CRC receives the CommandNAK CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID response. Starts. one sent to verify the. Message checks the in the incoming is different from the previously stored value Protocol Layer Discover and then stores a copy of the new value. The forwards the received Policy Engine response information to the Policy Engine VDMResponseTimer that consumes it. DPM The stops the and Protocol Layer GoodCRCMessage evaluation. PHY Layer generates a and passes it. Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Table8.133 Steps for DFP to UFP Discover SVIDs (NAK) Step Initiator Responder PHY Layer CRC GoodCRC Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Discover SVIDsCommandNAK response was successfully sent. Figure 8.107, \"Initiator to Responder Discover SVIDs (BUSY)\" Initiator Responder Port Partner Explicit Contract Initiator SVID Responder BUSY shows an example sequence between an and, where both s are in an and the attempts to discover information from the Figure b8u.1t0 r7ec Ieniviteisa tao r to R.esponder Discover SVIDs (BUSY) Initiator Responder : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Explicit PD Contract Explicit PD Contract 1: Send Discover_SVIDs 2: Discover_SVIDs 3: Discover_SVIDs + CRC Start CRCReceiveTimer 4: Discover_SVIDs Check MessageID against local copy Store copy of MessageID 5: Discover_SVIDs received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Discover_SVIDs sent Start VDMResponseTimer Request SVIDs from Device Policy Manager 10: Send Discover_SVIDs BUSY 11: Discover_SVIDs BUSY 12: Discover_SVIDs BUSY + CRC 13: Discover_SVIDs BUSY Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Discover_SVIDs BUSY received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop VDMResponseTimer Check and increment MessageIDCounter DPM evaluates SVIDs Stop CRCReceiveTimer information 18: Discover_SVIDs BUSY sent Table8.134, \"Steps for DFP to UFP Discover SVIDs (BUSY)\" Figure 8.107, \"Initiator to Responder Discover SVIDs (BUSY)\" below provides a detailed explanation of what happens at each labeled step in Table8.134 Steps for DFP to UFP Discover SVIDs (BU aSbYo)ve. Step Initiator Responder Initiator Explicit Contract Policy Engine Protocol Layer Discover Responder Explicit Contract The has an. The SVIDsCommand Protocol Layer Discover SVIDsCommand request. PHY Layer creates the request and passes to. Command CRCReceiveTimer CRC Message appends and sends the receives the request. Starts. request and checks the to verify the. SVIDsCommand Protocol Layer removes the and forwards the request to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Discover and then stores a copy of the new value. The forwards the received Engine request information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Discover SVIDsCommand informs the that the request was successfully Policy Engine VDMResponseTimer sent. Policy Engine starts the. DPM Policy Engine Protocol Layer requests the identity information from Discover SVIDsCommandBUSY Protocol Layer Discover SVIDsCommand form a response. BUSY PHY Layer creates the PHY L areysepronse and pCasRsCes to D.iscover SVIDs CRC receives the CommandBUSY CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID response. Starts. one sent to verify the. Message checks the in the incoming is different from the previously stored value Protocol Layer Discover and then stores a copy of the new value. The forwards the received Policy Engine response information to the Policy Engine VDMResponseTimer that consumes it. DPM The stops the and Protocol Layer GoodCRCMessage evaluation. PHY Layer generates a and passes it. Table8.134 Steps for DFP to UFP Discover SVIDs (BUSY) Step Initiator Responder PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Discover SVIDsCommandBUSY response was successfully sent. Figure 8.108, \"Initiator to Responder Discover Modes (ACK)\" Initiator Responder Port Partner Explicit Contract Initiator Responder shows an example sequence between an and, where both s are in an and the discovers Mode information from the. Figure 8.108 Initiator to Responder Discover Modes (ACK) Initiator Responder : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Explicit PD Contract Explicit PD Contract 1: Send Discover_Modes 2: Discover_Modes 3: Discover_Modes + CRC Start CRCReceiveTimer 4: Discover_Modes Check MessageID against local copy Store copy of MessageID 5: Discover_Modes received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Discover_Modes sent Start VDMResponseTimer Request Modes information from Device Policy Manager 10: Send Discover_Modes ACK 11: Discover_Modes ACK 12: Discover_Modes ACK + CRC 13: Discover_Modes ACK Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Discover_Modes ACK received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop VDMResponseTimer Check and increment MessageIDCounter DPM evaluates Modes Stop CRCReceiveTimer information 18: Discover_Modes ACK sent Table8.135, \"Steps for DFP to UFP Discover Modes (ACK)\" Figure 8.108, \"Initiator to Responder Discover Modes (ACK)\" below provides a detailed explanation of what happens at each labeled step in Table8.135 Steps for DFP to UFP Discover Modes (A. CK) Step DFP UFP DFP Explicit Contract Policy Engine Protocol Layer Discover Modes UFP Explicit Contract The has an. The Command Protocol Layer Discover Modes Command request. PHY Layer creates the request and passes to. ModesCommand CRCReceiveTimer CRC Message appends and sends the receives the request. Starts. request and checks the to verify the. ModesCommand Protocol Layer removes the and forwards the request to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Discover and then stores a copy of the new value. The forwards the received Engine request information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Discover ModesCommand informs the that the request was successfully Policy Engine VDMResponseTimer sent. Policy Engine starts the. DPM Policy Engine Protocol Layer requests the identity information from Discover ModesCommandACK Protocol Layer Discover Modes Command form a response. ACK PHY Layer creates the CRC ModesCommandACK receives the appends a and sends the Message CRCReceiveTimer Protocol Layer MessageID one sent to verify the.. Message checks the in the incoming is different from the previously stored value Protocol Layer Discover and then stores a copy of the new value. The forwards the received Policy Engine response information to the Policy Engine VDMResponseTimer that consumes it. DPM The stops the and Protocol Layer GoodCRCMessage evaluation. PHY Layer generates a and passes it. Table8.135 Steps for DFP to UFP Discover Modes (ACK) Step DFP UFP PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Discover ModesCommandACK response was successfully sent. Figure 8.109, \"Initiator to Responder Discover Modes (NAK)\" Initiator Responder Port Partner Explicit Contract Initiator Responder NAK shows an example sequence between an and, where both s are in an and the attempts to discover Mode information from the Figure b8u.1t 0re9c Ieniviteisa tao r to.Responder Discover Modes (NAK) Initiator Responder : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Explicit PD Contract Explicit PD Contract 1: Send Discover_Modes 2: Discover_Modes 3: Discover_Modes + CRC Start CRCReceiveTimer 4: Discover_Modes Check MessageID against local copy Store copy of MessageID 5: Discover_Modes received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Discover_Modes sent Start VDMResponseTimer Request Modes information from Device Policy Manager 10: Send Discover_Modes NAK 11: Discover_Modes NAK 12: Discover_Modes NAK + CRC 13: Discover_Modes NAK Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Discover_Modes NAK received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop VDMResponseTimer Check and increment MessageIDCounter DPM evaluates Modes Stop CRCReceiveTimer information 18: Discover_Modes NAK sent Table8.136, \"Steps for DFP to UFP Discover Modes (NAK)\" Figure 8.109, \"Initiator to Responder Discover Modes (NAK)\" below provides a detailed explanation of what happens at each labeled step in Table8.136 Steps for DFP to UFP Discover Modes (N.AK) Step DFP UFP DFP Explicit Contract Policy Engine Protocol Layer Discover Modes UFP Explicit Contract The has an. The Command Protocol Layer Discover Modes Command request. PHY Layer creates the request and passes to. ModesCommand CRCReceiveTimer CRC Message appends and sends the receives the request. Starts. request and checks the to verify the. ModesCommand Protocol Layer removes the and forwards the request to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Discover and then stores a copy of the new value. The forwards the received Engine request information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Discover ModesCommand informs the that the request was successfully Policy Engine VDMResponseTimer sent. Policy Engine starts the. DPM Policy Engine Protocol Layer requests the identity information from Discover ModesCommandNAK Protocol Layer Discover Modes Command form a response. NAK PHY Layer creates the PHY L raeysepronse and paCsRseCs to D.iscover Modes NAK CRC receives the CommandNAK CRCReceiveTimer. Message appends a and sends the Protocol Layer MessageID response. Starts the one sent to verify the. Message checks the in the incoming is different from the previously stored value Protocol Layer Discover and then stores a copy of the new value. The forwards the received Policy Engine response information to the Policy Engine VDMResponseTimer that consumes it. DPM The stops the and Protocol Layer GoodCRCMessage evaluation. PHY Layer generates a and passes it. Table8.136 Steps for DFP to UFP Discover Modes (NAK) Step DFP UFP PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Discover ModesCommandNAK response was successfully sent. Figure 8.110, \"Initiator to Responder Discover Modes (BUSY)\" Initiator Responder Port Partner Explicit Contract Initiator Responder BUSY shows an example sequence between an and, where both s are in an and the attempts to discover Mode information from the Figure 8b.u1t1 r0e cIeniivteiast ao r to R.esponder Discover Modes (BUSY) Initiator Responder : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine Explicit PD Contract Explicit PD Contract 1: Send Discover_Modes 2: Discover_Modes 3: Discover_Modes + CRC Start CRCReceiveTimer 4: Discover_Modes Check MessageID against local copy Store copy of MessageID 5: Discover_Modes received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Discover_Modes sent Start VDMResponseTimer Request Modes information from Device Policy Manager 10: Send Discover_Modes BUSY 11: Discover_Modes BUSY 12: Discover_Modes BUSY + CRC 13: Discover_Modes BUSY Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Discover_Modes BUSY received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop VDMResponseTimer Check and increment MessageIDCounter DPM evaluates Modes Stop CRCReceiveTimer information 18: Discover_Modes BUSY sent Table8.137, \"Steps for DFP to UFP Discover Modes (BUSY)\" Figure 8.110, \"Initiator to Responder Discover Modes (BUSY)\" below provides a detailed explanation of what happens at each labeled step in Table8.137 Steps for DFP to UFP Discover Modes (BU.SY) Step DFP UFP DFP Explicit Contract Policy Engine Protocol Layer Discover Modes UFP Explicit Contract The has an. The Command Protocol Layer Discover Modes Command request. PHY Layer creates the request and passes to. Command CRCReceiveTimer CRC Message appends and sends the receives the ModesCommand Protocol Layer removes the and forwards the request to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Discover and then stores a copy of the new value. The forwards the received Engine request information to the Protocol Layer GoodCRCMessage that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Discover ModesCommand informs the that the request was successfully Policy Engine VDMResponseTimer sent. Policy Engine starts the. DPM Policy Engine Protocol Layer requests the identity information from Discover ModesCommandNAK Protocol Layer Discover Modes Command form a response. NAK PHY Layer creates the PHY L raeysepronse and paCsRsCes to D.iscover Modes NAK CRC receives the CommandNAK CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID response. Starts. the one sent to verify the. Message checks the in the incoming is different from the previously stored value Protocol Layer Discover and then stores a copy of the new value. The forwards the received Policy Engine response information to the Policy Engine VDMResponseTimer that consumes it. DPM The stops the and Protocol Layer GoodCRCMessage evaluation. PHY Layer generates a and passes it. Table8.137 Steps for DFP to UFP Discover Modes (BUSY) Step DFP UFP PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Discover ModesCommandNAK response was successfully sent. Figure 8.111, \"DFP to UFP Enter Mode\" DFP UFP DFP SVID shows an example sequence between a and a that occurs after the has discovered supported s Fanigdu Mreo 8d.e1s1 a1t wDhFPic hto p UoiFnPt iEt nsteelerc Mtso adned enters a Mode. DFP UFP : DFP Policy Engine : Protocol : PHY : PHY : Protocol : UFP Policy Engine USB Operation USB Operation Supported SVIDS/Modes discovered Enter USB Safe State 37: Send Enter Mode 38: Enter Mode 39: Enter Mode + CRC Start CRCReceiveTimer 40: Enter Mode Check MessageID against local copy Store copy of MessageID 41: Enter Mode received 42: GoodCRC 43: GoodCRC + CRC 44: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 45: Enter Mode sent Start VDMModeEntryTimer Evaluate Enter Mode request Enter New Mode 46: Send Enter Mode ACK 47: Enter Mode ACK 48: Enter Mode ACK + CRC 49: Enter Mode ACK Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 50: Enter Mode ACK received 51: GoodCRC 52: GoodCRC + CRC 53: GoodCRC Stop VDMModeEntryTimer Enter New Mode Check and increment MessageIDCounter Stop CRCReceiveTimer 54: Enter Mode ACK sent New Mode Entered Table8.138, \"Steps for DFP to UFP Enter Mode\" Figure 8.111, \"DFP to UFP Enter Mode\" below provides a detailed explanation of what happens at each labeled step in Table8.138 Steps f oarb oDvFeP. to UFP Enter Mode Step DFP UFP DFP Explicit Contract DFP SVID The has an Discover SVIDsCommand The has discovered the supported S using the Discover ModesCommand request and the supported UFP Explicit Contract DFP USB Safe State DPM Modes using the request The goes to. The requests the Policy Engine Protocol Layer to enter a Mode. Enter ModeCommand The directs the to send an Protocol Layer Enter ModeCommand request. PHY Layer creates the request and passes to. Command CRCReceiveTimer CRC Message appends and sends the receives the request request. Starts. and checks the to verify the. ModeCommand Protocol Layer removes the and forwards the request to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Enter Mode and then stores a copy of the new value. The forwards the received request information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Enter ModeCommand Policy Engine VDMModeEntryTimer request was successfully sent. Policy Engine DPM starts the. Policy Engine Protocol Layer requests the to enter the new Enter ModeCommandACK Protocol Layer Enter ModeCommandACK form an response. PHY Layer creates the PreHspYo Lnasyee arnd passes toC RC. Enter Mode CRC receives the CommandACK CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID response. Starts. one sent to verify the. Message checks the in the incoming is different from the previously stored value Protocol Layer Enter Mode and then stores a copy of the new value. The forwards the received Engine response information to the Policy Engine VDMModeEntryTimer that consumes it. DPM The stops the and requests the to enter the new Mode. Table8.138 Steps for DFP to UFP Enter Mode Step DFP UFP Protocol Layer GoodCRCMessage PHY Layer generates a and PpaHsYse Lsa ity er. CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine Enter and stops. informs the that the DFP UFP response was successfully sent. and are operating in the new Mode Figure 8.112, \"DFP to UFP Exit Mode\" DFP UFP DFP UFP Active Mode shows an example sequence between a and a, where the commands the to exit the only Figure 8..112 DFP to UFP Exit Mode DFP UFP : DFP Policy Engine : Protocol : PHY : PHY : Protocol : UFP Policy Engine In Mode In Mode Enter USB Safe State 1: Send Exit Mode 2: Exit Mode 3: Exit Mode + CRC Start CRCReceiveTimer 4: Exit Mode Check MessageID against local copy Store copy of MessageID 5: Exit Mode received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Exit Mode sent Start VDMModeExitTimer Evaluate Exit Mode request Enter USB Operation 10: Send Exit Mode ACK 11: Exit Mode ACK 12: Exit Mode ACK + CRC 13: Exit Mode ACK Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Exit Mode ACK received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop VDMModeExitTimer Enter USB Operation Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Exit Mode ACK sent USB operation Table8.139, \"Steps for DFP to UFP Exit Mode\" Figure 8.112, \"DFP to UFP Exit Mode\" below provides a detailed explanation of what happens at each labeled step in Table8.139 Step sa bfoorv eD.FP to UFP Exit Mode Step DFP UFP DFP USB Safe State Policy Engine Protocol Layer UFP The is in a Mode and then enters. Exit ModeCommand Protocol Layer Exit ModeCommand request. PHY Layer creates the request and passes to. Command CRCReceiveTimer CRC Message appends and sends the receives the request request. Starts. and checks the to verify the. ModeCommand Protocol Layer removes the and forwards the request to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Exit Mode and then stores a copy of the new value. The forwards the received request information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine Exit and stops. ModeCommand Policy Engine VDMModeExitTimer request was successfully sent. Policy Engine DPM starts the. Policy Engine Protocol Layer requests the to enter USB Exit ModeCommandACK Protocol Layer Exit ModeCommandACK form an response. PHY Layer creates the PreHspYo Lnasyee arnd passes toC RC. Exit Mode CRC receives the CommandACK CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID response. Starts. one sent to verify the. Message checks the in the incoming is different from the previously stored value Protocol Layer Exit Mode and then stores a copy of the new value. The forwards the received Engine response information to the Policy Engine VDMModeExitTimer that consumes it. DPM The stops the and requests the to enter USB Operation. PHY Layer generates a and pPaHsYs eLsa iyte r.CRC GoodCRC CRC Message receives and compares appends a and sends the Message.. Table8.139 Steps for DFP to UFP Exit Mode Step DFP UFP PHY Layer CRC GoodCRC Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine Exit and stops. informs the that the DFP UFP response was successfully sent. Both and are in USB Operation Figure 8.113, \"DFP to Cable Plug Enter Mode\" DFP Cable Plug DFP SVID shows an example sequence between a and a that occurs after the has discovereFdig suurpep 8or.1te1d3 DFPs t aon Cda Mbloed Pelsu agt Ewnhtiecrh Mpooidnet it selects and enters a Mode. DFP Cable Plug : DFP Policy Engine : Protocol : PHY : PHY : Protocol : Cable Plug Policy Engine USB Mode USB Mode Supported SVIDs/Modes Discovered Enter USB Safe Mode Wait tCableMessage before transmission 19: Send Enter Mode 20: Enter Mode 21: Enter Mode + CRC Start CRCReceiveTimer 22: Enter Mode Check MessageID against local copy Store copy of MessageID 23: Enter Mode received 24: GoodCRC 25: GoodCRC + CRC 26: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 27: Enter Mode sent Evaluate Enter Mode request Start VDMModeEntryTimer Enter New Mode Wait tCableMessage before transmission 10: Send Enter Mode ACK 11: Enter Mode ACK 12: Enter Mode ACK + CRC 13: Enter Mode ACK Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Enter Mode ACK received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop VDMModeEntryTimer Enter New Mode Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Enter Mode ACK sent New Mode Entered Table8.140, \"Steps for DFP to Cable Plug Enter Mode\" Figure 8.113, \"DFP to Cable Plug Enter Mode\" below provides a detailed explanation of what happens at each labeled step in Table8.140 Steps for DFP to Cabl ea bPolvueg. Enter Mode Step DFP Cable Plug DFP Explicit Contract DFP SVID The has an Discover SVIDsCommand The has discovered the supported S using the Discover ModesCommand request and the supported DFP USB Safe State DPM Modes using the request Policy Engine tCableMessage GoodCRCMessage to enter a Mode. Policy Engine Protocol Layer after the last was Enter ModeCommand sent the directs the to Protocol Layer Enter ModeCommand send an request. PHY Layer creates the request and passes to. Command CRCReceiveTimer CRC Message appends and sends the receives the request request. Starts. and checks the to verify the. ModeCommand Protocol Layer removes the and forwards the request to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Enter Mode and then stores a copy of the new value. The forwards the received request information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Enter ModeCommand Policy Engine VDMModeEntryTimer request was successfully sent. Policy Engine DPM starts the. tCableMessage GoodCRCMessage requests the to enter the new Policy Engine Protocol Layer Mode. after the was sent the tells the to form Protocol Layer Enter ModeCommandACK an response. PHY Layer creates the rPeHspYo Lnasye earnd passes toC RC. Enter Mode CRC receives the CommandACK CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID response. Starts. one sent to verify the. Message checks the in the incoming is different from the previously stored value Protocol Layer Enter Mode and then stores a copy of the new value. The forwards the received Engine response information to the that consumes it. Table8.140 Steps for DFP to Cable Plug Enter Mode Step DFP Cable Plug Policy Engine VDMModeEntryTimer DPM The stops the and requests the to enter the new Mode. PHY Layer generates a and pPaHsYse Lsa ity er. CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine Enter and stops. informs the that the DFP Cable Plug response was successfully sent. and are operating in the new Mode Figure 8.114, \"DFP to Cable Plug Exit Mode\" USB Type-C DFP Cable Plug DFP Cable Plug Active Mode ® shows an example sequence between a and a, where the commands theF igure 8.11 4to D eFxiPt taon Cable Plug E.xit Mode DFP Cable Plug : DFP Policy Engine : Protocol : PHY : PHY : Protocol : Cable Plug Policy Engine In Mode In Mode Enter USB Safe State 1: Send Exit Mode 2: Exit Mode 3: Exit Mode + CRC Start CRCReceiveTimer 4: Exit Mode Check MessageID against local copy Store copy of MessageID 5: Exit Mode received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Exit Mode sent Evaluate Exit Mode request Start VDMModeExitTimer Enter USB Operation Wait tCableMessage before transmission 10: Send Exit Mode ACK 11: Exit Mode ACK 12: Exit Mode ACK + CRC 13: Exit Mode ACK Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 14: Exit Mode ACK received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop VDMModeExitTimer Enter USB Operation Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Exit Mode ACK sent USB operation Table8.141, \"Steps for DFP to Cable Plug Exit Mode\" Figure 8.114, \"DFP to Cable Plug Exit Mode\" below provides a detailed explanation of what happens at each labeled step in Table8.141 Steps for DFP taob oCvaeb.le Plug Exit Mode Step DFP Cable Plug DFP USB Safe State Policy Engine Protocol Layer Cable Plug The is in a Mode and then enters. Exit ModeCommand Protocol Layer Exit ModeCommand request. PHY Layer creates the request and passes to. Command CRCReceiveTimer CRC Message appends and sends the receives the request request. Starts. and checks the to verify the. ModeCommand Protocol Layer removes the and forwards the request to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Exit Mode and then stores a copy of the new value. The forwards the received request information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine Exit and stops. ModeCommand Policy Engine VDMModeExitTimer request was successfully sent. Policy Engine DPM starts the. tCableMessage GoodCRCMessage requests the to enter USB Policy Engine Protocol Layer operation. after the was sent the tells the to Protocol Layer Exit ModeCommandACK form an response. PHY Layer creates the PreHspYo Lnasyee arnd passes toC RC. Exit Mode CRC receives the CommandACK CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID response. Starts. one sent to verify the. Message checks the in the incoming is different from the previously stored value Protocol Layer Exit Mode and then stores a copy of the new value. The forwards the received Engine response information to the Policy Engine VDMModeExitTimer that consumes it. DPM The stops the and requests the to enter USB Operation. PHY Layer generates a and passes it. Table8.141 Steps for DFP to Cable Plug Exit Mode Step DFP Cable Plug PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine Exit and stops. informs the that the DFP Cable Plug response was successfully sent. Both and are in USB Operation Figure 8.115, \"Initiator to Responder Attention\" Initiator Responder Initiator Responder shows an example sequence between an and a, where the requests atteFnitgiounr efr 8o.m11 t5h eI nitiator to. Responder Attention Responder Initiator : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Attention 2: Attention 3: Attention + CRC 4: Attention Start CRCReceiveTimer Check MessageID against local copy Store copy of MessageID 5: Attention received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Attention sent Table8.142, \"Steps for Initiator to Responder Attention\" Figure 8.115, \"Initiator to Responder Attention\" below provides a detailed explanation of what happens at each labeled step in Table8.142 Steps for Initiator to Res apboonvdee.r Attention Step Responder Initiator DPM Policy Engine Protocol Layer AttentionCommand The requests attention. The tells Protocol Layer AttentionCommand request. PHY Layer creates the request PanHdY p Laassyeesr to CRC. Attention CRC receives the request Command CRCReceiveTimer Message appends a and sends the Protocol Layer MessageID request. Starts. verify the. Message checks the in the incoming is different from the previously stored value Protocol Layer Attention and then stores a copy of the new value. The forwards the received request information to the Policy Engine DPM that consumes it. Protocol Layer GoodCRCMessage PHY Layer generates a and PpaHsYse Lsa ity er. CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the request was successfully sent. BIST Carrier Mode Tester UUT UUT Tester The following is an example of a test between a and a. When the is connected to tFhigeu re 8.11 t6h,e \" BseISqTu eCnacrer ibere lMowod ies Teexsetc\"uted. Message shows the s as they flow across the bus and within the devices. This test enables the measurement of power supply noise and frequency drift. 1) CToesntneerction is eBsItSaTblMishesesda ganed stableB.IST Carrier ModeBIST Data Object 2) UUT sends a GoodCR CwMithe sas age. 3) UUT answers with a Test Pa ttern. 4) starts sending the. 5) Operator does the mtBeIaSsTuCreomnteMnotsd.e 6) TSheect tieosnt 5e.n9d.1s, \"aBftIeSrT Carrier Mode\". Section 6.4.3.1, \"BIST Carrier Mode\" See also Figur aen 8d. 116 BIST Carrier Mode Test. Tester UUT : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send BIST(Carrier Mode) 2: BIST(Carrier Mode) 3: BIST(Carrier Mode) + CRC Start CRCReceiveTimer 4: BIST(Carrier Mode) Check MessageID against local copy Store copy of MessageID 5: BIST(Carrier Mode) received Go to BIST Carrier Mode 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 10: Go to BIST Carrier Mode 9: BIST(Carrier Mode) sent 11: Go to BIST Carrier Mode Enter BIST Carrier Mode mode 12: Send Test Pattern 13: Send Test Pattern 14: Test Pattern End of Test (after tBISTContMode) Table8.143, \"Steps for BIST Carrier Mode Test\" Figure 8.116, \"BIST Carrier Mode Test\" below provides a detailed explanation of what happens at each labeled step in Table8.143 Steps f oarb oBvISe.T Carrier Mode Test Step Tester UUT Policy Engine Protocol Layer BISTMessage BIST Data Object The directs the to BIST Carrier Mode UUT BIST Carrier generate a, with a of, to put the into Protocol Layer Message PHY. Layer creates the and passes to. CRCReceiveTimer CRC Message appends and sends the. receives the and checks the Starts. to verify the. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer BISTMessage Policy Engine The forwards the received Protocol Layer GoodCRCMessage information to the that consumes it. PHY Layer generates a and passes it. Message Message receives the and checks the appends and sends the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine BIST and stops. informs the that the Policy Engine Protocol Layer BIST was successfully sent. Carrier Mode Policy Engine BIST Carrier tells to go into Mode Protocol Layer PHY Layer BIST Carrier. Mode tells to go into. Policy Engine Protocol Layer enters. Test Pattern The directs the to start generation of the. Pattern directs the to generate the.. BIST Test Data Mode Tester UUT UUT Tester The following is an example of a test between a and a. When the is connected tFoig tuhree 8.117, t\"hBeI SsTe qTueesnt cDea btae lToewst i\"s executed. Message shows the s as they flow across the bus and within the devices. 1) CToesntneerction is eBsItSaTblMishesesda ganed stableB.IST Test DataBIST Data Object 2) UUT sends a GoodCR CwMithe sas age. 3) answers with a. 4) Steps 2and 3 are reHpeaartde dR eanseyt nSuigmnbaelirn ogf times. 5) TSheect tieosnt 5e.n9d.2s, \"aBftIeSrT Test Data M ode\" Sise cistisoune d6..4.3.2, \"BIST Test Data Mode\" See also and. Figure 8.117 BIST Test Data Test Tester UUT : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send BIST(Test Data) 2: BIST(Test Data) 3: BIST(Test Data) + CRC Start CRCReceiveTimer 4: BIST(Test Data) Check MessageID against local copy Store copy of MessageID 5: BIST(Test Data) received Go to BIST Test Data mode 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: BIST(Test Data) sent Enter BIST Test Data mode 10: Send BIST(Test Data) 11: BIST(Test Data) 12: BIST(Test Data) + CRC Start CRCReceiveTimer 13: BIST(Test Data) Check MessageID against local copy Store copy of MessageID 14: BIST(Test Data) received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 18: BIST(Test Data) sent End of Test (Hard Reset) Table8.144, \"Steps for BIST Test Data Test\" Figure 8.117, \"BIST Test Data Test\" below provides a detailed explanation of what happens at each labeled step in Table8 a.1b4o4ve S.teps for BIST Test Data Test Step Tester UUT Policy Engine Protocol Layer BISTMessage BIST Data Object The directs the to BIST Test Data UUT BIST Test Data generate a, with a of, to put the into Protocol Layer Message PHY. Layer creates the and passes to. CRCReceiveTimer Message appends and sends the. receives the and checks the Starts. to verify the. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer BISTMessage and then stores a copy of the new value. Policy Engine The forwards the received Policy Engine BIST Test Data Mode Message GoodCRC The goes into Mode Message Message Section where it sends no further s except for 6.4.3.2, \"BIST Test Data Mode\" s in response to received s (see Protocol Layer GoodCRCMessage ). PHY Layer generates a and passes it. Message Message receives the and checks the to appends and sends the verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine BIST and stops. informs the that the UUT BIST Test Data Mode was successfully sent. Policy Engine Protocol Layer enters. BISTMessage BIST Data Object The directs the to BIST Test Data UUT BIST Test Data generate a, with a of, to put the into Protocol Layer Message PHY. Layer creates the and passes to. CRCReceiveTimer Message appends and sends the. receives the and checks the Starts. to verify the. Message Protocol Layer removes the and forwards the to the. Table8.144 Steps for BIST Test Data Test Step Tester UUT Protocol Layer MessageID Message checks the in the incoming is different from the previously stored value Protocol Layer BISTMessage and then stores a copy of the new value. Policy Engine The forwards the received Policy Engine BIST Test Data Mode Message GoodCRC The goes into Mode Message Message Section where it sends no further s except for 6.4.3.2, \"BIST Test Data Mode\" s in response to received s (see Protocol Layer GoodCRCMessage ). PHY Layer generates a and passes it. Message Message receives the and checks the to appends and sends the verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine BIST and stops. informs the that the was successfully sent. Repeat steps 10-18 any numUbUerT of timBesIST Test Data Mode Hard Reset The exits after a BIST Shared Capacity Test Mode Tester UUT UUT Tester The following is an example of a test between a and a. When the iFsi gcuornen 8e.c1t1e8d, t\"oB tIhSTe Share Ctahpe asceiqtyu eMnocdee b Teelostw\" is executedM. essage UUT Source Port shows the s as they flow across the bus and within the devices. This test places the in a compliance test mode where the maximum capability is always offered on every, regardless of the availability of shared power i.e., all shared power management is disabled. 1) CToesntneerction is eBsItSaTblMishesesda ganed stableB.IST Shared Test Mode EntryBIST Data Object 2) UUT sends a GoodCR CwMithe sas age. 3) UUT answerBsI wSTit Shh aa red Capac ity Test M.ode 4) enters. 5) OTepsetreartor does BthISe TmMeaesssuargeements. BIST Shared Test Mode ExitBIST Data Object 6) UUT sends a GoodCR CwMithe sas age. 7) UUT answBerIsS Tw Sithha are d Capacit y Test Mo.de 8) Sect ieoxni t5s. 9.1, \"BIST Carrier Mode\" Sec.tion 6.4.3.3, \"BIST Shared Capacity Test Mode\" See also Figure 8.a1n1d8 BIST Share Capacity Mode Test. Tester UUT : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send BIST(Shared Capacity Test Mode Entry) 2: BIST(Shared Capacity Test Mode Entry) Start CRCReceiveTimer 3: BIST(Shared Capacity Test Mode Entry) + CRC 4: BIST(Shared Capacity Test Mode Entry) Check MessageID against local copy Store copy of MessageID 5: BIST(Shared Capacity Test Mode Entry) received Go to BIST Shared Capacity Test Mode 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 10: Go to BIST Shared Capacity Test Mode 9: BIST(Shared Capacity Test Mode) sent 11: Go to BIST Shared Capacity Test Mode Enter BIST Shared Capacity Test Mode mode Tester Performs Tests 12: Send BIST(Shared Capacity Test Mode Exit) 13: BIST(Shared Capacity Test Mode Exit) Start CRCReceiveTimer 14: BIST(Shared Capacity Test Mode Exit) + CRC 15: BIST(Shared Capacity Test Mode Exit) Check MessageID against local copy Store copy of MessageID 16: BIST(Shared Capacity Test Mode Exit) received Go to BIST Shared Capacity Test Mode 17: GoodCRC 18: GoodCRC + CRC 19: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 21: Exit BIST Shared Capacity Test Mode 20: BIST(Shared Capacity Test Mode) sent 22: Exit BIST Shared Capacity Test Mode EXit BIST Shared Capacity Test Mode mode Table8.145, \"Steps for BIST Shared Capacity Test Mode Test\" Figure 8.118, \"BIST Share Capacity Mode Test\" below provides a detailed explanation of what happens at each labeled step in Table8.145 Steps for BIST Shared Capac iatbyo Tvee.st Mode Test Step Tester UUT Policy Engine Protocol Layer BISTMessage BIST Data Object The directs the to BIST Shared Test Mode Entry UUT BIST generate a, with a of, to put the into Protocol Layer Message PHY. Layer creates the and passes to. CRCReceiveTimer Message appends and sends the. receives the and checks the Starts. to verify the. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer BISTMessage Policy Engine The forwards the received Protocol Layer GoodCRCMessage information to the that consumes it. PHY Layer generates a and passes it. Message Message receives the and checks the appends and sends the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine BIST and stops. informs the that the Policy Engine Protocol Layer BIST was successfully sent. Shared Capacity Test Mode Policy Engine tells to go into BIST Shared Capacity Test Mode Protocol Layer PHY Layer BIST Shared. Capacity Test Mode tells to go into. Policy Engine Protocol Layer enters. performs tests. BISTMessage BIST Data Object The directs the to BIST Shared Test Mode Exit UUT BIST generate a, with a of, to take the out of Protocol Layer Message PHY. Layer creates the and passes to. CRCReceiveTimer CRC Message appends and sends the. receives the and checks the Starts. to verify the. Message Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer BISTMessage Policy Engine The forwards the received information to the that consumes it. Table8.145 Steps for BIST Shared Capacity Test Mode Test Step Tester UUT Protocol Layer GoodCRCMessage PHY Layer generates a and passes it. Message Message receives the and checks the to appends and sends the verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine BIST and stops. informs the that the Policy Engine Protocol Layer BIST Shared was successfully sent. Capacity Test Mode Policy Engine BIST tells to exit Shared Capacity Test Mode Protocol Layer PHY Layer BIST Shared. Capacity Test Mode tells to exit UUT BIST Shared Capacity Test Mode. exits. DFP [USB4] Valid UFP Figure 8.119, \"UFP Entering USB4 Mode (Accept)\" Message This is an example of an Enter USB operation where the requests mode when this is a mode of operation for the. shows the s as they flow across the bus and within the devices to acFciogmurpeli s8h.1 t1h9e EUnFtPe rE UnSteBr pinrog cUeSssB.4 Mode (Accept) DFP UFP : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Enter_USB (USB4) 2: Enter_USB (USB4) 3: Enter_USB (USB4) + CRC Start CRCReceiveTimer 4: Enter_USB (USB4) 5: Enter_USB (USB4) received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Enter_USB (USB4) sent Start SenderResponseTimer 10: Send Accept 11: Accept 12: Accept + CRC Start CRCReceiveTimer 13: Accept Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Accept sent USB4 Mode entered Table8.146, \"Steps for UFP USB4 Mode Entry (Accept)\" Figure 8.119, \"UFP Entering USB4 Mode (Accept)\" below provides a detailed explanation of what happens at each labeled step in Table8.146 Steps for UFP USB4 Mode aEbnotrvye.(Accept) Step DFP UFP Policy Engine Protocol Layer Enter_USB Message The directs the to [USB4] Protocol Layer Message PHY mode. Layer creates the and passes to PHY La.yer CRC Enter_USB CRC Message CRCReceiveTimer receives the and appends and sends the Message. Starts. PHY Layer CRC the. Enter_USBMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Enter_USB and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. Message Message receives the and checks the appends and sends the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Enter_USB Message Policy Engine SenderResponseTimer was successfully sent. Policy Engine Protocol Layer Accept starts. Message tells the to form an. Layer creates the and passes to. Message CRCReceiveTimer receives the and compares the appends a and sends the. Starts it calculated with the one sent to verify the.. Message stores the of the incoming. Message Policy Engine The forwards the received Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and PpaHsYse Lsa ity er. CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. Table8.146 Steps for UFP USB4 Mode Entry (Accept) Step DFP UFP Protocol Layer MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Both Port Partners enter [USB4] op eration. was successfully sent. DFP [USB4] Invalid UFP Figure 8.120, \"UFP Entering USB4 Mode (Reject)\" Message This is an example of an Enter USB operation where the requests mode when this is an mode of operation for the. shows the s as they flow across the bus and within the devices tFoi agcucroem 8p.1li2sh0 tUhFe PE nEtnetre UriSnBg p UrSoBce4s sM.ode (Reject) DFP UFP : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Enter_USB (USB4) 2: Enter_USB (USB4) 3: Enter_USB (USB4) + CRC Start CRCReceiveTimer 4: Enter_USB (USB4) 5: Enter_USB (USB4) received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Enter_USB (USB4) sent Start SenderResponseTimer 10: Send Reject 11: Reject 12: Reject + CRC Start CRCReceiveTimer 13: Reject Store copy of MessageID 14: Reject received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Reject sent USB4 Mode not entered; USB link is negotiated via legacy mechanisms Table8.147, \"Steps for UFP USB4 Mode Entry (Reject)\" Figure 8.120, \"UFP Entering USB4 Mode (Reject)\" below provides a detailed explanation of what happens at each labeled step in Table8.147 Steps for UFP USB4 Mode a Ebnotvrey. (Reject) Step DFP UFP Policy Engine Protocol Layer Enter_USB Message The directs the to [USB4] Protocol Layer Message PHY mode. Layer creates the and passes to PHY La.yer CRC Enter_USB CRC Message CRCReceiveTimer receives the and appends and sends the Message. Starts. PHY Layer CRC the. Enter_USBMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Enter_USB and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. Message Message receives the and checks the appends and sends the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Enter_USB Message Policy Engine SenderResponseTimer was successfully sent. Policy Engine Protocol Layer Reject starts. Message tells the to form an. Layer creates the and passes to. Message CRCReceiveTimer receives the and compares the appends a and sends the. Starts it calculated with the one sent to verify the.. Message stores the of the incoming. Message Policy Engine The forwards the received Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and PpaHsYse Lsa ity er. CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. Table8.147 Steps for UFP USB4 Mode Entry (Reject) Step DFP UFP Protocol Layer MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Port Partner [USB4] was successfully sent. s do not enter operation. DFP [USB4] UFP Figure 8.121, \"UFP Entering USB4 Mode (Wait)\" Message This is an example of an Enter USB operation where the requests mode when this is not possible for the at this time. shows the s as they flow across the bus and within the devices to accompFliigsuh rteh e8 E.1n2t1er U UFSPB E pnrtoecreisnsg. USB4 Mode (Wait) DFP UFP : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Enter_USB (USB4) 2: Enter_USB (USB4) 3: Enter_USB (USB4) + CRC Start CRCReceiveTimer 4: Enter_USB (USB4) 5: Enter_USB (USB4) received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Enter_USB (USB4) sent Start SenderResponseTimer 10: Send Wait 11: Wait 12: Wait + CRC Start CRCReceiveTimer 13: Wait Store copy of MessageID 14: Wait received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Wait sent USB4 Mode not entered; USB link is negotiated via legacy mechanisms Table8.148, \"Steps for UFP USB4 Mode Entry (Wait)\" Figure 8.121, \"UFP Entering USB4 Mode (Wait)\" below provides a detailed explanation of what happens at each labeled step in Table8.148 Steps for UFP USB 4a bMoovde.e Entry (Wait) Step DFP UFP Policy Engine Protocol Layer Enter_USB Message The directs the to [USB4] Protocol Layer Message PHY mode. Layer creates the and passes to PHY L.ayer CRC Enter_USB CRC Message CRCReceiveTimer receives the and appends and sends the Message. Starts. PHY Layer CRC the. Enter_USBMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Enter_USB and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. Message Message receives the and checks the appends and sends the to verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Enter_USB Message Policy Engine SenderResponseTimer was successfully sent. Policy Engine Protocol Layer Wait starts. Message tells the to form an. Layer creates the and passes to. Message CRCReceiveTimer receives the and compares the appends a and sends the. Starts it calculated with the one sent to verify the.. Message stores the of the incoming. Policy Engine The forwards the received information to the that consumes it. PHY Layer generates a and passes it. Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. Table8.148 Steps for UFP USB4 Mode Entry (Wait) Step DFP UFP Protocol Layer MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine Wait and stops. informs the that the Port Partner [USB4] was successfully sent. s do not enter operation. DFP [USB4] Valid Cable Plug Figure 8.122, \"Cable Plug Entering USB4 Mode (Accept)\" Message This is an example of an Enter USB operation where the requests mode when this is a mode of operation for the. shows the s as they flow across the bus and withFiing uthree d8e.1vi2c2es C taob alcec Pomlupgl iEsnht tehrei nEgn UteSrB U4S BM pordoec e(Assc.cept) DFP Cable Plug : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Enter_USB (USB4) 2: Enter_USB (USB4) 3: Enter_USB (USB4) + CRC Start CRCReceiveTimer 4: Enter_USB (USB4) 5: Enter_USB (USB4) received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Enter_USB (USB4) sent Start SenderResponseTimer 10: Send Accept 11: Accept 12: Accept + CRC Start CRCReceiveTimer 13: Accept Store copy of MessageID 14: Accept received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Accept sent USB4 Mode entered Table8.149, \"Steps for Cable Plug USB4 Mode Entry (Accept)\" Figure 8.122, \"Cable Plug Entering USB4 Mode (Accept)\" below provides a detailed explanation of what happens at each labeled sTtaepb lien 8.149 Steps for Cable Plug USB4 Mode Entry (Accep ta)bove. Step DFP Cable Plug Policy Engine Protocol Layer Enter_USB Message The directs the to [USB4] Protocol Layer Message PHY mode. Layer creates the and passes to PHY L.ayer CRC Enter_USB CRC Message CRCReceiveTimer receives the and appends and sends the Message. Starts. PHY Layer CRC the. Enter_USBMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Enter_USB and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. Message Message receives the and checks the to appends and sends the verify the.. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Enter_USB Message Policy Engine SenderResponseTimer was successfully sent. Policy Engine Protocol Layer Accept starts. Message tells the to form an. Layer creates the and passes to. Message CRCReceiveTimer receives the and compares the appends a and sends the. Starts it calculated with the one sent to verify the.. Message stores the of the incoming. Message Policy Engine The forwards the received Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and pPaHsYs eLsa iyte r. CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. Table8.149 Steps for Cable Plug USB4 Mode Entry (Accept) Step DFP Cable Plug Protocol Layer MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Cable Plug enters [USB4] opera tion. was successfully sent. DFP [USB4] Invalid Cable Plug Figure 8.123, \"Cable Plug Entering USB4 Mode (Reject)\" Message This is an example of an Enter USB operation where the requests mode when this is an mode of operation for the. shows the s as they flow across the bus and withFinig tuhree d 8e.v1i2ce3s C taob alcec oPmlupgl iEsnh ttehrei nEgn tUeSr BU4S BM pordoec e(sRse.ject) DFP Cable Plug : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Enter_USB (USB4) 2: Enter_USB (USB4) 3: Enter_USB (USB4) + CRC Start CRCReceiveTimer 4: Enter_USB (USB4) 5: Enter_USB (USB4) received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Enter_USB (USB4) sent Start SenderResponseTimer 10: Send Reject 11: Reject 12: Reject + CRC Start CRCReceiveTimer 13: Reject Store copy of MessageID 14: Reject received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Reject sent USB4 Mode not entered; USB link is negotiated via legacy mechanisms Table8.150, \"Steps for Cable Plug USB4 Mode Entry (Reject)\" Figure 8.123, \"Cable Plug Entering USB4 Mode (Reject)\" below provides a detailed explanation of what happens at each labeled step in Table8.150 Steps for Cable Plug USB4 Mode Entr ayb (oRveej.ect) Step DFP Cable Plug Policy Engine Protocol Layer Enter_USB Message The directs the to [USB4] Protocol Layer Message PHY mode. Layer creates the and passes to PHY L.ayer CRC Enter_USB CRC Message CRCReceiveTimer receives the and appends and sends the Message. Starts. PHY Layer CRC the. Enter_USBMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Enter_USB and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. Message Message receives the and checks the appends and sends the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Enter_USB Message Policy Engine SenderResponseTimer was successfully sent. Policy Engine Protocol Layer Reject starts. Message tells the to form an. Layer creates the and passes to. Message CRCReceiveTimer receives the and compares the appends a and sends the. Starts it calculated with the one sent to verify the.. Message stores the of the incoming. Message Policy Engine The forwards the received Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and pPaHsYs eLsa iyte r. CRC GoodCRC CRC Message receives and compares appends a and sends the Message. PHY Layer CRC GoodCRC. Message Protocol Layer removes the and forwards the to the. Table8.150 Steps for Cable Plug USB4 Mode Entry (Reject) Step DFP Cable Plug Protocol Layer MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. informs the that the Cable Plug does not enter [USB4] o peration. was successfully sent. DFP [USB4] Cable Plug Figure 8.124, \"Cable Plug Entering USB4 Mode (Wait)\" Message This is an example of an Enter USB operation where the requests mode when this is not possible for the at this time. shows the s as they flow across the bus and within theF digeuvricee s8.t1o2 a4c cCoambpleli sPhlu tgh eE Ennteterrin UgS UB SpBr4oc Mesosd.e (Wait) DFP Cable Plug : Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine 1: Send Enter_USB (USB4) 2: Enter_USB (USB4) 3: Enter_USB (USB4) + CRC Start CRCReceiveTimer 4: Enter_USB (USB4) 5: Enter_USB (USB4) received 6: GoodCRC 7: GoodCRC + CRC 8: GoodCRC Check and increment MessageIDCounter Stop CRCReceiveTimer 9: Enter_USB (USB4) sent Start SenderResponseTimer 10: Send Reject 11: Reject 12: Reject + CRC Start CRCReceiveTimer 13: Reject Store copy of MessageID 14: Reject received 15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC Stop SenderResponseTimer Check and increment MessageIDCounter Stop CRCReceiveTimer 18: Reject sent USB4 Mode not entered; USB link is negotiated via legacy mechanisms Table8.151, \"Steps for Cable Plug USB4 Mode Entry (Wait)\" Figure 8.124, \"Cable Plug Entering USB4 Mode (Wait)\" below provides a detailed explanation of what happens at each labeled step in Table8.151 Steps for Cable Plug USB4 Mode En atbryo v(eW. ait) Step DFP Cable Plug Policy Engine Protocol Layer Enter_USB Message The directs the to [USB4] Protocol Layer Message PHY mode. Layer creates the and passes to PHY L.ayer CRC Enter_USB CRC Message CRCReceiveTimer receives the and appends and sends the Message. Starts. PHY Layer CRC the. Enter_USBMessage Protocol Layer removes the and forwards the to the. Message checks the in the incoming is different from the previously stored value Protocol Layer Enter_USB and then stores a copy of the new value. The forwards the received information to the that Protocol Layer GoodCRCMessage consumes it. PHY Layer generates a and passes it. Message Message receives the and checks the appends and sends the to verify the.. GoodCRCMessage Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Enter_USB Message Policy Engine SenderResponseTimer was successfully sent. Policy Engine Protocol Layer Wait starts. Message tells the to form an. Layer creates the and passes to. Message CRCReceiveTimer receives the and compares the appends a and sends the. Starts it calculated with the one sent to verify the.. Message stores the of the incoming. Policy Engine The forwards the received information to the that consumes it. PHY Layer generates a and passes it. Message CRC Message appends a and sends the receives and compares the. it calculated with the one sent to verify the. Message Protocol Layer removes the and forwards the to the. Table8.151 Steps for Cable Plug USB4 Mode Entry (Wait) Step DFP Cable Plug Protocol Layer MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine Wait and stops. informs the that the Cable Plug does not enter [USB4] ope wraatsio snu.ccessfully sent. Figure 8.125, \"Unstructured VDM Message Sequence\" Unstructured VDM DFP UFP Message UFP Modal Operation shows an example sequence of an Transaction between a and. The figure below shows the s as they flow across the bus after Enters into.Figure 8.125 Unstructured VDM Message Sequence : DFP Policy Engine : Protocol : PHY : PHY : Protocol : UFP Policy Engine New Mode Entered CRC Start CRCReceive Timer 23 : Unstructured VDM Check MessageID against local copy Store Copy of MessageID Check and Increment MessageIDCounter Evaluate Unstructured VDM Stop CRCReceiveTimer Reply with the application specific response which can be again a 10: Send Unstructured VDM 11: Unstructured VDM 11: Unstructured VDM Start CRCReceive Timer Check MessageID against local copy Store Copy of MessageID 14: Unstructured VDM Received Check and Increment MessageIDCounter 15: GoodCRC Stop CRCReceiveTimer 16: GoodCRC + CRC 17: GoodCRC 18: Unstructured VDM Sent Process Unstructured VDM as required Table8.152, \"Steps for Unstructured VDM Message Sequence\" Figure 8.125, \"Unstructured VDM Message Sequence\" below provides a detailed explanation of what happens at each labeled sTtaebpl ien8.152 Steps for Unstructured VDM Message Sequ eanboceve. Step DFP UFP DFP Explicit Contract Active Mode UFP Policy Engine UFP Explicit Contract The has an and has entered an Protocol Layer Active Mode UFP with the. The directs The has an and has entered an the to send an Unstructured with the Protocol Layer. Vendor_Defined Message PHY Layer creates the Unstructured and passes to. PHY Layer CRC PHY Layer Vendor_Defined Vendor_Defined Message CRCReceiveTimer Message CRC Message appends and sends the Unstructured receives the Unstructured. Starts. PHY Lay aenrd checks the CRC to verify the. Vendor_Defined Message Protocol removes the and forwards the Layer Protocol Layer MessageID. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the Unstructured Engine information to the Protoco lt Lhaayt ecronsumes it. GoodCRC Message PHY Layer generates a and passes it. CRC Message Message receives the and checks appends and sends the the to verify the.. GoodCRC Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Vendor_Defined Message Unstructured was successfully sent. Policy Engine Protocol Layer In this example the Vendor protocol requires a Vendor_Defined Message Protocol Layer form an Unstructured. Vendor_Defined Message PHY Layer creates the Unstructured PHY Layer CRC and passes to. Message CRC receives the Unstructured Vendor_Defined Message CRCReceiveTimer Message appends a and sends the Unstructured Protocol Layer MessageID. Starts. one sent to verify the. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the Unstructured Engine information to the Protoco lt Lhaayt ecronsumes it. GoodCRC Message PHY Layer generates a and passes it. Table8.152 Steps for Unstructured VDM Message Sequence Step DFP UFP PHY Layer CRC GoodCRC PHY Layer GoodCRC Message Message CRC Message appends a and sends the receives and compares the. PHY iLt acyaelcrulated with thCeR oCne sent to verify theG oodCRC. Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Vendor_Defined Message Unstructured was successfully sent. Figure 8.126, \"VDEM Message Sequence\" VDEM DFP UFP Message UFP Modal Operation shows an example sequence of an transaction between a and. The figure below shows the Figurse a 8s. 1th2e6y VflDowEM ac Mroessss tahgee b Suesq aufetenrc e Enters into. : DFP Policy Engine : Protocol : PHY : PHY : Protocol : UFP Policy Engine New Mode Entered Start CRCReceive Timer 23 : VDEM Check MessageID against local copy Store Copy of MessageID Check and Increment MessageIDCounter Stop CRCReceiveTimer Evaluate VDEM Reply with the application specific response which can be again a VDEM 10: Send VDEM 11: VDEM 11: VDEM Start CRCReceive Timer Check MessageID against local copy Store Copy of MessageID 14: VDEM Received Check and Increment MessageIDCounter 15: GoodCRC Stop CRCReceiveTimer 16: GoodCRC + CRC 17: GoodCRC 18: VDEM Sent Process VDEM as required Table8.153, \"Steps for VDEM Message Sequence\" Figure 8.126, \"VDEM Message Sequence\" below provides a detailed explanation of what happens at each labeled step in Table8.153 Steps for VabDoEvMe. Message Sequence Step DFP UFP DFP Explicit Contract Active Mode UFP Policy Engine UFP Explicit Contract The has an and has entered an Protocol Layer Vendor_Defined_Extended Active Mode UFP with the. The directs The has an and has entered an the to send a with the Protocol Layer Vendor_Defined_Extended. Message PHY Layer creates the and passes to. PHY Layer Vendor_Defined_Extended Vendor_Defined_ExtendedMessage appends and sends the Message CRC Message CRCReceiveTimer receives the PHY Lay aenrd checks the CRC to verify the.. Vendor_Defined_ExtendedMessage Protocol removes the and forwards the Layer Protocol Layer MessageID. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the Policy Engine information to the Protocol Layer GoodCRC Message that consumes it. PHY Layer generates a and passes it. CRC Message Message receives the appends and sends the and checks the to verify the.. GoodCRC Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer verifies and increments the Protocol Layer Policy Engine and stops. Vendor_Defined_ExtendedMessage was successfully sent. Policy Engine Protocol Layer In this example the Vendor protocol requires a Vendor_Defined_ExtendedMessage Protocol Layer Vendor_Defined_Extended form a. Message PHY Layer creates the and passes to. Message CRC Vendor_Defined_ExtendedMessage receives the appends a and sends the Message CRCReceiveTimer Protocol Layer MessageID one sent to verify the.. Message checks the in the incoming is different from the previously stored value Protocol Layer and then stores a copy of the new value. The forwards the Policy Engine information to the Protocol Layer GoodCRC Message that consumes it. PHY Layer generates a and pPaHsYse Lsa ity er. CRC GoodCRC CRC Message receives and compares appends a and sends the Message.. Table8.153 Steps for VDEM Message Sequence Step DFP UFP PHY Layer CRC GoodCRC Message Protocol Layer removes the and forwards the to the. MessageIDCounter CRCReceiveTimer. verifies and increments the Protocol Layer Policy Engine and stops Vendor_Defined_ExtendedMessage was successfully sent.", "tables": ["Table 8.1", "Table 8.2", "Table 8.2", "Table 8.3", "Table 8.31", "Table 8.14", "Table 8.15", "Table 8.20", "Table 8.21", "Table 8.22", "Table 8.23", "Table 8.25", "Table 8.26", "Table 8.28", "Table 8.29", "Table 8.5", "Table 8.6", "Table 8.6", "Table 8.7", "Table 8.8", "Table 8.9", "Table 8.10", "Table 8.11", "Table 8.12", "Table 8.13", "Table 8.14", "Table 8.15", "Table 8.16", "Table 8.17", "Table 8.18", "Table 8.19", "Table 8.20", "Table 8.21", "Table 8.22", "Table 8.23", "Table 8.24", "Table 8.25", "Table 8.26", "Table 8.27", "Table 8.28", "Table 8.29", "Table 8.30", "Table 8.31", "Table 8.32", "Table 8.32", "Table 8.32", "Table 8.33", "Table 8.33", "Table 8.34", "Table 8.34", "Table 8.35", "Table 8.35", "Table 8.36", "Table 8.36", "Table 8.37", "Table 8.37", "Table 8.38", "Table 8.38", "Table 8.39", "Table 8.39", "Table 8.40", "Table 8.40", "Table 8.41", "Table 8.41", "Table 8.42", "Table 8.42", "Table 8.42", "Table 8.43", "Table 8.43", "Table 8.44", "Table 8.44", "Table 8.45", "Table 8.45", "Table 8.46", "Table 8.46", "Table 8.47", "Table 8.47", "Table 8.48", "Table 8.48", "Table 8.49", "Table 8.49", "Table 8.50", "Table 8.50", "Table 8.51", "Table 8.51", "Table 8.52", "Table 8.52", "Table 8.53", "Table 8.53", "Table 8.54", "Table 8.54", "Table 8.55", "Table 8.55", "Table 8.55", "Table 8.56", "Table 8.56", "Table 8.56", "Table 8.57", "Table 8.57", "Table 8.58", "Table 8.58", "Table 8.59", "Table 8.59", "Table 8.60", "Table 8.60", "Table 8.60", "Table 8.61", "Table 8.61", "Table 8.62", "Table 8.62", "Table 8.63", "Table 8.63", "Table 8.63", "Table 8.64", "Table 8.64", "Table 8.64", "Table 8.65", "Table 8.65", "Table 8.66", "Table 8.66", "Table 8.66", "Table 8.67", "Table 8.67", "Table 8.68", "Table 8.68", "Table 8.69", "Table 8.69", "Table 8.70", "Table 8.70", "Table 8.71", "Table 8.71", "Table 8.72", "Table 8.72", "Table 8.73", "Table 8.73", "Table 8.74", "Table 8.74", "Table 8.75", "Table 8.75", "Table 8.76", "Table 8.76", "Table 8.77", "Table 8.77", "Table 8.78", "Table 8.78", "Table 8.79", "Table 8.79", "Table 8.80", "Table 8.80", "Table 8.81", "Table 8.81", "Table 8.82", "Table 8.82", "Table 8.83", "Table 8.83", "Table 8.84", "Table 8.84", "Table 8.85", "Table 8.86", "Table 8.87", "Table 8.87", "Table 8.88", "Table 8.88", "Table 8.89", "Table 8.89", "Table 8.90", "Table 8.90", "Table 8.91", "Table 8.91", "Table 8.92", "Table 8.92", "Table 8.92", "Table 8.93", "Table 8.93", "Table 8.94", "Table 8.94", "Table 8.94", "Table 8.95", "Table 8.95", "Table 8.96", "Table 8.96", "Table 8.96", "Table 8.97", "Table 8.97", "Table 8.98", "Table 8.98", "Table 8.98", "Table 8.99", "Table 8.99", "Table 8.100", "Table 8.100", "Table 8.100", "Table 8.101", "Table 8.101", "Table 8.102", "Table 8.102", "Table 8.102", "Table 8.103", "Table 8.103", "Table 8.104", "Table 8.104", "Table 8.105", "Table 8.105", "Table 8.106", "Table 8.106", "Table 8.107", "Table 8.107", "Table 8.108", "Table 8.108", "Table 8.109", "Table 8.109", "Table 8.110", "Table 8.110", "Table 8.111", "Table 8.111", "Table 8.111", "Table 8.112", "Table 8.112", "Table 8.113", "Table 8.113", "Table 8.114", "Table 8.114", "Table 8.115", "Table 8.115", "Table 8.116", "Table 8.116", "Table 8.117", "Table 8.117", "Table 8.118", "Table 8.118", "Table 8.119", "Table 8.119", "Table 8.120", "Table 8.120", "Table 8.121", "Table 8.121", "Table 8.122", "Table 8.122", "Table 8.122", "Table 8.123", "Table 8.123", "Table 8.124", "Table 8.124", "Table 8.125", "Table 8.12", "Table 8.125", "Table 8.126", "Table 8.126", "Table 8.126", "Table 8.127", "Table 8.127", "Table 8.128", "Table 8.128", "Table 8.128", "Table 8.129", "Table 8.129", "Table 8.130", "Table 8.130", "Table 8.131", "Table 8.131", "Table 8.132", "Table 8.132", "Table 8.133", "Table 8.133", "Table 8.133", "Table 8.134", "Table 8.134", "Table 8.135", "Table 8.135", "Table 8.136", "Table 8.136", "Table 8.137", "Table 8.137", "Table 8.138", "Table 8.138", "Table 8.139", "Table 8.139", "Table 8.140", "Table 8.140", "Table 8.141", "Table 8.141", "Table 8.142", "Table 8.143", "Table 8.144", "Table 8.144", "Table 8.145", "Table 8.145", "Table 8.146", "Table 8.146", "Table 8.147", "Table 8.147", "Table 8.148", "Table 8.148", "Table 8.149", "Table 8.149", "Table 8.150", "Table 8.150", "Table 8.151", "Table 8.151", "Table 8.152", "Table 8.152", "Table 8.153", "Table 8.153"], "figures": ["Figure 8.2", "Figure 8.3", "Figure 8.4", "Figure 8.5", "Figure 8.5", "Figure 8.5", "Figure 8.6", "Figure 8.6", "Figure 8.7", "Figure 8.7", "Figure 8.8", "Figure 8.9", "Figure 8.10", "Figure 8.11", "Figure 8.12", "Figure 8.12", "Figure 8.13", "Figure 8.13", "Figure 8.14", "Figure 8.15", "Figure 8.15", "Figure 8.15", "Figure 8.16", "Figure 8.16", "Figure 8.17", "Figure 8.17", "Figure 8.18", "Figure 8.19", "Figure 8.20", "Figure 8.21", "Figure 8.22", "Figure 8.23", "Figure 8.24", "Figure 8.25", "Figure 8.26", "Figure 8.26", "Figure 8.27", "Figure 8.27", "Figure 8.28", "Figure 8.28", "Figure 8.29", "Figure 8.30", "Figure 8.31", "Figure 8.32", "Figure 8i", "Figure 8.33", "Figure 8.33", "Figure 8A", "Figure 8.34", "Figure 8A", "Figure 8.35", "Figure 8i", "Figure 8.36", "Figure 8.36", "Figure 8A", "Figure 8.37", "Figure 8A", "Figure 8.38", "Figure 8.39h", "Figure 8.39", "Figure 8.39", "Figure 8.40", "Figure 8.40", "Figure 8.41", "Figure 8.41", "Figure 8.42", "Figure 8.42", "Figure 8.43", "Figure 8.43", "Figure 8.44", "Figure 8.44", "Figure 8.45", "Figure 8.45", "Figure 8.46", "Figure 8.46", "Figure 8.47", "Figure 8.47", "Figure 8.48", "Figure 8.48", "Figure 8.49", "Figure 8.49", "Figure 8.50", "Figure 8.50", "Figure 8.51", "Figure 8.51", "Figure 8.52", "Figure 8.52", "Figure 8.53", "Figure 8.53", "Figure 8.54", "Figure 8.54", "Figure 8.55", "Figure 8.55", "Figure 8.56", "Figure 8.56", "Figure 8.57", "Figure 8.57", "Figure 8.58", "Figure 8.58", "Figure 8.59", "Figure 8.59", "Figure 8.60", "Figure 8.60", "Figure 8.61", "Figure 8.61", "Figure 8.62", "Figure 8.62", "Figure 8.63", "Figure 8.63", "Figure 8.64", "Figure 8.64", "Figure 8.65", "Figure 8.65", "Figure 8.66", "Figure 8.66", "Figure 8.67", "Figure 8.67", "Figure 8.68", "Figure 8.68", "Figure 8.69", "Figure 8.69", "Figure 8.70", "Figure 8.70", "Figure 8.71", "Figure 8.71", "Figure 8.71", "Figure 8.72", "Figure 8.72", "Figure 8.73", "Figure 8.73", "Figure 8.74", "Figure 8.74", "Figure 8.75", "Figure 8.75", "Figure 8.76", "Figure 8.76", "Figure 8.77", "Figure 8.77", "Figure 8.78", "Figure 8.78", "Figure 8.79", "Figure 8.79", "Figure 8.80", "Figure 8.80", "Figure 8.81", "Figure 8.81", "Figure 8.82", "Figure 8.82", "Figure 8.83", "Figure 8.83", "Figure 8.84", "Figure 8.84", "Figure 8.85", "Figure 8.85", "Figure 8.86", "Figure 8.86", "Figure 8.87", "Figure 8.87", "Figure 8.88", "Figure 8.88", "Figure 8.89", "Figure 8.89", "Figure 8.90", "Figure 8.90", "Figure 8.91", "Figure 8.91", "Figure 8.92", "Figure 8.92", "Figure 8.93", "Figure 8.93", "Figure 8.94", "Figure 8.94", "Figure 8.95", "Figure 8.95", "Figure 8.96", "Figure 8.96", "Figure 8.97", "Figure 8.97", "Figure 8.98", "Figure 8.98", "Figure 8.99", "Figure 8.99", "Figure 8.100", "Figure 8.100", "Figure 8.101", "Figure 8.101", "Figure 8.102", "Figure 8.102", "Figure 8.103", "Figure 8.103", "Figure 8.104", "Figure 8.104", "Figure 8.105", "Figure 8.105", "Figure 8.106", "Figure 8.106", "Figure 8.107", "Figure 8.107", "Figure 8.108", "Figure 8.108", "Figure 8.109", "Figure 8.109", "Figure 8.110", "Figure 8.110", "Figure 8.111", "Figure 8.111", "Figure 8.112", "Figure 8.112", "Figure 8.113", "Figure 8.113", "Figure 8.114", "Figure 8.114", "Figure 8.115", "Figure 8.115", "Figure 8.116", "Figure 8.117", "Figure 8.117", "Figure 8.118", "Figure 8.119", "Figure 8.120", "Figure 8.121", "Figure 8.122", "Figure 8.123", "Figure 8.124", "Figure 8.125", "Figure 8.125", "Figure 8.126", "Figure 8.126"], "page_range": [425, 821]}
{"section_path": "8.3.3 State Diagrams", "start_heading": "8.3.3 State Diagrams", "content": "Section 8.3.3, \"State Diagrams\" Normative Shall Policy Engine The state diagrams defined in are and define the operation of the PNoowtee:r Delivery. These state diagrams are not inFtiegnudreed 8 t.o1 r2e7p Olaucetl ain wee ollf wStraittteesn and robust design. <Name of State> Actions on entry: “List of actions to carry out on entering the state” Actions on exit: “List of actions to carry out on exiting the state” Power (VI) = “Present power level” PD = “attachment status” Figure 8.127, \"Outline of States\" shows an outline of the states defined in the following sections. At the top there is the name of the state. This is followed by \"Actions on entry\" a list of actions carried out on entering the state. If there are also \"Actions on exit\" a list of actions carried out on exiting the state, then these are listed as well; othe- rwise, this box is omitted from the state. At the bottom the stSaotuursc oe fP PoDrt is listed: Sink Port - “Power\" which indicates the preseAnttta ocuhtmpuent tpower for a Attached or iDneptuatc hpeodwer for a. “PD\" which indicates the present status either \" \", \" \", or \"unknown\". Transitions from one state to another are indicated by arrows with the conditions listed on the arrow. Where there are multiple conditions, these are connected using either a logical OR \"|\" or a logical AND \"&\". In some cases, there are transitions which can occur from any state to a particular state. These are indicated by an arrow which is unconnected to a state at one end, but with the other end (the point) connSeocuterdc et oP othrte finSailn skt aPtoer.t Figure 8.128, \"References to states\" In some state diagrams it is necessary to enter or exit from states in other diagrams (e.g., DFP oUr FP state diagrams). indicatSeosu hrcoew P sourtch rSeifnerke Pnocrets are made. The reference is indicated with a hatched box. The box contains the name of the state andF wighuerteh 8e.r1 t2h9e, \"sEtaxtaem isp lae of st oarte refe. rIet nhcaes walistoh bceoennd intieocness\"sary to indicate conditional entry to either or Fstigauter ed i8a.1gr3a0m, \"sE. xTahmisp ilse aocfh siteavteed rbeyf etrheen ucsee w oift ha tbhuel lseatmede leisntt riny daincda teinxigt \"the preconditions (see example in ). It is also possible that the entry and return states are the same. indicates a state reference where each referenced state corresponds to either the entry state or the exit state. Figure 8.128 References to states <Name of reference state> (<DFP | UFP>) Figure 8.129 Example of state reference with conditions Hard Reset: - Consumer or Consumer/Provider -> PE_SNK_ - Provider/Consumer in Source role -> PE_SRC_ Figure 8.130 Example of state reference with the same entry and exit <Name of reference state 1> or <Name of reference state 2> (<DFP | UFP>) Timers are included in many of the states. Timers are initialized (NseotR toes tphoenirs setTairmtinerg condition) and run (timer is counting) in the particular state it is referenced. As soon as the state is exited then the timer is no longer active. Where the timers continue to run outside of the state (such as the ), this is called out in the text. TimeSoeuntdse orfR tehsep toimnseerTs iamree rlisted as conditions on Mstaatye transitions. SenderResponseTimer The is a speciaFl icgausree, a8s.1 i3t 1, \"Se bned esrtRopesppeodn asenTdi mstearr tPeodl ifcryo mEn oguintes iSdtea tthe eD siatagtreasm in\" which it is used. To allow this to be done without ovePro-cliocmy Epnligcianteing the staCtheu dnikaignrga mLasy, etrhe is described with its own state diagram ( ). The control of this Timer is shared between the and the. Should Conditions listed on state transitions will come from one of three sources and, when there is a conflict, be servicedM ines tshaeg efollowing order: Policy Engine Protocol Layer Message Message 1) and related indications passed up to the from the ( sent; received etc.). Policy Engine 2) Events triggered within the e.Dg.e, vtiimcee Pro tliimcye Mouatnsa.ger Local Policy Device Policy Manager USB-C Port Control 3) Information and requests coming from the relating either to, or to ® Note: other modules which the controls such as power supply and. Message Discarded Message PTrhoet ofoclolol Lwaiynegr state Sdeiacgtiroanm 6s.1 a2r.e2.n3o, \"tP inrotetoncdoeld L taoy ecro vMeers asallg peo Rsescibelpet icoonr\"ner cases that could be encountered. For example, where an outgoing AMS is, due to an incoming by the Mess a(sgeee ) it will be necessary for the higher layers of the system to handle a retry of the that was being initiated, after first handling the incoming. Figure 8.131, \"SenderResponseTimer Policy Engine State Diagram\" Policy Engine Source Port Sink Port below shows the state diagram for the in a F iogru ar e 8.131 S.e Tnhdee froRlleoswpionng sseeTctiimonesr dPeoslcirciyb eE nogpienrea tSiotant ien D eiaacghr oafm the states. Power-up | SenderResponseTimer started Hard Reset | from within Policy Engine State | SenderResponseTimer stopped on exit from Policy Engine State | Start_SRT requested from Chunking Layer Stop_SRT requested from Chunking Layer SRT_Running SRT_Stopped Actions on entry: Actions on entry: Zero SR_Timer Stop Incrementing SR_Timer1 Start Incrementing SR_Timer1 SR_Timer1 reached maximum count Policy Engine informed SRT_Expired Actions on entry: Inform Policy Engine of SenderResponseTimer timeout 1) The SR_Timer is regarded as the mechanism within the SenderResponseTimer state diagram that implements the SenderResponseTimer. SRT_Stopped Shall SenderResponseTimer Hard Reset Policy EngineShall The State be the starting state for the either on power up or after a Policy E. Onngi ennetSrhy atoll this state the SRT_Runn ing stop incrementing the SR_Timer. The- Sende trrRanessiptioonns etoT timhee r State: Policy Engine - When the is starCtehdu nfrkoimng w Liatyheinr a state, or 8.3.3.1W.1h.e2n a Start_SRT i s S rReqTu_eRstuedn fnroinmg t hSet ate. SRT_Running SenderResponseTimer Shall On e- ntry to the State the state machine : - Set the SR_Timer to zero SenSdtearrRt eruspnonninsge TSiRm_Teirmer. Shall SRT_Expired The- state machine transition to the State: SenWdehreRne sthpeo nSRse_TTiimmeerr reaches its maxSihmaullm count SRT_Stopped The- SenderRe ssptaotnes meTaicmhienre transition to the Policy Engine State: - When the is stopCpheudn kbiyn egx Litaiynegr a state, or When a Stop_SRT is requested from the SRT_Running SenderResponseTimer Shall Policy Engine SenderResponseTimer On entry to the State the state machine Inform of Policy EngineShall timeout SRT_Stopped The- Policy t Ehenng itnreansition to the state: When the has been informed. Figure 8.132, \"Source Port State Diagram\" Policy Engine Source Port below shows the state diagram for the in a. The following sections describe operatioFnig iun reea c8h.1 o3f2 th Seo sutractees P.ort State Diagram Hard reset signalling received Start PE_SRC_Transition_to_default PE_SRC_Hard_Reset_Received A S Intc a it Ptri i Do t a n IP l =mi Ps S z o CeHo pw o n la a i ne r n ce nrd idn t eR = / t s cer E t D ty s xa eee: pr dft t l /aT iN ncui im o oI ttR t Ce ( Ce or 5s onVp nt)o nr on a er cs c te teT dimer A R s R R Ruc e e e opt q s q li eepu uo tl tn e e y ols ss o Ht t D co D Da a Fn r le e P de v vH an i iR Wc c nt ee er dsy P P e t: o o utsl l ri i nc ctoy y o vM M ffS a a Van nf Cea a O5g g NVe e Nr r v t tio oa r sve eSq ta u Pfe oe 0s rVt t p Do aw tae r Power source at default A R R Stc e e at s s ri e eo tt t n S C Ps wa r o aopn pts o SCe c oon o uut lr r n Ly ct a e: e y Sr eP tarE rt_ TS iR mC e_ rS (t oa nr lt yu ap fter Swap) Power = DefauIt (0V or 5V) or Implicit Contract PSHar td imRe es oe ut tTimer A R Inc e ft q oi uo rmn ess t Po D rn oe e tv ox i ccit oe: lP Lo al yic ey r M Haa rn da g Re er s eto t ctu or mn p o len t V eCONN SwapP Sr oo ut ro cc eo Sl tL aa ry tTer imRe es re tt i4 m| eout PD = Connected/not Connected Power = r Pi Dsi n =g n/ ofa t l Cli on ng n t eo c d tee dfault (5V) Actions on entry:PE_SRC_Discovery (SourceCapa Hb ail ri (t dy n RT No ei t o sm p R ee r te Cer sv o pt i ui oom nnu te ss eo el ry Tu >Pt im & D ne H CC r aoa t rp n i dms n RC e e eo c o su t u een t tdt C&6e o r & u > n tn 1C )apsCount1) | Initialize and run SourceCapabilityTimer EPR CapaE bP leR & M So PdH D Rea e Mr &vd i o c R R de e ee qP s &uoe e lt Ei scr Pte y RMq M _u e Rae s ens s qt a a ugf gr ee eo sr rm t | e M ce ei sv se ad g e| received PSHar td imRe es oe ut tTimer Power = De Pfa Du =lt n( o5 tV C) oo nr n Im ecp teli dcit Contract Actions P onE _ eS nR trC y_ :Hard_Reset (So Cu ar pce sCC oap ua nb teil ri t (cid:148)y nT Cim ape sr C t oim une to 1u )t & (withouC ta p Ga ob oi dli Ct Rie Cs ) m &e ns os ta pg re e s se en nd tli yn g P Dfa i Cl ou nre n ected6 PE_SRC_Disabled Generate Hard Reset signalling Actions on entry: Initialize and start NoResponseTimer Disable Power Delivery Start PSHardResetTimer PE_SRC_Send_Capabilities Increment HardResetCounter Power = DefauIt (5V) Actions on entry: PD =not Connected PE_SRC_Wait_New_Capabilities ImPo pw lie cr it = /E D xe pf la icu iI tt C( o5 nV t) r o ar c t R Ine Sq Pu Res Mt p or de es Se en nt dso Su or uc re c c ea _Cp aa pb ail bit ii le its i efr so Mm e sD se av gi ece Policy Manager A Wc at ii to fn os r o nn e e wn Str oy u: rce Capabilities9 Source capability PD = Connected/not Connected SenderResponseTimer timeout I I Inn f Gc E r oP e oR m d M Cen Ro t Cd C e ra e S p ce s en C ivd o e uE dnP :tR e_ rS (o ou pr tc ie o_ nC aa lp )1abilities Message Hardn RNo eot s Rp eer te Cspv oi o uo n nu s ts eel ry T i >P m D ne HC r a o t rn im dn Ree eoc st ue etd t & C6 o& unt1 Pow Pe Dr = = C D onef na eu cI tt e ( d5V) Po( lf ir coc ymh Ma Dn ag e ne v ai gc ee r ) - - - s r ineto is tp e iat N lH io zaR er e d as nRp deo s n re us te nCT o Si u em n ne t der er r a Rn ed sp C oa np ss eC To iu mn ete rr Power = DefauIt (5V) or Implicit/Explicit Contract PD = Connected/not Connected (n R Wo e E ajex itcp t ml mic ei e st ss C aso a gn g ee t sr esa e nc n tt ) t& | ReE Cjx e op c nl ti tmc ri at e cC s tso Ian ngt ver a a s lc ie dt n 4& t & InI En P S RP R M M odo ed Ee P R Re _q Ru ee qs ut eM ste s Ms ea sg se a r ge ec re eiv ce ed iv | ed Np or Rev ei so Hpu o as n rly ds e RP T eD i sm eC to e Cn r o n t uie m nc tt ee od u6 t& & > nHardResetCount PE_SRC_Capability_Response Request can’t be met | PE_SRC_Negotiate_Capability A S S l Cae e oc tn nt nei d d r to r n fR W ars ce oa to j m ie in t sc m t te sh mn te e it s l er P ls sy va os: ag wa leg ie de i rf i Rrf e er q se euq reu vse ets c at o nc u da ln d p’ t rb eb e se em m ne te t t frR oe mq u Pe os wt em r e Rt e l sa ete rvr e A G - - - I mfc e C C C ett t hoa a ti Do,n n u e bn ’ le stb d us v ibe n ti bo ec m k ten e hm r e m ee P et e n o sqett l it ui nr c l ey kay s: t stM e tfr ioa l f ln rr ra o O eg m p qe e u r P r i e o rav ew tia sne l mu gr a R oCt ruei eo s r en r per oo v n wf e t s eoi rn r (k O “ Cr pe aeq pru a ate bis n ilt g i: t yP o Mw ise mr c aa tcn h b ”e ) ErrorRecovery this information will be passed to Device Policy Manager4 Power = ED Pxe Dpf a l =iu c CiI t ot C n(5 o nV n e) t c r to a er c d tI mplicit/ (In SPR Mode & Request Message) | Power = DefauIt ( P5 DV ) = o Cr o I nm np el cic teit d/Explicit Contract (In EPR Mode & EPR_Request Message) Request can be met (ReE jex cp tl i mci et s C so an getr sa ec nt t & PE_SRC_Transition_Supply C Won at ir ta mct e s st si all g v ea sl eid n) t | Protocol Error A Sec nti do n As c co en p e t n mtr ey s: sage (within tReceiverResponse) Request Device Policy Manager to transition Power Supply Actions on exit: Send PS_RDY message Power = transition PD = Connected Power supply ready PE_SRC_Ready EPR_Keep_Alive Message PE_SRC_EPR_Keep_Alive Actions on entry: (In SP( Rf r MoS m oo du D er c e &e v i Gc ca eep t P _a Sob oli i ul ci ryt cy M e c _ah Cna an a pgg Mee r e) s | sage) | A N I In nc o i it t t ti i i io f a ayn l l i is P z z e ero o n a at n noe d dcn o t r rr l u u y L n n: a y D Se oisr uc ro o cf v e e e Pn r Pd Id S o Cef on A mtiM t myS T T8 i im me er r7 10 EPR_Keep_Alive_Ack Sent Send P E owPR e P_ rK D =e =Ee xp Cp_ oA l nil c ni iv ete cC_ tA o enc dk tr M ace ts sage (In EPR Mode & EPR_Get_Source_Cap Message) Initialize and run SourceEPRKeepAliveTimer11 PE_SRC_Get_Sink_Cap SoS uo ru cr ec Ee PP RP KSC eo em pAm liT veim Tie mr eti rm tie mou eot u| t A I Pf rc t ot hi to e on cSs oo lo u Ln r ac e yex e ii rst : ti hn ait nia tt hin eg f ia rn st A MM eS s st ah ge en in no at nif y A t Mh Se frg oe mt s i Dn ek v c ica ep Pab oli il cit yi e Ms ar neq agu ee rs 1t 2 A Ifc St Pio Rn Ms o on d ee n catr py a: bilities requested send will follow8 Get_Sink_Cap Message If EPR Mode capabilities requested send EPR_Get_Sink_Cap Message Power = Explicit Contract Initialize and run SenderResponseTimer PD = Connected (SPR Sink Capabilities requested Actions on exit: & Sink_Capabilities Message) | Pass sink capabilities/outcome to Device Policy (EPR Sink Capabilities requested Manager & EPR_Sink_Capabilities Message) | (In EPR Mode & Get_Source_Cap Message) | SenderResponseTimer timeout Power = Explicit Contract (In SPR Mode & EPR_Get_Source_Cap MessageS)ource capabilities PD = Connected message sent PE_SRC_Give_Source_Cap Actions on entry: Get present Source capabilities from Device Policy Manager Send Capabilities message (based on Device Policy Manager response): - If Get_Source_Cap Message received send Source_Capabilities Message. - In EPR_Get_Source_Cap Message received send EPR_Source_Capabilities Message Power = Explicit Contract PD = Connected CapsCounter Optional SourceShall Source_CapabilitiesMessage SourceCapabilityTimer 1) Implementation of the is. In the case where this is not implemented the continue to send Sink Vsa elaidch time the times out. Source Capabilities 2) Since the is required to make a request from the offered capabilities the expected transition is via \"Request can be met\" unless the havNee cghoatinagteedd since the last offer. Source Sink Valid 3) “Contract Invalid\" means that the previously H avrodlt aRgeese atnd Current values are no longer included in the 's new Capabilities. If the fails to make a Request in this case, then Power Delivery operation is no longer possible and Power Delivery mode is exited with a. New Source tSwapSourceStart Source_CapabilitiesMessage 4) After a Power Swap the is required to wait an additional before sending a Connected. This delay is not rPeoqrut iPraedrt wnehren first starting up a system. Port Partner Connected Detach 5) PD is defined as a situation when the s are actively communicating. The s remain PD Port Partn earfter a Swap until thCeorne nise cat etrdansitionH taor Dd iRsaesbelted or the connector is able to identify a. Attached USB Type-CError Recovery 6) s are no longer PD after a, but consideration needs to be given as to whether there has beenD ai sPcDo CvoenrnIdeectniotnit ywThiimle ethre Ports have been VCONN S toou prcreevent unnecessary Ca ble Plug. GoodCRCMessage Discover IdentityCommand 7) The is run when this is a and a PD Connection with a needs to be establiSsehcetdio in.e 5..n7o, \" Collision A voidance h\"aSs eycettio bne 6en.6.r1e6c,e \"iCvoeldli sinio rne Aspvooindsaen tcoe aT imers\" Section 6.10, \"Coll.ision Avoidance\" 8) See PE_SRC_Wait_New_Capabiliti,e s Device Policy ManagerShould and Source. Capabilities Should Source Capabilities Source Capabilities 9) In the State the either decide to send no further or send a different set of. Continuing to send the same set of couldSo ruerscueltP iPnS aC loivmem loTcikm seitruation. Explicit Contract SPR PPSAPDO Source SPR PPS SourcePPSCommTimer 10) The is only initialized and run when the present is for an. s thSaot udroc neEoPt sRuKpepeoprAt liveTime dro not need to implement the Source EPR M.ode EPR Mode SourceEPRKeepAliveTimer 11) The is only initialized and run when the is in ; Sources that do not support do not nSeiendk tCoa ipmapblielimtieesnMt tahye. Source EPR Mode 12) Either SPR or EPR be requested, regardless of whether or not the is currently operating in 8.3.3S.2PR.1 or. PE_SRC_Startup State PE_SRC_StartupShall SourcePolicy Engine Hard Reset Policy EngineShall CapsCounter Protocol Layer be the starting state for a either on power up or after a. On eNnottrey: to this state the Protocol Lay er reset the Messag eaInDdC roeusentt ethre Mess.ageID Section 6.12.2.3, \"Protocol Layer Message Reception\" Resetting the will also reset the and stored (see Policy EngineShall PE_SRC_Send)_.Capabilities The- Proto ctroal nLsaiytieorn to the PE_SRC_ Ssttaatret:up When the reset has completed if the state was entered due to the - system firsStw sataprStoinugr ucepS.tartTimer PE_SRC_Startup Power Role Swap When the times out if the state was entered as the result of a Note: Shall. PE_SRC_Startup Source_CapabilitiesMessage Attached Sources remain in the state, without sending any s 8.3.3.2.u2ntil a plug is PE_SR.C_Discovery State PE_SRC_Discovery Policy EngineShall SourceCapabilityTimer Source_CapabilitiesMessage On entry to the state the initialize and run the in ordePr otloic tyr iEgnggeirn seeSnhdainllg a PE_SR C_Send_.Capabilities The- Sourc eCap atrbainlistiytTioimn teor the CapsCounter n sCtaatpes wCohuenn:t PoliTcyh eE ngineMayOptionally times oPuEt_ aSnRdC _Disabled ≤. The- Port P artn er go to the Connected state when: - The SourceCsa paraeb niloitty pTriemseenrtly PD - And tChaep sCounter nCapsCount times out PoliAcyn Ed ngineShall > PE_SRC_.Disabled The- Port P artne rgo to the Connec stetadte whSeonu:rce Port Attached Attachment The s have not been PD (the remains to a Port it has not had a PD Connection with during this ) - NoResponseTimer - And the HardResetCounter timneHsa orudtR esetCount Note: And the PE_SRC_Disabled > Attached. Policy Engine Detached Detach Re-attach In the state the device is assumed to be unresponsive. The 8.3.3.2.o3perates as if t hPeE d_eSvRiceC i_sS end_Ca upnatilb siulciht iteimse S atsa at e / is detected. Note: PE_SRC_Soft_Reset This sPtaEt_eS RcaCn_S been edn_Ctearpeadb friloitmie tshe Policy Engin estSahtae.ll Device Policy Manager Policy EngineShall Protocol Layer Message On entry to the Policy En sgtianteeS thhae ll request the present Port capabilities from the. The then request the to send a capabilities con- tainingS tohuerscee c_Caappabaibliitliietsie. sThMee ssage So urce requSePsRt: Mode - A EPR_Source_Capab ilitiesMe isfs tahgee S iosu irnc e EPR o Mrode PoliAcyn E ngineShall Ca pifs tChoeu nter is in. TheG oodCRCMess age then increment the Policy EngineS (hifa ilml plemented). If a - NoRe sisp roencseeivTeimd, etrhen the : - Stop the HardResetCounte.r CapsCounter Note: Reset tHhae rdResetCounterSha allnd to zero. Shall Hard Reset The only be set to zero in this state and at power up; its value be - maintained during aS enderResp.onseTimer SIonuitricaeli_zCea apnadb riluinti ethseM essage. GoodCRCMessage Sink RequestMessage tSenderResponse Once a has been received and acknowledged by a, the is requPiroeldic yto E tnhgeinn eseSnhda lal P wE_itShRinC_ Negotiate_Capabi.lity The- Reques tMess atrgaensition to the Sink Source state when:SPR Mode - A EPR_Re questMe isss raegceeived from the anSdin tkhe S iosu orpceerating in EPR o Mrode PoliAcyn E ngineShall is receiPvEe_dS RfrCo_mD itshceo very and the is operating in. The- Proto col La ytrearnsition to the Message state when: Connected Message The Sinindkic Paoterst that the has not been sent and we are presently not. This is part of the Capabilities sending process whereby successful sending indicates Policcoy nEnnegcitnieonS htoa lal PD. PE_SRC_Hard_Reset The- Sende rRes ptroannsseiTtiiomne tro the state when: USB Default Operation The times out. In this case a transition back to is required. Wh- en: Port Partner Connected Source Port Attached Attachment The s have not been PD (the remains to a Port it has not - had a PDN CooRnensepcotniosne Twiimthe druring this ) - And the HardResetCounter timneHsa orudtR esetCount PoliAcyn Ed ntghien eShall >. The- doP Eo_nSeR oCf_ tDhies cfoolvleorwying: - Transition to the PE_SRC_Disabled state. Transition to the state. Note: Attached Policy EngineShould Detached Detach Re-attach That in either case the device is assumed to be unresponsive. The operate Policya Esn igf itnhee Sdheavlicle is Erro urnRteilc souvcehr ytime as a / is detected. The- Port P artne rgo to the staCtoen wnehcetned: Source Port Attached Attachment The s have previously been PD (the remains to a Port it has - had a PDN CooRnensepcotniosne Twiimthe druring this ) - And the HardResetCounter timneHsa orudtR.esetCount 8.3.3.2A.n4d the PE_SRC_N > egotiate_Capa.bility State PE_SRC_Negotiate_Capability Policy EngineShall Device Policy Manager AttachedSink Device Policy ManagerShall On entry to the state the ask the to evaluate the Request from the. The response from the be one of the follo- wing: - The Request can be met. - The Request cannot be met PoliTcyh eE nRgeiqnueeSsht acloluld be met later frPoEm_S tRhCe_ PTorwanesri Rtieosne_rSvuep.ply The- transition to the state when: PoliTcyh eE nRgeiqnueeSsht aclaln be met. PE_SRC_Capability_Response The- transition to the state when: - The Request cannot be met. 8.3.3.2O.r5 the Request c aPnE b_eS mReCt _laTterra fnrosmit tihoe nPo_Swuerp Rpelsyer Svet.ate Policy EngineShall PE_SRC_Transition_Supply The be in the state while the power supply is transitioning from one power to anothePrE._SRC_Transition_Supply Policy EngineShall Protocol Layer AcceptMessage Device Policy Manager Shall On entry to the state, the request the to send an and inform the that it transition the power supply to the Requested pNoowtee:r level. If the pPoEw_eSrR sCu_pTpralyn issi tciuornr_eSnutplyp olyperating atP tohleic rye EqnugeisnteedS hpaolwl er no changeP rwoitlol cboel nLaecyeesrsary. PS_RDYMessage On exit from the state the request the to send a Poli cy Engine. Shall PE_SRC_Ready The- Devic e Polic tyr aMnasnitaiogner to the Policy En sgtiantee when: PoliTcyh eE ngineShall informPsE _tShRe C_Hard_Reset that the power supply is ready. The- Protoco l Error transition to the state when: 8.3.3.2A. 6 PocEcu_rSsR. C_Ready State PE_SRC_Ready SourceShall Negotiation Shall Sink Device Policy Manager In the state the PD be operating at a stable power with no ongoing. It respond to requPeEst_sS RfrCo_mRe tahde y, eventSso furorcme Sthhea ll Protocol La.yer Atomic Message Sequence AMS PE_SRC_Ready Protocol Error Soft Reset On enStercyt itoon t 8h.e3.3.4.1, \"SOP Sour sctea Pteo trht eS oft Rese t and Pnrootitfoyc tohl eE rror State Diag roaf mth\"e end of the Protocol L (ayer). If the transitionA iMntSoS hall Not is the result of Message that has not caused a (see ) then the notification to the of the end of the be sent since there is a to be processed. PE_SRC_Ready VCONN Source Cable Plug Policy EngineShall On entry to the state if this is a which needs to establish communication with a -, the :DiscoverIdentityTimer GoodCRCMessage Discover IdentityMessage Initialize and run the (no response yet received to P E_SRC_R)e.ady Explicit Contract SPR PPSAPDO Policy Engine Shall On entry to the state if the current is for an, then the - do the following: SourcePPSCommTimer InitializPeE a_nSdR Cru_Rne tahde y Expli.cit Contract EPR Mode Policy EngineShall On entry to the state if the current is for, then the do the - following: SourceEPRKeepAliveTimer InitializeP aEn_dS RruCn_R theae dy Source. AMS Policy EngineShall Protocol Layer Message AMS On exit from the, if the is initiating an, then the notify the P otlhicayt tEhneg fiinrestS hall in an wiPll Efo_SllRoCw_.Send_Capabilities The- Devic e Polic tyr aMnasnitaiogner to the Source Capabilities state when: - ThGee t_Source_CapMessage indicates that Source S PhRav Me ocdheanged or - A EPR_Get_Sourc e_CapMe isss raegceeived, and the S iosu irnc e EPR o Mrode PoliAcyn E ngineShall P iEs_ rSeRcCe_iNveedg,o atniadt teh_eC apabili tisy in. The- Reques tMess atrgaensition to the Source SPR Mode state when: - A EPR_Re questMe isss raegceeived, and the S iosu irnc e EPR o Mrode PoliAcyn E ngineShall is receiPvEe_dS,R aCn_dG tehte_S ink_Ca ips in. The- Devic e Polic tyr aMnasnitaiogner to the Sink Capabilities state when: PoliTcyh eE ngineShall asks fPorE _tShRe C_Hard_Reset. The- Sourc e transition to tShPeR PPS Source PstPaSteC owmhemnT:imer - The Source is opEerPaRt iMngo daes an Sou arncedE tPhRe KeepAliveTimer Timer times-out or PoliTcyh eE ngineS hisa ilnl and thPeE _SRC_EPR_Keep_Alive Timer times-out. The- EPR_K eepAl itvreanMsietsisoang teo the state when: PoliAcyn E ngineShall is recPeEiv_SeRd.C_Give_Source_Cap The- EPR Mo de tranGseitt_ioSno utorc teh_eC apMessage State when: - In SPR Mode and a EPR_Get_Sourc e_CapMe isss aregceeived or 8.3.3.2In. 7 and PanE _SRC_Disabled S tate is received. PE_SRC_Disabled Source Hard ResetSignaling In the state the PD supplies default power and is unresponsive to USB Power Delivery m8.e3ss.3ag.i2ng.8, but not to PE_SRC _Capab. ility_Response State Policy EngineShall PE_SRC_Capability_Response Sink Explicit Contract The enterI nthvea lid Hard Reset state if there is a Request received from the that cannot be met based on the present capabilities. When the present is not within the present capabilities it isP rEeg_SaRrdCe_Hd aasr d_Reset and a Policy E nwgiilnl ebSe htrailglgered. Protocol Layer On entry to the state the request the to send one of the following: - RejectMessage Explicit Contract Invalid - WaitM essage - if the request cannot be met or the present W aisi tMessag.eShall Not Explicit Contract Invalid - if the request could be met later from the Power Reserve. A be Polisceyn Etn igf itnhee Sphraesllent PE _iSs RC_Read.y The- Expl ticriatn Csoitniotrna ctot the state when: - ThReerjee icst aMne ssage and Explicit Contract Valid - A WaitM essage has been sent and the present is still or PoliAcy Engi neShall has been sent. PE_SRC_Hard_Reset The- Expl ticriatn Csoitniotrna ctot the state when: - TherRee ijse acnt Message and Explicit Contract Invalid Sink USB Default Operation The has been sent and the present is (i.e., the had to Polirceyq Eunegsitn ae nSehwal vlalue so instead wPeE w_SilRl Cre_Wtuarnit t_oN ew_Capabilities ). The- Exp ltircaitn Csoitniotrna tcot the state when: - ThReerjee icst nMoe ssage and - A WaitM essage has been sent or 8.3.3.2A. 9 hPaEs b_SeeRnC s_eHnt.ard_Reset State Policy EngineShall PE_SRC_Hard_Reset The- Hard Rese t transitionD teov itchee P olicy Manager state from any state when: - EPR Mod reequest Rfreoqmue stMessage or - IEnP R Capable and a SPR Mod e iEs PreRc_eRievqedu eosrtMessage PE_SR aCn_dH ianr d_Reset and an Policy Engine Shall is received. On e- ntry to the Ha srtda tRee tsheet Signaling : - request the generatioNn ooRf esponseTim er by the PHY Layer Note: initialiNzeo Ranedsp rounns tehTei merShall. - The PSH ardRe csoentTtiinmueer to run in every stateH uanrtdilR ite sise tsCtoopupnetde ror times out. Poliicnyi tEianlgizinee aSnhda rluln the PE_SRC_T arnadn sinitciroenm_teon_td tehfae ult. The- PSHa rdRes tertaTnismiteiorn to the state when: 8.3.3.2Th.1e 0 PE_SR tCim_Hesa orudt._Reset_Received State Policy EngineShall PE_SRC_Hard_Reset_Received The- Hard Res etSign taralinnsgition from any state to the state when: PE_S RC_Hard_ iRs edseette_cRteecde.ived Policy EngineShall On e- ntry to the PSHardResetTim setarte the : - initialize and run the NoResponseTimer Note: initialiNzeo Ranedsp rounns tehTei merShall. PolicyT Ehneg ineShall cPoEn_tSinRuCe_ Ttor arunnsi itnio env_etroy_d setafateu ultntil it is stopped or times out. The transition to the state when: - PSHardResetTimer 8.3.3.2Th.1e 1 PE_SR tCim_Tesr oaunt.sition_to_default State PE_SRC_Transition_to_default Policy EngineShall On e- ntry to the Device Policy Manager state the S hallH:ard Reset Section 7.1.5, \"Response to Hard Resets\" indicate to the that the power supply (see - ). - request a resDeetv oicfe t hPeo llioccya Ml haanradgwerare Port Data Role DFP VCONN request tPhEe _SRC_Transition_to_de ftaou slett the Policy Engi ntoe Shal alnd turn off. On e- xit from the Device Policy Manager state VthCOeN N : - request theP rotocol Layer Htoa rtudr Rne osent Poliicnyf oErnmgi ntheeS hall that thPe E_SRC_Star tius pcomplete. The- Devic e Polic tyr aMnasnitaiogner to the state when: 8.3.3.2Th.1e 2 PE_SRC _inGdeicta_tSesi nthkat_ Cthaep p oSwteart seupply has reached the default level. Policy Engine Device Policy Manager Shall AttachedSink In this state the, due to a request from the, request the capabilities from the PE._SRC_Get_Sink_Cap Policy EngineShall Protocol Layer Get_Sink_CapMessage Sink Capabilities Policy EngineShall On entry to the state the request the to send a - Get_ Sink_Cap inM oersdsaegr eto retrieve tDheev ice Policy Manag.e Trhe send: - A EPR_Get_Sin k_CapMe wsshaegne the Device Policy Ma rneaqgueersts SPR caEpPaRbi Cliatipeasb oirlities PoliAcyn E ngineShall S ewnhdeenr Rthees ponseTimer requests. The P E_SRC t_hGeent _sStianrkt _tChae p Policy Engine.Shall Device Policy Manager On exit from the state the inform the of the outcoPmoliec y(c EanpgaibnielitSiheas lolr response timeouPtE)_.SRC_Ready The- Sink C apab itlritaienssition to the Sink _sCtaatpea wbhileitni:esMessage - SPR Sink Capabilities were requested and a EPR_Sink_Capab ilitiesM eisss raegceeived or - EPR SenderResponse wTiemree rrequested and an is received or 8.3.3.2Th.1e 3 PE_SRC_W timaeist _oNute. w_Capabilities State Policy Engine Negotiate Explicit Contract Device Policy Manager In this state the has been unable to an and is waiting for new Capabilities fromP tohliec y EngineShall. PE_SRC_Send_Capabilities The- Devic e Polic tyr aMnasnitaiogner to the Source Capabilities state when: 8.3.3.2Th.1e 4 PE_SRC _inEdPicRat_eKs teheatp _Alive State have changed. PE_SRC_EPR_Keep_Alive Policy EngineShall EPR_KeepAlive_AckMessage On ePnotrliyc yto E tnhgei neShall PStEa_tSeR tCh_eR eady send a. The- EPR_K eepA tlrivaen_sAitcikonM teos sthaeg e state when: The has been sent. - PE_SRC_Give_Source_Cap Policy EngineShall Device Policy Manager On entry to the State the request the Policy Engine fSohr athlle current system cParpoatboicloitli eLsa.y er Source CapabilitiesMessage The then request the to send a containing these capabPioliltiiceys E. ngineShall The- Source_C apab sileintide:sMessage Get_Source_CapMessage - A EPR_Source_Capab ilitiesMe wsshaegne a EPR_Get_S ource_Ca isp rMeceessivaegde or PoliAcyn E ngineShall PE_SN wKh_eRne aad y is received. The- Sourc e Capa tbrailnitsieitsioMne tsosa tghee state when: The has been successfully sent. Figure 8.133, \"Sink Port State Diagram\" Policy Engine Sink Port below shows the state diagram for the in a. The following sections describe operationF iingu eraec h8.o1f3 t3he S sintakt ePso.rt State Diagram Hard reset signalling received Start PE_SNK_Transition_to_default Actions on entry: PE_SNK_Startup Request Device Policy Manager to request power Power Sink s R Si een tsk e P t t or a l ro tn c Ds ai at l i tHo an W R t oo l ed e tofa Uu Flt P and turn off VCONN at default A Rc et si eo tn Ps ro on to e cn ot lr y L: ayer EP( RH Mar wod Sd iRP( ote( hS e uS T & s rHi ADen r c na (ta eek EC r n _v EW do P Cs i Pcu aRia R Rt e pni _i e t So aPt PC se on boe Da r uT iltp O li(cid:148) ri icrT cm t e y in iei n eq m e H M _ su pr Ca e a Me ot arr nsi sd p emt t a iRi s a tgfm e i sbre e o ao os ie r nl gu e mo i s| ett tu e ) C 1 n t so&. o.| u m 7 tn |et s) s) a | ge A Inc foti ro mn P Ps or wo o etn o r ce =ox P rli D it L s: a i =ny g ne / or f a tH l Cla i onrd ng n R t eoe c s d te eet df ac uo lm t (p 5l Ve )te Power = P D De = Pf a PC Eu ro oI _t n t S( on0 NceV oc K lo t e _Lr d a D5 / ynV ie so) r cto RC or eoI vm sn eep n rtl e yic ci tt e C dontract requested by Get_Source_caps) Hard Reset complete Actions on entry: PE_SNK_Hard_Reset Wait for VBUS6 Power = Default (0V or 5V) or Implicit Contract Actions on entry: PD = Connected/not Connected Generate Hard Reset signalling. Increment HardResetCounter. VBUS6 present3 Power = DefauIt (5V) or Implicit/Explicit Contract PD = Connected/not Connected PE_SNK_Wait_for_Capabilities Actions on entry: Initialize and run SinkWaitCapTimer SenderR Tie msp eoo un tseTimer Powe Pr D = = D Ce ofa nu nl et c(5 teV d) /o nr o I tm Cp ol nic nit e cC to en dtract ((SPR Mode & Source_Capabilities Message) | (EPR Mode & EPR_Source_Capabilities Message received))1 PE_SNK_Evaluate_Capability Actions on entry: Reset HardResetCounter to zero. Ask Device Policy Manager to evaluate the options based on supplied capabilities, any Power Reserve that it needs, and respond indicating the selected capability and, Optionally, a “Capability Mismatch”. Power = DefauIt (5V) or Implicit/Explicit Contract PD = Connected Device Policy Manager Response received no Explicit Contract & (Reject message received | PE_SNK_Select_Capability Wait message received) Actions on entry: SenderResponseTimer Timeout S - e Rn ed q uR ee sq tu fe ros mt b pa rs ee sd e no tn c D ae pv ai bc ie li tP ieo slicy Manager response: - Optionally Indicate that other capabilities would be preferred (“Capability Mismatch”) Initialize and run SenderResponseTimer N Sew in kp Ro ew qe ur er se tq Tu imire ed r | Power = DefauIt P(5 DV =) o Cr o I nm np el cic ti et d/Explicit Contract SPR S oS uo ru cr ec _e C C( aS a pP p aR a b b iM li il to i itd eie e s s M& r ee sq su ae gs et )e |d & Timeout | Accept message received Explicit Contract & (EPR MODE & SinkPPSPeriodicTimer (Reject message received | EPR Source Capabilities requested & Timeout Wait message received) EPR_Source_Capabilities Message) PE_SNK_Transition_Sink Protocol Error Actions on entry: Initialize and run PSTransitionTimer Actions on exit: Request Device Policy Manager transitions sink power supply to new power (if required) Power = transition PD = Connected PS_RDY message received PE_SNK_Ready PE_SNK_Get_Source_Cap (EP(( RS P MR o M deo d &e E & P RS _o Su orc ue r_ cC e a Cp aa pb ail bit ii le its ie M s e Ms es sa sg ae g) e| ))1 A I I I IIn n n fn c i i Sit t Ett i ii ii a aa P no l ll kn Ri iiz zz s se ee M uo a aa o pn n nn d p d dde e on rr rr It n tu uur sin nny t F: i aS tD ah li i i sen s z t k c e S RR o i a onve ne lkq edr Pu I Srd Pe u wes S nnt aPT t t peii htm ry e siT oe eSr i d nm2 ii dn c( e ko T Gr En i4 m eP r te R _e r Sc K5e ie niv e ki p _n A Cg l a iW v pe a MTit i e) m se sr a8 ge7 ge frt o s mou Drc ee v ic ca ep Pa ob li il ci yti e Ms a r ne aq gu ee rst A I G I E Inf f Pc e S E it t R tPi P_ io _S aR R Gn o l ieMs Mu zt ero o _oc Sn d ade o ne ee _ uC d n c c ra at a c rpr p ep uy _a aM n: Cb b Se ai i el s pli is nt t Mai i de eg e es se s r r r s Re e a eq q g su u e pe e os s nt te e sd ed T s s ie e mn n ed d r PE_SNK_EPR_Keep_Alive A S Inec itnt ii ado l n iE zs P e Po R an o_ n wK de en e r rt e u r p =ny A: ESl xi ev pne ld i cM e ir te R s Ces osa npg toe ran cs teTimer ES Pin Rk _E KP eR epK Aee lip veA _li Av ce kT i Mm ee sr sT ai gm eeout A I if n c t tht hi eo e n S As in M o k Sn i s we x i in li lt i: ft oia lt loin wg. an AMS P t oh wen e P rn D =o =t Ei f Cxy p o t l nh ic ne i e tP cCr to o et dno tc rao cl tLayer that the first Message SPR SS oo uu rr cc ee _ C( CE aa rP p epR caa ebb M iii vllo eii ttd dii eee )s s |& Mre eq su se as gt eed & A P Poact s lii s co ySn os Mu o arn nc e ae P gx c oei a wt rp: ea Prb D i =l i =Et i x Ce p os l n/ io c niu ett cCc too enm dte ra t co t Device PD = Connected (SPR MODE & EPG Re _t G_S ei tn _k S_ inC ka _p C M ape s Ms ea sg se a | ge S min ek s c sa ap ga eb sil eit nie ts EP ER P RS _o Su or uc re c C e ra _ eCp caa epb ia vil ebit dii l )e i ts |i er se q Mu ee ss st ae gd e & SenderResponseTimer timeout PE_SNK_Give_Sink_Cap Actions on entry: Get present sink capabilities from Device Policy Manager Send Capabilities message (based on Device Policy Manager response): - If Get_Sink_Cap Message received send Sink_Capabilities Message. - In EPR_Get_Sink Cap Message received send EPR_Sink_Capabilities Message Power = Explicit Contract PD = Connected Source CapabilitiesMessage PE_SNK_Wait_for_Capabilities PE_SNK_Ready PE_SNK_Get_Source_Cap Protocol Error 1) s received in States other than, or SinkRequestTimerS choonusltdit Nuotet a P.ing (Deprecated)Message PE_SNK_Ready WaitMessage Ping (Deprecat 2) eTdh)e Message be stopped if a is received in the state since it represents the maximum time between requests after a which is not reset by a Har.d Reset Source vSafe0V vSafe5V Sink VBUS Source Hard Reset 3) During a the voltage will transition to and then transition to. s need to ensure that present is not indicated until after the has completed the process by detecting both of these transitions. DiscoverIdentityTimer VCONN Source Cable Plug GoodCRCMessage Discover IdentityCommand 4) The is run when this is a and a PD Connection with a needs to be establiSshinekdP iP.eS. Pneor iodicTim er has yet been received in response to aE xplicit Contract SPR. PPSAPDO Sink SinkPPSPeriodicTimer 5) The is only initialized and run when the present is for an. Sinsk that do noVtP sDupMpaoyrt PPSV dCoO nNoNt need to impleVmBeUnSt the. 6) A that is a use aFsa as tp Rrooxley Sfowr ap. Sink 87).3.3T.3o.b1e sent once, an d P oEnly_ SreNquKir_eSd tifa rtup State is supported by the. PE_SNK_StartupShall SinkPolicy Engine Hard Reset Policy EngineShall Protocol Layer be the starting state for a either on power up or after a. On eNnottrey: to this state the Protocol Lay er reset the Message.IDCounter MessageID Section 6.12.2.3, \"Protocol Layer Message Reception\" Resetting the will also reset the and stored (see Policy EngineSh)a.ll PE_SNK_Discovery O8n.3ce. 3th.3e r.2eset process c oPmEp_leStNesK, t_hDe iscovery S tate transition to the state. PE_SNK_Discovery SinkPolicy Engine VBUS In thPeo licy EngineShall state the PE_SNK_Wai wt_afoitrs_ Cfoarp abili ttoie bse present. The- Devic e Polic tyr aMnasnitaiogner to the VBUS state when: 8.3.3.3Th.3e PE_SNK i_nWdicaaitte_sf tohrat_ Cap haabs ibleietnie dse tSetctaetde. PE_SNK_Wait_for_Capabilities Policy EngineShall SinkWaitCapTimer On entry to the state the initialize and start the Policy EngineSh.all PE_SNK_Evaluate_Capability The- Sink SP tRr aMnosidteion to thSeo urce_CapabilitiesMessage state when: - The Sink is in EPR Mode and a EPR_Source_Capab ilitiesM eisss raegceeived or ThSei nkW aisi tiCna pTimer and an Policy Engine H isa rrde cReeisveetd. 8W.h3e.n3 t.h3e. 4 PE_S tNimKe_s Eovuta, tlhuea te_Capab iwliitlly p eSrtfoartme a. PE_SNK_Evaluate_Capability Sink Source_Capabilities Message Source Sink Attached STohuer ce state is first entered when the receives its first from the. At this point the knows that it is to and communicating with a PD capable. PE_SNK_Evaluate_Capability Policy EngineShall Device Policy Manager Source Capabilities Local Policy Device Policy ManagerShall OPonl iecnyt Eryn gtoin tehe state the request the Device Policy to eMvaanluaagteer tShhea slulpplied Policy Ebnasgeinde onC apabilities M. Tishme atch indicate to the the new power level required, selected from the present offered capabilities. The also indicate to the a if the offered power does not meet the devicPeo'lsi crye qEunigrienmeeSnhtasl.l PE_SNK_Select_Capability The- transition to the Device Policy Manager state when: 8.3.3.3A. r5esponse is re c PeiEve_dS fNroKm_ Stheel ect_Capability St.ate PE_SNK_Select_Capability Policy EngineShall Protocol Layer Message Device Policy Manager MessageShall On entry to the state the request the to send a response, based on the evaluation from the. The be one of the follo- wing: Source Capabilities A Request from the offered. - Source Capabilities Capability Mismatch A Request from the offered with an indication that another power level would be pSrPeRfe rMroedde ( RequestMessageSh ablilt set). When in EPR Mode a EPR_Re questM essage bSeh saelnlt. WhePno ilnic y EngineS hana ll Sende breR seesnpto.nseTimer The Policy Engine Shall initialize and runP tEh_eS NK_Transition_Sink. The- Accept Mess atrgaensition to the Source state when: PoliAcyn E ngineS hall is received froPmE_ SthNeK _Wait_.for_Capabilities The- Exp ltircaitn Csoitniotrna tcot the state when: - ThReerjee icst nMoe ssage in place anSodurce - A WaitM essage is received from theS ource or PoliAcy Engi neShall is received from PthEe_S NK_Re.ady The- Expl ticriatn Csoitniotrna ctot the state when: - ThReerjee icst aMne ssage in place anSdource - A WaitM essage is received from theS ource or PoliAcy Engi neShall is received from PthEe_S NK_Ha.rd_Reset The- SenderR espo ntrsaenTsiimtioenr to the state when: 8.3.3.3A. 6 PE_SNK ti_mTeroaunt oscictuiros.n_Sink State PE_SNK_Transition_Sink Policy EngineShall PSTransitionTimer Hard Reset Section 8.3.3.3.8, \"PE_SNK_Hard_Reset State\" Shall Device POonl iecnyt Mrya tnoa tgheer Sink state the initialize and run the (timeout will lead to a see and then request the Note: to transition the 's power sDupevpilcye t Poo tlhicey n Mewan paogwereSrh leovuelld. Not If there is no power level change the affect any change to the power supply.PE_SNK_Transition_Sink Policy EngineShall Device Policy Manager Sink On exit from the state the request the to transPiotiloicny tEhneg ineS'sh paollwer supply to the PnEe_wSN pKow_Reera ldeyvel. The- PS_RDY Messa tgreansition to the Source state when: PoliAcy Engine Shall is received froPmE _tShNeK _Hard._Reset The- Protoco l Error transition to the state when: 8.3.3.3A. 7 PocEcu_rSsN. K_Ready State PE_SNK_Ready SinkShall Negotiation Shall Source Device Policy Manager In the state the PD be operating at a stable power level with no ongoing. It respond toP Ere_SqNueKs_tRse farodmy the, events from the Policy EngineShoul.d On e- ntry to the Si sntkaRtee qasu tehsetT riemsuelrt of a wait the do the following: InitializPeE a_nSdN rKu_nR ethaed y VCO.NN Source Cable Plug Policy EngineShall On entry to the state if this is a which needs to establish communication with a -, then the Disc odvoe trhIed efonltloitwyTinimg: er GoodCRCMessage Discover IdentityMessage Initialize and run the (no response yet received to ). PE_SNK_Ready Explicit Contract SPR PPSAPDO Policy Engine Shall On entry to the state if the current is for an, then the - do the following: SinkPPSPeriodicTimer InitializPe Ea_nSdN rKu_nR tehaed y Sink. Fast Role Swap Policy EngineShall On entry to the state if the supports, then the do the follo- wing: Get_Sink_CapMessage Send a PE_SNK_Rea dy. Atomic Message Sequence AMS Policy EngineShall Protocol Layer Message AMS On exit from the state, if the transition is as a result of a DPM request to start a new Polic y( Engi)n tehSehna tlhle PE_ SnNoKti_fEy vtahleu ate_Capability that the first in an will follow. The- SPR Mo de traSnosiutriocne _tCoa tphaeb ilitiesMessage state when: - In EPR Mode and a EPR_Source_Capab ilitiesM eisss raegceeived or PoliIcny EngineSh aalnld an PE_SNK_Selec t_Capab iilsi tryeceived. The- transition to the Device Policy Manage srtate when: - A nSienwk Rpeoqwueers lteTvieml iesr requested by the or - A SinkPPSPeriodicTi mtimereout occurs or PoliAcy EngineShall timeouPtE o_cScNuKrs_.Give_Sink_Cap The- Get_Sink_ CapM tersasnasgietion to the state when: - EPR_Get_Sink _CapMes issa greeceived or Policy EngineShall is recPeEiv_SeNd.K_Get_Source_Cap The- Devic e Polic tyr aMnasnitaiogner to the staSteo uwrhcee nC:apabilities PoliTcyh eE ngineShall requePstEs_ SaNn Ku_pEdPaRte_ Koef ethpe_A rleimveote. The- SinkE PRKe etrpaAnlsiivteioTnim toe trhe state when: 8.3.3.3Th.8e PE_SNK_H taimrdeo_uRtse osuett. State Policy EngineShall PE_SNK_Hard_Reset The- PSTrans itionT tirmanersition to the state from any state when: - (HardResetCounter tinmHeasr oduRt)e saentdCount - (Hard Reset ≤ Device Policy Man))a |ger - EPR Mod reequest from or In EPR_S oanudrce_CapabilitiesMessage EPR (A)PDO  AnS ource_CapabilitiesMessa ge is received with an in object pGoest_itSioounrsc 1e…_C7a opr Message A is received that has not been requested using a Policy EngineM.ay PE_SNK_Hard_Reset The- SinkWait CapT timraenrsition to the state from any state when: Note: SinkWaitCap tiTmimese orut HardResetCounter nHardResetCount SinkShall Source If the times out and the is greater than the Note: HardR aessseutmCoeu thnatet rthe is non-responsive.Detach The is reset on a power cycle or. PE_SNK_Hard_Reset Policy EngineShall Hard ResetSignaling HardResetCounter On entry to the state the request the generation of by thPeo PliHcyY E Lnagyienre aSnhda lilncrement the PE_SNK_Transi.tion_to_default The- Hard Reset transition to the state when: 8.3.3.3Th.9e i sP cEom_SpNleKte._Transition_to_default State Policy EngineShall PE_SNK_Transition_to_default The- Hard Res etSign taralinnsgition from any state to state when: Hard ResetS ignaling is detected. Policy EngineShall PE_SNK_Transition_to_default PE_SNK_Hard_Reset When is received or transmitted then the transition from any state to PE_SNK_Transi.t iTohni_st sot_adteef caaunl talso be entPeorleicdy f Eronmgi ntheeS hall state. On entry to the Device Policy Manage srtate the SinkShall :  indicate to the that the transition to default  request a resDeetv oicfe t hPeo llioccya Ml haanradgwerare Port Data Role UFP Policy ErnegqiuneesSt hthaell PE_SN thKa_tS tthaert up is set to. The- Devic e Polic tyr aMnasnitaiogner to the Sink state when: 8.3.3.3Th.1e 0 PE_SNK i_nGdiicvaete_sS tihnakt t_hCe ap S htaast reeached the default level. - PE_SNK_Give_Sink_Cap Policy EngineShall Device Policy Manager Policy EngineShall Protocol Layer SOinn ken_Ctrayp taob tihliet iesMessage state the P olicy ErenqguineestS thhael l for the current system capabilities. The then request the to send a - Sink_Capabilitie sMessag ceontainingG teht_eSsien cka_pCaabpilMitieesss.a Tghee send: - A EPR_Sink_Capab ilitiesMe wsshaegne a EPR_Ge t_Sink_Ca isp rMeceessivaegde or PoliAcyn E ngineShall PE _wSNheKn_ Rae ady is received. The- Sink_ Capab tirlaitniesistiMone stsoa gthee state when: 8.3.3.3Th.1e 1 PE_S NK_EP hRa_s Kbeeeenp su_cAcelisvsfeully sent. PE_SNK_EPR_Keep_Alive Policy EngineShall EPR_KeepAliveMessage SenderResponseTimer On entry to the State the send an and initiaPloizliec ya nEdn gruinne tShhea ll PE_S.NK_Ready The- EPR_Ke epAliv ter_aAncskitiMones tsoa gthee state when: PoliAcy EngineShall isP rEe_cSeNivKe_dH.ard_Reset The- Sende rRes ptroannsseiTtiiomne tro the state when: 8.3.3.3Th.1e 2 PE_SNK_ Gtimete_s Sooutu. rce_Cap State - PE_SNK_Get_Source_Cap Policy EngineShall Protocol Layer Source CapabilitiesMessage Source Capabilities Policy EngineShall On entry to the state the request the to send a get in order to retrieve the. The - seGnedt:_Source_CapMessage Device Policy Manager - A EPR_Get_Sourc e_CapMe wsshaegne the Device Policy Ma rneaqgueersts SPR caEpPaRb iCliatipeasb oilrities PoliAcyn E ngineShall Sen dwehreRne sthpeo nseTimer requests. The then start the. PE_SNK_Get_Source_Cap Policy EngineShall Device Policy Manager On exit from the State the inform the of the outcoPmoliec y(c EanpgaibnielitSiheas lolr response timeouPtE)_.SNK_Ready The- EPR Mo de transSitoiounrc teo C tahpea bilities state when: Source_CapabilitiesMessage In and SPR were requested and a is received - orSPR Mode Source Capabilities EPR_Source_CapabilitiesMessage In and EPR were requested and an is - receiSveendd oerrResponseTimer PoliTcyh eE ngineShall timePsE o_uStN.K_Evaluate_Capability The- SPR Mo de transSitoiounrc teo C tahpea bilities S Sotuartcee w_Chaepna:bilitiesMessage In and SPR were requested and a is received - orEPR Mode Source Capabilities EPR_Source_CapabilitiesMessage In and EPR were requested and an is received. Figure 8.134, \"SOP Source Port Soft Reset and Protocol Error State Diagram\" Policy Engine Source Port Soft Reset Port Partner SOP below shows the state diagram for the in a when performing a of its i.e., using. The following sections describe operatioFni ginu reea c8h.1 o3f 4th SeO sPta Steosu.rce Port Soft Reset and Protocol Error State Diagram Accept message Received from SOP PE_SRC_Send_Capabilities PE_SRC_Ready Accept message In Explicit Contract & Sent to SOP Protocol Error2before first Message in AMS sent (no GoodCRC received) SenderResponseTimer PE_SRC_Soft_Reset Transmission TrT ai nm smeo isu st i | on PE_SRC_Send_Soft_Reset A Rc et si eo tn Ps r o on to e cn ot lr Ly a: yer froE mrr o Pr r oin tod cic oa l t Li ao yn e r PE_SRC_Hard_Reset froE mrr o Pr r oin tod cic oa l t Li ao yn e r A R Sec e nt si e do t n S Ps or fo o tn t Ro e ecn so et lr t Ly ma: y ee sr sage to SOP Send Accept message to SOP Initialize and run SenderResponseTimer Power = DefauIt/Implicit or Power = DefauIt/Implicit or Explicit Contract Explicit Contract PD = Connected PD = Connected Message not sent after retries on SOP (no GoodCRC received)1 | Soft Reset message Protocol Error2on SOP during AMS | Received on SOP (Not in Explicit Contract & Protocol Error2on SOP before first Message in AMS sent (no GoodCRC received) | (SPR Mode & EPR Mode Entry process fails)3 1) Excludes the Soft_ResetMessage itself. 2) An Unrecognized or Unsupported Message received on SOP will result in a Not_SupportedMessage response being generated on SOP(see Section 6.3.16 “Not_Supported Message”). 3) See Section 6.4.10.1 “Process to enter EPR Mode”for the conditions when a Soft_ResetMessage Shallbe sent by the Source during the EPR Mode entry process. PE_SRC_Send_Soft_Reset Shall The- Protocol Error SO sPtate be enterePdr fortoomco al nLya ysetarte when: Non-interruptibleAMS Section 6.8.1, \"Soft Reset and Protocol Error\" A on is detected by the during a (see - Message ) or Sink - A has nEoxt pbleiceint Csoennttr aafctter retPrireost otoc otlh Ee rror or SOP AMS Message AMS Message GWohoednC nRoCt Mine assna ge and s occurred on during any where the first in the has not yet been sent i.e., an unexpected is received instead of the expected - S PR Mode responseE oPrR Mode When in and the entry process fails. The- main excSeoputricoens to this PruEl_eS RarCe_ Swehnedn_:C apabilities Source_CapabilitiesMessage SOP GoodCRCMessage Source Attached TFihgeu re 8.13 2is, \"iSno tuhrec e Port State Diagram\" state, there iPsE a_ SRC_Discovery sending fSaeiclutiroen o 8n.3.3.2. 2(w, \"iPthEo_SuRt Ca_ Discovery State\" ) and the is not presently (as indicated in ). In this case, the state is entered (see - ). Explicit Contract Negotiated Section 8.3.3.2, \"Policy Engine Source Port State Diagram\" Hard ResetSignaling When the voltage is in transition due to a new being (see - Power Role Swap ). In this case Section w8.3il.l3 b.1e9 g.3e,n \"eProaltiecyd.Engine in Source to Sink Power Role Swap State Diagram\" Section 8.3.3.19.4, \"Policy Engine in Sink to Source DPouwrienrg R ao le Swap State Dia wgrhaemn\" the power supUpSlyB i Ts yinp et-rCanEsrirtoiorn R (esceoev ery and - Data Role Swap ). In this case Port Data Role will be trigSgeectrieodn d6i.r2e.1c.t1ly.6., \"Port Data Role\" USB Type-CError Recovery During a when there is a mismatch in the field (see ). In this case will be triggered directly. Protocol Error Shall Not Soft Reset Shall PE_SRC_Ready Message PE_SRC_Readys occurring in the following situations lead to a, but result in a transition to the state where the received will be handled as if it had been received in the - stateE:xplicit Contract Protocol Error SOP AMS Message AMS Message GWohoednC iRnC aMn essage and s occurred on during any where the first in the has not yet been sent i.e., an unexpected is received instead of the expected PE _SRC_Sen rdes_Spoofnts_Re.eset Policy EngineShall SOPProtocol Layer Soft Reset Shall Soft_ResetMessage Sink SOP OSenn ednetrrRy etsop tohne seTimer state the request the to perform a, then send a to the on, and initialize and run the Policy EngineShall. PE_SRC_Send_Capabilities The- Accept Mess atrgaensition to the SOP state when: PoliAcyn E ngineS hall has been recePivEe_SdR oCn_ Hard. _Reset The- SenderR espo ntrsaenTsiimtioenr to the state when: - A Protocol Layer timeout occurs. 8.3.3.4O.1r.t2he P Ein_dSicRaCte_sS tohfatt_ aR terasnestm Sistsaioten error has occurred. PE_SRC_Soft_Reset Shall Soft_ResetMessage SOP Protocol Layer The state be entered from any state when a is received on from the PE_.SRC_Soft_Reset Policy EngineShall SOPProtocol Layer Shall Protocol Layer AcceptMessage SOP On entry to the state the reset the and then request the Policy EngineS thoa slelnd an PE_S RoCn_ Send. _Capabilities Section 8.3.3.2.3, \"PE_SRC_Send_Capabilities State\" The transition to the state (see - AcceptMessage ) when: SOP PoliTcyh eE ngineSh all has been senPtE o_nSR C_H.ard_Reset The- Proto col La ytrearnsition to the state when: The indicates that a transmission error has occurred. Figure 8.135, \"Sink Port Soft Reset and Protocol Error Diagram\" Policy Engine Sink Port Soft Reset Port Partner SOP below shows the state diagram for the in a when performing a of its i.e., using. The following sections describe operation in each of theF sitgauterse. 8.135 Sink Port Soft Reset and Protocol Error Diagram Accept Message Received on SOP PE_SNK_Wait_for_Capabilities PE_SNK_Ready Accept Message In Explicit Contract & Sent to SOP Protocol Error2on SOP before first Message in AMS sent (no GoodCRC received) SenderResponseTimer PE_SNK_Soft_Reset Transmission TrT ai nm smeo isu st i | on PE_SNK_Send_Soft_Reset A R Sec e nt si e do t n A Ss cO co P en p P e tr n Mot tr eoy sc: so al g L ea ty oe r SOP froE mrr o Pr r oin tod cic oa l t Li ao yn e r PE_SNK_Hard_Reset froE mrr o Pr r oin tod cic oa l t Li ao yn e r A R S Inec e int s ti ie do at n S l S is o zO f eo tP n aR P ne er dn so et rtr t uoy Mc n: o e Sl s eL s na a dy g ee e rr t Ro e S sO poP nseTimer Power = DefauIt/Implicit or Power = DefauIt/Implicit or Explicit Contract Explicit Contract PD = Connected PD = Connected Message not sent after retries on SOP (no GoodCRC received)1 | Soft Reset Message Protocol Error2on SOP during AMS | Received on SOP (Not in Explicit Contract & Protocol Error on SOP before first Message in AMS sent (no GoodCRC received) | (SPR Mode & EPR Mode Entry process fails)3 1) Excludes the Soft_ResetMessage itself. 2) An Unrecognized or Unsupported Message will result in a Not_SupportedMessage response being generated (see Section 6.3.16 “Not_Supported Message”). 3) See Section 6.4.10.1 “Process to enter EPR Mode”for the conditions when a Soft_ResetMessage Shallbe sent by the Sink during the EPR Mode entry process. PE_SNK_Send_Soft_Reset Shall The- Protocol Error SO sPtate be enterePdr fortoomco al nLay ysetrate when: AMS Section 6.8.1, \"Soft Reset and Protocol Error\" A on is detected by the during an (see - Message ) or Sink - A has nEoxt pbleiceint Csoennttr aafctter retPrireost otoc otlh Ee rror or SOP AMS Message AMS Message GWohoednC nRoCt Mine assna ge and s occurred on during any where the first in the has not yet been sent i.e., an unexpected is received instead of the expected - S PR Mode responseE.PR Mode When in and the entry process fails. The- main exceptions to this rule are when: Explicit Contract Negotiated Section 8.3.3.3, \"Policy Engine Sink Port State Diagram\" Hard Reset When the voltage is in transition due to a new being (see - Power Role Swap ). In this case a will Sbeec tgieonne 8r.a3t.3ed.1.9.3, \"Policy Engine in Source to Sink Power Role Swap State Diagram\" Section 8.3.3.19.4, \"Policy Engine in Sink to Source DPouwrienrg R ao le Swap State Dia wgrhaemn\" the power supplHya irsd i nR tersaentsition (see and - Data Role Swap ). IDnF tPhisU cFaPseD aa ta Role will be triggered directUlyS.B Type-CError Recovery During a when the / s are changing. In this case Note: Protoco wl Eilrl rboer triggered directly. Shall Not Soft Reset Shall PE_SNK_Ready Message s PoEcc_SuNrrKin_Rg eina dthye following situations lead to a, but result in a transition to the state where the received will be handled as if it had been - received inE xtphleic it Contract sPtraotteo:col Error SOP AMS Message AMS Message GWohoednC iRnC aMn essage and s occurred on during any where the first in the has not yet been sent i.e., an unexpected is received instead of the expected response. PE_SNK_Send_Soft_Reset Policy EngineShall SOPProtocol Layer Soft Reset Shall Soft_ResetMessage SOP Source OSenn ednetrrRy etsop tohne seTimer state the request the to perform a, then send a on to the, and initialize and run the Policy EngineShall. PE_SNK_Wait_for_Capabilities The- Accept Mess atrgaensition to the SOP state when: PoliAcyn E ngineS hall has been recePivEe_SdN oKn_ Har.d_Reset The- SenderR espo ntrsaenTsiimtioenr to the state when: - A Protocol Layer timeout occurs. 8.3.3.4O.2r.t2he P Ein_dSicNaKte_sS thoaftt _aR treasnesmt Sistsaiotne error has occurred. PE_SNK_Soft_Reset Shall Soft_ResetMessage SOP Protocol Layer The state be entered from any state when a is received on from the PE_.SNK_Soft_Reset Policy EngineShall SOPProtocol Layer Shall Protocol Layer AcceptMessage SOP On entry to the state the reset the and then request the Policy EngineS thoa slelnd an PE_S NoKn _Wa.it_for_Capabilities The- Accep tMes staragnesition to the SOP state when: PoliTcyh eE ngineSh all has been senPtE o_nSN K_H.ard_Reset The- Proto col La ytrearnsition to the state when: The indicates that a transmission error has occurred. Figure 8.136, \"DFP Data_Reset Message State Diagram\" Data_ResetMessage DFP shows the state diagram for a sent or received by a. Figure 8.136 DFP Data_Reset Message State Diagram Protocol Error Data_Reset Message Data Reset request from DPM PE_SRC_Ready or received PE_SNK_Ready (DFP) SenderResponseTimer Timeout | PE_DDR_Send_Data_Reset PE_DDR_Data_Reset_Received Protocol Error ErrorRecovery Actions on entry: Actions on entry: Send Data_Reset Message Inform Device Policy Manager of Initialize and start SenderResponseTimer Data_Reset Message Send Accept Message Actions on exit: Initialize and start DataResetFailTimer1 Accept Message Received & Actions on exit: VCONN Source Initialize and start DataResetFailTimer1 Power = Explicit Contract PD = connected Power = Explicit Contract VCONNDischargeTimer Timeout | PD = connected Protocol Error Accept Message Received & Not VCONN Source Accept Message Sent & Not VCONN Source PE_DDR_Wait_for_VCONN_Off Actions on entry: Initialize and start VCONNDischargeTimer Power = Explicit Contract PD = connected PS_RDY Received PE_DDR_Perform_Data_Reset Actions on entry: DataResetFailTimer Timeout | Tell Device Policy Manager to perform Data Reset Protocol Error A S St ec o nt pi do D n Das a to ta an R _ Re ex s eei st t e: F ta _Cil oT mim pe ler te Message Accep Vt C OM Ne Ns Ssa og ue r cS eent & Power = Explicit Contract PD = connected Data Reset process is complete PE_SRC_Ready or PE_SNK_Ready (DFP) 1) Note that the DataResetFailTimer Shallcontinue to run in every state until it is stopped or times out. PE_DDR_Send_Data_Reset Shall PE_SRC_Ready PE_SNK_Ready Device Policy Manager The State be entered from the or State when requested by thPe E_DDR_Send_Data_Res.et Policy EngineShall Protocol Layer Data_ResetMessage SenderResponseTimer On entry to the State the request the to send a PE_D aDndR _tSheennd i_nDitaiataliz_Re easnedt start the Policy EngineShall. DataResetFailTimer On exit from the State the initialize and start the Policy EngineSha.ll PE_DDR_Perform_Data_Reset The- Accept Mess atrgaensition to the State when: - An DFP has beVeCnO NrNe cSeoiuvercde and PoliTcyh eE ngin eisS phraelslently the PE_DD. R_Wait_For_VCONN_Off The- Accept Mess atrgaensition to the State when: An has been received and - DFP VCONN Source PoliTcyh eE ngin eisS nhoatl lpresently the ErrorRecover.y The- SenderR espo ntrsaenTsiimtioenr to when: - A Protocol Error timeout occurs or 8.3.3.5A.1.2 oc c PurEs_.DDR_Data_Reset_Received State PE_DDR_Data_Reset_Received Shall PE_SRC_Ready PE_SNK_Ready Data_ResetMessage The State be entered from the or State when a PE_D DisR r_eDcaetivae_dR.eset_Received Policy EngineShall Device Policy Manager Shall AcceptMessage On entry to the State the inform the and then send aPnE _DDR_D ata_Res.et_Received Policy EngineShall DataResetFailTimer On exit from the State the initialize and start the Policy EngineSha.ll PE_DDR_Perform_Data_Reset The- Accept Mess atrgaensition to the State when: - An DFP has beVeCnO NsNe nSto aunrcde PoliTcyh eE ngin eisS phraelslently the PE_DD. R_Wait_For_VCONN_Off The- Accept Mess atrgaensition to the State when: - An DFP has been VseCnONt Nan Sdource PoliTcyh eE ngin eisS nhoatl lpresently the ErrorRecover.y The- Protoco l Error transition to when: 8.3.3.5A.1.3 oc c PurEs_.DDR_Wait_For_VCONN_Off State PE_DDR_Wait_For_VCONN_Off Policy EngineShall VCONNDischargeTimer On entry to the State the initialize and start the Policy EngineShall. PE_DDR_Perform_Data_Reset The- PS_RDY Messa tgreansition to the State when: PoliAcy Engine Shall is receivedE.rrorRecovery The- VCONN Disch tarargnesiTtiiomne tro when: - ThPer otocol Error has timed out or 8.3.3.5A.1.4 oc c PurEs_.DDR_Perform_Data_Reset State PE_DDR_Perform_Data_Reset Policy EngineShall Device Policy Manager Data Reset Section 6.3.14, \"Data_Reset Message\" On entry to the State the request the to complete the PE_DDR p_Proecrefossr mas_ Ddeaftian_eRde isne t Policy EngineShall. DataResetFailTimer Data_Reset_CompleteMessage On exit from the State the stop the and sendP ao licy EngineShall. PE_SRC_Ready PE_SNK_Ready DFP Power Role The transition back to either the or State depending on the 's - when: Data Reset Section 6.3.14, \"Data_Reset Message\" PoliTcyh eE nDgPinMe iSnhdaiclaltes that Error Rperococevsesr yis complete (see ). The- DataR esetF tarailnTsiimtioenr to when: - ThPer otocol Error times out A occurs. Figure 8.137, \"UFP Data_Reset Message State Diagram\" Data_ResetMessage UFP shows the state diagram for a sent or received by a. Figure 8.137 UFP Data_Reset Message State Diagram Protocol Error Data Reset request from DPM PE_SRC_Ready or Data_R ree cs ee it v M edessage PE_SNK_Ready (UFP) SenderRe Ps rp oo tn os ce oT l i Em rre or r Timeout | PE_UDR_Send_Data_Reset PE_UDR_Data_Reset_Received ErrorRecovery A S Inec int ti ido a n D lis za eo ta n a_ nRe dn e st rr e uy t n : M Se es ns da eg re ResponseTimer Accept VM Ce Os Ns Na g Se o uR re cc eeived & A I Sn ec f nt oi do r mn As c D co een pv e tic n Met r ePy so: sl aic gy e Manager of Data_Reset Message Actions on exit: Initialize and run DataResetFailUFPTimer2 Actions on exit: Initialize and run DataResetFailUFPTimer2 Power = Explicit Contract PD = connected Power = Explicit Contract PD = connected Accept Message Received & Not VCONN Source PE_UDR_Turn_Off_VCONN Protocol Error A Tec lt li o Dn es v o icn e e Pn ot lr icy y: Manager to turn off VCONN Accep Vt C OM Ne Ns Ssa og ue r cS eent & Power = Explicit Contract PD = connected VCONN Off1 PE_UDR_Send_Ps_Rdy Protocol Error Actions on entry: Send PS_RDY Message Power = Explicit Contract PD = connected PS_RDY Message Sent PE_UDR_Wait_For_Data_Reset_Complete Actions on entry: Wait for Data_Reset_Complete Message Accept Message Sent & DataResetF Pa ri olU toF cP oT l i Em rre or r Timeout2| A Stc ot pio Dn as to an R e ex seit t: FailUFPTimer2 Not VCONN Source Power = Explicit Contract PD = connected Data_Reset_Complete Message received 1) VCONNShallbe fully discharged see Section 7.1.15 “Vconn Power Cycle”. 2) Note that the DataResetFailUFPTimerShallcontinue to run in every state until it is stopped or times out. PE_SRC_Ready or PE_SNK_Ready (UFP) PE_UDR_Send_Data_Reset Shall PE_SRC_Ready PE_SNK_Ready Device Policy Manager The State be entered from the or State when requested by thPe E_UDR_Send_Data_Res.et Policy EngineShall Protocol Layer Data_ResetMessage SenderResponseTimer On entry to the State the request the to send a PE_U aDndR _tSheennd i_nDitaiatali_zRe easnedt run the Policy EngineShall. DataResetFailUFPTimer On exit from the State the initialize and run the Policy EngineShall. PE_UDR_Turn_Off_VCONN The- Accept Mess atrgaensition to the State when: - An UFP has beVeCnO NrNe cSeoiuvrecde and PoliTcyh eE ngin eisS phraelslently the PE_UD. R_Wait_For_Data_Reset_Complete The- Accept Mess atrgaensition to the State when: - An UFP has been VreCcOeNiNv eSdo uarncde PoliTcyh eE ngin eisS nhoatl lpresently the ErrorRecove.ry The transition to when: - SenderResponseTimer - ThPer otocol Error has timed out or 8.3.3.5A.2.2 oc c PurEs_.UDR_Data_Reset_Received State PE_UDR_Data_Reset_Received Shall PE_SRC_Ready PE_SNK_Ready Data_ResetMessage The State be entered from either the or State when a PE_U DR_Dat ais_ Rreecseeitv_Rede.ceived Policy EngineShall Device Policy Manager Shall AcceptMessage On entry to the State the inform the and then send aPnE _UDR_D ata_Res.et_Received Policy EngineShall DataResetFailUFPTimer On exit from the State the initialize and run the Policy EngineShall. PE_UDR_Turn_Off_VCONN The- Accept Mess atrgaensition to the State when: - An UFP has beVeCnO NsNe nSto aunrcde PoliTcyh eE ngin eisS phraelslently the PE_UD. R_Wait_For_Data_Reset_Complete The- Accept Mess atrgaensition to the State when: - An UFP has been VseCnONt Na nSdource PoliTcyh eE ngin eisS nhoatl lpresently the ErrorRecove.ry The- Protoco l Error transition to when: 8.3.3.5A.2.3 oc c PurEs_.UDR_Turn_Off_VCONN State PE_UDR_Turn_Off_VCONN Policy EngineShall Device Policy Manager VCONN On entry to the State the request the to turn off Po.licy EngineShall PE_UDR_Send_Ps_Rdy The- transitioVnC OtoN Nthe VCO NSNtate when: [USB Type-C 2.4] PoliTcyh eE nDgPinMe iSnhdaiclaltes that E rhraosr bReeecno vtuerrnyed off ( below vRaReconnect see ). The- Protoco l Error transition to when: 8.3.3.5A.2.4 oc c PurEs_.UDR_Send_Ps_Rdy State PE_UDR_Send_Ps_Rdy Policy EngineShall PS_RDYMessage On ePnotrliyc yto E tnhgei neShall StaPtEe_ tUhDe R_Wait_For_D ata_R seesnedt_ aC omplete. The- PS_RD YMe stsraagnesition to the State when: PoliTcyh eE ngineSh all has beeEnr sreonrtR.ecovery The- Protoco l Error transition to when: 8.3.3.5A.2.5 oc c PurEs_.UDR_Wait_For_Data_Reset_Complete State PE_UDR_Wait_For_Data_Reset_Complete Policy EngineShall Data_Reset_CompleteMessage On entry to the State the wait for the PE_UD R_Wait_.For_Data_Reset_Complete Policy EngineShall DataResetFailUFPTimer On exit from the State the stop the Policy EngineShall. PE_SRC_Ready PE_SNK_Ready UFP Power Role The transition back to either the or State depending on the 's when: - Data_Reset_CompleteMessage PoliTcyh eE ngineShall ErrorR iesc roevceeriyved. The- DataR esetF tarailnUsFitPioTnim toe r when: - ThPer otocol Error times out or A occurs. Figure 8.138, \"Source Port Not Supported Message State Diagram\" Not_Supported Message Source Port shows the state diagram for a sent or receiveFdig buyr ea 8.138 Sour.ce Port Not Supported Message State Diagram PE_SRC_Chunk_Received ChunkingNotSupportedTimer timeout Actions on entry: Start ChunkingNotSupportedTimer Power = Explicit Contract PD = connected Protocol Error1& Chunk from a multi-Chunk Message2 Protocol Error1& not a Chunk from PE_SRC_Send_Not_Supported a multi-Chunk Message Not_Sup rp eco er it ve ed d M 1essage PE_SRC_Not_Supported_Received Actions on entry: PE_SRC_Ready Actions on entry: Send Not_Supported Message Not_Supported Inform Device Policy Manager of Not_Supported Message Message sent DPM informed Power = Explicit Contract PD = connected Power = Explicit Contract PD = connected 1) Transition as a result of an unsupported Message being received in the PE_SRC_Readystate directly (see also Section 8.3.3.4.1 “SOP Source Port Soft Reset and Protocol Error State Diagram”). 2) Transition can only occur where a manufacturer has opted not to implement a Chunking state machine (see Section 6.12.2.1 “Protocol Layer Chunking”) and is communicating with a system which is attempting to send it Chunks. PE_SRC_Send_Not_Supported Shall PE_SRC_Ready Protocol Error AMS Unsupported Message TPhEe_S RC_Ready state bCe heunntekred from thCeh unkMessage state eSitehcetiro ans 6 t.h12e.r2e.1s,u \"lPt rooft ao col Layer Chunkin gr\"eceiveSde cdtuiornin 8g. 3a.n3.i4n.1te, r\"rSuOpPt iSbolue rce P oorrt a Sso aft r Reessueltt oafn adn P rotocol Error State Di abgerianmg r\"eceived in the state directly except for the first in a multi- (see also P Ean_SdR C_Send_Not_Supported PE_SRC_Ready Policy Engine)S.hall Protocol Layer Not_SupportedMessage On entry to the state (from the state) the request the Policy EngineS thoa slelnd a. PE_SRC_Ready Figure 8.132, \"Source Port State Diagram\" The transition back to the previous state ( see - ) wNhoetn_:SupportedMessage 8.3.3.6T.1he.2 PE_SRC h_Naso bte_eSnu spupccoersstfeudlly_R seencte. ived State PE_SRC_Not_Supported_Received Shall PE_SRC_Ready Not_Supported Message The state be entered from the state when a is receiPvEed_S.RC_Not_Supported_Received Policy EngineShall Device Policy Manager On ePnotrliyc yto E tnhgei neShall state the PE_SRC_Re ady inFfoigrmur eth 8e.1 32, \"Source Port State. Diagram\" The transition back to the previous state ( see - ) wDheevni:ce Policy Manager 8.3.3.6T.1he.3 PE_SR hCa_sC bheeunn iknf_oRrmeceed.ived State PE_SRC_Chunk_Received Shall PE_SRC_Ready Unsupported Message PE_SRC_Ready Message Chunk ChunkMessage The Section 6.12.2.1, \"Pro tsotacotel Layer bCeh uennkteinrge\"d fromS etchteio n 8.3.3.4.1, \"SOP s tSaotuer acse aP orerts uSlotf ot fR aense t and Protocol Error Sta btee iDniga rgercaemiv\"ed in the state directly where the is a in a multi (see also and ). PE_SRC_Chunk_Received PE_SRC_Ready Policy EngineShall ChunkingNotSupportedTimer On entry to the state (from the state) the initialize and run tPhoel icy EngineShall PE._SRC_Send_Not_Supported The- Chun kingN tortaSnuspitpioonrt teod Timer when: The has timed out. Figure 8.139, \"Sink Port Not Supported Message State Diagram\" Not_Supported Message Sink Port shows the state diagram for a sent or receivedF ibgyu are 8.139 S.ink Port Not Supported Message State Diagram PE_SNK_Chunk_Received ChunkingNotSupportedTimer timeout Actions on entry: Start ChunkingNotSupportedTimer Power = Explicit Contract PD = connected Protocol Error1& Chunk from a multi-Chunk Message2 Protocol Error1& not a Chunk from PE_SNK_Send_Not_Supported a multi-Chunk Message Not_Sup rp eco er it ve ed d M 1essage PE_SNK_Not_Supported_Received Actions on entry: PE_SNK_Ready Actions on entry: Send Not_Supported Message Not_Supported Inform Device Policy Manager of Not_Supported Message Message sent DPM informed Power = Explicit Contract PD = connected Power = Explicit Contract PD = connected 1) Transition as a result of an unsupported Message being received in the PE_SNK_Readystate directly (see also Section 8.3.3.4.2 “SOP Sink Port Soft Reset and Protocol Error State Diagram”). 2) Transition can only occur where a manufacturer has opted not to implement a Chunking state machine (see Section 6.12.2.1 “Protocol Layer Chunking”) and is communicating with a system which is attempting to send it Chunks. PE_SNK_Send_Not_Supported Shall PE_SNK_Ready Protocol Error AMS Unsupported Message TPhEe_S NK_Ready state beC ehnutnekred from theC hunkMessage state eitSheecrt iaosn t h6e.1 r2e.2s.u1l,t of a \"Protocol Laye rr eCcheuivnekdin dgu\"ring aSnec itniotenr 8ru.3p.3ti.b4l.1e, \"SOP o Sro ausr ac er ePsourltt Soof fatn R eset and Protocol Erro br eSitnagt er eDcieaigvreadm in\" the state directly except for the first in a multi- (see also PE_SNK_Se nadn_dN ot_Supported PE_SNK_Ready Policy EngineShall ). Protocol Layer Not_SupportedMessage On entry to the state (from the state) the request the Policy EngineS thoa slelnd a. PE_SNK_Ready Figure 8.133, \"Sink Port State Diagram\" The transition back to the previous state ( see - ) wNhoetn_:SupportedMessage 8.3.3.6T.2he.2 PE_SNK h_aNs obte_eSnu spucpcoesrstfeuldly_ Rseenct.eived State PE_SNK_Not_Supported_Received Shall PE_SNK_Ready Not_SupportedMessage The state be entered from the state when a PE_SNK_ Niso rte_Scueipvpeodr.ted_Received Policy EngineShall Device Policy Manager On ePnotrliyc yto E tnhgei neShall state the PE_SNK_Re ady inFfoigrmur eth 8e.1 33, \"Sink Port State. Diagram\" The transition back to the previous state ( see - ) wDheevni:ce Policy Manager 8.3.3.6T.2he.3 PE_SN hKas_ Cbeheunn inkf_oRrmeecde.ived State PE_SNK_Chunk_Received Shall PE_SNK_Ready Unsupported Message PE_SNK_Ready Message Chunk ChunkMessage The Section 6.12.2.1, \"Pro tsotcaotel L ayer Cbheu ennktienrge\"d fromSe tchteio n 8.3.3.4.1, \"SOP s Stoatuer caes Pao rrets Suoltft o Rf easne t and Protocol Error Sta btee iDniga rgercaemiv\"ed in the state directly where the is a in a multi (see also and PE_SN)K._Chunk_Received PE_SNK_Ready Policy EngineShall ChunkingNotSupportedTimer On entry to the state (from the state) the initialize and run tPhoel icy EngineShall PE._SNK_Send_Not_Supported The transition to when: - ChunkingNotSupportedTimer The has timed out. Figure 8.140, \"Source Port Source Alert State Diagram\" AlertMessage Source Port shows the state diagram for an sent by a. Figure 8.140 Source Port Source Alert State Diagram PE_SRC_Send_Source_Alert DPM indicates Source Actions on entry: PE_SRC_Ready alert condition Send Alert Message Power = Explicit Contract PD = connected Alert SenderResponseTimer Message sent Timeout PE_SRC_Wait_for_Get_Status Actions on entry: Get_Status PE_Give_Status Initialize and run SenderResponseTimer Message received Power = Explicit Contract PD = Connected PE_SRC_Send_Source_Alert Shall PE_SRC_Ready Device Policy Manager Source The state be entered from the state when the indicaPteEs_ SthRaCt_ Stheenrde_ Siso au rce_Ale arltert conditPioonli ctoy Ebne grienpeoSrhteadll. Protocol Layer Alert Message On entry to the state the request the to send an Polic.y EngineShall PE_SRC_Wait_for_Get_Status The- Alert Messa tgreansition to the State when: 8.3.3.7T.1he.2 h PasE b_eSeRnC s_uWcceasistf_uflolyr s_eGnet.t_Status State PE_SRC_Wait_for_Get_Status Policy EngineShall SenderResponseTimer On entry to the State the initialize and run the Policy EngineShall. PE_Give_Status Figure 8.151, \"Give Status State Diagram\" The transition back to the State (see ) whe- n: Get_StatusMessage PoliAcy EngineSha ll is received.PE_SRC_Ready Figure 8.132, \"Source Port State Diagram\" The- Sende rRes ptroannsseiTtiiomne brack to (see ) when: The times out. Figure 8.141, \"Sink Port Source Alert State Diagram\" AlertMessage Sink Port shows the state diagram for an received by a. Figure 8.141 Sink Port Source Alert State Diagram PE_SRC_Send_Source_Alert DPM indicates Source Actions on entry: PE_SRC_Ready alert condition Send Alert Message Power = Explicit Contract PD = connected Alert SenderResponseTimer Message sent Timeout PE_SRC_Wait_for_Get_Status Actions on entry: Get_Status PE_Give_Status Initialize and run SenderResponseTimer Message received Power = Explicit Contract PD = Connected PE_SNK_Source_Alert_Received Shall PE_SNK_Ready AlertMessage The state be entered from the state when an is received. PE_SNK_Source_Alert_Received Policy EngineShall Device Policy Manager Source On entry to the state the inform the of the dPeotlaiiclys Eonf gthinee Shall alert. PE_Get_Status Figure 8.150, \"Get Status State Diagram\" The- transition to the State (see ) when: PoliTcyh eE nDgPinMe rSehqaulelsts status. PE_SNK_Ready Figure 8.133, \"Sink Port State Diagram\" The transition back to the State (see ) whe- n: The DPM does not request status. Figure 8.142, \"Sink Port Sink Alert State Diagram\" AlertMessage Sink Port Figure 8.142 Sink s hPoowrts Sthinek s tAalteer dti aSgtaratem D foiarg arna m sent by a. PE_SNK_Send_Sink_Alert DPM indicates Sink Actions on entry: alert condition PE_SNK_Ready Send Alert Message Power = Explicit Contract PD = connected Alert SenderResponseTimer Message sent Timeout PE_SNK_Wait_for_Get_Status Actions on entry: Get_Status PE_Give_Status Initialize and run SenderResponseTimer Message received Power = Explicit Contract PD = Connected PE_SNK_Send_Sink_Alert Shall PE_SNK_Ready Device Policy Manager Source The state be entered from the state when the indicates that thPeEre_S iNs Ka _Send_S ainlekr_tA cloenrdtition to beP orelipcoy rEtnedgi.neShall Protocol Layer Alert Message On entry to the state the request the to send an Polic.y EngineShall PE_SNK_Wait_for_Get_Status The- Alert Messa tgreansition to the State when: 8.3.3.7T.3he.2 h PasE b_eSeNnK su_cWceasistfu_flloyr s_eGnte.t_Status State PE_SNK_Wait_for_Get_Status Policy EngineShall SenderResponseTimer On entry to the State the initialize and run the Policy EngineShall. PE_Give_Status Figure 8.151, \"Give Status State Diagram\" The transition back to the State (see ) whe- n: Get_StatusMessage PoliAcy EngineSha ll is received. PE_SNK_Ready Figure 8.133, \"Sink Port State Diagram\" The- Sende rRes ptroannsseiTtiiomne brack to the (see ) when: The times out. Figure 8.143, \"Source Port Sink Alert State Diagram\" AlertMessage Source Port shows the state diagram for an received by a. Figure 8.143 Source Port Sink Alert State Diagram Sink Alert Message PE_SRC_Sink_Alert_Received received Actions on entry: PE_SRC_Ready Inform DPM of the detail of the alert DPM does not request status Power = Explicit Contract PD = connected DPM Requests Status PE_Get_Status PE_SRC_Sink_Alert_Received Shall PE_SRC_Ready AlertMessage The state be entered from the state when an is received. PE_SRC_Sink_Alert_Received Policy EngineShall Device Policy Manager Source On entry to the state the inform the of the detaPilos loicf yt hEen gineSh aallelrt. PE_Get_Status Figure 8.150, \"Get Status State Diagram\" The- transition to the State (see ) when: PoliTcyh Ee nDgPinMe rSehqaulelsts status. PE_SRC_Ready Figure 8.132, \"Source Port State Diagram\" The- transition back to the (see ) when: The DPM does not request status. Figure 8.144, \"Sink Port Get Source Capabilities Extended State Diagram\" Sink Device Policy Manager Port Partner Source Capabilities Section 6.5.1, \"Source_Capabilities_Extended Message\" shows the state diagram for a on receiving a request from the to get the 's extended. See also Figure 8.144 Sink Port Get Sourc.e Capabilities Extended State Diagram get extended source capabilities request PE_SNK_Get_Source_Cap_Ext from Device Policy Manager Actions on entry: PE_SNK_Ready Send Get_Source_Cap_Extended Message Initialize and run SenderResponseTimer Source_Capabilities_Extended Message received | Actions on exit: SenderResponseTimer Pass source extended capabilities/outcome to Device Policy Manager Timeout Power = Explicit Contract PD = Connected Policy EngineShall PE_SNK_Get_Source_Cap_Ext PE_SNK_Ready Source Capabilities Device Policy Manager The transition to the state, from the state, due to a request to get PthEe_S rNemK_oGteet e_Sxoteunrdceed_C ap_Ext Po flricoym E tnhgein eShall Get_Sou. rce_Cap_Extended Message SenderResponseTimer On entry to the state the send a and initPiaEli_zSeN aKn_dG erut_nS othuer ce_Cap_Ext Poli.cy EngineShall Device Policy Manager On exit from the state the inform the of the outcoPmoliec y(c EanpgaibnielitSiheas lolr response timeout). PE_SNK_Ready Figure 8.133, \"Sink Port State Diagram\" The transition back to the state (see ) whe- n: Source_Capabilities_ExtendedMessage - A SenderResponseTimer is received Or times out. Figure 8.145, \"Source Give Source Capabilities Extended State Diagram\" Source Get_Source_Cap_ExtendedMessage Section 6.5.1, \"Source_Capabilities_Extended Message\" shows the state diagram for a on receiving a Figure 8.145 Sour ce Give S. oSeuer caels Coa pabilities Extended State Diagram. Get_Source_Cap_Extended Message received PE_SRC_Give_Source_Cap_Ext PE_SRC_Ready Actions on entry: Get present extended source capabilities from Device Policy Manager Source_Capabilities_Extended Send Source_Capabilities_Extended Message (based on Device Policy Manager response) Message sent Power = Explicit Contract PD = Connected Policy EngineShall PE_SRC_Give_Source_Cap_Ext PE_SRC_Ready Get_Source_Cap_ExtendedMessage The transition to the state, from the state, when a PE_SRC_Give _Source_ Cisa pre_cEexitved. Policy EngineShall Source Capabilities Device Policy Manager Source_Capabilities_ExtendedMessage On entry to the state the request the present extended from the and then send a based on theseP oclaipcya bEinligtiinese.Shall PE_SRC_Ready Figure 8.132, \"Source Port State Diagram\" The transition back to the state (see ) whe- n: Source_Capabilities_ExtendedMessage The has been successfully sent. Figure 8.146, \"Source Port Get Sink Capabilities Extended State Diagram\" Source Device Policy Manager Port Partner Sink Capabilities Section 6.5.13, \"Sink_Capabilities_Extended Message\" shows the state diagram for a on receiving a request from the to get the 's extended. See also Figure 8.146 Source Port Get Si.nk Capabilities Extended State Diagram get extended Sink capabilities request PE_SRC_Get_Sink_Cap_Ext from Device Policy Manager PE_SRC_Ready Actions on entry: Send Get_Sink_Cap_Extended Message Initialize and run SenderResponseTimer Sink_Capabilities_Extended Message received | Actions on exit: SenderResponseTimer Pass sink extended capabilities/outcome to Device Policy Manager Timeout Power = Explicit Contract PD = Connected Policy EngineShall PE_SRC_Get_Sink_Cap_Ext PE_SRC_Ready Source Capabilities Device Policy Manager The transition to the state, from the state, due to a request to get tPhEe _rSeRmCo_Gtee et_xStiennkd_eCda p_Ext Polic fyr Eomng tinhee Shall Get_Sink_C. ap_ExtendedMessage SenderResponseTimer On entry to the state the send a and initialize and runP tEh_eS RC_Get_Sink_Cap_Ext. Policy EngineShall Device Policy Manager On exit from the state the inform the of the outcPomoliec y(c EanpgaibnieliStiheas lolr response timeout). PE_SRC_Ready Figure 8.132, \"Source Port State Diagram\" The transition back to the state (see ) whe- n: Sink_Capabilities_ExtendedMessage - A SenderResponseTimer is received Or times out. Figure 8.147, \"Sink Give Sink Capabilities Extended State Diagram\" Source Get_Sink_Cap_ExtendedMessage Section 6.5.13, \"Sink_Capabilities_Extended Message\" shows the state diagram for a on receiving a Figu re 8.147. S Seien kal sGoi ve Sink Capabilities Extended State Diagram. Get_Sink_Cap_Extended Message received PE_SNK_Give_Sink_Cap_Ext PE_SNK_Ready Actions on entry: Get present extended Sink capabilities from Device Policy Manager Sink_Capabilities_Extended Send Sink_Capabilities_Extended Message (based on Device Policy Manager response) Message sent Power = Explicit Contract PD = Connected Policy EngineShall PE_SNK_Give_Sink_Cap_Ext PE_SNK_Ready Get_Sink_Cap_ExtendedMessage The transition to the state, from the state, when a PE_SNK_ Give_Sink i_sC raepce_Eivxetd. Policy EngineShall Source Capabilities Device Policy Manager Sink_Capabilities_ExtendedMessage On entry to the state the request the present extended from the and then send a based on these capaPboilliitciye sE.ngineShall PE_SNK_Ready Figure 8.133, \"Sink Port State Diagram\" The transition back to the state (see ) whe- n: Sink_Capabilities_ExtendedMessage The has been successfully sent. Figure 8.148, \"Sink Port Get Source Information State Diagram\" Sink Device Policy Manager Port Partner Source Section 6.3.23, \"Get_Source_Info Message\" Section 6.4.11, \"Source_Info Mess sahgoew\"s the state diagram for a on receiving a request from the to get the 's information. See also Fig aunrde 8.148 Sink Port Get Source Inform.ation State Diagram get source information request from Device Policy Manager PE_SNK_Get_Source_Info Actions on entry: PE_SNK_Ready Send Get_Source_Info Message Initialize and run SenderResponseTimer Source_Info Message received | Actions on exit: SenderResponseTimer Pass source information/outcome to Device Policy Manager Timeout Power = Explicit Contract PD = Connected Policy EngineShall PE_SNK_Get_Source_Info PE_SNK_Ready Source Device Policy Manager The transition to the state, from the state, due to a request to get thPeE r_eSmNKot_eG et_Sour icnef_oIrnmfoation fromP tohleic y EngineShall G. et_Source_InfoMessage SenderResponseTimer On entry to the state the send a and initialize and runP tEh_eS NK_Get_Source_Info. Policy EngineShall Device Policy Manager On exit from the state the inform the of the outcoPmoliec y(i EnfnogrimneaStihoanl olr response timeout). PE_SNK_Ready Figure 8.133, \"Sink Port State Diagram\" The transition back to the state (see ) whe- n: Source_InfoMessage - A SenderResp onseTim ise rreceived Or times out. Figure 8.149, \"Source Give Source Information State Diagram\" Source Get_Source_InfoMessage Section 6.3.23, \"Get_Source_Info Message\" Section 6.4.11, \"Source_Info Message\" shows the state diagram for a on receiving a. See also and. Figure 8.149 Source Give Source Information State Diagram Get_Source_Info Message received PE_SRC_Give_Source_Info PE_SRC_Ready Actions on entry: Get present source information from Device Policy Manager Send Source_Info Message (based on Device Policy Manager response) Source_Info Message sent Power = Explicit Contract PD = Connected Policy EngineShall PE_SRC_Give_Source_Info PE_SRC_Ready Get_Source_InfoMessage The transition to the state, from the state, when a P E_SRC_G iivse r_eScoeuivrecde_. Info Policy EngineShall Source Device Policy Manager Source_InfoMessage On entry to the state the request the present information fromP tohliec y EngineShall and then sendP aE _SRC_Ready baFsigeudr oen 8.t1h3is2,i n\"Sfoorumrcaet Pioonr.t State Diagram\" The transition back to the state (see ) whe- n: Source_InfoMessage The has been successfully sent. Figure 8.150, \"Get Status State Diagram\" Device Policy Manager Port Partner Cable Plug Section 6.5.2, \"Status Message\" shows the state diagram for a Port on receiving a request from the to get the Fi gour re 8.150 G'est S Statatutus.s S Setea atels Do iagram. get status request PE_Get_Status from Device Policy Manager Actions on entry: PE_SNK_Ready, Send Get_Status Message PE_SRC_Ready Initialize and run SenderResponseTimer Status Message received | Actions on exit: SenderResponseTimer Pass Source status/outcome to Device Policy Manager Timeout Power = Explicit Contract PD = Connected Policy EngineShall PE_Get_Status PE_SRC_Ready PE_SNK_Ready Port Partner Cable Plug Device Policy Manager The transition to the state, from the or States, due to a request to gPeEt _tGhee t_Status or Policy En'gs isnteatSuhsa flrlom the Get_StatusMessage. SenderResponseTimer On entry to the state the send a and initialize and run the PE_Get._Status Policy EngineShall Device Policy Manager On exit from the state the inform the of the outcome (statPuosl oicry r EenspgionnesSeh taimlleout). PE_SRC_Ready PE_SNK_Ready Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" The transition back to the or States as appropriate (see - StatusMessage or ) when: - A Sende rRespon isse rTeicmeievred Or times out. Figure 8.151, \"Give Status State Diagram\" Source Get_StatusMessage Section 6.5.2, \"Status Message\" shows the state diagram for a on receiving a. See also Fig.ure 8.151 Give Status State Diagram Get_Status Message received PE_Give_Status PE_SRC_Ready, Actions on entry: PE_SNK_Ready, Get present Status from Device Policy Manager PE_CBL_Ready Status Send Status Message (based on Device Policy Manager response) Message sent Power = Explicit Contract PD = Connected Policy EngineShall PE_Give_Status PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready Get_StatusMessage The transition to the state, from the, or SPtEa_tGesiv, we_hSetant au s P olicy Eng iisn reeScheiavleld. Source Device Policy Manager StatusMessage On entry to the state the request the present status from the Policy Engin aenSdh tahleln send a PE b_aSsReCd_ Roena tdhyesPe Ec_aSpNaKbi_lRiteieasd.y PE_CBL_Ready Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" Figure T8.h2e0 3, \"Cable Read y Stat etr Daniasgitriaomn \"back to the, or States as appropriate (see, and - StatusMessage ) when: The has been successfully sent. Figure 8.152, \"Sink Port Get Source PPS Status State Diagram\" Sink Device Policy Manager Port Partner Source Section 6.5.10, \"PPS_Status Message\" shows the state diagram for a on receiving a request from the to get the 's status when operating as a PPS. See also Figure 8.15.2 Sink Port Get Source PPS Status State Diagram get PPS status request from Device Policy Manager PE_SNK_Get_PPS_Status Actions on entry: PE_SNK_Ready Send Get_PPS_Status Message Initialize and run SenderResponseTimer PPS_Status Message received | Actions on exit: SenderResponseTimer Pass Source status/outcome to Device Policy Manager Timeout Power = Explicit Contract PD = Connected Policy EngineShall PE_SNK_Get_PPS_Status PE_SNK_Ready Source Device Policy Manager The transition to the state, from the state, due to a request to get thPeE _rSeNmKo_tGe et_PPS_ PStPaSt ustsatus from Pthoeli cy EngineShall G. et_PPS_StatusMessage SenderResponseTimer On entry to the state the send a and initialize and run the PE_SNK_Get_PPS_St.atus Policy EngineShall Device Policy Manager On exit from the state the inform the of the outcoPmoliec y(s Etantguisn eorS hreaslplonse timeout). PE_SNK_Ready Figure 8.133, \"Sink Port State Diagram\" The transition back to the state (see ) whe- n: PPS_StatusMessage - A SenderRes ponseTi mise rreceived Or times out. Figure 8.153, \"Source Give Source PPS Status State Diagram\" Source Get_PPS_StatusMessage Section 6.5.10, \"PPS_Status Message\" shows the state diagram for a on receiving a. SFeigeu arlseo 8.153 Source Give Source PPS Statu.s State Diagram Get_PPS_Status Message received PE_SRC_Give_PPS_Status PE_SRC_Ready Actions on entry: Get present Source PPS status from Device Policy Manager PPS_Status Send PPS_Status Message (based on Device Policy Manager response) Message sent Power = Explicit Contract PD = Connected Policy EngineShall PE_SRC_Give_PPS_Status PE_SRC_Ready Get_PPS_StatusMessage The transition to the state, from the state, when a P E_SRC_G iisv ree_PcePiSv_eSdt.a tus Policy EngineShall Source Device Policy Manager PPS_StatusMessage On entry to the state the request the present PPS status from the Policy EngineShall and then send a PE_SRC_R eady based oFni gthueres e8 c.1a3p2a,b \"iSloituiersc.e Port State Diagram\" The transition back to the state (see ) whe- n: PPS_StatusMessage The has been successfully sent. Figure 8.154, \"Get Battery Capabilities State Diagram\" Source Sink Device Policy Manager Port Partner Battery Battery Section 6.5.5, \"Battery_Capabilities Message\" shows the state diagram for a or on receiving a request from the to get the 's capabilities for a specified. See also Figure 8.154 G.et Battery Capabilities State Diagram get Battery capabilities request PE_Get_Battery_Cap from Device Policy Manager Actions on entry: PE_SRC_Ready or Send Get_Battery_Cap Message PE_SNK_Ready Initialize and run SenderResponseTimer Battery_Capabilities Message received | Actions on exit: SenderResponseTimer Pass Battery capabilities/outcome to Device Policy Manager Timeout Power = Explicit Contract PD = Connected Policy EngineShall PE_Get_Battery_Cap PE_SRC_Ready PE_SNK_Ready Battery Battery Device PTohleic y Manager transition to the state, from either the or state, due to a request to get the remote capabilities, for a specified, from the.P E_Get_Battery_Cap Policy EngineShall Get_Battery_CapMessage SenderResponseTimer On entry to the state the send a and initialize and run the PE_Get_Battery_Cap. Policy EngineShall Device Policy Manager On exit from the state the inform the of the outcome (capPaboilliictyie Esn ogri nreesSphoanlsle timeout). PE_SRC_Ready PE_SNK_Ready Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" The transition back to either the or state as appropriate (see - Battery_CapabilitiesMessage and ) when: - A SenderResponseTim er is received Or times out. Figure 8.155, \"Give Battery Capabilities State Diagram\" Source Sink Get_Battery_CapMessage Section 6.5.5, \"Battery_Capabilities Message\" shows the state diagram for a or on receiving a. SeFei gaulsroe 8.155 Give Battery Capabilities State Dia.gram Get_Battery_Cap Message received PE_Give_Battery_Cap PE_SRC_Ready or Actions on entry: PE_SNK_Ready Get present Battery capabilities from Device Policy Manager Battery_Capabilities Send Battery_Capabilities Message (based on Device Policy Manager response) Message sent Power = Explicit Contract PD = Connected Policy EngineShall PE_Give_Battery_Cap PE_SRC_Ready PE_SNK_Ready Get_Battery_CapMessage The transition to the state, from either the or PstEa_tGei, vweh_Beant at ery_Cap Policy En gisi nreecSehiavelld. Battery Battery Device Policy Manager Battery_CapabilitiesMessage On entry to the state the request the present capabilities, for the requested, from the and then send a based on these capaPboilliitciye sE.ngineShall PE_SRC_Ready PE_SNK_Ready Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" The transition back to either the or state as appropriate (see - Battery_CapabilitiesMessag eand ) when: The has been successfully sent. Figure 8.156, \"Get Battery Status State Diagram\" Source Sink Device Policy Manager Port Partner Battery Battery Section 6.5.4, \"Get_Battery_Status Message\" shows the state diagram for a or on receiving a request from the to get the 's status for a specified. See also. Figure 8.156 Get Battery Status State Diagram get Battery status request PE_Get_Battery_Status from Device Policy Manager Actions on entry: PE_SRC_Ready or Send Get_Battery_Status Message PE_SNK_Ready Initialize and run SenderResponseTimer Battery_Status Message received | Actions on exit: SenderResponseTimer Pass Battery status/outcome to Device Policy Manager Timeout Power = Explicit Contract PD = Connected Policy EngineShall PE_Get_Battery_Status PE_SRC_Ready PE_SNK_Ready Battery Battery Device TPohleic y Manager transition to the state, from either the or state, due to a request to get the remote status, for a specified, from the.P E_Get_Battery_Status Policy EngineShall Get_Battery_StatusMessage SenderResponseTimer On entry to the state the send a and initialize and runP tEh_eG et_Battery_Status. Policy EngineShall Device Policy Manager On exit from the state the inform the of the outcoPmoliec y(s Etantguisn eorS hreaslplonse timeout). PE_SRC_Ready PE_SNK_Ready Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" The transition back to either the or state as appropriate (see - Battery_StatusMessage and ) when: - A SenderRespon seTimer is received Or times out. Figure 8.157, \"Give Battery Status State Diagram\" Source Sink Get_Battery_StatusMessage Section 6.5.4, \"Get_Battery_Status Message\" shows the state diagram for a or on receiving a. SeFei aglusroe 8.157 Give Battery Status State Diagram. Get_Battery_Status Message received PE_Give_Battery_Status PE_SRC_Ready or Actions on entry: PE_SNK_Ready Get present Battery status from Device Policy Manager Battery_Status Send Battery_Status Message (based on Device Policy Manager response) Message sent Power = Explicit Contract PD = Connected Policy EngineShall PE_Give_Battery_Status PE_SRC_Ready PE_SNK_Ready Get_Battery_StatusMessage The transition to the state, from either the or PstEa_tGe,i vweh_Bena tat ery_Status Policy En igsi nreecSehivaeldl. Battery Battery Device Policy Manager Battery_StatusMessage On entry to the state the request the present status, for the requPeostliecdy Engine,S fhraomll the anPdE _tShRenC _sReenadd ay PE_SNK_Rea dy based on this status. Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" The transition back to either the or state as appropriate (see - Battery_StatusMessage and ) when: The has been successfully sent. Figure 8.158, \"Get Manufacturer Information State Diagram\" Source Sink Device Policy Manager Port Partner Cable Plug Section 6.5.6, \"Get_Manufacturer_Info M sehsosawgse t\"he state diagram for a or on receiving a request from the to get the or 's Manufacturer Information. See also Figure 8.158 Get Manufacturer Informat.ion State Diagram get manufacturer information request PE_Get_Manfacturer_Info from Device Policy Manager PE_SRC_Ready or Actions on entry: Send Get_Manfacturer_Info Message PE_SNK_Ready Initialize and run SenderResponseTimer Manufacturer_Info Message received | Actions on exit: SenderResponseTimer Pass Manufacturer Information/outcome to Device Policy Manager Timeout Power = Explicit Contract PD = Connected Policy EngineShall PE_Get_Manufacturer_Info PE_SRC_Ready PE_SNK_Ready Device Policy Manager The transition to the state, from either the or PstEa_tGe,e dt_uMe aton au fraecqtuuersetr t_oI ngfeot the remotPeo Mlicayn EunfagcitnuereSrh IanllformatioGne ftr_oMma nthuef acturer_InfoMessage. SenderResponseTimer On entry to the state the send a and initialize andP rEu_nG etht_eM anufacturer_Info. Policy EngineShall Device Policy Manager On exit from the state the inform the of the outcoPmoliec y(i EnfnogrimneaStihoanl olr response timeout). PE_SRC_Ready PE_SNK_Ready Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" The transition back to either the or state as appropriate (see - Manufacturer_InfoMessage and ) when: - A SenderResponseTi mer is received Or times out. Figure 8.159, \"Give Manufacturer Information State Diagram\" Source Sink Cable Plug Get_Manufacturer_InfoMessage Section 6.5.6, \"Get_Manufacturer_Info Message\" shows the state diagram for a, or on receiving a Figure 8.159 Give Manufa.c Stueer earls Ion formation State Diagram. Get_Manufacturer_Info Message received PE_Give_Manufacturer_Info PE_SRC_Ready, Actions on entry: PE_SNK_Ready or Get present Manufacturer Information from Device Policy Manager PE_CBL_Ready Manufacturer_Info Send Manufacturer_Info Message (based on Device Policy Manager response) Message sent Power = Explicit Contract PD = Connected Policy EngineShall PE_Give_Manufacturer_Info PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready Get_Manufacturer_InfoMessage The transition to the state, from either the, PorE _Give_Manufac tsutarteer,_ wInhfeon a Policy EngineShal l is received. Device Policy Manager Manufacturer_InfoMessage On entry to the state the request the manufacturer information fromP tohliec y EngineShall and then send a PE_SRC_Ready PE_SNK_ Rbeaaseddy on PthEi_sC sBtaLt_uRse.ady Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" Figure 8T.h2e0 3, \"Cable Read y Stat etr Daniasgitriaomn \"back to either the, or state as appropriate (see, and - Manufacturer_InfoMe)s swahgeen: The has been successfully sent. Figure 8.160, \"Get Country Codes State Diagram\" Source Sink Device Policy Manager Port Partner Cable Plug Section 6.5.11, \"Country_Codes Message\" shows the state diagram for a or on receiving a request from the to get the or 's Country Codes. See also. Figure 8.160 Get Country Codes State Diagram get country codes request PE_Get_Country_Codes from Device Policy Manager Actions on entry: PE_SRC_Ready or Send Get_Country_Codes Message PE_SNK_Ready Initialize and run SenderResponseTimer Country_Codes Message received | Actions on exit: SenderResponseTimer Pass Country Codes/outcome to Device Policy Manager Timeout Power = Explicit Contract PD = Connected Policy EngineShall PE_Get_Country_Codes PE_SRC_Ready PE_SNK_Ready Device Policy Manager The transition to the state, from either the or PstEa_tGe,e dt_uCeo tuon at rrye_qCuoedset sto get the rPeomlicoyte E CnoguinnetrSyh Caolldes fromG etht_eC ountry_CodesMessage. SenderResponseTimer On entry to the state the send a and initialize and runP tEh_eG et_Country_Codes. Policy EngineShall Device Policy Manager On exit from the state the inform the of the outcoPmoliec y(C EonugnintreyS Choadlels or response timeout). PE_SRC_Ready PE_SNK_Ready Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" The transition back to either the or state as appropriate (see - Country_CodesMessage and ) when: - A SenderRespon seTimer is received Or times out. Figure 8.161, \"Give Country Codes State Diagram\" Source Sink Get_Country_CodesMessage Section 6.5.11, \"Country_Codes Message\" shows the state diagram for a or on receiving a. SeFei gaulsroe 8.161 Give Country Codes State Diag.ram Get_Country_Codes Message received PE_Give_Country_Codes PE_SRC_Ready or Actions on entry: PE_SNK_Ready Get present Country Codes from Device Policy Manager Country_Codes Send Country_Codes Message (based on Device Policy Manager response) Message sent Power = Explicit Contract PD = Connected Policy EngineShall PE_Give_Country_Codes PE_SRC_Ready PE_SNK_Ready Get_Country_CodesMessage The transition to the state, from either the or PStEa_tGei, vweh_Ceonu an try_Codes Policy En igsi nreecSehivaelld. Device Policy Manager Country_CodesMessage On entry to the state the request the country codes from the Policy Engin aenSdh tahleln send a PE_S cRoCn_tRaeinaidnyg thePsEe_ cSoNdKe_sR.eady Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" The transition back to either the or State as appropriate (see - Country_CodesMessage and ) when: The has been successfully sent. Figure 8.162, \"Get Country Information State Diagram\" Source Sink Device Policy Manager Port Partner Cable Plug Section 6.5.12, \"Country_Info Message\" shows the state diagram for a or on receiving a request from the to get the or 's Country Information. See also Fi.gure 8.162 Get Country Information State Diagram get country information request PE_Get_Country_Info from Device Policy Manager Actions on entry: PE_SRC_Ready or Send Get_Country_Info Message PE_SNK_Ready Initialize and run SenderResponseTimer Country_Info Message received | Actions on exit: SenderResponseTimer Pass Country Information/outcome to Device Policy Manager Timeout Power = Explicit Contract PD = Connected Policy EngineShall PE_Get_Country_Info PE_SRC_Ready PE_SNK_Ready Device Policy Manager The transition to the state, from either the or PstEa_tGe,e dt_uCeo tuon at rreyq_Iunefsot to get theP roelmicoy tEen MgianneuSfahcatlulrer InfoGrmeta_tMioann furofamct tuhree r_InfoMessage. SenderResponseTimer On entry to the state the send a and initialize and runP tEh_eG et_Country_Info. Policy EngineShall Device Policy Manager On exit from the state the inform the of the outcoPmoliec y(c Eonugnitnrey Sinhfaolrlmation or response timeout).PE_SRC_Ready PE_SNK_Ready Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" The transition back to either the or state as appropriate (see - Country_InfoMessage and ) when: - A SenderRespo nseTim eisr received Or times out. Figure 8.163, \"Give Country Information State Diagram\" Source Sink Get_Country_InfoMessage Section 6.5.12, \"Country_Info Message\" shows the state diagram for a or on receiving a. SFeieg uarlseo 8.163 Give Country Information Stat.e Diagram Get_Country_Info Message received PE_Give_Country_Info PE_SRC_Ready or Actions on entry: PE_SNK_Ready Get present Country Information from Device Policy Manager Country_Info Send Country_Info Message (based on Device Policy Manager response) Message sent Power = Explicit Contract PD = Connected Policy EngineShall PE_Give_Country_Info PE_SRC_Ready PE_SNK_Ready Get_Country_InfoMessage The transition to the state, from either the or PStEa_tGei, vweh_Ceonu an try_Info Policy En igsi nreecSehivaelld. Device Policy Manager Country_InfoMessage On entry to the state the request the country information from the Policy EngineShal alnd then send a P E_SRC_R ceoandtyaininPgE t_hSiNs Kco_Ruenatrdyy information. Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" The transition back to either the or State as appropriate (see - Country_InfoMessage and ) when: The has been successfully sent. Figure 8.164, \"Get Revision State Diagram\" Source Sink Device Policy Manager Port Partner Cable Plug Section 6.3.24, \"Get_Revision Message\" Section 6.4.12, s\"hRoewvissi tohne M steastsea dgiea\"gram for a or on receiving a request from the to get the or 's Revision Information. See also and Figure 8.164 Get Revisio.n State Diagram get Revision request PE_Get_Revision from Device Policy Manager Actions on entry: PE_SRC_Ready or Send Get_Revision Message PE_SNK_Ready Initialize and run SenderResponseTimer Revision Message received | Actions on exit: SenderResponseTimer Pass Revision Information/outcome to Device Policy Manager Timeout Power = Explicit Contract PD = Connected Policy EngineShall PE_Get_Revision PE_SRC_Ready PE_SNK_Ready Device Policy Manager The transition to the state, from either the or state, due to a rePqEu_eGsett t_oR egveits tihoen remote RePvoilsiicoyn E InngfoinremSahtaiolnl from thGee t_RevisionMessage. SenderResponseTimer On entry to the state the send a and initialize and run the PE_Get_Rev.ision Policy EngineShall Device Policy Manager On exit from the state the inform the of the outcome (RevPisoiloicny i nEfnogrimneaStihoanl olr response timeout). PE_SRC_Ready PE_SNK_Ready Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" The transition back to either the or state as appropriate (see - RevisionMessage and ) when: - A SenderR esponse iTsi rmeecerived Or times out. Figure 8.165, \"Give Revision State Diagram\" Source Sink Cable Plug Get_RevisionMessage Section 6.3.24, \"Get_Revision Message\" Section 6.4.12, \"Revision Message\" shows the state diagram for a, or on receiving a. See also Figure 8.165 Give Revision State aDnidag ram. Get_Revision Message received PE_Give_Revision PE_SRC_Ready, PE_SNK_Ready or Actions on entry: Get present Revision Information from Device Policy Manager PE_CBL_Ready Revision Send Revision Message (based on Device Policy Manager response) Message sent Power = Explicit Contract PD = Connected Policy EngineShall PE_Give_Revision PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready Get_RevisionMessage The transition to the state, from either the, or sPtEat_eG,i wveh_eRne vai sion Policy En igsi rneecSehivaeldl. Device Policy Manager RevisionMessage On entry to the state the request the Revision information from the Policy Engin aenSdh tahleln send a baPsEed_S oRnC t_hRiesa idnfyorPmEa_StiNoKn_.Ready PE_CBL_Ready Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" Figure 8T.h2e0 3, \"Cable Read y Stat etr Daniasgitriaomn \"back to either the, or state as appropriate (see, and - RevisionMessage ) when: The has been successfully sent. Figure 8.166, \"DFP Enter_USB Message State Diagram\" Enter_USBMessage DFP shows the state diagram for an sent by a. Figure 8.166 DFP Enter_USB Message State Diagram PE_DEU_Send_Enter_USB Enter USB (USB Mode) Actions on entry: request from DPM Send Enter_USB Message Initialize and run SenderResponseTimer Accept Message Received | PE_SRC_Ready or Actions on exit: Reject Message Received | PE_SNK_Ready (DFP) Inform Device Policy Manager of Accept, Wait Message Received | Wait, Reject or timeout. SenderResponseTimer timeout Power = Explicit Contract PD = connected PE_DEU_Send_Enter_USB Shall PE_SRC_Ready PE_SNK_Ready Device Policy Manager DFP The State be entered from the or State when requested by thPe E_DEU_Send_Enter_US Band the PorPto ilsi coyp EenragtiinnegS ahsa al l. Protocol Layer Enter_USBMessage SenderResponseTimer On entry to the State the request the to send an PE_ aDnEdU t_hSeenn din_iEtniatleizre_U aSnBd run the Policy EngineShall. Device Policy Manager AcceptMessage RejectMessage SenderResponseTimer On exit from the state the inform the of the outcPoomliec:y Engine Shall received, PE_SRC r_eRceeaivdeyd, PE_SNK_Ready timeout. Power Role The transition back to the or State depending on the Ports - when:AcceptMessage - AnW aitMe ssage has been received or - A Rejec tMessag ehas been received or - A Sender Rhaess pboenense rTeicmeievred There is a timeout. Figure 8.167, \"UFP Enter_USB Message State Diagram\" Enter_USB UFP Cable Plug shows the state diagram for an Message received by a or. Figure 8.167 UFP Enter_USB Message State Diagram PE_UEU_Enter_USB_Received Enter_USB Message Received Actions on entry: PE_SRC_Ready (UFP), Inform Device Policy Manager of Enter_USB Message PE_SNK_Ready (UFP) or Send Accept/Wait/Reject Message based on DPM response PE_CBL_Ready Accept/Wait/Reject Message sent Power = Explicit Contract PD = connected PE_UEU_Enter_USB_Received Shall PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State TDhiaeg ram\" Figure 8.203, \"Cable sRteaatde y State b De ieangtrearmed\" from the Enter_USBMes, sage or U sFtaPte as apCparbolper Pialuteg (see, and ) when an is received and the Port is operating as a PE_ oUrE iUs _aE nter_USB_R. eceived Policy EngineShall Device Policy Manager Device Policy Manager Enter_USBMessage On ePnotrliyc yto E tnhgei neShall Accept sMtaetses athgee WaitMessa ge inRfoerjemc tthMee ssage. The responds with an indication of whether the is to be accepted or rejected. The Policy Engine Shall send either an PE_SRC_R, ae ady P E_SNK_R oera ad y PE _CBL_Re aads yappropriate. The transition back to the, or state as app- ropriate whenA:cceptMessage WaitMessage RejectMessage Either an, a or a has been sent. Figure 8.168, \"Send security request State Diagram\" Source Sink Device Policy Manager Section 6.5.8, \"Security Messages\" shows the state diagram for a or on receiving a request from the Figure 8.1 to6 8se Snedn ad sseeccuurritiyty r erqeuqeusets. tS eSeta atles oD iagram. Send security request PE_Send_Security_Request from Device Policy Manager PE_SRC_Ready or PE_SNK_Ready Actions on entry: Send Security_Request Message Security_Request Message sent Power = Explicit Contract PD = Connected Policy EngineShall PE_Send_Security_Request PE_SRC_Ready PE_SNK_Ready Device Policy Manager The transition to the state, from either the or PstEa_tSee, nddue_S teoc au rrietqyu_Resetq tuoe ssetnd a securPitoyli rcey qEunegsitn feroShma tlhle Security_Reques.t Message On ePnotrliyc yto E tnhgei neShall state the PE_SRC_Read y P Ese_SnNdK a_ Ready. Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" The transition back to either the or state as appropriate (see - Security_RequestMessage and ) when: The has been sent. Figure 8.169, \"Send security response State Diagram\" Source Sink Cable Plug Security_RequestMessage Section 6.5.8, \"Security Messages\" shows the state diagram for a, or on receiving a F igure 8.. 1S6ee9 aSleson d security response State Diagr.am Security_Request Message received PE_Send_Security_Response PE_SRC_Ready, Actions on entry: PE_SNK_Ready or Get present Security response from Device Policy Manager PE_CBL_Ready Security_Response Send Security_Response Message (based on Device Policy Manager response) Message sent Power = Explicit Contract PD = Connected Policy EngineShall PE_Send_Security_Response PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready Security_RequestMessage The transition to the state, from either the, PorE _Send_Security _sRtaetsep, ownhseen a Policy Engin eShall is received. Device Policy Manager Security_ResponseMessage On entry to the state the request the appropriate response from the Policy EngineShall and then send a PE_SRC_R eady PE _bSaNsKed_R oena tdhyis stPaEtu_sC.BL_Ready Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" Figure 8T.h2e0 3, \"Cable Read y Stat etr Daniasgitriaomn \"back to either the, or state as appropriate (see, and - Security_ResponseMe)s swagheen: The has been successfully sent. Figure 8.170, \"Security response received State Diagram\" Source Sink Security_ResponseMessage Section 6.5.8, \"Security Messages\" shows the state diagram for a or on receiving a Fig. uSreee 8al.s1o7 0 Security response received S.tate Diagram Security_Response Message received PE_Security_Response_Received PE_SRC_Ready or Actions on entry: PE_SNK_Ready Inform Device Policy Manager of the security response details. DPM informed Power = Explicit Contract PD = Connected Policy EngineShall PE_Security_Response_Received PE_SRC_Ready PE_SNK_Ready Security_ResponseMessage The transition to the state, from either the or PwEh_eSne cau rity_Response_Rec eived is recePivoelidcy. EngineShall Device Policy Manager On entry to the state the inform the of the dPeotlaiiclys Eonf gthinee sSehcuarlilty response. PE_SRC_Ready PE_SNK_Ready Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" Figure 8.203, \"Cable Ready TSthaet e Diagram\" transition back to either the or state as appropriate (see, and - Dev)i wceh Peonl:icy Manager The has been informed. Figure 8.171, \"Send firmware update request State Diagram\" Source Sink Device Policy Manager Section 6.5.9, \"Firmware Update Messages\" shows the state diagram for a or on receiving a request from the to send a firmware update request. See also Figu.re 8.171 Send firmware update request State Diagram Send firmware update request from Device Policy Manager PE_Send_Firmware_Update_Request PE_SRC_Ready or PE_SNK_Ready Actions on entry: Send Firmware_Update_Request Message Firmware_Update_Request Message sent Power = Explicit Contract PD = Connected Policy EngineShall PE_Send_Firmware_Update_Request PE_SRC_Ready PE_SNK_Ready Device Policy TMhaen ager transition to the state, from either the or state, due to a request to send a firmware update request from the. PE_Send_Firmware_Update_Request Policy EngineShall Firmware_Update_RequestMessage On entry to the state the send a Policy EngineShall. PE_SRC_Ready PE_SNK_Ready Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" The transition back to either the or state as appropriate (see - Firmware_Update_RequestM aensds age ) when: The has been sent. Figure 8.172, \"Send firmware update response State Diagram\" Source Sink Cable Plug Firmware_Update_RequestMessage Section 6.5.9, \"Firmware Update Messages\" shows the state diagram for a, or on receiving a Figure 8.172 Send firm ware u.p Sdeaet ael sroe sponse State Diagram. Firmware_Update_Request Message received PE_Send_Firmware_Update_Response PE_SRC_Ready, Actions on entry: PE_SNK_Ready or Get present firmware update response from Device Policy Manager PE_CBL_Ready Firmware_Update_Response Send Firmware_Update_Response Message (based on Device Policy Manager response) Message sent Power = Explicit Contract PD = Connected Policy EngineShall PE_Send_Firmware_Update_Response PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready Firmware_Update_RequestMessage The transition to the state, from either the, PE_Send_Firmw oarr e_Update_Resp sotnastee, when a Policy EngineShall is received. Device Policy Manager Firmware_Update_ResponseMessage On entry to the state the request the appropriate response from the and then send a based on this statuPso.licy EngineShall PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" Figure 8T.h2e0 3, \"Cable Read y Stat etr Daniasgitriaomn \"back to either the, or state as appropriate (see, and - Firmware_Update_Res)p wohnesne:Message The has been successfully sent. Figure 8.173, \"Firmware update response received State Diagram\" Source Sink Firmware_Update_ResponseMessage Section 6.5.9, \"Firmware Update Messages\" shows the state diagram for a or on receiving a Figure 8.173 Firm ware up.d Saetee a rlseos ponse received State Diagram. Firmware_Update_Response Message received PE_Firmware_Update_Response_Received PE_SRC_Ready or Actions on entry: PE_SNK_Ready Inform Device Policy Manager of the firmware update response details. DPM informed Power = Explicit Contract PD = Connected Policy EngineShall PE_Firmware_Update_Response_Received PE_SRC_Ready PE_SNK_Ready Firmware_Update_ResponseMessage The transition to the state, from either the oPrE _Firmware_Up dwahteen_R ae sponse_Received Pol icy Engin ies Srhecaellived. Device Policy Manager On entry to the state the inform the Polic yo fE tnhgei ndeeStahialsl lof the firmware update responPsEe_.SRC_Ready PE_SNK_Ready Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" Figure 8.203, \"Cable Ready STthaet e Diagram\" transition back to either the or state as appropriate (see, and - Dev)i wceh Peonl:icy Manager The has been informed. Source Sink Shall Source SinkPolicy Engine Shall Power Role Swap PE_SRC_Ready DPEu_aSl-NRKo_lRe ePaodrtys that combiSnhea ll and USB fDuenfcatuioltn Oaplietyra tion comHparirsde Reset and state machines. In addition they have the capability to perform a from the or states and retSuhranl lto [USB Typ oen-C a 2.4]DRP. 8Th.3e.S3ta.t1e9 D.i1agrams in th iDs sFePct itoon UFP aDppaltya to R eovelrey Swap State D iagr. am Figure 8.174, \"DFP to UFP Data Role Swap State Diagram\" Data Role Swap DFP UFP Shall Hard Reset shows the additional state diagram required to perform a from to operation and the changes that be followed for error and handling. Figure 8.174 DFP to UFP Data Role Swap State Diagram DR_Swap message received & PE_SRC_Hard_Reset or in Modal Operation PE_SNK_Hard_Reset PE_SRC_Ready or PE_SNK_Ready (DFP) Data Role Swap required (indication from Message sent Device Policy Manager) DR_Swap message received & Reject message received | not in Modal Operation Wait message received | SenderResponseTimer timeout PE_DRS_DFP_UFP_ PE_DRS_DFP_UFP_Evaluate_Swap PE_DRS_DFP_UFP_ Reject_Swap Dat Fa u R rto hl ee r S ew vaa lp u an to iot no k | Send_Swap A S Mec ent si do s an R gs e e o j e an c s te aon prt pr Wy ro: a pit r iate required A G rec e qt ti ueo evn sas tl uo frn a ot e mion nt Dr o ey f v: iD ca et Pa o R lio cl ye MSw anap ag er A S Inec int ti ido a n S lis w z eo a n p a n e D dn R t r r m uy n: e ssage Power = Explicit Contract SenderResponseTimer Power = Explicit Contract PD = Connected PD = Connected Power = Explicit Contract PD = Connected Data Role Swap ok Accept received PE_DRS_DFP_UFP_ Accept_Swap Actions on entry: Send Accept Message Power = Explicit Contract PD = Connected Accept message sent PE_DRS_DFP_UFP_ Change_to_UFP Actions on entry: Request Device Policy Manager to change port to UFP Power = Explicit Contract PD = Connected Port changed to UFP PE_SRC_Ready or PE_SNK_Ready (UFP) Data Role Swap Shall PE_SRC_Ready PE_SNK_Ready The process start only from either the or state where power is staPbolleic.y EngineShall PE_DRS_DFP_UFP_Evaluate_Swap The- DR_Swa pMes tsraagnesition to the state when: A is received and - Active Mode Modal Operation PoliTcyh eErneg ainree Snhoa ll s (not in PE_SRC_Har).d_Reset PE_SNK_Hard_Reset The- DR_Swa pMes tsraagnesition to either the or states when: - A is rAeccteivive eMdo adned Modal Operation PoliTcyh eErneg ainree Sohnael olr more PEs_ D(RS_DFP_UFP_Sen).d_Swap The- Devic e Polic tyr aMnasnitaiogner to the Data Role Swap state when: 8.3.3.1T9h.e1.2 PE_DR inSd_iDcaFtePs_ tUhaFtP a_ Evaluate_Sw iasp re Sqtuairteed. PE_DRS_DFP_UFP_Evaluate_Swap Policy EngineShall Device Policy Manager Data Role Swap On entry to the state the ask the whetPhoelirc ay EngineShall can be made. PE_DRS_DFP_UFP_Accept_Swap The- Devic e Polic tyr aMnasnitaiogner to the Data Role Swap state when: PoliTcyh eE ngineShall indicaPteEs_ DthRaSt_ aD FP_UFP_Reject_ Sisw OaKp. The- Devic e Polic tyr aMnasnitaiogner to the Data Role Swap state when: - The inDdaitcaa tReosl eth Sawt aap is not OK. 8.3.3.1O9r. 1fu.r3ther evaluati o Pn Eof_ tDhRe S_DFP_UFP_A recqcueepstt _isS wneaedpe Sd.tate PE_DRS_DFP_UFP_Accept_Swap Policy EngineShall Protocol Layer AcceptMessage On entry to the state the request the to send an Pol icy Engin.eShall PE_DRS_DFP_UFP_Change_to_UFP The- Accep tMes staragnesition to the state when: 8.3.3.1T9h.e1.4 P hEas_ DbeReSn _sDenFtP. _UFP_Change_to_UFP State PE_DRS_DFP_UFP_Change_to_UFP Policy EngineShall Device Policy Manager DFP UFP On entry to the state the request the to chPaonlgicey t Ehneg PinoertS fhroamll a to a. PE_SRC_Ready PE_SNK_Ready The- Devic e Polic tyr aMnasnitaiogner to either the or U sFtaPte when: 8.3.3.1T9h.e1.5 PE_DR inSd_iDcaFtePs_ tUhaFtP th_Se ePnordt _hSaws baepen S cthaatneged to a. PE_DRS_DFP_UFP_Send_Swap Policy EngineShall Protocol Layer DR_SwapMessage Shall SenderResponseTimer On entry to the state the request the to send a PE a_nDdR S_DFP s_tUarFtP t_hSee nd_Swap Policy. EngineShall SenderResponseTimer On ePxoitl ifcryo Emn tghine eShall DFP Sh satallte the P Es_tSoRp Cth_Ree ady PE_SNK_Ready. The continue as a and transition to either the or state whe- n: RejectMessage - A Wai tMessag eis received. - Or a Sen derResp iosn rseecTeiimveedr. PoliOcyr Ethneg ineShall timPEe_sD oRuSt._DFP_UFP_Change_to_UFP The- Accept Mess atrgaensition to the state when: 8.3.3.1A9n. 1.6 iPs Ere_cDeiRveSd_.DFP_UFP_Reject_Swap State PE_DRS_DFP_UFP_Reject_Swap Policy EngineShall Protocol Layer On entry to the state the request the to send: - RejectMessage Data Role Swap - A WaitM essage if the device is unable to pDearftoar Rmo lae Swap at this time. Note: A if further evaluation of theP ort Partner request DisR r_eSqwuiarpedM.essage Section 6.3.12.3, \"Wait in response to a DR_Swap Message\" In this case it is expected that one of the s will send a at a later time (see Policy EngineShall DFP Shall ). PE_SRC_Ready PE_SNK_Ready The continue as a and transition to either the or state whe- n: Reject WaitMessage The or has been sent. Figure 8.175, \"UFP to DFP Data Role Swap State Diagram\" Data Role Swap DRPUFP DFP Shall Hard Reset shows the additional state diagram required to perform a from to operation and the changes that be followed for error and handling. Figure 8.175 UFP to DFP Data Role Swap State Diagram DR_Swap Message received & PE_SRC_Hard_Reset or in Modal Operation PE_SNK_Hard_Reset PE_SRC_Ready or PE_SNK_Ready (UFP) Reject Message received | Wait Message received | SenderResponseTimer timeout DR_Swap Message received & Data Role Swap required Message sent not in Modal Operation (indication from Device Policy Manager) PE_DRS_UFP_DFP_ PE_DRS_UFP_DFP_Evaluate_Swap PE_DRS_UFP_DFP_ Reject_Swap Data Role Swap not ok | Send_Swap A Sec nti do n Rs e o jen c te on rtr Wy: ait Message as Furth re er q e uv ira elu dation A Gc et ti eo vn as l uon at e ion ntr oy f: Data Role Swap A Sec nti do n Ss w o an p e Dn Rt r My: essage appropriate request from Device Policy Manager Initialize and run SenderResponseTimer Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected Power = Explicit Contract PD = Connected Data Role Swap ok PE_DRS_UFP_DFP_ Accept received Accept_Swap Actions on entry: Send Accept Message Power = Explicit Contract PD = Connected Accept Message sent PE_DRS_UFP_DFP_ Change_to_DFP Actions on entry: Request Device Policy Manager to change port to DFP Power = Explicit Contract PD = Connected Port changed to DFP PE_SRC_Ready or PE_SNK_Ready (DFP) Data Role Swap Shall PE_SRC_Ready PE_SNK_Ready The process start only from the either the or state where powePro liisc yst Eanbglei.neShall PE_DRS_UFP_DFP_Evaluate_Swap The- DR_Swa pMes tsraagnesition to the state when: - A Active M iso dreeceived anMdodal Operation There are no s (not in ). Policy EngineShall PE_SRC_Hard_Reset PE_SNK_Hard_Reset The- DR_Swa pMes tsraagnesition to either the or states when: - A is rAeccteivive eMdo adned Modal Operation PoliTcyh eErneg ainree Sohnael olr more PEs_ D(RS_UFP_DFP_Sen).d_Swap The- Devic e Polic tyr aMnasnitaiogner to the Data Role Swap state when: 8.3.3.1T9h.e2.2 PE_DR inSd_iUcaFtePs_ tDhaFtP a_ Evaluate_Sw iasp re Sqtuairteed. PE_DRS_UFP_DFP_Evaluate_Swap Policy EngineShall Device Policy Manager Data Role Swap On entry to the state the ask the whetPhoelirc ay EngineShall can be made. PE_DRS_UFP_DFP_Accept_Swap The- Devic e Polic tyr aMnasnitaiogner to the Data Role Swap state when: PoliTcyh eE ngineShall indicaPteEs_ DthRaSt_ aU FP_DFP_Reject_ Sisw OaKp. The- Devic e Polic tyr aMnasnitaiogner to the Data Role Swap state when: - The inDdaitcaa tReosl eth Sawt aap is not OK. 8.3.3.1O9r. 2fu.r3ther evaluati o Pn Eof_ tDhRe S_UFP_DFP_A recqcueepstt _isS wneaedpe Sd.tate PE_DRS_UFP_DFP_Accept_Swap Policy EngineShall Protocol Layer AcceptMessage On entry to the state the request the to send an Pol icy Engin.eShall PE_DRS_UFP_DFP_Change_to_DFP The- Accep tMes staragnesition to the state when: 8.3.3.1T9h.e2.4 P hEas_ DbeReSn _sUenFtP. _DFP_Change_to_DFP State PE_DRS_UFP_DFP_Change_to_DFP Policy EngineShall Device Policy Manager UFP DFP On entry to the state the request the to chPaonlgicey t Ehneg PinoertS fhroamll a to a. PE_SRC_Ready PE_SNK_Ready The- Devic e Polic tyr aMnasnitaiogner to either the or D sFtaPte when: 8.3.3.1T9h.e2.5 PE_DR inSd_iUcaFtePs_ tDhaFtP th_Se ePnordt _hSaws baepen S cthaatneged to a. PE_DRS_UFP_DFP_Send_Swap Policy EngineShall Protocol Layer DR_SwapMessage Shall SenderResponseTimer On entry to the state the request the to send a PE a_nDdR S_UFP s_tDarFtP t_hSee nd_Swap Policy. EngineShall SenderResponseTimer On ePxoitl ifcryo mEn tghine eShall UFP Sh satallte the P Es_tSoRp Cth_Ree ady PE_SNK_Ready. The continue as a and transition to either the or state whe- n: RejectMessage - A Wai tMessag eis received. - Or a Sen derResp iosn rseecTeiimveedr. PoliOcyr Ethneg ineShall timPEe_sD oRuSt._UFP_DFP_Change_to_DFP The- Accept Mess atrgaensition to the state when: 8.3.3.1A9n. 2.6 iPs Ere_cDeiRveSd_.UFP_DFP_Reject_Swap State PE_DRS_UFP_DFP_Reject_Swap Policy EngineShall Protocol Layer On e- ntry tRo etjheec tMessage state the Data Role Swap request the to send: A if the device is unable to perform a at this time. - WaitMessage Data Role Swap Note: A if further evaluation of theP ort Partner request DisR r_eSqwuiarpedM.essage Section 6.3.12.3, \"Wait in response to a DR_Swap Message\" In this case it is expected that one of the s will send a at a later time (see Policy EngineShall UFP Shall ). PE_SRC_Ready PE_SNK_Ready The continue as a and transition to the either the or stat- e when: Reject WaitMessage The or has been sent. Source Sink Shall Source SinkPolicy Engine Shall Power Role Swap PE_SRC_Ready DShuaalll-Role PortsU tShBa tD ceofmaubltin Oep eration and Har fdu nRcetsieotnality comprise and state machines. In addition, they have the capability to do a from the state and Figur er e8t.1u7rn6, t\"oD ual-Role Port in Source oton Sai nk Power Ro.le Swap State Diagram\" Power Role Swap Source SinkPower Role Shall shows the additional state diagram required to perform a from to s and the changes that be followed for error handling.Figure 8.176 Dual-Role Port in Source to Sink Power Role Swap State Diagram Message sent PE_SRC_Ready Reject Message received | Wait Message received | PR_Swap Message received Power Role Swap required SenderResponseTimer (indication from timeout Device Policy Manager) PE_PRS_SRC_SNK_ PE_PRS_SRC_SNK_ Reject_PR_Swap Power Role Swap not ok | Evaluate_Swap Further evaluation Actions on entry: required Actions on entry: PE_PRS_SRC_SNK_ Send Reject or Wait Message as Get evaluation of swap request Send_Swap appropriate from Device Policy Manager Actions on entry: Power = Explicit Contract Power = Explicit Contract Send PR_Swap Message PD = Connected PD = Connected Initialize and run SenderResponseTimer Power Role Swap ok Power = Explicit Contract PD = Connected PE_PRS_SRC_SNK_ Accept_Swap Actions on entry: Accept received Send Accept Message Power = Explicit Contract PD = Connected Accept Message sent PE_PRS_SRC_SNK_ Transition_to_off Actions on entry: Tell Device Policy Manager to turn off power supply Power = Transition to stop sourcing PD = Connected Source turned off PE_PRS_SRC_SNK_ Assert_Rd Actions on entry: Request DPM to assert Rd Power = Source off PD = Connected Rdasserted PSSourceOnTimer Timeout | PS_RDY Message not sent after retries (no GoodCRC received) PE_PRS_SRC_SNK_ Wait_Source_on Actions on entry: Send PS_RDY Message Initialize and run PSSourceOnTimer Power = Source off PD = Connected PS_RDY Message received ErrorRecovery PE_SNK_Startup Power Role Swap Shall PE_SRC_Ready The Policy EngineSha pllrocess start PoEn_lPy RfrSo_mSR tCh_eS NK_Evaluate_S wstaapte where power is stable. The- PR_Swa pMes straagnesition to the state when: PoliAcy EngineSh all is received.PE_PRS_SRC_SNK_Send_Swap The- Devic e Polic tyr aMnasnitaiogner to the Power Role Swap state when: 8.3.3.1T9h.e3.2 PE_PR inSd_iScRatCes_ SthNaKt a_ Evaluate_Swa pis Sretqautiered. PE_PRS_SRC_SNK_Evaluate_Swap Policy EngineShall Device Policy Manager Power Role Swap On entry to the state the ask the whetPhoelirc ay EngineShall can be made.PE_PRS_SRC_SNK_Accept_Swap The- Devic e Polic tyr aMnasnitaiogner to the Power Role Swap state when: PoliTcyh eE ngineShall indicaPteEs_ PthRaSt_ SaR C_SNK_Reject_Sw isa OpK. The- Devic e Polic tyr aMnasnitaiogner to the Power Role Swap state when: - The inPdoiwcaetre Rs otlhea St wa ap is not OK. 8.3.3.1O9r. 3fu.r3ther evaluati o Pn Eof_ tPhRe S_SRC_SNK_Ac rceeqpuets_tS iws naepe dSetda.te PE_PRS_SRC_SNK_Accept_Swap Policy EngineShall Protocol Layer AcceptMessage On entry to the state the request the to send an Pol icy Engin.eShall PE_PRS_SRC_SNK_Transition_to_off The- Accep tMes staragnesition to the state when: 8.3.3.1T9h.e3.4 P hEas_ PbeReSn_ sSeRntC._SNK_Transition_to_off State PE_PRS_SRC_SNK_Transition_to_off Policy EngineShall Device Policy Manager Source On entry to the state the request the to tuPrnol oicfyf tEhneg ineSha.ll PE_PRS_SRC_SNK_Assert_Rd The- Devic e Polic tyr aMnasnitaiogner to the Source state when: 8.3.3.1T9h.e3.5 PE_PR inSd_iScRatCes_ SthNaKt t_hAe ssert_ Rhads bSeteant eturned off. PE_PRS_SRC_SNK_Assert_Rd Policy EngineShall Device Policy Manager CC R R On entry to the state the request the to chanPgoel itchye E rnegsiisnteoSr haassllerted on the wiPrEe _fProRmS_ SRp Cto_S NdK. _Wait_Source_on The- Devic e Polic tyr aMnasnitaiogner to the R state when: 8.3.3.1T9h.e3.6 PE_PR inSd_iScRatCes_ SthNaKt _dW isa aists_eSroteudr.ce_on State PE_PRS_SRC_SNK_Wait_Source_on Policy EngineShall Protocol Layer PS_RDYMessage Shall PSSourceOnTimer On entry to the state the request the to send a So aunrdce start theP olicy EngineShall. PSSourceOnTimer On ePxiotl ifcryo mEn tghien eShall off state the PE_SNK_S tartu sptop the. The- PS_RDY Messa tgreansition to the when: Source PoliAcy Engine Shall is received indEircraotrinRge tchoavte trhye remote is now supplying power. The transition to the state when: - PSSourceOnTimer - The PS_RDYMessage times out or GoodCRCMessage Note: The Soft Rese tShall N oist not sent after retries (a has not been received). 8.3.3.19A.3.7 PE_ bPeR inSi_tSiaRteCd_ iSnN thKis_ Scaesne.d_Swap State PE_PRS_SRC_SNK_Send_Swap Policy EngineShall Protocol Layer PR_SwapMessage Shall SenderResponseTimer On entry to the state the request the to send a P Ea_nPdR S_SRC s_tSaNrtK t_hSee nd_Swap Policy. EngineShall SenderResponseTimer On ePxiotl ifcryo mEn tghien eShall PE_SR Cs_tRateea tdhye stop the. The- RejectM essag teransition to the state when: - A Wai tMessag eis received. - Or a Sen derResp iosn rseecTeiimveedr. PoliOcyr Ethneg ineShall timPEe_sP oRuSt_.SRC_SNK_Transition_to_off The- Accept Mess atrgaensition to the state when: 8.3.3.1A9n. 3.8 iPs Ere_cPeiRveSd_.SRC_SNK_Reject_Swap State PE_PRS_SRC_SNK_Reject_Swap Policy EngineShall Protocol Layer On e- ntry tRo etjheec tMessage state the Power Ro le Swa rpequest the to send: - A WaitM essage if the device is unable to pPeorwfoerrm R ao le Swap at this time. Note: A if further evaluation of theP ort Partner requesPt iRs_ rSewqaupireMde.ssage Section 6.3.12.2, \"Wait in response to a PR_Swap Message\" In this case it is expected that one of the s will send a at a later time (see Policy EngineShall PE_SRC_Ready ). The- Rejec t W tariatnMsietisosnag teo the when: The or has been sent. Sink Source Shall Sink SourcePolicy Engine Shall Power Role Swap PE_SNK_Ready DShuaalll-Role PortsU tShBa tD ceofmaubltin Oep erat iaonnd Har fdu nRcetsieotnality comprise and state machines. In addition, they have the capability to do a from the state and Figur er e8t.1u7rn7, t\"oD ual-role Port in Sink to oSonu ar ce Power Ro.le Swap State Diagram\" Power Role Swap Sink SourcePower Role Shall shows the additional state diagram required to perform a from to s and the changes that be followed for error handling. Figure 8.177 Dual-role Port in Sink to Source Power Role Swap State Diagram Message sent PE_SNK_Ready Reject Message received | Power Role Swap required Wait Message received | PR_Swap Message received (indication from SenderResponseTimer Device Policy Manager) timeout PE_PRS_SNK_SRC_ PE_PRS_SNK_SRC_ Reject_Swap Power Role Swap not ok | Evaluate_Swap Further evaluation PE_PRS_SNK_SRC_ Actions on entry: required Actions on entry: Send_Swap Send Reject or Wait Message Get evaluation of swap request as appropriate from Device Policy Manager Actions on entry: Send PR_Swap Message Power = Explicit Contract Power = Explicit Contract Initialize and run SenderResponseTimer PD = Connected PD = Connected Power Role Swap ok Power = Explicit Contract PD = Connected PE_PRS_SNK_SRC_Accept_Swap Actions on entry: Send Accept Message Disable Fast Role Swap Receiver if enabled Accept Message received Power = Explicit Contract PD = Connected Accept Message sent PE_PRS_SNK_SRC_ Transition_to_off Actions on entry: PSSourceOffTimer timeout Initialize and run PSSourceOffTimer Tell Device Policy Manager to turn off Power Sink. Power = Transition to stop sinking PD = Connected PS_RDY Message received PE_PRS_SNK_SRC_ Assert_Rp ErrorRecovery Actions on entry: Request DPM to assert Rp Power = Source off PD = Connected Rpasserted PE_PRS_SNK_SRC_ Source_on Actions on entry: Tell Device Policy Manager to turn on PS_RDY Message not sent Source after retries (no GoodCRC received) Actions on exit: Send PS_RDY Message Power = Transition to source on PD = Connected VBUS is at vSafe5V PE_SRC_Startup Power Role Swap Shall PE_SNK_Ready The Policy EngineSha pllrocess start PoEn_lPy RfrSo_mSN tKh_eS RC_Evaluate_Sw staapte where power is stable. The transition to the state when: - PR_SwapMessage PoliAcy EngineSh all is received.PE_PRS_SNK_SRC_Send_Swap The- Devic e Polic tyr aMnasnitaiogner to the Power Role Swap state when: 8.3.3.1T9h.e4.2 PE_PR inSd_iScNatKes_ tShRatC a_ Evaluate_Swa pis Sretqautiered. PE_PRS_SNK_SRC_Send_Swap Policy EngineShall Device Policy Manager Power Role Swap On entry to the state the ask the whether a Policy EngineS chaanl lbe made. PE_PRS_SNK_SRC_Accept_Swap The- Devic e Polic tyr aMnasnitaiogner to the Power Role Swap state when: PoliTcyh eE ngineShall indicaPteEs_ PthRaSt_ SaN K_SRC_Reject_Sw isa OpK. The- Devic e Polic tyr aMnasnitaiogner to the Power Role Swap state when: 8.3.3.1T9h.e4.3 PE_PR inSd_iScNatKes_ tShRatC a_ Accept_Swap Sist anotet OK. PE_PRS_SNK_SRC_Accept_Swap Policy EngineShall Protocol Layer AcceptMessage Shall Fast Role Swap On entry to the state the request the to send an Pol icy Engin aenSdh all disable the PE_PRS_SNK r_eScReCiv_Terr aifn tshitisio isn _etnoa_boflefd. The- Accep tMes staragnesition to the state when: 8.3.3.1T9h.e4.4 P hEas_ PbeReSn_ sSeNntK. _SRC_Transition_to_off State PE_PRS_SNK_SRC_Transition_to_off Policy EngineShall PSSourceOffTimer Device Policy Manager Sink On entry to the state the initialize and run the Policy EngineS haanldl then request the ErrorRecovery to turn off the. The- PSSou rceO ftfrTainmsietrion to the state when: PoliTcyh eE ngineShall times ouPt.E_PRS_SNK_SRC_Assert_Rp The- PS_RDY Messa tgreansition to the state when: 8.3.3.1A9.4.5 i sP rEe_cPeiRveSd_.SNK_SRC_Assert_Rp State PE_PRS_SNK_SRC_Assert_Rp Policy EngineShall Device Policy Manager CC R R On entry to the state the request the to chanPgoel itchye E rnegsiisnteoSr haassllerted on the wiPrEe _fProRmS_ SNd Kto_ SRpC. _Source_on The- Devic e Polic tyr aMnasnitaiogner to the R state when: 8.3.3.1T9h.e4.6 PE_PR inSd_iScNatKes_ tShRatC _dS ios uasrsceert_eodn. State PE_PRS_SNK_SRC_Source_on Policy EngineShall Device Policy Manager Source On entry to the state the request the to turn on the. PE_PRS_SNK_SRC_Source_on Policy EngineShall PS_RDYMessage On ePxiotl ifcryo mEn tghien eShall PE_SR sCta_Steta trhteu p send a. The- Sourc e Port tVraBUnSsition vtoS athfee5 V state when: PoliTcyh eE ngineShall is at Er.rorRecovery The- PS_RD YMe stsraagnesition to the G sotoadteC wRCheMne:ssage Soft Reset Shall Not The is not sent after retries (a has not been received). A be initiated in this case. PE_PRS_SNK_SRC_Send_Swap Policy EngineShall Protocol Layer PR_SwapMessage Shall SenderResponseTimer On entry to the state the request the to send a Policy EngineS ahnadl l initialize andP Eru_SnN tKh_eR eady. The- RejectM essag teransition to the state when: - A Wai tMessag eis received. - Or a Sen derResp iosn rseecTeiimveedr. PoliOcyr Ethneg ineShall timPEe_sP oRuSt_.SNK_SRC_Transition_to_off The- Accept Mess atrgaensition to the state when: 8.3.3.1A9n. 4.8 iPs Ere_cPeiRveSd_.SNK_SRC_Reject_Swap State PE_PRS_SNK_SRC_Reject_Swap Policy EngineShall Protocol Layer On e- ntry tRo etjheec tMessage state the Power Ro le Swa rpequest the to send: - A WaitM essage if the device is unable to pPeorwfoerrm R ao le Swap at this time. Note: A if further evaluation of theP ort Partner requesPt iRs_ rSewqaupireMde.ssage Section 6.3.12.2, \"Wait in response to a PR_Swap Message\" In this case it is expected that one of the s will send a at a later time (see Policy EngineShall PE_SNK_Ready ). The- Rejec t W tariatnMsietisosnag teo the state when: The or has been sent. Source Sink Shall Source SinkPolicy Engine Should Fast Role Swap PE_SRC_Ready DShuaalll-Role PortsU tShBa tD ceofmaubltin Oep eration and Har fdu nRcetsieotnality comprise and state machines. In addition, they have the capability to do a from the state and Figur er e8t.1u7rn8, t\"oD ual-Role Port in Source o tno aS ink Fast Rol.e Swap State Diagram\" Fast Role Swap Source SinkPower Role Shall shows the additional state diagram required to perform a from to s and the changes that be followed for error handling. Figure 8.178 Dual-Role Port in Source to Sink Fast Role Swap State Diagram PE_SRC_Ready FR_Swap Message received PE_FRS_SRC_SNK_ Evaluate_Swap Actions on entry: Fast Role Swap not signaled Ask Device Policy Manager if Fast Role Swap signaled on CC wire Power = Implicit Contract PD = Connected Fast Role Swap signaled PE_FRS_SRC_SNK_ Accept_Swap Actions on entry: Send Accept Message Power = Implicit Contract PD = Connected Accept Message Accept Message not sent after sent retries (no GoodCRC received) PE_FRS_SRC_SNK_ Transition_to_off Actions on entry: PE_SRC_Hard_Reset Wait for VBUS to reach vSafe5V Power = Implicit contract PD = Connected VBUSat vSafe5V PE_FRS_SRC_SNK_ Assert_Rd Actions on entry: Request DPM to assert Rd Power = Implicit contract PD = Connected Rdasserted PE_FRS_SRC_SNK_ PSSourceOnTimer Timeout | Wait_Source_on PS_RDY Message not sent after retries (no GoodCRC received) Actions on entry: Send PS_RDY Message Initialize and run PSSourceOnTimer Power = Implicit contract PD = Connected PS_RDY Message received ErrorRecovery PE_SNK_Startup Fast Role Swap Shall PE_SRC_Ready The Policy EngineS hparlolcess start onPlEy_ fFrRomS_ StRheC _SNK_Evaluate _sStwatae pwhere power is stable. The- FR_Sw apMe tsrsaangseition to the state when: 8.3.3.1A9n. 5.2 P Eis_ rFeRceSiv_eSdR.C_SNK_Evaluate_Swap State PE_FRS_SRC_SNK_Evaluate_Swap Policy EngineShall Device Policy Manager Fast Role Swap CC On entry to the state the ask the whetPhoelirc y EngineShall has been signalePdE o_nF RthSe_ SRC w_SiNreK._Accept_Swap The- Devic e Polic tyr aMnasnitaiogner to the Fast Role Swap state when: PoliTcyh eE ngineShall indicaPteEs_ StRhaCt_ Ha ard_Reset has been signaled. The- Devic e Polic tyr aMnasnitaiogner to the Fast Role S swtaatpe when: 8.3.3.1T9h.e5.3 PE_FR inSd_SicRatCes_ SthNaKt a_ Accept_Swap is S ntoatt beeing signaled. PE_FRS_SRC_SNK_Accept_Swap Policy EngineShall Protocol Layer AcceptMessage On entry to the state the request the to send an Pol icy Engin.eShall PE_FRS_SRC_SNK_Transition_to_off The- Accep tMes staragnesition to the state when: PoliTcyh eE ngineSh all has been senPtE._SRC_Hard_Reset The- Accep tMes staragnesition to the GoodC RstCatMe ewsshaegne: Note: The Soft Res etShall N iso tnot sent after retries (a has not been received). 8.3.3.19A.5.4 PE_ bFeR inSi_tSiaRteCd_ iSnN thKis_ Tcarsaen. sition_to_off State PE_FRS_SRC_SNK_Transition_to_off Policy EngineShall VBUS vSafe5V On entry to the state the wait until has discharged to Polic.y EngineShall PE_FRS_SRC_SNK_Assert_Rd The- Devic e Polic tyr aMnasnitaiogner to the VBUS stavteS awfhe5enV: 8.3.3.1T9h.e5.5 PE_FR inSd_SicRatCes_ SthNaKt _Ass hearst d_iRscdh aSrtgaetde to. PE_FRS_SRC_SNK_Assert_Rd Policy EngineShall Device Policy Manager CC R R On entry to the state the request the to chanPgoel itchye E rnegsiisnteoSr haassllerted on the wiPrEe _fFrRomS_ SRp Cto_S NdK._Wait_Source_on The- Devic e Polic tyr aMnasnitaiogner to the R state when: 8.3.3.1T9h.e5.6 PE_FR inSd_SicRatCes_ SthNaKt _Wd isa aists_eSroteudr.ce_on State PE_FRS_SRC_SNK_Wait_Source_on Policy EngineShall Protocol Layer PS_RDYMessage Shall PSSourceOnTimer On entry to the state the request the to send a So aunrdce start theP olicy EngineShall. PSSourceOnTimer On ePxiotl ifcryo mEn tghien eShall off state the PE_SNK_S tartu sptop the. The- PS_RDY Messa tgreansition to the Nwehwe nSo:urce R PoliAcy Engine Shall is received indEircraotrinRge tchoavte trhye is now applying p. The transition to the state when: - PSSourceOnTimer - The PS_RDYMessage times out or GoodCRCMessage Note: The Soft Rese tShall N oist not sent after retries (a has not been received). A be initiated in this case. Sink Source Shall Sink SourcePolicy Engine Should Fast Role Swap PE_SNK_Ready DShuaalll-Role PortsU tShBa tD ceofmaubltin Oep erat iaonnd Har fdu nRcetsieotnality comprise and state machines. In addition, they have the capability to do a from the state and Figur er e8t.1u7rn9, t\"oD ual-role Port in Sink to oSno uar ce Fast Role. Swap State Diagram\" Fast Role Swap Sink SourcePower Role Shall shows the additional state diagram required to perform a from to s and the changes that be followed for error handling. Figure 8.179 Dual-role Port in Sink to Source Fast Role Swap State Diagram Fast Swap signal detected on CC Wire PE_FRS_SNK_SRC_ Start_AMS Actions on entry: Notify the Protocol Layer that the first Message in the AMS will follow. Power = Implicit Contract PD = Connected Protocol Layer notified PE_FRS_SNK_SRC_ SenderResponseTimer timeout | Send_Swap FR_Swap Message not sent Actions on entry: after retries (no GoodCRC received) Send FR_Swap Message Initialize and run SenderResponseTimer Power = Implicit Contract PD = Connected Accept Message received PE_FRS_SNK_SRC_ Transition_to_off PSSourceOffTimer timeout Actions on entry: Initialize and run PSSourceOffTimer Power = Implicit Contract PD = Connected PS_RDY Message received PE_FRS_SNK_SRC_Vbus_Applied Actions on entry: Request Device Policy Manager to notify when vSafe5v is being applied by the local power source. Power = Implicit Contract PD = Connected New Source is applying vSafe5V PE_FRS_SNK_SRC_ Assert_Rp Actions on entry: Request DPM to assert Rp Power = Implicit Contract PD = Connected Rpasserted PE_FRS_SNK_SRC_ Source_on PS_RDY Message not sent after retries (no GoodCRC received) Actions on entry: Send PS_RDY Message Power = Transition to source on PD = Connected PS_RDY Message sent ErrorRecovery PE_SRC_Startup Policy EngineShall PE_FRS_SNK_SRC_Start_AMS Explicit Contract The transition to the state from any other state provided there is an - Sink Ca pina bpillaitciee swhen: Initial Source Policy Engine Fast Role Swap The received from the by the has at least one of the - bits set. Initial Source Fast Role Swap Sink Capabilities The system has sufficient reserve power to provide the requested current to the, as - requDesetveicde i nPo tlhicey Manager bits in the Fast Role Swap, and is willing to dedicate it to tChCe Port The PE_FRS_SNK_SRC_S tinadrtic_AatMesS that a Policy Engin seigSnhaall lhas been dePtreocttoecdo ol nL athyeer wire. Message AMS On entry to the state the notify the that the first Polic iyn E anng ineS whaillll follow. PE_FRS_SNK_SRC_Send_Swap The- Proto col La ytrearnsition to the state when: 8.3.3.1T9h.e6.2 h PaEs b_FeeRnS n_oStNifiKed_.SRC_Send_Swap State PE_FRS_SNK_SRC_Send_Swap Policy EngineShall Protocol Layer FR_SwapMessage Shall SenderResponseTimer On entry to the state the request the to send an Policy Engine Sahnadl l initialize andP Eru_FnR tSh_eS NK_SRC_Transition_to_.off The- Accept Mess atrgaensition to the state when: PoliAcyn E ngineS hall is received. ErrorRecovery The- Sende rRes ptroannsseiTtiiomne tro the state when: - The FR_SwapMessage times out or GoodCRCMessage Soft Reset Shall Not The is not sent after retries (a has not been received). A PE_FRS_SNK_SRC_Transition_to_off Policy EngineShall PSSourceOffTimer Device Policy Manager Sink On entry to the state the initialize and run the Policy EngineS haanldl then request the ErrorRecovery to turn off the. The- PSSou rceO ftfrTainmsietrion to the state when: PoliTcyh eE ngineShall times ouPt.E_FRS_SNK_SRC_VBUS_Applied The- PS_RDY Messa tgreansition to the state when: 8.3.3.1A9.6.4 i sP rEe_cFeiRveSd_.SNK_SRC_VBUS_Applied State PE_FRS_SNK_SRC_VBUS_Applied Policy Engine Device Policy Manager vSafe5V VBUS Section 5.8.6.3, \"Fast Role Swap ODnet eecnttiroyn t\"o the state the waits for a notification from the that the local power source has applied to (see Note: ). This could have already been applied prior to entering this state or could be applied while waiting in this Policys Etantgei.neShall PE_FRS_SNK_SRC_Assert_Rp The- Devic e Polic tyr aMnasnitaiogner to the vSafe5V state when: 8.3.3.1T9h.e6.5 PE_FR inSd_SicNatKes_ SthRaCt _Asser tis_ Rbepin Sgt aaptpelied. PE_FRS_SNK_SRC_Assert_Rp Policy EngineShall Device Policy Manager CC R R On entry to the state the request the to change the resistor asserted on the wire from d to p. Policy EngineShall PE_FRS_SNK_SRC_Source_on The- Devic e Polic tyr aMnasnitaiogner to the R state when: 8.3.3.1T9h.e6.6 PE_FR inSd_SicNatKes_ SthRaCt _Sp oisu arssceer_teodn. State PE_FRS_SNK_SRC_Source_on Policy EngineShall Device Policy Manager Source On entry to the state the request the to turn on the. PE_FRS_SNK_SRC_Source_on Policy EngineShall PS_RDYMessage On ePxiotl ifcryo mEn tghien eShall PE_SR sCta_Steta thrteu p send a. The- PS_RD YMe stsraagnesition to the state when: PoliTcyh eE ngineSh all has been seEnrtr.orRecovery The- PS_RD YMe stsraagnesition to the G sotoadteC wRCheMne:ssage Soft Reset Shall Not The is not sent after retries (a has not been received). A be initiated in this case. Figure 8.180, \"Dual-Role (Source) Get Source Capabilities diagram\" Source Device Policy Manager Port Partner Source Capabilities Section, \"A Source Port Shall report its s Chaopwasb tilhitei esst ainte a d sieargireasm of f 3o2r -ab Dit uPaolw-Reorl De adteav ice, Oprbejescetnst (lyse oep Tearbatlein6g. 7a,s \" Pa ower Da, otan Orebcjeecivt\"in) ga sa p raerqtu oefs at fSrooumr cteh_eC apabilities Message (s etoe Fgeigtu trhee 6.13, \"Examp'lse Capabilities Messag. eS weeit ahl s2o P ower Data Objects\"). Power Data Objects are used to convey a Source Port's Capabilities to provide power including Dual-Role Power ports presently operating as a Sink.\" Figure 8.180 Dual-Role (Source) Get Source Capabiliti.es diagram get source capabilities request PE_DR_SRC_Get_Source_Cap from Device Policy Manager Actions on entry: PE_SRC_Ready If SPR Source Capabilities requested Send Get_Source_Cap Message1 If EPR Source Capabilities requested Send EPR_Get_Source_Cap Message1 Initialize and run SenderResponseTimer SPR Souce Capabilities requested & Source_Capabilities Message received | EPR Souce Capabilities requested & EPR_Source_Capabilities Message received | SenderResponseTimer Timeout Actions on exit: Pass source capabilities/outcome to Device Policy Manager Power = Explicit Contract PD = Connected 1) Either SPR or EPR Source Capabilities Maybe requested, regardless of whether or not the Source is currently operating in SPR or EPR Mode. Policy EngineShall PE_DR_SRC_Get_Source_Cap PE_SRC_Ready Source Capabilities Device Policy Manager The transition to the state, from the state, due to a req- uest to get the remotPeE _DR_SRC_Get_Sour cfreo_Cma tphe Policy EngineSh. all Protocol Layer Source CapabilitiesMessage Source Capabilities Policy Engine SOhna elnltry to the state the request the to send a get in order to retrieve the. The - Get _sSeonudr:ce_CapMessage Device Policy Manager - A EPR_Get_Sourc e_CapMe wsshaegne the Device Policy Ma rneaqgueersts SPR caEpPaRb iCliatipeasb oilrities PoliAcyn E ngineShall Sen dwehreRne sthpeo nseTimer requests. The P E_DR_ tShReCn_ Gsteatr_tS tohuer ce_Cap Policy E.ngineShall Device Policy Manager On exit from the state the inform the of the outcPomoliec y(c EanpgaibnieliStiheas lolr response timeout). PE_SRC_Ready Figure 8.132, \"Source Port State Diagram\" The transition back to the State (see ) whe- n: SPR Mode Source Capabilities Source_CapabilitiesMessage In and SPR were requested and a is received - orEPR Mode Source Capabilities EPR_Source_CapabilitiesMessage In and EPR were requested and an is - receiSveendd oerrResponseTimer The times out. Figure 8.181, \"Dual-Role (Source) Give Sink Capabilities diagram\" Source Get_Sink_CapMessage Section, \"A Source Port Shall report its Capabilities in a series of 32-bit Power Data Objects (see Table 6s.h7o, \"wPso wtheer sDtaattea dOibajgercatm\") faosr p aa rDtu oafl -aR ole device, pSoreusrecnet_lCya oppaebrialtiitniegs a Ms aes sage (s, eoen F riegcueriev 6in.1g3 a, \"Example Capa bilities M. Seesesa agleso w ith 2 Power Data Objects\"). Power Data Objects are used to convey a Source Port's Capabilities to provide power including Dual-Role Power ports presently operating as a Sink.\" Figure.8.181 Dual-Role (Source) Give Sink Capabilities diagram Get_Sink_Cap_Extended Message received PE_DR_SRC_Give_Sink_Cap_Ext PE_SRC_Ready Actions on entry: Get present extended sink capabilities from Device Policy Manager Sink_Capabilities_Extended Send Sink_Capabilities_Extended Message (based on Device Policy Manager response) Message sent Power = Explicit Contract PD = Connected Policy EngineShall PE_DR_SRC_Give_Sink_Cap PE_SRC_Ready Get_Sink_CapMessage EPR_Get_Sink_CapMessage The transition to the state, from the state, when a - oPrE _DR_SRC_Give_Sin k_Cap is receiPvoeldic. y EngineShall Device Policy Manager Policy EngineShall Protocol Layer On entrSyi ntok _tChaep abilitiesMessage state the Pol irceyq Eunegsitn tehSeh all for the current system capabilities. The then request the to - seSnidn ka _CapabilitiesMess age conGteatin_Siningk t_hCeaspe Mcaepsasbagileities. The send: - A EPR_Sink_Capab ilitiesMe wsshaegne a EPR_Ge t_Sink_Ca isp rMeceessivaegde or PoliAcyn E ngineShall whPeEn_S aR C_Ready Figure 8.i1s3 r2e, c\"eSiovuerdc.e Port State Diagram\" The transition back to the state (see ) whe- n: Sink_CapabilitiesMessage The has been successfully sent. Figure 8.182, \"Dual-Role (Sink) Get Sink Capabilities State Diagram\" Sink Device Policy Manager Port Partner Sink Capabilities Section, \"A Source Port Shall report its Capabil isthieosw ins ath see sriteast eo fd 3ia2g-rbaitm P ofowre ar D Duaatla- ROobljee cdtesv (isceee, pTraebsleen6t.l7y, \"oPpoewraetri nDga atas Oa bject,\" o) na sr epcaeritv oinf ga aS oreuqrucees_Ct afrpoamb itlhitei es Message (see Figure 6to.1 g3e, t\" Ethxea mple Capabil'ist ies Message wit.h S e2e P aolwsoe r Data Objects\"). Power Data Objects are used to convey a Source Port's Capabilities to provide power including Dual-Role Power ports presently operating as a Sink.\" Figure 8.182 Dual-Role (Sink) Get Sink Capa.bilities State Diagram PE_DR_SNK_Get_Sink_Cap Actions on entry: get sink capabilities request If SPR Mode capabilities requested send Get_Sink_Cap Message from Device Policy Manager1 PE_SNK_Ready If EPR Mode capabilities requested send EPR_Get_Sink_Cap Message Initialize and run SenderResponseTimer Actions on exit: (SPR Sink Capabilities requested Pass sink capabilities/outcome to Device Policy Manager & Sink_Capabilities Message) | Request Device Policy Manager to configure Fast Role Swap if supported (EPR Sink Capabilities requested & EPR_Sink_Capabilities Message) | SenderResponseTimer timeout Power = Explicit Contract PD = Connected 1) Either SPR or EPR Sink Capabilities Maybe requested, regardless of whether or not the Sink is currently operating in SPR or EPR Mode. Policy EngineShall PE_DR_SNK_Get_Sink_Cap PE_SNK_Ready Source Capabilities Device Policy Manager The transition to the state, from the state, due to a req- uest to get the remotPeE _DR_SNK_Get_Sink _frCoamp the Policy EngineSha. ll Protocol Layer Get_Sink_CapMessage Sink Capabilities Policy EngineShall On entry to the state the request the to - seGnedt a_S ink_CapMess age in ordDeerv itcoe r Peotrliiceyv eM tahnea ger. The send: - A EPR_Get_Sin k_CapMe wsshaegne the Device Policy Ma rneaqgueersts SPR caEpPaRbi Cliatipeasb oirlities PoliAcyn E ngineShall S ewnhdeenr Rthees ponseTimer requests. The P E_SRC t_hGeent _sStianrkt _tChae p Policy Engine.Shall Device Policy Manager Fast Role Swap Device Policy Manager On exit from the Fsatastte R tohlee Swap inform thFea st Role Swap required o Uf SthBe T ypeoCu Ctucorrmeen (tcapabilities or respoSnisnek t Cimapeaobuitl)it. iIef s is supported, request prepare or disable 5V source and configure the receiver based on the Policy bEintsg iinne tShhe arlelceived PE_SN.K_Ready Figure 8.133, \"Sink Port State Diagram\" The- Sink C apab itlritaienssition to the Sink _sCtaatpea (bsieleit iesMessage ) when: - SPR Sink Capabilities were requested and a EPR_Sink_Capab ilitiesM eisss raegceeived or - EPR SenderResponse wTiemree rrequested and an is received or The times out. Figure 8.182, \"Dual-Role (Sink) Get Sink Capabilities State Diagram\" Sink Get_Source_CapMessage Section, \"A Source Port Shall report its Capabilities in a series of 32-bit Power Data Objects (see Table6. 7s,h \"oPwows tehre D sattaate O dbijaegcrta\")m a fso pra ar tD oufa al- Role device, pSoreusrecnet_lCya oppaebrailtiitniegs a Ms ae ssage, o(sne ree Fciegiuvrine g6 a.1 3, \"Example Capa bilities M. Seessea agles ow ith 2 Power Data Objects\"). Power Data Objects are used to convey a Source Port's Capabilities to provide power including Dual-Role Power ports presently operating as a Sink.\" Figure 8.1.83 Dual-Role (Sink) Give Source Capabilities State Diagram (In EPR Mode & Get_Source_Cap Message) | PE_DR_SNK_Give_Source_Cap (In SPR Mode & EPR_Get_Source_Cap Message) Actions on entry: PE_SNK_Ready Get present Source capabilities from Device Policy Manager Send Capabilities Message (based on Device Policy Manager response): - If Get_Source_Cap Message received send Source_Capabilities Message. Source capabilities Message sent - In EPR_Get_Source_Cap Message received send EPR_Source_Capabilities Message Power = Explicit Contract PD = Connected Policy EngineShall PE_DR_SNK_Give_Source_Cap PE_SNK_Ready Get_Source_CapMessage The transition to the state, from the state, when a - PE_ DisR r_eScNeiKv_eGdi.v e_Source_Cap Policy EngineShall Device Policy Manager Policy EngineShall Protocol Layer On entrSyo tuor cteh eC apabilitiesMessage State the request the for the current system capabilities. The then request the to - sendP ao licy EngineShall containing these capabilities. - ThSeo urce_Capabil itiesM seesnsda:ge Get_Source_CapMessage - A EPR_Source_Capab ilitiesMe wsshaegne a EPR_Get_S ource_Ca isp rMeceessivaegde or PoliAcyn E ngineShall PE_SN wKh_eRne aad y Figure 8.1 33, \"Sink i sP orertc eSitvaetde.Diagram\" The- Sourc e Capa tbrailnitsieitsioMne tsosa tghee state (see ) when: The has been successfully sent. Diagram Figure 8.184, \"Dual-Role (Source) Get Source Capabilities Extended State Diagram\" Source Device Policy Manager Port Partner Source Capabilities Section 6.5.1, \"Source_Capabil sithieosw_Esx ttheen dsteadt eM deisasgargaem\" for a Dual-Role device, presently operating as a, on receiving a request from the to get the 'sF eigxuterned 8e.d1 84 Dual-Role (Sou. rSceee) a Glseot Source Capabilities Extended State Diagram. get extended source capabilities request PE_DR_SRC_Get_Source_Cap_Ext from Device Policy Manager PE_SRC_Ready Actions on entry: Send Get_Source_Cap_Extended Message Initialize and run SenderResponseTimer Source_Capabilities_Extended Message received | Actions on exit: SenderResponseTimer Pass source extended capabilities/outcome to Device Policy Manager Timeout Power = Explicit Contract PD = Connected Policy EngineShall PE_DR_SRC_Get_Source_Cap_Ext PE_SRC_Ready Source Capabilities Device Policy Manager The transition to the state, from the state, due to a request to gPeEt _tDheR _rSeRmCo_tGee etx_Steonudrecde_ Cap_Ext P forloicmy Ethneg ineShall Get_So. urce_Cap_Extended Message SenderResponseTimer On entry to the state the send a and initPiaEli_zDeR a_nSdR Cru_Gne tth_eS ource_Cap_Ext.Policy EngineShall Device Policy Manager On exit from the state the inform the of the oPuotlcicoym Een (gcianpeaSbhialitllies or response timeoutP)E._SRC_Ready Figure 8.132, \"Source Port State Diagram\" The transition back to the state (see ) whe- n: Source_Capabilities_ExtendedMessage - A SenderResponseTimer is received Or times out. Diagram Figure 8.185, \"Dual-Role (Sink) Give Source Capabilities Extended diagram\" Sink Get_Source_Cap_ExtendedMessage Section 6.5.1, \"Source_Capabilities_Extended Message\" shows the state diagram for a Dual-Role device, presently operating as a, on receiving a. See also Figure 8.185 Dual-Ro.le (Sink) Give Source Capabilities Extended diagram Get_Source_Cap_Extended Message received PE_DR_SNK_Give_Source_Cap_Ext PE_SNK_Ready Actions on entry: Get present extended source capabilities from Device Policy Manager Source_Capabilities_Extended Send Source_Capabilities_Extended Message (based on Device Policy Manager response) Message sent Power = Explicit Contract PD = Connected Policy EngineShall PE_DR_SNK_Give_Source_Cap_Ext PE_SNK_Ready Get_Source_Cap_ExtendedMessage The transition to the state, from the state, when a PE_DR_SNK_Give_S ource_Ca ips_ rEexcteived. Policy EngineShall Source Capabilities Device Policy Manager Source_Capabilities_ExtendedMessage On entry to the state the request the present extended from the and then send a based on thPeosleic cya EpnagbiinlietiSehs.all PE_SNK_Ready Figure 8.133, \"Sink Port State Diagram\" The transition back to the state (see ) whe- n: Source_Capabilities_ExtendedMessage The has been successfully sent. gram Figure 8.186, \"Dual-Role (Sink) Get Sink Capabilities Extended State Diagram\" Sink Device Policy Manager Port Partner Sink Capabilities Section 6.5.13, \"Sink_Capabilitie ss_hEoxwtesn tdheed sMtaetses adgiaeg\"ram for a Dual Role device, presently operating as a, on receiving a request from the to get the 's extendFeidg ure 8.186 Dual-.R Soelee a (lSsoin k) Get Sink Capabilities Extended State Diagram. get extended Sink capabilities request PE_DR_SNK_Get_Sink_Cap_Ext from Device Policy Manager Actions on entry: PE_SNK_Ready Send Get_Sink_Cap_Extended Message Initialize and run SenderResponseTimer Sink_Capabilities_Extended Message received | Actions on exit: SenderResponseTimer Pass Sink extended capabilities/outcome to Device Timeout Policy Manager Power = Explicit Contract PD = Connected Policy EngineShall PE_DR_SNK_Get_Sink_Cap_Ext PE_SNK_Ready Source Capabilities Device Policy Manager The transition to the state, from the state, due to a request to get PthEe_D reRm_SoNtKe _eGxetet_nSdiendk _Cap_Ext P forloicmy tEhneg ineShall Get_Si.n k_Cap_Extended Message SenderResponseTimer On entry to the state the send a and initiPaEli_zDe Ra_nSdN rKu_nG teht_eS ink_Cap_Ext P.olicy EngineShall Device Policy Manager On exit from the state the inform the of the oPuotlciocym Een (gcianpeaSbhilaitliles or response timeoutP).E_SNK_Ready Figure 8.133, \"Sink Port State Diagram\" The transition back to the state (see ) whe- n: Sink_Capabilities_ExtendedMessage - A SenderResponseTimer is received. Or times out. Diagram Figure 8.187, \"Dual-Role (Source) Give Sink Capabilities Extended diagram\" Sink Get_Sink_Cap_ExtendedMessage Section 6.5.13, \"Sink_Capabilities_Extended Message\" shows the state diagram for a Dual-Role device, presently operating as a, on receiving a. See also Figure 8.187 Dual-.Role (Source) Give Sink Capabilities Extended diagram _Get_Sink_Cap Message | EPR_Get_Sink_Cap Message PE_DR_SRC_Give_Sink_Cap PE_SRC_Ready Actions on entry: Get present extended sink capabilities from Device Policy Manager Sink Capabilities Send Sink_Capabilities_Extended Message (based on Device Policy Manager response): Message sent - If Get_Sink_Cap Message received send Sink_Capabilities Message. - In EPR_Get_Sink Cap Message received send EPR_Sink_Capabilities Message Power = Explicit Contract PD = Connected Policy EngineShall PE_DR_SRC_Give_Sink_Cap_Ext PE_SRC_Ready Get_Sink_Cap_ExtendedMessage The transition to the state, from the state, when a PE_DR_SRC _Give_Si nisk r_eCcaepiv_Eedxt. Policy EngineShall Sink Capabilities Device Policy Manager Sink_Capabilities_ExtendedMessage On entry to the state the request the present extended from the and then send a based on these capaPboilliitciye sE.ngineShall PE_SRC_Ready Figure 8.132, \"Source Port State Diagram\" The transition back to the state (see - )whSiennk:_Capabilities_ExtendedMessage The has been successfully sent. Figure 8.188, \"Dual-Role (Source) Get Source Information State Diagram\" Source Device Policy Manager Port Partner Source Section 6.3.23, \"Get_Source_Info Me sshsaogwes\" the sStaetceti doina 6gr.4a.m11 f, o\"rS oau Drcuea_lI-nRfool e Mdeevsiscaeg, ep\"resently operating as a, on receiving a request from the to get the 's information. See also and. Figure 8.188 Dual-Role (Source) Get Source Information State Diagram get source information request PE_DR_SRC_Get_Source_Info from Device Policy Manager Actions on entry: PE_SRC_Ready Send Get_Source_Info Message Initialize and run SenderResponseTimer Source_Info Message received | Actions on exit: SenderResponseTimer Pass source information/outcome to Timeout Device Policy Manager Power = Explicit Contract PD = Connected Policy EngineShall PE_DR_SRC_Get_Source_Info PE_SRC_Ready Source Device Policy Manager The transition to the state, from the state, due to a request to get thPeE r_eDmRo_SteR C_Get_S ionuforrcme_aIntifoon from theP olicy EngineShall. Get_Source_InfoMessage SenderResponseTimer On entry to the state the send a and initialize and runP tEh_eD R_SRC_Get_Source_Info. Policy EngineShall Device Policy Manager On exit from the state the inform the of the outcPomoliec y(i EnnfogrimneaStihoanl lor response timeout). PE_SRC_Ready Figure 8.132, \"Source Port State Diagram\" The transition back to the state (see ) whe- n: Source_InfoMessage - A SenderResp onseTim ise rreceived. Or times out. Figure 8.189, \"Dual-Role (Source) Give Source Information diagram\" Sink Get_Source_InfoMessage Section 6.3.23, \"Get_Source_Info Message\" Section 6.4.11, \"Source_Info Message\" shows the state diagram for a Dual-Role device, presently operating as a, on receiving a. See also and Figure 8.189 Dual-Role (Sou.rce) Give Source Information diagram Get_Source_Info Message received PE_DR_SNK_Give_Source_Info PE_SNK_Ready Actions on entry: Get present source information from Device Policy Manager Send Source_Info Message (based on Device Policy Manager response) Source_Info Message sent Power = Explicit Contract PD = Connected Policy EngineShall PE_DR_SNK_Give_Source_Info PE_SNK_Ready Get_Source_InfoMessage The transition to the state, from the state, when a PE_ DR_SNK _iGs irveec_eSiovuedrc.e_Info Policy EngineShall Source Device Policy Manager Source_InfoMessage On entry to the state the request the present information fromP tohliec y EngineShall and then sendP aE _SNK_Ready baFsiegdu oren 8 t.h1i3s3 i,n \"fSoirnmk aPtoiortn.State Diagram\" The transition back to the state (see ) whe- n: Source_InfoMessage The has been successfully sent. Shall VCONN Figure 8.190, \"VCONN Swap State Diagram\" VCONN Swap The State Diagram in this section apply to Ports that supply. shows the state operation for a PortF oignu sreen 8di.1n9g 0o rV rCeOcNeNiv Sinwga ap State Diagr raemquest. PE_SRC_Ready, PE_SNK_Ready or PE_SRC_Ready, PE_SRC_EPR_Mode_Entry_ACK PE_SNK_Ready or PE_SRC_EPR_Mode_Discover_Cable PE_SNK_EPR_Mode_Entry_Wait_For_Response VCONN Swap required (indication from Device Policy Manager) Reject Message received | Wait Message received | Message sent VCONN_Swap Message received SenderR tie ms ep oo un tseTimer PE_VCS_Reject_VCONN_Swap (Not P Vr Ce Os Ne Nn t Sly w V aC pO nN oN t S oO kU ) R |CE & PE_VCS_Evaluate_Swap PE_VCS_Send_Swap A Sec nti do n Rs e o jen c te on rtr Wy: ait Message as Furth Re er q e uv ia relu dation A Gc et ti eo vn as l uon at e ion ntr oy f: VCONN swap request A Sec nti do n Vs C Oo Nn N e _n Swtr ay p: Message Not_ NS ou t p pp reo srt ee nd t lM y e Vs Cs Oa Ng Ne S r oe uce rciv ee 1d & appropriate from Device Policy Manager Initialize and run SenderResponseTimer Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected Power = Explicit Contract PD = Connected VCONNSwap ok Accept Message received & Presently VCONN Source1 Accept Message received & Not presently VCONN Source1 PE_VCS_Accept_Swap Actions on entry: Send Accept Message Power = Explicit Contract PD = Connected Accept Message sent & Not presently VCONN Source1 Accept Message sent & Presently VCONN Source1 PE_VCS_Wait_for_VCONN PE_VCS_Turn_On_VCONN PE_VCS_Force_VCONN2 VCONNOnTimer Timeout Actions on entry: Actions on entry: Actions on entry: Start VCONNOnTimer Tell Device Policy Manager to turn on Tell Device Policy Manager to turn on VCONN VCONN Power = Explicit Contract PD = Connected Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected PS_RDY Message received VCONNturned on Hard Reset: PE_VCS_Turn_Off_VCONN PE_VCS_Send_PS_Rdy Actions on entry: Consumer/Provider -> PE_SNK_Hard_Reset Tell Device Policy Manager to turn off Actions on entry: Provider/Consumer -> PE_SRC_Hard_Reset VCONN Send PS_RDY Message VCONNturned on Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected Device Policy Manager Informed PS_RDY Message sent PE_SRC_Ready, PE_SNK_Ready or PE_SRC_EPR_Mode_Discover_Cable 1) A Port is presently the VCONNSource if it has the responsibility for supplying VCONNeven if VCONNhas been turned off. 2) The PE_VCS_Force_VCONNstate is Optional. PE_VCS_Send_Swap PE_SRC_Ready PE_SNK_Ready Policy Engine Device Policy Manager VCONN Swap The state is entered from either the or state when the receives PaE r_eVqCuSe_sSte fnrdom_S wthaep Policy Engine toS hpaelrlform a VCONN_Swa.pMessage SenderResponseTimer On entry to the state the send a and start the Policy EngineShall. PE_VCS_Wait_For_VCONN The- Accept Mess atrgaensition to the state when: - An is receViCvOeNdN a Snodurce PoliTcyh eE nPgoirnte isS hparellsently the PE_VC.S_Turn_On_VCONN The- Accept Mess atrgaensition to the state when: - An is receivedV CaOnNdN Source The Port is not presently the. Policy EngineShall PE_SRC_Ready PE_SNK_Ready PE_SRC_EPR_Mode_Discover_Cable The transition back to either the, or - RejectMessage state when: - A WaitM essage is received or - A Sen derResp iosn rseecTeiivmeedr or PoliTcyh eE ngineMay timPesE _oVuCt.S_Force_VCONN The- Not_Sup port etrdanMseistisoang eto the state when: - A is rVeCcOeNiNve Sdo uarncde 8.3.3.2Th0e. 2Port is not p rPeEse_nVtlCy Sth_eE valuate_S.wap State PE_VCS_Evaluate_Swap PE_SRC_Ready PE_SNK_Ready Policy Engine VCONN_SwapMessage The state is entered from either the or state when the rePceEi_vVeCsS a_ Evaluate_Sw ap. Policy EngineShall Device Policy Manager VCONN Swap On entry to the state the request the for an evaluPaotliiocyn Eonf gthinee Shall request. PE_VCS_Accept_Swap The- Devic e Polic tyr aMnasnitaiogner to the VCONN Swap state when: PoliTcyh eE ngineShall indicaPteEs_ VthCaSt_ Ra eject_Swap is OK. The- transition to tVhCeO NN Source Dev sictae tPeo wlichye nM:anager VCONN Swap The Port is not presently the and the indicates that a - is noDt eOvKic oe rPolicy Manager VCONN Swap 8.3.3.2Th0e. 3 PE_VCS _inAdciccaetepst t_hSawt aa p State cannot be done at this time. PE_VCS_Accept_Swap Policy EngineShall AcceptMessage On ePnotrliyc yto E tnhgei neShall staPteE t_hVeC S_Wait_For_V CONN send an. The- Accep tMes staragnesition to the state when: - The V CONN has been sent and PoliTcyh eE nPgoirnte'sS hall is on. PE_VCS_Turn_On_VCONN The- Accep tMes staragnesition to the state when: - The V CONN has been sent and 8.3.3.2Th0e. 4Port's P isE o_fVf.CS_Reject_Swap State PE_VCS_Reject_Swap Policy EngineShall Protocol Layer On e- ntry tRo etjheec tMessage state the VCON Nre Sqwuaepst the to send: - A WaitM essage if the device is unable to pVeCrOfoNrNm S wa ap at this time. Note: A if further evaluation of the VCO NreNq_Suwesatp isM reesqsuaigreed. PolicyI Enn tghiins ecaSshea iltl is expected that the Port willP sEen_SdR aC _Ready PE_S NK_Read ayt a later time. PE_SRC_EPR_Mode_Discover_Cable The transition back to either the, or - Reject WaitMessage state when: The or has been sent. PE_VCS_Wait_For_VCONN Policy EngineShall VCONNOnTimer On ePnotrliyc yto E tnhgei neShall PstEa_tVeC tSh_eT urn_Off_VCON N start the. The- PS_RDY Messa tgreansition to the state when: PoliAcy Engine Shall is received. PE_SRC_Hard_Reset PE_SNK_Hard_Reset The- VCONN OnTi mtraenrsition to either the or state when: 8.3.3.2Th0e. 6 PE _tiVmCesS o_Tutu. rn_Off_VCONN State PE_VCS_Turn_Off_VCONN Policy EngineShall Device Policy Manager VCONN On entry to the state the tell the to turn off Po.licy EngineShall PE_SRC_Ready PE_SNK_Ready PE_SRC_EPR_Mode_Discover_Cable The transition back to either the, or - Device Policy Manager state when: 8.3.3.2Th0e. 7 PE_VCS _hTasu brenen_O innfo_rVmCeOd.NN State PE_VCS_Turn_On_VCONN Policy EngineShall Device Policy Manager VCONN On entry to the state the tell the to turn on Po.licy EngineShall PE_VCS_Send_Ps_Rdy The- VCON Ntransition to the state when: 8.3.3.2Th0e. 8Port's P isE o_nV.CS_Send_PS_Rdy State PE_VCS_Send_Ps_Rdy Policy EngineShall PS_RDYMessage On ePnotrliyc yto E tnhgei neShall state the PE_SRC_ Read ysePnEd_ aS NK_Read y. PE_SRC_EPR_Mode_Discover_Cable The transition back to either the, or - PS_RDYMessage state when: 8.3.3.2Th0e. 9 PE_ VhaCs Sb_eFeno srecnet._VCONN State PE_VCS_Force_VCONN Policy EngineShall Device Policy Manager VCONN On ePnotrliyc yto E tnhgei neShall state the PE_SRC _Read tyelPl Eth_eS NK_Ready to turn on. PE_SRC_EPR_Mode_Discover_Cable The transition back to either the, or - VCONN state when: 8.3.3.T2h1e Port's Ini itsi oant.or Structured VDM State Diagrams Shall Initiator The State Diagrams in this section apply to all s. Figure 8.191, \"Initiator to Port VDM Discover Identity State Diagram\" Initiator Port Partner Cable Plug shows the state diagram for an when discovering the identFitiyg uorf eit s8.191 Initiato orr t o Port VDM. Discover Identity State Diagram PE_INIT_PORT_VDM_Identity_ACKed PE_INIT_PORT_VDM_Identity_NAKed Actions on entry: Actions on entry: Inform DPM of identity Inform DPM of result Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected Discover Identity ACK received Discover Identity NAK/BUSY | VDMResponseTimer Timeout DPM informed PE_INIT_PORT_VDM_Identity_Request Actions on entry: Send Discover Identity request Start VDMResponseTimer Power = Explicit Contract PD = Connected DPM informed DPM requests identity discovery1| DiscoverIdentityTimer timeout PE_SRC_Ready, PE_SNK_Ready or PE_SRC_EPR_Mode_Discover_Cable PE_SRC_Ready, PE_SNK_Ready or PE_SRC_EPR_Mode_Evaluate_Cable_EPR 1) The DPM in an EPR Source Shallrequest the discovery of the identity of the Cable Plug at startup. Policy Engine PE_INIT_PORT_VDM_Identity_Request PE_SRC_Ready PE_SNK_Ready The transitions to the state from either the or - Dev sictaet Peo wlihcye nM:anager Port Partner Cable Plug - The DiscoverIdentityTime rrequests the discovery of the identity of the or or PoliTcyh eE ngine P tEim_IeNsI To_uPt.ORT_VDM_Identity_Request PE_SRC_EPR_Mode_Discover_Cable The transitions to the state from the - Cable PlugDiscovery Pro scteastse when: The has been initiated. PE_INIT_PORT_VDM_Identity_Request Policy EngineShall Structured VDM Discover IdentityCommand Shall VDMResponseTimer On entry to the state the send a Policy Engine Shall request andP E_INI sTt_aPrOt tRhTe_ VDM_Identity_ACKed. The- Structur ed VD tMraDnissictioovne rto I dtheen tityACKCommand state when: PoliAcy EngineShall PE_I NIT_ PORT_VDM re_Isdpeonntsiet yis_N rAecKeeivded. The- Structur ed VD tMraDnissictioovne rto I dtheen tityNAK BUSYCommand state when: - A VDMRespons eTimer or response is received or 8.3.3.2T1h.e1.2 PE_IN tiImTe_sP oOutR.T_VDM_Identity_ACKed State PE_INIT_PORT_VDM_Identity_ACKed Policy EngineShall Device Policy Manager On entry to the state the inform the Polic yo fE tnhgei nIdeeSnhtaitlyl information. PE_SRC_Ready PE_SNK_Ready PE_SRC_EPR_Mode_Evaluate_Cable_EPR The transition to either the, or - Device Policy Manager state when: 8.3.3.2T1h.e1.3 PE_IN hITas_ bPeOenR iTn_foVrDmMed_.Identity_NAKed State PE_INIT_PORT_VDM_Identity_NAKed Policy EngineShall Device Policy Manager NAK BUSY On entry to the state the inform the Polic yo fE tnhgei nreesSuhlat l(l, or timeout).PE_SRC_Ready PE_SNK_Ready PE_SRC_EPR_Mode_Evaluate_Cable_EPR The transition to either the, or - Device Policy Manager state when: The has been informed. Figure 8.192, \"Initiator VDM Discover SVIDs State Diagram\" Initiator SVID Port Partner Cable Plug shows the state diagram for an when discovering s of its Figure 8.1 9or2 Initiator V. DM Discover SVIDs State Diagram PE_INIT_VDM_SVIDs_ACKed PE_INIT_VDM_SVIDs_NAKed Actions on entry: Actions on entry: Inform DPM of SVIDs Inform DPM of result Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected DPM informed Discover SVIDs ACK Discover SVIDs NAK/BUSY | received VDMResponseTimer Timeout PE_INIT_VDM_SVIDs_Request Actions on entry: Send Discover SVIDs request DPM informed Start VDMResponseTimer Power = Explicit Contract PD = Connected DPM requests SVIDs discovery PE_SRC_Ready or PE_SNK_Ready Policy Engine PE_INIT_VDM_SVIDs_Request PE_SRC_Ready PE_SNK_Ready The transitions to the state from either the or - Dev sictaet Peo wlihcye nM:anager SVID Port Partner Cable Plug The PE_INIT_VDM_SVID rse_Rqeuqesutess tthe discoveProyl iocfy t Ehneg ineSsh oafl lthe Structure odr VaD MDiscove.r SVIDs Command Shall VDMResponseTimer On entry to the state the send a Policy rEenqguiensetS ahnadl l start the PE_INIT_VDM_SVID. s_ACKed The- Structur ed VD tMraDnissictioovne tro S tVhIeD sACKCommand state when: PoliAcy EngineShall P E_INI T_VDM_SV rIeDssp_oNnAsKee ids received. The- Structur ed VD tMraDnissictioovne rto S tVhIeD sNAK BUSYCommand state when: - A VDMRespons eTimer or response is received or The times out. PE_INIT_VDM_SVIDs_ACKed Policy EngineShall Device Policy Manager SVID On entry to the state the inform the of the Pso ilnicfoy rEmnagtiinoenS.hall PE_SRC_Ready PE_SNK_Ready The- Devic e Polic tyr aMnasnitaiogner to either the or state when: 8.3.3.2T1h.e2.3 PE_IN hITas_ bVeDenM in_SfoVrmIDeds._NAKed State PE_INIT_VDM_SVIDs_NAKed Policy EngineShall Device Policy Manager NAK BUSY On entry to the state the inform the of the resuPlto (licy E,n gineS ohra tlilmeout). PE_SRC_Ready PE_SNK_Ready The- Devic e Polic tyr aMnasnitaiogner to either the or state when: The has been informed. Figure 8.193, \"Initiator VDM Discover Modes State Diagram\" Initiator Port Partner Cable Plug shows the state diagram for an when discovering Modes of its Figure 8.19 o3r I nitiator VD. M Discover Modes State Diagram PE_INIT_VDM_Modes_ACKed PE_INIT_VDM_Modes_NAKed Actions on entry: Actions on entry: Inform DPM of Modes Inform DPM of result Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected DPM informed Discover Modes ACK Discover Modes NAK/BUSY | received VDMResponseTimer Timeout PE_INIT_VDM_Modes_Request Actions on entry: Send Discover Modes request DPM informed Start VDMResponseTimer Power = Explicit Contract PD = Connected DPM requests Modes discovery PE_SRC_Ready or PE_SNK_Ready Policy Engine PE_INIT_VDM_Modes_Request PE_SRC_Ready PE_SNK_Ready The transitions to the state from either the or - Dev sictaet Peo wlihcye nM:anager Port Partner Cable Plug The PE_INIT_VDM_Mode rse_qRueeqsutse stthe discoveProyl iocfy t Ehneg MinoedSehsa olfl the Structured o Vr DaM Discover. Modes Command Shall VDMResponseTimer On entry to the state the send a Policy rEenqguiensetS ahnadl l start the PE_INIT_VDM_Mod.es_ACKed The- Structur ed VD tMraDnissictioovne rto M thoed esACKCommand state when: PoliAcy EngineShall PE _INIT _VDM_Mo rdeessp_oNnAsKee ids received. The- Structur ed VD tMraDnissictioovne tro M thoed esNAK BUSYCommand state when: - A VDMRespons eTimer or response is received or The times out. PE_INIT_VDM_Modes_ACKed Policy EngineShall Device Policy Manager On entry to the state the inform the of the ModPeso liincfyo ErmngaitnieonS.hall PE_SRC_Ready PE_SNK_Ready DFP The- Devic e Polic tyr aMnasnitaiogner to either the or state for a when: 8.3.3.2T1h.e3.3 PE_IN hITas_ bVeDenM in_Mforomdeeds._NAKed State PE_INIT_VDM_Modes_NAKed Policy EngineShall Device Policy Manager NAK BUSY On entry to the state the inform the of the resuPlto (licy E,n gineS ohra tlilmeout). PE_SRC_Ready PE_SNK_Ready DFP The- Devic e Polic tyr aMnasnitaiogner to either the or state for a when: The has been informed. Figure 8.194, \"Initiator VDM Attention State Diagram\" Initiator AttentionCommand shows the state diagram for an when sending an request.Figure 8.194 Initiator VDM Attention State Diagram PE_SRC_Ready or PE_SNK_Ready Attention request Attention Command from DPM request sent PE_INIT_VDM_Attention_Request Actions on entry: Send Attention Command request Power = Explicit Contract PD = Connected Policy Engine PE_INIT_VDM_Attention_Request PE_SRC_Ready PE_SNK_Ready The transitions to the state from either the or - staDtee vwichee Pno:licy Manager Port Partner When thPeE _INIT_VDM_Attention_ rReeqquueesstst attentionP froolimcy iEtsn gineShall. AttentionCommand On entry to the state the send an requPeostli.cy EngineShall PE_SRC_Ready PE_SNK_Ready The- Atten tionC tormanmsaitniodn to either the or state when: The request has been sent. Figure 8.195, \"Responder Structured VDM Discover Identity State Diagram\" Responder Discover IdentityCommand shows the state diagram for a receiving a Figure 8.19 5 Respond reerq uStersut.ctured VDM Discover Identity State Diagram PE_RESP_VDM_Get_Identity_NAK PE_RESP_VDM_Get_Identity PE_RESP_VDM_Send_Identity Actions on entry: Actions on entry: Identity information Actions on entry: Send Discover Identity NAK/BUSY Command DPM says Request Identity information from DPM from DPM Send Discover Identity ACK response as requested NAK/BUSY Power = Explicit Contract Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected PD = Connected Discover Ide sn et nit ty NAK/BUSY Disco rv ee qr u I ed se tntity Discover sI ed ne tntity ACK PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready Policy Engine PE_RESP_VDM_Get_Identity PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready The transitions to the state from either the, - Struct ourr ed VDMDiscove srt aIdtee nwthiteynC:ommand A PE_RESP_V DM_Get_Identity Re srpeoqnudeesrt Sish raelcleived. Device Policy Manager On entry to the state the request identity information from the Policy Engin. eShall PE_RESP_VDM_Send_Identity The- transition to the Device Policy Manage rstate when: PoliIcdye Enntigtiyn einSfohramllation is received fProEm_R EthSeP _VDM_Get_Identity_NA.K The- Devic e Polic tyr aMnasnitaiogner to the Disco svteart eId wehnetint:yCommand NAK BUSY The indicates that the response to the request is PE_RESP_VDM_Send_Identity ResponderShall Structured VDMDiscover Identity ACKCommand On entry to the state the send the Policy Engi nreesSphoanlsle. PE_SRC_Ready PE_SNK_Ready UFP The- Struct ured VtrDaMnsDitiisocno tvoe re iItdheenr ttihtye ACKCommand or state for a when: 8.3.3.2T2h.e1.3 P E_RESP_VDM_ Get _Identity r_eNspAoKns Se thaatse been sent. PE_RESP_VDM_Get_Identity_NAK Policy EngineShall Structured VDMDiscover IdentityNAK BUSYCommand Device Policy Manager On entry to the state the send a Polic y Eng oirn eShal l response as inPdEic_aStReCd_ bRye athdey PE_SNK_Ready PE_.CBL_Ready The- Struct ured VtrDaMnsDitiisocno tvoe re iItdheenr ttihtye NAK BUSYC,o mmand or state when: The or response has been sent. Figure 8.196, \"Responder Structured VDM Discover SVIDs State Diagram\" Responder Discover SVIDsCommand shows the state diagram for a when receiving a Figure 8.196 R esponder. Structured VDM Discover SVIDs State Diagram PE_RESP_VDM_Get_SVIDs_NAK PE_RESP_VDM_Get_SVIDs PE_RESP_VDM_Send_SVIDs Actions on entry: DPM says Actions on entry: SVIDs information Actions on entry: Send Discover SVIDs NAK/BUSY Command NAK/BUSY Request SVIDs information from DPM from DPM Send Discover SVIDs ACK response as requested Power = Explicit Contract Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected PD = Connected Discover SV sI eD ns t NAK/BUSY Disc ro ev qe ur e S sV tIDs Discover s eS nV tIDs ACK PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready Policy Engine PE_RESP_VDM_Get_SVIDs PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready The transitions to the state from either the, or - Structur estda VteD wMhDeins:cover SVIDsCommand A PE_RESP_V DM_Get_SVIDs R ersepqounedsetr isS hreaclelived. SVID Device Policy Manager On entry to the state the request s information from the Policy Engin. eShall PE_RESP_VDM_Send_SVIDs The- SVID transition to the Device Policy Manage rstate when: Policy Ensg iinnfeoSrmhaaltlion is received froPmE _tRheE SP_VDM_Get_SVIDs_NA.K The- Devic e Polic tyr Manasnitaigoenr to the Disc sotvaeter wSVhIeDns:Command NAK BUSY The indicates that the response to the request is 8.3.3.2o2r.2.2. PE_UFP_VDM_Send_SVIDs State PE_RESP_VDM_Send_SVIDs ResponderShall Structured VDMDiscover SVIDsACK Command On entry to the state the send the Policy rEensgpionnesSeh.all PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready The- Struct ured VtrDaMnsDitiisocno tvoe re iSthVeIDr sthAeC KCommand, or state when: 8.3.3.2T2h.e2.3 P E_UFP_VDM _Ge t_SVIDs_ NreAspKo nSstea hteas been sent. PE_RESP_VDM_Get_SVIDs_NAK Policy EngineShall Structured VDMDiscover SVIDs NAK BUSYCommand Device Policy Manager On entry to the state the send a P oorl icy Eng ineShall response as indicated bPyE t_hSeR C_Ready PE_SNK_Rea.dy PE_CBL_Ready The- Struct ured VtrDaMnsDitiisocno tvoe re iStVheIDr sthNeA K BUSYCom, mand or state when: The or response has been sent. Figure 8.197, \"Responder Structured VDM Discover Modes State Diagram\" Responder Discover ModesCommand shows the state diagram for a on receiving a Figure 8.197 Respond.er Structured VDM Discover Modes State Diagram PE_RESP_VDM_Get_Modes_ PE_RESP_VDM_Get_Modes PE_RESP_VDM_Send_Modes Actions on entry:NAK DPM says Actions on entry: Modes information Actions on entry: Send Discover Modes NAK/BUSY NAK/BUSY Request Modes information from DPM from DPM Send Discover Modes ACK Command response as requested Power = Explicit Contract Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected PD = Connected Discover Mo sd ee ns t NAK/BUSY Disc ro ev qe ur eM stodes Discover s eM no tdes ACK PE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready Policy Engine PE_RESP_VDM_Get_Modes PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready The transitions to the state from either the, - Struct ourr ed VDMDiscove srt aMteo dwehseCno:mmand A PE_RESP_V DM_Get_Modes R ersepqounedsetr isS hreaclelived. Device Policy Manager On entry to the state the request Modes information from the Policy Engin. eShall PE_RESP_VDM_Send_Modes The- transition to the Device Policy Manage srtate when: PoliMcyo Ednegsi innefoSrhmalaltion is received frPomE_ RthEeS P_VDM_Get_Modes_NA.K The- Devic e Polic ytr Manasniatigoenr to the Disco svtearte M wohdeens:Command NAK BUSY The indicates that the response to the request is 8.3.3.2o2r.3.2. PE_RESP_VDM_Send_Modes State PE_RESP_VDM_Send_Modes ResponderShall Structured VDMDiscover Modes ACKCommand On entry to the state the send the Policy Engi nreesSphoanlsle. PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready The- Struct ured VtrDaMnsDitiisocno tvoe re iMthoedr etsheA CKCommand, or state when: 8.3.3.2T2h.e3.3 P E_RESP_VDM _Ge t_Modes r_eNspAoKns Set haatse been sent. PE_RESP_VDM_Get_Modes_NAK Policy EngineShall Structured VDMDiscover ModesNAK BUSYCommand Device Policy Manager On entry to the state the send a Po licy E nogr ineSha ll response as indPicEa_tSeRd Cb_yR tehaed y PE_SNK_Ready P.E_CBL_Ready The- Struct ured VtrDaMnsDitiisocno tvoe re iMthoedr etsheN AK BUSYCom, mand or state when: The or response has been sent. Figure 8.198, \"Receiving a Structured VDM Attention State Diagram\" AttentionCommand shows the state diagram when receiving an rFeiqguuerset.8.198 Receiving a Structured VDM Attention State Diagram PE_SRC_Ready or PE_SNK_Ready Attention Command DPM informed request received PE_RCV_VDM_Attention_Request Actions on entry: Inform Device Policy Manager of Attention Command request Power = Explicit Contract PD = Connected Policy Engine PE_RCV_VDM_Attention_Request PE_SRC_Ready PE_SNK_Ready The transitions to the state from either the or - Atte nsttaioten wChomenm:and An PE_RC V_VDM_At treenqtuieosnt_ iRse rqeuceeisvted. Policy EngineShall Device Policy Manager AttentionCommand On entry to the state the inform the of the Policy Eng ineShall request. PE_SRC_Ready PE_SNK_Ready The- Devic e Polic tyr aMnasnitaiogner to either the or state when: The has been informed. Shall DFP Structured VDM T8h.3e.S3ta.t2e 3D.i1agrams in th iDs sFePct iSotnr uctu arpepldy tVo DallM Mso thdaet sEunpptorryt State Diagrsa.m Figure 8.199, \"DFP VDM Mode Entry State Diagram\" DFP Figure 8.199 DFP VD sMho Mwos dthee E sntatrtey oSptaetrea tDioina gfroar ma when entering a Mode. PE_DFP_VDM_Mode_Entry_ACKed PE_DFP_VDM_Mode_Entry_NAKed Actions on entry: Actions on entry: Request DPM to enter the mode Inform DPM of reason for failure Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected Mode Entry ACK received Mode Entry NAK/BUSY Received | Mode entered VDMModeEntryTimer timeout | PE_DFP_VDM_Mode_Entry_Request Protocol Error3 Actions on entry: Send Mode Entry request DPM informed2 Start VDMModeEntryTimer Power = Explicit Contract PD = Connected DPM requests Mode entry1 PE_SRC_Ready or PE_SNK_Ready (DFP) 1) The Device Policy Manager Shallhave placed the system into USB Safe State before issuing this request when entering Modal operation. 2) The Device Policy Manager Shallhave returned the system to USB operation if not in Modal operation at this point. 3) Protocol Errors are handled by informing the DPM, returning to USB Safe State and then processing the Message once the PE_SRC_Readyor PE_SNK_Readystate has been entered. Policy Engine PE_DFP_VDM_Mode_Entry_Request PE_SRC_Ready PE_SNK_Ready DFP The transitions to the state from either the or - Dev sictaet Peo floicr ya M ana wgehren: Port Partner Cable Plug The PE_DFP_VDM_Mod er_eEqnutersyt_sR tehqaut ethste Poli coyr E an gineShall enter aS Mtroudcetu.red VDMEnter ModeCommand Shall VDMModeEntryTimer On entry to the state the send a Po licy Engin ereSqhuaelslt and start tPhEe_ DFP_VDM_Mode_Entry._ACKed The- Structur ed VD tMraEnnstiteiro nM tood tehAe CKCommand state when: PoliAcy EngineShall PE _DFP_VDM r_Mesopdoen_sEen itsr rye_cNeAivKeedd. The- Structur ed VD tMraEnnstiteiro nM tood tehNe AK BUSYCommand state when: - A VDMModeEnt ryTimer or response is received or The times out. PE_DFP_VDM_Mode_Entry_ACKed Policy EngineShall Device Policy Manager On entry to the state the request the to enPtoelri ctyh eE nMgoindee.Shall PE_SRC_Ready PE_SNK_Ready DFP The- transition to either the or state for a when: 8.3.3.2T3h.e1 M.3ode has been ePnEte_rDeFd.P_VDM_Mode_Entry_NAKed State PE_DFP_VDM_Mode_Entry_NAKed Policy EngineShall Device Policy Manager NAK BUSY Protocol Error On entry to the state the inform the of thPeo rleicays oEnn gfoinre faSihluarlel (,, timeout orP E_SRC_Ready). PE_SNK_Ready DFP The- Devic e Polic tyr aMnasnitaiogner to either the or state for a when: The has been informed. Figure 8.200, \"DFP VDM Mode Exit State Diagram\" DFP Figure 8.200 DFP sVhDoMw sM thoed est Eatxei td Siatagrtea mD ifaogrr aa m when exiting a Mode. PE_SRC_Ready or PE_SNK_Ready (DFP) DPM indicates DPM informed1 Mode exit PE_DFP_VDM_Mode_Exit_Request Actions on entry: Send Exit Mode request Start VDMModeExitTimer Exit Mode BUSY Received | Power = Explicit Contract VDMModeExitTimer Timeout PD = Connected Exit Mode ACK/NAK received PE_DFP_VDM_Exit_Mode_ACKed PE_SRC_Hard_Reset or Actions on entry: PE_SNK_Hard_Reset Inform DPM of ACK or NAK (DFP) Power = Explicit Contract PD = Connected 1) The Device Policy Manager is required to return the system to USB operation at this point when exiting Modal Operation. Policy Engine PE_DFP_VDM_Mode_Exit_Request PE_SRC_Ready PE_SNK_Ready DFP The transitions to the state from either the or - Dev sictaet Peo floicr ya M ana wgehren: Port Partner Cable Plug The PE_DFP_VDM_Mod er_eEqxuite_sRtse qthuaets tthe Policy oErn ag ineShall exit aS Mtroudcetu.red VDMExit Mode Command Shall VDMModeExitTimer On entry to the state the send a Policy rEenqguiensetS ahnadl l start the PE_DFP_VDM_Mod.e_Entry_ACKed The- Structur ed VD tMraEnxsiitt iMono dtoe tAhCeK NAKCommand state when: PoliAcy EngineShall or PE_ SRC_Hard _rReespseotnse PisE r_eScNeKiv_Heda.rd_Reset Power Role The transition to either the or state depending on the pre- sent Structured w VhDeMn:Exit ModeBUSYCommand - A VDMModeExi tTimer response is received or 8.3.3.2T3h.e2.2 PE_D tFimPe_sV oDuMt. _DFP_Mode_Exit_ACKed State PE_DFP_VDM_Mode_Entry_ACKed Policy EngineShall Device Policy Manager ACK NAK On Exit to the state the inform the Of the rPeosluiclty: Engi noer Shall. PE_SRC_Ready PE_SNK_Ready DFP The transition to either the or state for a when: - Device Policy Manager The has been informed. Shall UFP Structured VDM T8h.3e.S3ta.t2e 4D.i1agrams in th iUs FsePct iSotnr uctu arpepldy tVo DallM Ens ttheart sMupopdoret State Diagrsa.m Figure 8.201, \"UFP Structured VDM Enter Mode State Diagram\" UFP Enter ModeCommand shows the state diagram for a in response to an. Figure 8.201 UFP Structured VDM Enter Mode State Diagram PE_SRC_Ready or PE_SNK_Ready (UFP) Actions on entry: Power = Explicit Contract PD = Connected Enter Modes request1 Enter Mode NAK sent PE_UFP_VDM_Evaluate_Mode_Entry Actions on entry: Request DPM to evaluate request to enter a Mode Cable = Awake PD = Connected DPM says Enter Mode ACK NAK sent DPM says Mode entered PE_UFP_VDM_Mode_Entry_NAK PE_UFP_VDM_Mode_Entry_ACK Actions on entry: Actions on entry: Send Enter Mode NAK Command response Send Enter Mode ACK Command as requested Cable = Awake Cable = Awake PD = Connected PD = Connected 1) The UFP is required to be in USB operation or USB Safe State at this point. Policy Engine PE_UFP_VDM_Evaluate_Mode_Entry PE_SRC_Ready PE_SNK_Ready UFP The transitions to the state from either the or - Struct sutraetde VfoDrM a Ente wr hMeond:eCommand DFP A PE_UFP_V DM_Evaluate _Mode_En rteryquest is recPeoivliecdy Efrnogmin tehSeh all. Device Policy Manager Enter ModeCommand Command On Entry to the state the request the to evaluate the request and enter the Mode indicated in the request if the rPeoqluiceys tE insg aincceeSphtaabllle. PE_UFP_VDM_Mode_Entry_ACK The- Devic e Polic tyr aMnasnitaiogner to the state when: PoliTcyh eE ngineShall indicaPteEs_ UthFaPt_ VthDeM M_oMdoed hea_Es nbtereyn_ NenAtKered. The- Devic e Polic tyr aMnasnitaiogner to the state when:NAK The indicates that the response to the Mode request is. PE_UFP_VDM_Mode_Entry_ACK Policy EngineShall Structured VDMEnter Mode ACKCommand On entry to the state the send a Policy Engi nreesSphoanlsle. PE_SRC_Ready PE_SNK_Ready UFP The- Struct ured VtrDaMnsEitniotenr t Mo eoidtheeArC tKheC ommand or state for a when: 8.3.3.2T4h.e1.3 P E_UFP_VD M_ Mode_En rterspyo_nNsAe Kha Ss tbaeteen sent. PE_UFP_VDM_Mode_Entry_NAK Policy EngineShall Structured VDMEnter Mode NAKCommand Device Policy Manager On entry to the state the send a P olicy Engi nreesSphoanlsle as indicated by the PE_SRC_Ready PE. _SNK_Ready UFP The- Struct ured VtrDaMnsEitniotenr t Mo eoidtheeNrA thKeC ommand or state for a when: The response has been sent. Figure 8.202, \"UFP Structured VDM Exit Mode State Diagram\" UFP Exit ModeCommand shows the state diagram for a in response to an. Figure 8.202 UFP Structured VDM Exit Mode State Diagram PE_SRC_Ready or PE_SNK_Ready (UFP) Actions on entry: Power = Explicit Contract PD = Connected Exit Mode request received PE_UFP_VDM_Mode_Exit Actions on entry: Request DPM to evaluate request to exit the requested Mode Exit Mode NAK sent DPM says NAK Power = Explicit Contract PD = Connected Exit Mode ACK sent1 Mode exited PE_UFP_VDM_Mode_Exit_ACK PE_UFP_VDM_Mode_Exit_NAK Actions on entry: Actions on entry: Send Exit Mode ACK Command Send Exit Mode NAK Command Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected 1) The UFP is required to be in USB operation or USB Safe State at this point. Policy Engine PE_UFP_VDM_Mode_Exit PE_SRC_Ready PE_SNK_Ready UFP The transitions to the state from either the or - Struct sutraetde VfoDrM a Exit wMhoedne:Command DFP A PE_UFP_VD M_Mode_E xit reqPuoleicsty iEsn rgeicneeivSehda flrlom the.Device Policy Manager Command On entry to the state the request the to exit the ModPe oinlidcyic Eantegdin ien Sthhea ll. PE_UFP_VDM_Mode_Exit_ACK The- Devic e Polic tyr aMnasnitaiogner to the state when: PoliTcyh eE ngineShall indicaPteEs_ UthFaPt_ VthDeM M_oMdoed hea_Es xbiete_NnA eKxited. The- Devic e Polic tyr Manasnitaigoenr to the Command state whEexnit: ModeCommand NAK The indicates that the response to the request is. PE_UFP_VDM_Mode_Exit_ACK Policy EngineShall Structured VDMExit ModeACK Command On entry to the state the send a Policy rEensgpionnesSeh.all PE_SRC_Ready PE_SNK_Ready UFP The- Struct ured VtrDaMnsEitxiiotn M too deeitAheCrK thCoe mmand or state for a when: 8.3.3.2T4h.e2.3 P E_UFP_V DM _Mode_E rexsipt_oNnsAeK ha Sst baeteen sent. PE_UFP_VDM_Mode_Exit_NAK Policy EngineShall Structured VDMExit ModeNAK Command Device Policy Manager On entry to the state the send a Policy rEensgpionnesSeh aasl lindicated by the PE_S.RC_Ready PE_SNK_Ready UFP The- Struct ured VtrDaMnsEitxiiotn M too deeitNheArK thCeo meimthaenr dthe or state for a when: The response has been sent. Shall Cable Plug Structured VDM T8h.3e.S3ta.t2e 5D.i1agrams in th iCs asebcltieo nP lug Capapblyl eto Ralel ady Statse th Dati saugprpaormt s. Figure 8.203, \"Cable Ready State Diagram\" Cable Plug Figure s8h.2o0w3s Cthaeb Clea bRleea Rdeya dSyta sttea tDei dagiargarmam for a. Power up | Hard Reset Complete | Cable Reset Complete PE_CBL_Ready Actions on entry: Cable = Awake/Asleep PD = Not Connected/Connected PE_CBL_Ready Cable Plug Cable Reset The state shown in the following sections is the normal operational state for a and where it starts after power up or a Hard/. Figure 8.204, \"Cable Plug Soft Reset State Diagram\" Cable Plug Soft_Reset Message shows the state diagram on reception of a. Figure 8.204 Cable Plug Soft Reset State Diagram PE_CBL_Ready Accept Message sent | Transmission Error indication from Protocol Layer PE_CBL_Soft_Reset Actions on entry: Reset Protocol Layer Send Accept Message Cable = Awake PD = Connected Soft Reset Message received PE_CBL_Soft_Reset Shall Soft_ResetMessage Protocol Layer The state be entered from any state when a is received from the.PE_CBL_Soft_Reset Policy EngineShall Protocol Layer Cable Plug Shall Protocol Layer AcceptMessage On entry to the state the reset the in the and thenP roelqicuye Estn tghinee Shall to send aPnE _CBL_R eady. The- Accep tMes staragnesition to the state when: - The Protoco l Layer has been sent or The indicates that a transmission error has occurred. Figure 8.205, \"Cable Plug Hard Reset State Diagram\" Cable Plug Hard Reset Cable Reset shows the state diagram for a or. Figure 8.205 Cable Plug Hard Reset State Diagram Hard Reset signalling Received | Cable Reset Command PE_CBL_Hard_Reset Actions on entry: Reset Cable Plug Cable = Awake/Asleep PD = Not Connected Cable reset complete PE_CBL_Ready PE_CBL_Hard_Reset Shall Hard ResetSignaling Cable Reset Signaling The state be entered from any state when either or is detePcEt_eCdB.L_Hard_Reset Policy EngineShall Cable Plug On ePnotrliyc tyo E tnhgei neShall stateP tEh_eC BL_Ready reset the (equivalent to a power cycle). The- Cable Plug transition to the state when: The reset is complete. Plug or VPD State Diagram Figure 8.206, \"DFP/VCONN Source Soft Reset or Cable Reset of a Cable Plug or VPD State Diagram\" Policy Engine VCONN Source Soft Reset Cable Reset Cable Plug VPD SOP’ SOP’’ below shows the state diagram for the in a when performing a or of a or onF igure/ 8.20.6 T DhFe Pfo/lVloCwONinNg S soeuctricoen Ss odfets Rcreisbeet o opre Craatbiolen Rine seeatc ho fo af tChaeb sltea tPelsu.g or VPD State Diagram In Explicit Contract & Accept Message Not in Explicit Contract & PE_SRC_Ready or Received on SOP’/SOP’’ ReceA ic vc ee dp ot nM Se Oss Pa ’/g Se OP’’ PE_SRC_Send_Capabilities or PE_SNK_Ready (VCONN Source) PE_SRC_Discovery2 (VCONN Source) Cable Reset sent SenderResponseTimer Timeout | Transmission PE_DFP_VCS_CBL_Send_Soft_Reset PE_DFP_VCS_CBL_Send_Cable_Reset Error indication from Protocol Layer | Actions on entry: Actions on entry: Protocol Error Reset Protocol Layer Send Cable Reset Message Send Soft Reset Message on SOP’/SOP’’ Initialize and run SenderResponseTimer Power = DefauIt/Implicit or Explicit Contract PD = Connected; Cable Discovered Power = DefauIt/Implicit or Explicit Contract PD = Connected; Cable Discovered Cable Reset Request Message not sent after retries on SOP’/SOP’’ (no GoodCRC received)1 & from Device Policy Manager Previously Cable Discovered|Protocol error detected on SOP’/SOP’’ 1) Excludes the Soft_ResetMessage itself. 2) Sink only communicates with the Cable Plug when in an Explicit Contract. If the Discover IdentityCommand is being sent at startup, then the Policy Engine will subsequently transition to the PE_SRC_Send_Capabilitiesstate as normal. Otherwise, the Policy Engine will transition to the PE_SRC_Discoverystate. PE_DFP_VCS_CBL_Send_Soft_Reset Shall Protocol Error SOP’ SOP’’ Protocol Layer Section 6.8.1, \"Soft Reset and Protocol Error\" Message The SOP’ SOP’’ state be enteredC afrbolem P alungy sVtaPtDe when a is detected on / by the Cable P (lusege ) or when a Devi chea sP onloict yb een sMeannt aagfteerr retries oSno ft Re/set wSOhPil’e ScOomP’’municating with a / and when there was previous communication with the that did not result in a Transmission Error or whenever the directsP aE _DFP_VCS _oCnB L_Se/nd_So.ft_Reset DFPPolicy EngineShall SOP’ SOP’’ Protocol Layer Soft Reset Shall Soft_ResetMessage SOP’ SOP’’ Cable Plug VPD On entry to the SenderResponseTimer state the request the / to perform a, then send a on / to the /, and iPnoiltiicayli Ezen gainnde rSuhna tllhe PE. _SRC_Ready PE_SNK_Ready DFP VCONN Source Power Role The transition to either the or state, depending on the - 's Explicit, wCohnetnr:act - TheArcec iesp ntoM essage in place andSOP’ SOP’’ PoliAcyn E ngineS hall has been received oPnE _SRC/_Send._Capabilities PE_SRC_Discovery DFP VCONN Source Power Role The transition to either the state or state, dep- ending on the Exp'sl icit Contract 's, when: - TheArcec iesp atnM essage in place andSOP’ SOP’’ PoliAcyn E ngineS hall has been recePivEe_Dd FoPn_ VCS_/CBL_S.end_Cable_Reset The- SenderR espo ntrsaenTsiimtioenr to the state when: - A Protocol Layer timeout occurs - Or the Protocol Er irnodricates that a traSnOsPm’isSsOioPn’’ error hParso otocccoulr rLeadyer Or when a is detected on / by the. PE_DFP_VCS_CBL_Send_Cable_Reset Shall Device Policy Manager Cable Reset The state be entered from any state when the requests a PE_DFP. _VCS_CBL_Send_Cable_Reset DFPPolicy EngineShall Protocol Layer Cable ResetSignaling On entry to the state the request the to sePnodl icy EngineSh all. PE_SRC_Ready PE_SNK_Ready VCONN Source Power Role The transition to either the or state, depending on the - 'sC able Reset, Swighneanl:ing has been sent. State Diagram Figure 8.207, \"UFP/VCONN Source Soft Reset of a Cable Plug or VPD State Diagram\" UFPPolicy Engine VCONN Source Soft Reset Cable Plug VPD SOP’ SOP’’ below shows the state diagram for the in a when performing a of a or on /. The following sectiFoingsu dree s8c.r2ib0e7 o UpFePra/tVioCnO NinN eSaocuhr ocef tShoef ts tRaetesse.t of a Cable Plug or VPD State Diagram Accept Message Received on SOP’/SOP’’ PE_SRC_Ready or PE_SNK_Ready (VCONN Source) SenderResponseTimer Timeout | Transmission PE_UFP_VCS_CBL_Send_Soft_Reset Error indication from Protocol Layer | Actions on entry: PE_SRC_Hard_Reset or Protocol Error Reset Protocol Layer Send Soft Reset Message on SOP’/SOP’’ PE_SNK_Hard_Reset Initialize and run SenderResponseTimer Power = DefauIt/Implicit or Explicit Contract PD = Connected Message not sent after retries on SOP’/SOP’’ (no GoodCRC received)1 & Previously Cable Discovered |Protocol error detected on SOP’/SOP’’ 1) Excludes the Soft_ResetMessage itself. PE_UFP_VCS_CBL_Send_Soft_Reset Shall Protocol Error SOP’ SOP’’ Protocol Layer Section 6.8.1, \"Soft Reset and Protocol Error\" Message The SOP’ SOP’’ state be enteredC afrbolem P alungy sVtPatDe when a is detected on / by the Cable P (lusege ) or when a Devi chea sP onloict yb een sMeannt aagfteerr retries oSno ft Re/set wSOhPil’e ScOomP’’municating with a / and when there was previous communication with the that did not result in a Transmission Error or whenever the directsP aE _UFP_VCS _oCnB L_Se/nd_Sof.t_Reset Policy EngineShall SOP’ SOP’’Protocol Layer Soft Reset Shall Soft_ResetMessage SOP’ SOP’’ Cable Plug On entry to tSheen derResponseTimer state the request the / to perform a, then send a on / to the, and initialize and Pruonli ctyh eE ngineShall. PE_SRC_Ready PE_SNK_Ready UFPVCONN Source Power Role The transition to either the or state, depending on the - 's AcceptM, ewshsaegne: SOP’ SOP’’ PolicAyn E ngineS hall has been received PonE _SRC_/Hard._Reset PE_SNK_Hard_Reset UFPVCONN Source Power Role The transition to either the or state, depending on the - SenderR'se sponseTim,e wrhen: - A Protocol Layer timeout occurs - Or the Protocol Er irnodricates that a traSnOsPm’isSsOioPn’’ error hParso otocccoulr rLeadyer Or when a is detected on / by the. State Diagram Figure 8.208, \"Source Startup Structured VDM Discover Identity State Diagram\" Source Cable Plug shows the state diagram for discovery of ideFnitgiutyr ein 8fo.2rm08a tSioonu rfrcoem St aa rtup Struc tduurreindg V tDheM s tDairstcuopv seerq Iudeennctei.ty State Diagram PE_SRC_Startup DPM requests identity discovery3& Protocol Layer Reset Complete PE_SRC_VDM_Identity_Request Actions on entry: Send Discover Identity request Increment the DiscoverIdentityCounter Start VDMResponseTimer Power = No or Implicit Contract Discover Identity NAK/BUSY | DPM requests identity discovery & Cable Plug = Not PD Connected VDMResponseTimer Timeout | DiscoverIdentityCounter < nDiscoverIdentityCount2 Discover Identity request sending failure (without GoodCRC) Discover Identity ACK received PE_SRC_VDM_Identity_ACKed PE_SRC_VDM_Identity_NAKed Actions on entry: Actions on entry: Inform DPM of identity Inform DPM of result Power = No or Implicit Contract Power =No or Implicit Contract Cable Plug = PD Connected Cable Plug = PD Connected DPM informed DPM informed PE_SRC_Discovery PE_SRC_Send_Capabilities or PE_SRC_Discovery1 1) If the Discover IdentityCommand is being sent at startup, then the Policy Engine will subsequently transition to the PE_SRC_Send_Capabilitiesstate as normal. Otherwise, the Policy Engine will transition to the PE_SRC_Discoverystate. 2) The SourceCapabilityTimercontinues to run during the states defined in this diagram even though there has been an exit from the PE_SRC_Discovery state. This ensures that Source_CapabilitiesMessages are sent out at a regular rate. 3) The DPM in an EPR Source Shall request the discovery of the identity of the Cable Plug at startup. Policy EngineShall PE_SRC_VDM_Identity_Request PE_SRC_Startup The transition to the state from the state whe- n: Device Policy Manager Cable Plug PoliTcyh eE ngineShall requePstEs_ SthReC d_VisDcMov_eIdrye notf itthye_R ideeqnuteistyt of the PE._SRC_Discovery The transition to the state from the state whe- n: Device Policy Manager Cable Plug - The DiscoverIdentityCoun rteerquenstDsi sthceo vdeisrcIdoevnertyit yoCf othuen itdentity of the and The < PE_SRC_Discov.ery SourceCapabilityTimerShall Figure 8.208, \"Source Startup Structured VDM Discover Identity State EDviaegnr tahmo\"ugh thSehrael hl Naso bteen a transition out of the PE_SRC_Discover sytate the continue to run during the states shown in and be initialized on re-entry to. Note: EPR Source Cable Plug First Explicit Contract Section 6.4.10.1, \"Process to enter EPR Mode\" An is required to discover the identity of the prior to entering the PE_ (SsReCe_ VDM_Identity_Request Policy Engin) eShall Structured VDMDiscover IdentityCommand Shall DiscoverIdentityCounter Shall OVDn MenRterysp toon tsheeT imer state the send a request, increment the and start the Policy EngineSha.ll PE_SRC_VDM_Identity_ACKed The- Structur ed VD tMraDnissictioovne rto I dtheen tityACKCommand state when: PoliAcy EngineShall PE_S RC_V DM_Ident rietys_pNoAnKsee dis received. The- Structur ed VD tMraDnissictioovne rto I dtheen tityNAK BUSYCommand state when: - A VDMRespons eTimer or response is received or - The Structured VDMDisco tviemre Isd oeuntt iotryCommand Message GoodCRCMessage The request sending fails (no 8.3.3.2r5ec.3ei.v2ed after retri e Ps)E. _SRC_VDM_Identity_ACKed State PE_SRC_VDM_Identity_ACKed Policy EngineShall Device Policy Manager On entry to the state the inform the of the IdenPtiotyli ciny fEonrgminaetioSnh.all PE_SRC_Send_Capabilities PE_SRC_Discovery The- Devic e Polic tyr aMnasnitaiogner back to either the or state when: 8.3.3.2T5h.e3.3 PE_SR hCa_sV bDeeMn i_nIfdoermnetidt.y_NAKed State PE_SRC_VDM_Identity_NAKed Policy EngineShall Device Policy Manager NAK BUSY On entry to the state the inform the of the resuPlto (licy E,n gineS ohra tlilmeout). PE_SRC_Send_Capabilities PE_SRC_Discovery The- Devic e Polic tyr aMnasnitaiogner back to either the or state when: The has been informed. Figure 8.209, \"Cable Plug Structured VDM Enter Mode State Diagram\" Cable Plug Enter ModeCommand shows the state diagram for a in response to an Figure 8.209 Cab.le Plug Structured VDM Enter Mode State Diagram PE_CBL_Ready Actions on entry: Cable = Awake/Asleep PD = Not Connected/Connected Enter Modes request1 Enter Mode NAK sent PE_CBL_Evaluate_Mode_Entry DPM says Actions on entry: NAK Request DPM to evaluate request to enter a Mode Cable = Awake PD = Connected Enter Mode ACK sent DPM says Mode entered PE_CBL_Mode_Entry_NAK PE_CBL_Mode_Entry_ACK Actions on entry: Actions on entry: Send Enter Mode NAK Command response Send Enter Mode ACK Command as requested Cable = Awake Cable = Awake PD = Connected PD = Connected 1) The Cable is required to be in USB operation or USB Safe State at this point. Policy Engine PE_CBL_Evaluate_Mode_Entry PE_CBL_Ready The- Structur terda nVsDiMtioEnnst teor t Mheo deCommand state from DthFeP state when: A PE_CBL_Ev aluate_Mod e_Entry requestP iosl irceyc Eeinvgeidn efrSohma ltlhe. Device Policy Manager Enter ModeCommand Command On Entry to the state the request the to evaluate the request and enter the Mode indicated in the request if the request is accepPtoalibclye.EngineShall PE_CBL_Mode_Entry_ACK The- Devic e Polic tyr aMnasnitaiogner to the state when: PoliTcyh eE ngineShall indicaPteEs_ CthBaLt_ Mthoed Me_oEdnet hrya_sN bAeKen entered. The- Devic e Polic tyr aMnasnitaiogner to the state when: NAK 8.3.3.2T5h.e4.1.2 PE _iCndBicLa_tMes othdaet _tEhen rtersyp_oAnsCeK to S tthaet Meode request is. PE_CBL_Mode_Entry_ACK Policy EngineShall Structured VDMEnter ModeACK Command On entry to the state the send a response. Policy EngineShall PE_CBL_Ready The- Struct ured VtrDaMnsEitniotenr t Mo tohdee ACKCommand state when: 8.3.3.2T5h.e4.1.3 PE_CBL _Mo de_Entry r_eNspAoKns Se thaatse been sent. PE_CBL_Mode_Entry_NAK Policy EngineShall Structured VDMEnter ModeNAK Command Device Policy Manager On entry to the state the send a Policy rEensgpionnesSeh aasl lindicated by the PE_CBL_Ready. The- Struct ured VtrDaMnsEitniotenr t Mo tohdee NAKCommand state when: The response has been sent. Figure 8.210, \"Cable Plug Structured VDM Exit Mode State Diagram\" Cable Plug Exit ModeCommand shows the state diagram for a in response to an Figu re 8.210 C.able Plug Structured VDM Exit Mode State Diagram PE_CBL_Ready Actions on entry: Cable = Awake/Asleep PD = Not Connected/Connected Exit Mode request received PE_CBL_Mode_Exit Actions on entry: Request DPM to evaluate request to exit the requested Mode Exit Mode NAK sent DPM says NAK Cable = Awake PD = Connected Exit Mode ACK sent1 Mode exited PE_CBL_Mode_Exit_ACK PE_CBL_Mode_Exit_NAK Actions on entry: Actions on entry: Send Exit Mode ACK Command Send Exit Mode NAK Command Cable = Awake Cable = Awake PD = Connected PD = Connected 1) The Cable is required to be in USB operation or USB Safe State at this point. Policy Engine PE_CBL_Mode_Exit PE_CBL_Ready The- Structur terda nVsDiMtioEnxsi tt oM tohde eCommand state from the DFP state when: A PE_CBL_Mo de_Exit Poli crye qEunegsitn eisS rheacellived from theD evice. Policy Manager Command On entry to the state the request the to exit the Mode indicPaotleidcy i nE nthgein eShall. PE_CBL_Mode_Exit_ACK The- Devic e Polic tyr aMnasnitaiogner to the state when: PoliTcyh eE ngineShall indicaPteEs_ CthBaLt_ Mthoed Me_oEdxei th_aNsA bKeen exited. The- Devic e Polic tyr Manasnitaigoenr to the Command state when: Exit ModeCommand NAK The indicates that the response to the request is 8.3.3.25.4..2.2 PE_CBL_Mode_Exit_ACK State PE_CBL_Mode_Exit_ACK Policy EngineShall Structured VDMExit ModeACK Command On entry to the state the send a response. Policy EngineShall PE_CBL_Ready The- Struct ured VtrDaMnsEitxiiotn M too dtheeA CKCommand state when: 8.3.3.2T5h.e4.2.3 PE_CB L_M ode_Exit r_eNspAoKns Set haatse been sent. PE_CBL_Mode_Exit_NAK Policy EngineShall Structured VDMExit ModeNAK Command Device Policy Manager On entry to the state the send a Policy rEensgpionnesSeh aasl lindicated by the PE_CBL_Ready. The- Struct ured VtrDaMnsEitxiiotn M too dtheeN AKCommand state when: The response has been sent. Figure 8.211, \"Source EPR Mode Entry State Diagram\" EPR Source EPR_ModeMessage shows the state diagram for an in response to an. Figure 8.211 Source EPR Mode Entry State Diagram EPR Enter Mode (Enter Failed) sent PE_SRC_Ready EPR_Mode (Enter) received PE_SRC_EPR_Mode_Entry_Failed DPM says don’t PE_SRC_Evaluate_EPR Mode_Entry Actions on entry: enter EPR Mode Actions on entry: Send Enter Mode (Enter Failed) with Request DPM to evaluate request to enter EPR Mode appropriate failure code. Powe Pr D = =E x Cp ol nic ni et cC to en dtract Powe Pr D = =E x Cp ol nic ni et cC to en dtract DPM says enter EPR Mode PE_SRC_EPR_Mode_Entry_ACK EPR Enter Mode (Enter Acknowledged) Sent & PE_VCS_Send_Swap A Sec nti do n Es P o Rn E e nn tetr ry M: ode Acknowledge Source Uis n n ko nt o V wC nO CN aN b S leource & If Source is not the VCONN Source initiate VCONN Swap process Powe Pr D = =E x Cp ol nic ni et cC to en dtract VCONN Swap Process EPR Enter S M oo ud rce e ( iE sn Vte Cr O A Nc Nk Sn oo uw rl ce ed &ged) Sent & VCONN Swap Process Complete PE_VCS_Force_VCONN or Unknown Cable PE_VCS_Send_PS_RDY PE_SRC_EPR_Mode_Discover_Cable EP (cR a E pn tit ve er cM abod lee | ( E kn nt oe wr nA c Ek Pn Ro Cw al pe ad bg le ed C) aS be ln et ) & A C cahc rt e ri co ik en ds V c oo o un n t e.nn St wry a: p Result if Vconn Swap Process Source is the VCONN Source PE_INIT_PORT_VDM_Identity_Request Power = Explicit Contract PD = Connected Cable Discovery Process Cable Plug is not EPR capable Cable Discovery Process Complete PE_INIT_PORT_VDM_Identity_ACKed or PE_INIT_PORT_VDM_Identity_NAKed PE_SRC_EPR_Mode_Evaluate_Cable_EPR Actions on entry: Ask DPM to evaluate Cable Discovery results Power = Explicit Contract PD = Connected Cable Plug is EPR capable PE_SRC_EPR_Mode_Entry_Succeeded Actions on entry: Send EPR Mode (Enter Succeeded) Enter EPR Mode. Power = Explicit Contract PD = Connected EPR Mode Entered PE_SRC_Send_Capabilities Policy Engine PE_SRC_Evaluate_EPR_Mode_Entry PE_SRC_Ready The- EPR_M tordaensitions toM tehses age Sink state from the state when: An PE_SRC (_EEnvtaelru)a te_EPR_ Miso rdeec_eEivnetdry from the Poli.cy EngineShall Device Policy Manager EPR_Mode Message On Entry to the state the request the to evPaoluliactye E tnhgei neShall (Enter) PE._SRC_EPR_Mode_Entry_Ack The- Devic e Polic tyr aMnasnitaiogner to the EPR Mode state when: PoliTcyh eE ngineShall indicaPteEs_ StRhaCt_ EPR_Mode c_Eann tbrey _eFnatielreedd. The- Devic e Polic tyr aMnasnitaiogner to the EPR Mode state when: The indicates that the is not to be entered. PE_SRC_EPR_Mode_Entry_Ack Policy EngineShall EPR_Mode Message On entry to the state the send a (Enter AcknPoowlilceyd Egnegdi)n eShall. PE_SRC_EPR_Mode_Evaluate_Cable_EPR The- EPR_M ode transition to the Message state when: - The Source (EnterV ACOcNkNn oSwoulercdeged) has been sent and - The is not the andEPR Cable PoliTcyh eE ncgabinlee Sish aa lclaptive cable or a kPnEo_wVCnS _Send_Sw.ap The- EPR_M ode transition to the Message state when: - The Source (EnterV ACOcNkNn oSwoulercdeged) has been sent and - The is not the and PoliTcyh eE ncgabinlee Sish uanllknown. PE_SRC_EPR_Mode_Discover_Cable The- EPR_M ode transition to the Message state when: - The Source (EVnCtOeNr NA Sckounrocweledged) has been sent and - The is the and 8.3.3.2T6h.e1 c.3able is unkno w PnE. _SRC_EPR_Mode_Discover_Cable State Policy Engine PE_SRC_EPR_Mode_Discover_Cable PE_VCS_Force_VCONN PE_VCS_Send_Ps_Rdy The transitions to the state from the state or - Source stVaCteO NwNh Sewna:p PoliAcy Engine inSihtiaaltled prPoEce_IsNs IhTa_sP cOoRmTp_VleDteMd_.Identity_Request Cable Plug The transition to the state in order to perform - discoveSroyu wrcheen: VCONN Source PoliTcyh eE ngineS hisa tlhle. PE_SRC_EPR_Mode_Entry_Failed The- VCONN Swap transition to the Source VCONN Source state when: 8.3.3.2T6h.e1.4 pr o PceEs_sS faRilCe_dE (PthRe _Mode is_ Envota tlhuea te_Cable_E)P. R State PE_SRC_EPR_Mode_Evaluate_Cable_EPR Policy Engine Cable Discovery In the state the requests the DPM to evaluate the Policy r Eensuglitnse. Shall PE_SRC_EPR_Mode_Entry_Succeeded The- Cable Plug transition toE tPhRe Mode state when: PoliTcyh eE ngineShall is capable of PE_SR.C_EPR_Mode_Entry_Failed The- Cable Plug transition to theE PR Mode state when: 8.3.3.2T6h.e1.5 is n o Pt cEa_pSaRblCe _oEf PR_Mod.e_Entry_Succeeded State PE_SRC_EPR_Mode_Entry_Succeeded Policy EngineShall EPR_Mode Message EPR Mode On entry to the state the send a (Enter SuccPeoedliecyd )E ngineSh aanlld enter P.E_SRC_Send_Capabilities The- EPR Mode transition to the state when: has been entered. PE_SRC_EPR_Mode_Entry_Failed Policy EngineShall EPR_Mode Message On entry to the state the send a (Enter Failed) Polic.y EngineShall PE_SRC_Ready The- EPR_M ode transition to thMe essage state when: The (Enter Failed) has been sent. Figure 8.212, \"Sink EPR Mode Entry State Diagram\" EPR Sink EPR Mode shows the state diagram for an initiating the Entry process. Figure 8.212 Sink EPR Mode Entry State Diagram PE_SNK_Ready DPM Request EPR Mode Entry PE_SNK_Send_EPR Mode_Entry EPR Enter Mode received (!Succceded) | SenderResponseTimer timeout | Actions on entry: SinkEPREnterTimer timeout Send EPR Mode Entry Message PE_SNK_Send_Soft_Reset Start SenderResponse Timer Start SinkEPREnterTimer Power = Explicit Contract PD = Connected EPR Enter Mode Acknowledge received PE_SNK_EPR_Mode_Entry_Wait_For_Response EPR Enter Mode received (!Succceded) | SinkEPREnterTimer timeout Actions on entry: Wait for EPR Enter Mode response Actions on exit: PE_VCS_Evaluate_Swap Stop the SinkEPRTimer Enter EPR Mode VCONN_Swap Message Received VCONN Swap Process VCONN Swap Process completed PE_VCS_Turn_Off_VCONN Power = Explicit Contract PD = Connected EPR Enter Mode Succeeded received PE_SNK_Wait_For_Capabilities Policy Engine PE_SNK_Send_EPR_Mode_Entry PE_SNK_Ready The- transitions to the EPR Mode state from the state when: The DPMP Er_eSqNuKes_Stse nendt_rEyP iRn_tMo ode_Entry. Policy EngineShall EPR_Mode Message SenderResponseTimer SinkEPREnterTimer On Entry to the state the send an (Enter) Nanodt es:tarts the SinkEPREnterTimerSh aanlld the. PolicyT Ehneg ineShall P cEo_nStNinKu_Ee PtoR _rMuno dine _eWveariyt _sFtoatre_ Ruenstpilo int isse stopped or times out. The- EPR_M ode transition to the Message state when: PoliAcyn E ngineShal (lEnter AcknowledPgeE)_ SNK_Sen dis_ Sroecfte_iRveesde.t The- EPR_M odeM tersasnasgiteion to the state when: An is received which is not Enter Succeeded or - SenderResponseTimer - The SinkEPREnterTimer times out or 8.3.3.2T6h.e2.2 PE_S NtimKe_sE oPuRt._Mode_Wait_For_Response State Policy Engine EPR Mode In the State the PE_SNK_EPR w_Maiotds efo_Wr aa cito_nFfoirrm_Raetsiopno nthsaet the Policy e Enntgryin reeSqhuaesllt has succeeded. SinkEPREnterTimer EPR Mode On exit from the state the stop the Policy EngineSha alnld enter P.E_SNK_Send_Soft_Reset The- EPR_M odeM tersasnasgiteion to the state when: - An SinkEPRE nterTim eisr received which is not Enter Succeeded or PoliTcyh eE ngineShall times oPuEt._VCS_Evaluate_Swap The- VCONN_S wapM treasnsasigteion to the State when: PoliAcy EngineShall is received. PE_VCS_Turn_Off_VCONN PE_SNK_EPR_Mode_Wait_For_Response The transition back from the State to the - VCONN Swap State when: PoliTcyh eE ngineShall process has comPpEle_SteNdK._Wait_for_Capabilities The- EPR_M ode transition to the Message state when: An (Enter Succeeded) has been received. Figure 8.213, \"Source EPR Mode Exit State Diagram\" EPR Source EPR Mode shows the state diagram for an initiating the exit process. Figure 8.213 Source EPR Mode Exit State Diagram PE_SRC_Ready DPM Requests EPR Mode Exit EPR Mode Exit Message Received PE_SRC_Send_EPR Mode_Exit Actions on entry: Send EPR Mode Exit Message PE_SRC_EPR Mode_Exit_Received Actions on exit: Actions on entry: Exit EPR Mode Exit EPR Mode Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected EPR Mode Exit Message sent Not in an Explicit Contract with an SPR PDO In Explict Contract with SPR PDO & EPR Mode Exited PE_SRC_Hard_Reset PE_SRC_Send_Capabilities Policy Engine PE_SRC_Send_EPR_Mode_Exit PE_SRC_Ready The- transitions to the EPR Mode state from the state when: The DPMP Er_eSqRuCe_sStse nedxi_tE fPrRom_M ode_Exit. Policy EngineShall EPR_Mode Message On Entry to the PE_SRC_Send_EPR_Mode_Exi tstate the Policy Engin eShal lsend aEnP R Mode (Exit). On EPxoitl ifcryo mEn tghine eShall PE_SR Cs_tSaeten dth_eC apabilities exit. The- EPR_M ode transitMioenss taog tehe state when: 8.3.3.2T6h.e3.2 (Ex i tP) E_SRC_ EhPasR b_eMeno sdeent_.Exit_Received State Policy Engine PE_SRC_EPR_Mode_Exit_Received PE_SRC_Ready The- EPR_M tordaensitionsM toe stshaeg e state from the state when: An PE_SRC (_EExPitR) _Mode_Ex iist r_Receecievievde.d Policy EngineShall EPR Mode On EPnotrliyc yt oE tnhgein eShall PE_SRC_S esntadt_eC tahpea bilities exit. The- Expl icit Co tnrtarnascittion to thSeP R (A)PDO state when: - IEnP aRn M ode with an and Policy Engine Shhaas lbleen exited. PE_SRC_Hard_Reset The- Explic ittr Canonsittriaocnt to the SPR (A)PDO state when: Not in an with an. Figure 8.214, \"Sink EPR Mode Exit State Diagram\" EPR Sink EPR Mode shows the state diagram for an initiating the exit process. Figure 8.214 Sink EPR Mode Exit State Diagram PE_SNK_Ready DPM Requests EPR Mode Exit EPR Mode Exit Message Received PE_SNK_Send_EPR Mode_Exit Actions on entry: Send EPR Mode Exit Message PE_SNK_EPR Mode_Exit_Received Actions on exit: Actions on entry: Exit EPR Mode Exit EPR Mode Power = Explicit Contract Power = Explicit Contract PD = Connected PD = Connected Not in an Explicit Contract with an SPR PDO EPR Mode Exit Message sent In Explicit Contract with SPR PDO & EPR Mode Exited PE_SNK_Wait_for_Capabilities PE_SNK_Hard_Reset Policy Engine PE_SNK_Send_EPR_Mode_Exit PE_SNK_Ready The- transitions to the EPR Mode state from the state when: The DPMP Er_eSqNuKes_Stse nexdi_tE fProRm_M ode_Exit. Policy EngineShall EPR_Mode Message On Entry to the PE_SNK_Send_EPR_Mode_Exi tstate the Policy Engin eShal slend aEnP R Mode (Exit). On EPxoitl ifcryo mEn tghine eShall PE_SNK s_tWatea itth_efo r_Capabilitie s exit. The- EPR_M ode transitMioenss taog tehe state when: 8.3.3.2T6h.e4.2 (Ex i tP) E_SNK_ EhaPsR b_eMeno sdenet_.Exit_Received State Policy Engine PE_SNK_EPR_Mode_Exit_Received PE_SNK_Ready The- EPR_M tordaensitionsM toe stshaeg e state from the state when: An PE_SN K(E_ExPitR) _Mode_E xisit r_eRceecievievde.d Policy EngineShall EPR Mode On EPnotrliyc yt oE tnhgein eShall PE_SNK_W sataitt_ef othre_C apabilities exit. The- Expl icit Co tnrtarnascittion to thSeP R (A)PDO state when: - IEnP aRn M ode with an and Policy Engine Shhaas lbleen exited. PE_SNK_Hard_Reset The- Explic ittr Canonsittriaocnt to the SPR (A)PDO state when: Not in an with an. Figure 8.215, \"BIST Carrier Mode State Diagram\" UUT Source Sink Cable Plug BIST Carrier Mode Shall PE_SRC_Ready PE_SNK_Ready PE_CBL_Read yshows the state diagram required by a, which can be either a, or, when operating in. Transitions be from either the, oFri gure 8.215 BIS Tst Cataersr.ier Mode State Diagram PE_SRC_Ready or PE_SNK_Ready or PE_CBL_Ready BIST message received with Data Object BIST Carrier Mode & V = vSafe5V BUS PE_BIST_Carrier_Mode Actions on entry: Tell Protocol Layer to go to BIST Carrier Mode Initialize and run BISTContModeTimer V = vSafe5V BUS PD = Connected BISTContModeTimer timeout PE_SRC_Transition_to_default or PE_SNK_Transition_to_default or PE_CBL_Ready Source Sink Cable PlugShall PE_BIST_Carrier_Mode PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready The, or enter the state from either the, - BIST More ssage state whBenIS:T Carrier ModeBIST Data Object - AVB US vSafe5 iVs received with a and is aPtE _BIST_C.arrier_Mode Policy EngineShall Protocol Layer BIST Carrier Mode Section 6.4.3.1, \"BIST Carrier Mode\" Shall BISTContModeTimer On entry to the state the tell the to go to (see ) and initialize and run the. Policy EngineShall PE_SRC_Transition_to_default PE_SNK_Transition_to_default PE_CBL_Ready The transition to either the state, - BISTContModeTim setrate or state (as appropriate) when: The times out. Figure 8.216, \"BIST Test Data Mode State Diagram\" UUT Source Sink Cable Plug BIST Test Data Mode Shall PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready shows the state diagram required by a, which can be either a, or, when operating in. Transitions be from either the, F oigr ure 8.216 BIST s Ttaetsets D. ata Mode State Diagram PE_SRC_Ready or PE_SNK_Ready or PE_CBL_Ready BIST message received with Data Object BIST Test Mode & V = vSafe5V BUS PE_BIST_Test_Mode Actions on entry: Tell Protocol Layer to go to BIST Test Mode V = vSafe5V BUS PD = Connected Hard Reset PE_SRC_Transition_to_default or PE_SNK_Transition_to_default or PE_CBL_Ready Source Sink Cable PlugShall PE_BIST_Test_Mode PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready The, or enter the state from either the, - BIST More ssage state whBenIS:T Test DataBIST Data Object - AVB US vSafe5 iVs received with a and is at. PE_BIST_Test_Mode Policy EngineShall Protocol Layer BIST Test Data Mode Message GoodCRCMessage Message OSenc teinotnr y6.t4o.3 t.h2e, \" BIST Test Data Mode \"state the tell the to go into where it sends no further s except for s in response to received s (see Policy EngineShall ). PE_SRC_Transition_to_default PE_SNK_Transition_to_default PE_CBL_Ready The transition to either the state, - Hard Reset state or state (as appropriate) when: A occurs. Figure 8.217, \"BIST Shared Capacity Test Mode State Diagram\" UUT Source Sink Cable Plug BIST Shared Capacity Test Mode Shall PE_SRC_Ready PE_SNK_Ready PE_CBL_Rea sdhyows the state diagram required by a, which can be either a, or, when operating in. Transitions be from either the Figure, 8.217 BIST Sh aorre d Capacity Tes stt Matoesd.e State Diagram PE_SRC_Ready or PE_SNK_Ready or PE_CBL_Ready BIST message received with Data Object BIST Shared Test Mode Entry PE_BIST_Shared Capacity_Test_Mode Actions on entry: Tell Protocol Layer to go to BIST Shared Capacity Test Mode1. VBUS= vSafe5V PD = Connected BIST message received with Data Object BIST Shared Test Mode Exit PE_SRC_Transition_to_default or PE_SNK_Transition_to_default or PE_CBL_Ready 1) The UUT Shallexit BIST Shared Capacity Test Mode when It is powered off. The UUT Shallremain in BIST Shared Capacity Test Mode for any PD event (except when a BIST Shared Test Mode ExitBIST Data Object, is received); specifically the UUT Shallremain in BIST Shared Capacity Test Mode when any of the following PD events occurs: Hard Reset, Cable Reset, Soft Reset, Data Role Swap, Power Role Swap, Fast Role Swap, VCONNSwap. The UUT Mayleave test mode if the tester makes a request that exceeds the capabilities of the UUT. Source Sink Cable PlugShall PE_BIST_Shared_Capacity_Test_Mode PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready The, or enter the state from either the - BIST, Message or BIST Sh satraeted wThesetn M: ode EntryBIST Data Object - AVB US vSafe5 iVs received with a and is aPtE _BIST_Sh. ared_Capacity_Test_Mode Policy EngineShall Protocol Layer BIST Shared Capacity Test Mode Section 6.4.3.3, \"BIST Shared Capacity Test Mode\" On entry to the state the tell the to go to Policy EngineShall (see PE_SRC_Transition_to_default ). PE_SNK_Transition_to_default PE_CBL_Ready The transition to either the state, - BISTMessage state or BIST Shared sTteatset M(aos daep pErxoitpBriIaStTe )D wathae On:bject A is received with a. [USB Type-C 2.4] T8h.3is. s3e.c2ti8on.1 contains st a tEers rcroorssR-reecfeorvenecreyd fsrotmat tehe specification. ErrorRecovery Port Partner USB Type-C ErrorRecovery Shall USB Type-C HThaerd Reset Erro srtRateec oisv uesreyd to elSechtarlolnically dUisScBo nTnyepcet- CErrorRecovse ursying the connector. The [USB Type-C 2.4 s]tate be entered when there aSrhe aelrlr Noorst on Ports which cannot be recovered by. The state map to state operation as defined in the specification. Bus powered Sinks be required to meet this requirement as removal of their power willE srerrovreR tehceo svaemrye purpose.Explicit Contract Shall On entry to the ErrorRecovery state the Explicit Contr aancdt SPhDo Cuoldnnection be ended.Port Partner CC On exit from the state a new be established once the s have re-connected over the wire. Table8.154, \"Policy Engine States\" lists Tthaeb sltea8te.1s 5u4se dP oblyi ctyh eE vnagriinoeu sS tsatatetes machines. State name Reference SenderResponseTimer SRT_Stopped Section 8.3.3.1.1.1 SRT_Running Section 8.3.3.1.1.2 SRT_Expired Section 8.3.3.1.1.3 Source Port PE_SRC_Startup Section 8.3.3.2.1 PE_SRC_Discovery Section 8.3.3.2.2 PE_SRC_Send_Capabilities Section 8.3.3.2.3 PE_SRC_Negotiate_Capability Section 8.3.3.2.4 PE_SRC_Transition_Supply Section 8.3.3.2.5 PE_SRC_Ready Section 8.3.3.2.6 PE_SRC_Disabled Section 8.3.3.2.7 PE_SRC_Capability_Response Section 8.3.3.2.8 PE_SRC_Hard_Reset Section 8.3.3.2.9 PE_SRC_Hard_Reset_Received Section 8.3.3.2.10 PE_SRC_Transition_to_default Section 8.3.3.2.11 PE_SRC_Give_Source_Cap Section 8.3.3.2.15 PE_SRC_Get_Sink_Cap Section 8.3.3.2.12 PE_SRC_Wait_New_Capabilities Section 8.3.3.2.13 PE_SRC_EPR_Keep_Alive Section 8.3.3.2.14 Sink Port PE_SNK_Startup Section 8.3.3.3.1 PE_SNK_Discovery Section 8.3.3.3.2 PE_SNK_Wait_for_Capabilities Section 8.3.3.3.3 PE_SNK_Evaluate_Capability Section 8.3.3.3.4 PE_SNK_Select_Capability Section 8.3.3.3.5 PE_SNK_Transition_Sink Section 8.3.3.3.6 PE_SNK_Ready Section 8.3.3.3.7 PE_SNK_Hard_Reset Section 8.3.3.3.8 PE_SNK_Transition_to_default Section 8.3.3.3.9 PE_SNK_Give_Sink_Cap Section 8.3.3.3.10 PE_SNK_Get_Source_Cap Section 8.3.3.3.12 PE_SNK_EPR_Keep_Alive Section 8.3.3.3.11 Table8.154 Policy Engine States State name Reference Soft Reset and Protocol Error Source Port Soft Reset PE_SRC_Send_Soft_Reset Section 8.3.3.4.1.1 PE_SRC_Soft_Reset Section 8.3.3.4.1.2 Sink Port Soft Reset PE_SNK_Send_Soft_Reset Section 8.3.3.4.2.1 PE_SNK_Soft_Reset Section 8.3.3.4.2.2 Data Reset DFP Data Reset PE_DDR_Send_Data_Reset Section 8.3.3.5.1.1 PE_DDR_Data_Reset_Received Section 8.3.3.5.1.2 PE_DDR_Wait_For_VCONN_Off Section 8.3.3.5.1.3 PE_DDR_Perform_Data_Reset Section 8.3.3.5.1.4 UFP Data Reset PE_UDR_Send_Data_Reset Section 8.3.3.5.2.1 PE_UDR_Data_Reset_Received Section 8.3.3.5.2.2 PE_UDR_Turn_Off_VCONN Section 8.3.3.5.2.3 PE_UDR_Send_Ps_Rdy Section 8.3.3.5.2.4 PE_UDR_Wait_For_Data_Reset_Complete Section 8.3.3.5.2.5 Not Supported Message Source Port Not Supported PE_SRC_Send_Not_Supported Section 8.3.3.6.1.1 PE_SRC_Not_Supported_Received Section 8.3.3.6.1.2 PE_SRC_Chunk_Received Section 8.3.3.6.1.3 Sink Port Not Supported PE_SNK_Send_Not_Supported Section 8.3.3.6.2.1 PE_SNK_Not_Supported_Received Section 8.3.3.6.2.2 PE_SNK_Chunk_Received Section 8.3.3.6.2.3 Source Alert Source Port Source Alert PE_SRC_Send_Source_Alert Section 8.3.3.7.1.1 PE_SRC_Wait_for_Get_Status Section 8.3.3.7.1.2 Sink Port Source Alert PE_SNK_Source_Alert_Received Section 8.3.3.7.2.1 Sink Port Sink Alert PE_SNK_Send_Sink_Alert Section 8.3.3.7.3.1 PE_SNK_Wait_for_Get_Status Section 8.3.3.7.3.2 Source Port Sink Alert PE_SRC_Sink_Alert_Received Section 8.3.3.7.4.1 Table8.154 Policy Engine States State name Reference Source/Sink Extended Capabilities Sink Port Get Source Capabilities Extended PE_SNK_Get_Source_Cap_Ext Section 8.3.3.8.1.1 Source Port Give Source Capabilities Extended PE_SRC_Give_Source_Cap_Ext Section 8.3.3.8.2.1 Source Port Get Sink Capabilities Extended PE_SRC_Get_Sink_Cap_Ext Section 8.3.3.8.3.1 Source Port Give Source Capabilities Extended PE_SNK_Give_Sink_Cap_Ext Section 8.3.3.8.4.1 Source Information Sink Port Get Source Information PE_SNK_Get_Source_Info Section 8.3.3.9.1.1 Source Port Give Source Information PE_SRC_Give_Source_Info Section 8.3.3.9.2.1 Status Get Status PE_Get_Status Section 8.3.3.10.1.1 Give Status PE_Give_Status Section 8.3.3.10.1.1 Sink Port Get PPS Status PE_SNK_Get_PPS_Status Section 8.3.3.10.3.1 Source Port Give PPS Status PE_SRC_Give_PPS_Status Section 8.3.3.10.4.1 Battery Capabilities Get Battery Capabilities PE_Get_Battery_Cap Section 8.3.3.11.1.1 Give Battery Capabilities PE_Give_Battery_Cap Section 8.3.3.11.2.1 Battery Status Get Battery Status PE_Get_Battery_Status Section 8.3.3.12.1.1 Give Battery Status PE_Give_Battery_Status Section 8.3.3.12.2.1 Manufacturer Information Get Manufacturer Information PE_Get_Manufacturer_Info Section 8.3.3.13.1.1 Give Manufacturer Information PE_Give_Manufacturer_Info Section 8.3.3.13.2.1 Country Codes and Information Get Country Codes PE_Get_Country_Codes Section 8.3.3.14.1.1 Table8.154 Policy Engine States State name Reference Give Country Codes PE_Give_Country_Codes Section 8.3.3.14.2.1 Get Country Information PE_Get_Country_Info Section 8.3.3.14.3.1 Give Country Information PE_Give_Country_Info Section 8.3.3.14.4.1 Revision Get Revision PE_Get_Revision Section 8.3.3.15.1.1 Give Revision PE_Give_Revision Section 8.3.3.15.2.1 Enter USB DFP Enter USB PE_DEU_Send_Enter_USB Section 8.3.3.16.1.1 UFP Enter USB PE_UEU_Enter_USB_Received Section 8.3.3.16.2.1 Security Request/Response Send Security Request PE_Send_Security_Request Section 8.3.3.17.1.1 Send Security Response PE_Send_Security_Response Section 8.3.3.17.2.1 Security Response Received PE_Security_Response_Received Section 8.3.3.17.3.1 Firmware Update Request/Response Send Firmware Update Request PE_Send_Firmware_Update_Request Section 8.3.3.18.1.1 Send Firmware Update Response PE_Send_Firmware_Update_Response Section 8.3.3.18.2.1 Firmware Update Response Received PE_Firmware_Update_Response_Received Section 8.3.3.18.3.1 Dual-Role Port DFP to UFP Data Role Swap PE_DRS_DFP_UFP_Evaluate_Swap Section 8.3.3.19.1.2 PE_DRS_DFP_UFP_Accept_Swap Section 8.3.3.19.1.3 PE_DRS_DFP_UFP_Change_to_UFP Section 8.3.3.19.1.4 PE_DRS_DFP_UFP_Send_Swap Section 8.3.3.19.1.5 PE_DRS_DFP_UFP_Reject_Swap Section 8.3.3.19.1.6 Table8.154 Policy Engine States State name Reference UFP to DFP Data Role Swap PE_DRS_UFP_DFP_Evaluate_Swap Section 8.3.3.19.2.2 PE_DRS_UFP_DFP_Accept_Swap Section 8.3.3.19.2.3 PE_DRS_UFP_DFP_Change_to_DFP Section 8.3.3.19.2.4 PE_DRS_UFP_DFP_Send_Swap Section 8.3.3.19.2.5 PE_DRS_UFP_DFP_Reject_Swap Section 8.3.3.19.2.6 Source to Sink Power Role Swap PE_PRS_SRC_SNK_Evaluate_Swap Section 8.3.3.19.3.2 PE_PRS_SRC_SNK_Accept_Swap Section 8.3.3.19.3.3 PE_PRS_SRC_SNK_Transition_to_off Section 8.3.3.19.3.4 PE_PRS_SRC_SNK_Assert_Rd Section 8.3.3.19.3.5 PE_PRS_SRC_SNK_Wait_Source_on Section 8.3.3.19.3.6 PE_PRS_SRC_SNK_Send_Swap Section 8.3.3.19.3.7 PE_PRS_SRC_SNK_Reject_Swap Section 8.3.3.19.3.8 Sink to Source Power Role Swap PE_PRS_SNK_SRC_Evaluate_Swap Section 8.3.3.19.4.2 PE_PRS_SNK_SRC_Accept_Swap Section 8.3.3.19.4.3 PE_PRS_SNK_SRC_Transition_to_off Section 8.3.3.19.4.4 PE_PRS_SNK_SRC_Assert_Rp Section 8.3.3.19.4.5 PE_PRS_SNK_SRC_Source_on Section 8.3.3.19.4.6 PE_PRS_SNK_SRC_Send_Swap Section 8.3.3.19.4.7 PE_PRS_SNK_SRC_Reject_Swap Section 8.3.3.19.4.8 Source to Sink Fast Role Swap PE_FRS_SRC_SNK_Evaluate_Swap Section 8.3.3.19.5.2 PE_FRS_SRC_SNK_Accept_Swap Section 8.3.3.19.5.3 PE_FRS_SRC_SNK_Transition_to_off Section 8.3.3.19.5.4 PE_FRS_SRC_SNK_Assert_Rd Section 8.3.3.19.5.5 PE_FRS_SRC_SNK_Wait_Source_on Section 8.3.3.19.5.6 Sink to Source Fast Role Swap PE_FRS_SNK_SRC_Start_AMS Section 8.3.3.19.6.1 PE_FRS_SNK_SRC_Send_Swap Section 8.3.3.19.6.2 PE_FRS_SNK_SRC_Transition_to_off Section 8.3.3.19.6.3 PE_FRS_SNK_SRC_VBUS_Applied Section 8.3.3.19.6.4 PE_FRS_SNK_SRC_Assert_Rp Section 8.3.3.19.6.5 PE_FRS_SNK_SRC_Source_on Section 8.3.3.19.6.6 Dual-Role Source Port Get Source Capabilities PE_DR_SRC_Get_Source_Cap Section 8.3.3.19.7.1 Dual-Role Source Port Give Sink Capabilities PE_DR_SRC_Give_Sink_Cap Section 8.3.3.19.8.1 Table8.154 Policy Engine States State name Reference Dual-Role Sink Port Get Sink Capabilities PE_DR_SNK_Get_Sink_Cap Section 8.3.3.19.9.1 Dual-Role Sink Port Give Source Capabilities PE_DR_SNK_Give_Source_Cap Section 8.3.3.19.10.1 Dual-Role Source Port Get Source Capabilities Extended PE_DR_SRC_Get_Source_Cap_Ext Section 8.3.3.19.11.1 Dual-Role Sink Port Give Source Capabilities Extended PE_DR_SNK_Give_Source_Cap_Ext Section 8.3.3.19.12.1 Dual-Role Sink Port Get Sink Capabilities Extended PE_DR_SNK_Get_Sink_Cap_Ext Section 8.3.3.19.13.1 Dual-Role Source Port Give Sink Capabilities Extended PE_DR_SRC_Give_Sink_Cap_Ext Section 8.3.3.19.14.1 Dual-Role Source Port Get Source Information PE_DR_SRC_Get_Source_Info Section 8.3.3.19.15.1 Dual-Role Sink Port Give Source Information PE_DR_SNK_Give_Source_Info Section 8.3.3.19.16.1 USB Type-C VCONN Swap PE_VCS_Send_Swap Section 8.3.3.20.1 PE_VCS_Evaluate_Swap Section 8.3.3.20.2 PE_VCS_Accept_Swap Section 8.3.3.20.3 PE_VCS_Reject_Swap Section 8.3.3.20.4 PE_VCS_Wait_For_VCONN Section 8.3.3.20.5 PE_VCS_Turn_Off_VCONN Section 8.3.3.20.6 PE_VCS_Turn_On_VCONN Section 8.3.3.20.7 PE_VCS_Send_Ps_Rdy Section 8.3.3.20.8 PE_VCS_Force_VCONN Section 8.3.3.20.9 Initiator Structured VDM Initiator to Port Structured VDM Discover Identity PE_INIT_PORT_VDM_Identity_Request Section 8.3.3.21.1.1 PE_INIT_PORT_VDM_Identity_ACKed Section 8.3.3.21.1.2 PE_INIT_PORT_VDM_Identity_NAKed Section 8.3.3.21.1.3 Initiator Structured VDM Discover SVIDs PE_INIT_VDM_SVIDs_Request Section 8.3.3.21.2.1 PE_INIT_VDM_SVIDs_ACKed Section 8.3.3.21.2.2 PE_INIT_VDM_SVIDs_NAKed Section 8.3.3.21.2.3 Initiator Structured VDM Discover Modes PE_INIT_VDM_Modes_Request Section 8.3.3.21.3.1 PE_INIT_VDM_Modes_ACKed Section 8.3.3.21.3.2 PE_INIT_VDM_Modes_NAKed Section 8.3.3.21.3.3 Table8.154 Policy Engine States State name Reference Initiator Structured VDM Attention PE_INIT_VDM_Attention_Request Section 8.3.3.21.4.1 Responder Structured VDM Responder Structured VDM Discovery Identity PE_RESP_VDM_Get_Identity Section 8.3.3.22.1.1 PE_RESP_VDM_Send_Identity Section 8.3.3.22.1.2 PE_RESP_VDM_Get_Identity_NAK Section 8.3.3.22.1.3 Responder Structured VDM Discovery SVIDs PE_RESP_VDM_Get_SVIDs Section 8.3.3.22.2.1 PE_RESP_VDM_Send_SVIDs Section 8.3.3.22.2.2 PE_RESP_VDM_Get_SVIDs_NAK Section 8.3.3.22.2.3 Responder Structured VDM Discovery Modes PE_RESP_VDM_Get_Modes Section 8.3.3.22.3.1 PE_RESP_VDM_Send_Modes Section 8.3.3.22.3.2 PE_RESP_VDM_Get_Modes_NAK Section 8.3.3.22.3.3 Receiving a Structured VDM Attention PE_RCV_VDM_Attention_Request Section 8.3.3.22.4.1 DFP Structured VDM DFP Structured VDM Mode Entry PE_DFP_VDM_Mode_Entry_Request Section 8.3.3.23.1.1 PE_DFP_VDM_Mode_Entry_ACKed Section 8.3.3.23.1.2 PE_DFP_VDM_Mode_Entry_NAKed Section 8.3.3.23.1.3 DFP Structured VDM Mode Exit PE_DFP_VDM_Mode_Exit_Request Section 8.3.3.23.2.1 PE_DFP_VDM_Mode_Exit_ACKed Section 8.3.3.23.2.2 UFP Structure VDM UFP Structured VDM Enter Mode PE_UFP_VDM_Evaluate_Mode_Entry Section 8.3.3.24.1.1 PE_UFP_VDM_Mode_Entry_ACK Section 8.3.3.24.1.2 PE_UFP_VDM_Mode_Entry_NAK Section 8.3.3.24.1.3 UFP Structured VDM Exit Mode PE_UFP_VDM_Mode_Exit Section 8.3.3.24.2.1 PE_UFP_VDM_Mode_Exit_ACK Section 8.3.3.24.2.2 PE_UFP_VDM_Mode_Exit_NAK Section 8.3.3.24.2.3 Table8.154 Policy Engine States State name Reference Cable Plug Specific Cable Ready PE_CBL_Ready Section 8.3.3.25.1.1 Mode Entry PE_CBL_Evaluate_Mode_Entry Section 8.3.3.25.4.1.1 PE_CBL_Mode_Entry_ACK Section 8.3.3.25.4.1.2 PE_CBL_Mode_Entry_NAK Section 8.3.3.25.4.1.3 Mode Exit PE_CBL_Mode_Exit Section 8.3.3.25.4.2.1 PE_CBL_Mode_Exit_ACK Section 8.3.3.25.4.2.2 PE_CBL_Mode_Exit_NAK Section 8.3.3.25.4.1.3 Cable Soft Reset PE_CBL_Soft_Reset Section 8.3.3.25.2.1.1 Cable Hard Reset PE_CBL_Hard_Reset Section 8.3.3.25.2.2.1 DFP/VCONN Source Soft Reset or Cable Reset PE_DFP_VCS_CBL_Send_Soft_Reset Section 8.3.3.25.2.3.1 PE_DFP_VCS_CBL_Send_Cable_Reset Section 8.3.3.25.2.3.2 UFP/VCONN Source Soft Reset or Cable Reset PE_UFP_VCS_CBL_Send_Soft_Reset Section 8.3.3.25.2.4.1 Source Startup Structured VDM Discover Identity PE_SRC_VDM_Identity_Request Section 8.3.3.25.3.1 PE_SRC_VDM_Identity_ACKed Section 8.3.3.25.3.2 PE_SRC_VDM_Identity_NAKed Section 8.3.3.25.3.3 EPR Mode Source EPR Mode Entry PE_SRC_Evaluate_EPR_Mode_Entry Section 8.3.3.26.1.1 PE_SRC_EPR_Mode_Entry_Ack Section 8.3.3.26.1.2 PE_SRC_EPR_Mode_Discover_Cable Section 8.3.3.26.1.3 PE_SRC_EPR_Mode_Evaluate_Cable_EPR Section 8.3.3.26.1.4 PE_SRC_EPR_Mode_Entry_Succeeded Section 8.3.3.26.1.5 PE_SRC_EPR_Mode_Entry_Failed Section 8.3.3.26.1.6 Sink EPR Mode Entry PE_SNK_Send_EPR_Mode_Entry Section 8.3.3.26.2.1 PE_SNK_EPR_Mode_Wait_For_Response Section 8.3.3.26.2.2 Source EPR Mode Exit PE_SRC_Send_EPR_Mode_Exit Section 8.3.3.26.3.1 PE_SRC_EPR_Mode_Exit_Received Section 8.3.3.26.3.2 Table8.154 Policy Engine States State name Reference Sink EPR Mode Exit PE_SNK_Send_EPR_Mode_Exit Section 8.3.3.26.4.1 PE_SNK_EPR_Mode_Exit_Received Section 8.3.3.26.4.2 BIST BIST Carrier Mode PE_BIST_Carrier_Mode Section 8.3.3.27.1.1 BIST Carrier Mode PE_BIST_Test_Mode Section 8.3.3.27.2.1 BIST Shared Capacity Test Mode PE_BIST_Shared_Capacity_Test_Mode Section 8.3.3.27.3.1 USB Type-C referenced states ErrorRecovery Section 8.3.3.28.1", "tables": ["Table 8.154", "Table 8.154", "Table 8.154", "Table 8.154", "Table 8.154", "Table 8.154", "Table 8.154", "Table 8.154", "Table 8.154"], "figures": ["Figure 8.127", "Figure 8.128", "Figure 8.128", "Figure 8.129", "Figure 8.130", "Figure 8.131", "Figure 8.132", "Figure 8.133", "Figure 8.134", "Figure 8.135", "Figure 8.136", "Figure 8.137", "Figure 8.138", "Figure 8.139", "Figure 8.140", "Figure 8.141", "Figure 8.142", "Figure 8.142", "Figure 8.143", "Figure 8.144", "Figure 8.144", "Figure 8.145", "Figure 8.146", "Figure 8.146", "Figure 8.147", "Figure 8.148", "Figure 8.149", "Figure 8.150", "Figure 8.151", "Figure 8.132", "Figure 8.152", "Figure 8.15.2", "Figure 8.153", "Figure 8.154", "Figure 8.154", "Figure 8.132", "Figure 8.155", "Figure 8.132", "Figure 8.156", "Figure 8.132", "Figure 8.157", "Figure 8.132", "Figure 8.158", "Figure 8.132", "Figure 8.159", "Figure 8.132", "Figure 8.160", "Figure 8.132", "Figure 8.161", "Figure 8.132", "Figure 8.162", "Figure 8.132", "Figure 8.163", "Figure 8.132", "Figure 8.164", "Figure 8.132", "Figure 8.165", "Figure 8.132", "Figure 8.166", "Figure 8.167", "Figure 8.168", "Figure 8.132", "Figure 8.169", "Figure 8.132", "Figure 8.170", "Figure 8.132", "Figure 8.171", "Figure 8.132", "Figure 8.172", "Figure 8.132", "Figure 8.173", "Figure 8.132", "Figure 8.174", "Figure 8.175", "Figure 8.177", "Figure 8.178", "Figure 8.179", "Figure 8.180", "Figure 8.180", "Figure 8.181", "Figure 8.182", "Figure 8.182", "Figure 8.182", "Figure 8.1.83", "Figure 8.184", "Figure 8.185", "Figure 8.185", "Figure 8.186", "Figure 8.187", "Figure 8.187", "Figure 8.188", "Figure 8.189", "Figure 8.191", "Figure 8.192", "Figure 8.193", "Figure 8.194", "Figure 8.195", "Figure 8.196", "Figure 8.197", "Figure 8.198", "Figure 8.199", "Figure 8.199", "Figure 8.200", "Figure 8.200", "Figure 8.201", "Figure 8.202", "Figure 8.203", "Figure 8.204", "Figure 8.205", "Figure 8.206", "Figure 8.207", "Figure 8.208", "Figure 8.208", "Figure 8.209", "Figure 8.210", "Figure 8.211", "Figure 8.212", "Figure 8.213", "Figure 8.214", "Figure 8.215", "Figure 8.216", "Figure 8.217"], "page_range": [822, 974]}
{"section_path": "9 States and Status Reporting", "start_heading": "9 States and Status Reporting", "content": "Shall This chapter describes the Status reporting mechanisms for devices with data connections (e.g., D+/D- and or SSTx+/- and SSRx+/-). It also describes the corresponding USB state a device that supports USB PD transition to as a result of changes to the USSBys PteDm s tPaotlei ctyhat the dSyesvtiecme i Ps oinli.c y Manager [UCSI] This chapter does not define the or the. That is defined in. In addition, the Policies themselves are not described here; these are left to the implementers of the relevant products and systems to define. Device Shall Port VBUS All PD C[aUpSaBb l2e. 0U]SB [(UPSDBU 3SB.2)] s report themselvVes B Ua Ss self-powered devices (over USB) wheCno pnlsuugmgeerd into a PD capableU SB A tetvaecnh eidf t Shteayt eare entiUreSlBy Ppoowweerreedd Sftraotme. However, there are Vso Bm USe differences between PD and Consu m/ er ; for example, the presence UoSf B Att aaclohnede Sdtoaetse not mSeecatnio tnh a9t.1 t.h2e, \"dMeavipcpei n(g to USB ) Dmeovvicees Sfrtoamtes t\"he to the. Similarly, the removal of alone does not move the device ( ) from any of the USB states to the. See PDUSB Device foSrh daelltails. Section 6.4.1.2.1.2, \"USB Suspend Supported\" s follow the PD requiremTeanbtles 9w.4h,e \"nP iDt cCoomnseusm toe rs Puosprte Dndes (csreipet or\" ), configured, and operational power. The PD requirements when the device is configured or Nopoetrea:tional are defined in this section (see ConsumerPort ). Shall PDUSB DeviceShall The power requirements reported in the PD descriptor of the device Exp olivceitr rCiodnet rthaect powSehr adlrlaw reported in the bMaxPower field in the configuration descriptor. A [U SB r2e.0p]or[tU zSeBr o3 i.2n] th[eU SbBM4a]xP[UowSBe rT fyiepled- Ca f2te.4r] succ[UesSsBfuBlCly 1 n.2eg]otiating a mutually a[gUrSeBe a2b.0le] [USB 3.2] [USB aTnydp e-C 2.4 d]isco[nUnSeBcBt aCn 1d.2 r]e-enumerSahtea lwlhen it switches operation back to operating in standard,,, or. When operating in,, Provider Con osurm er mode it report its power draw via the bMaxPPoorwt Pera rfitenledr. Figure 9.1, \"Example PD Topology\" Provider CEoanchsu mer/Pro avindde r Con wsuimll ehrave their own Local Policies which operate between s. An example of a typical PD system is shown in. This example consists of a, s and s connected together in a tree topology. Between directly connected devices there is both a flow of Power and also Communication consisting of both Status and Control information.", "tables": [], "figures": ["Figure 9.1"], "page_range": [975, 975]}
{"section_path": "9.1 Overview", "start_heading": "9.1 Overview", "content": "Shall This chapter describes the Status reporting mechanisms for devices with data connections (e.g., D+/D- and or SSTx+/- and SSRx+/-). It also describes the corresponding USB state a device that supports USB PD transition to as a result of changes to the USSBys PteDm s tPaotlei ctyhat the dSyesvtiecme i Ps oinli.c y Manager [UCSI] This chapter does not define the or the. That is defined in. In addition, the Policies themselves are not described here; these are left to the implementers of the relevant products and systems to define. Device Shall Port VBUS All PD C[aUpSaBb l2e. 0U]SB [(UPSDBU 3SB.2)] s report themselvVes B Ua Ss self-powered devices (over USB) wheCno pnlsuugmgeerd into a PD capableU SB A tetvaecnh eidf t Shteayt eare entiUreSlBy Ppoowweerreedd Sftraotme. However, there are Vso Bm USe differences between PD and Consu m/ er ; for example, the presence UoSf B Att aaclohnede Sdtoaetse not mSeecatnio tnh a9t.1 t.h2e, \"dMeavipcpei n(g to USB ) Dmeovvicees Sfrtoamtes t\"he to the. Similarly, the removal of alone does not move the device ( ) from any of the USB states to the. See PDUSB Device foSrh daelltails. Section 6.4.1.2.1.2, \"USB Suspend Supported\" s follow the PD requiremTeanbtles 9w.4h,e \"nP iDt cCoomnseusm toe rs Puosprte Dndes (csreipet or\" ), configured, and operational power. The PD requirements when the device is configured or Nopoetrea:tional are defined in this section (see ConsumerPort ). Shall PDUSB DeviceShall The power requirements reported in the PD descriptor of the device Exp olivceitr rCiodnet rthaect powSehr adlrlaw reported in the bMaxPower field in the configuration descriptor. A [U SB r2e.0p]or[tU zSeBr o3 i.2n] th[eU SbBM4a]xP[UowSBe rT fyiepled- Ca f2te.4r] succ[UesSsBfuBlCly 1 n.2eg]otiating a mutually a[gUrSeBe a2b.0le] [USB 3.2] [USB aTnydp e-C 2.4 d]isco[nUnSeBcBt aCn 1d.2 r]e-enumerSahtea lwlhen it switches operation back to operating in standard,,, or. When operating in,, Provider Con osurm er mode it report its power draw via the bMaxPPoorwt Pera rfitenledr. Figure 9.1, \"Example PD Topology\" Provider CEoanchsu mer/Pro avindde r Con wsuimll ehrave their own Local Policies which operate between s. An example of a typical PD system is shown in. This example consists of a, s and s connected together in a tree topology. Between directly connected devices there is both a flow of Power and also Communication consisting of both Status and Control information. Figure 9.1 Example PD Topology AC/Battery Power Provider PD Communication P/C Provider/Consumer Consumer/ Provider P/C P/C P/C Consumer/ AC/Battery Consumer Consumer Provider Figure 9.2, \"Mapping of PD Topology to USB\" Figure 9.2 s hMoawpsp hinogw o tfh PisD s aTmoep otolopgoylo tgoy UcaSnB be mapped to USB. AC/Battery Power Root Hub PD Communication Hub AC/Battery Device Device Device VBUS In a USB based system, poLloiccya li sP molaicnyaged by UthSeB hCoosmt manudn cicoamtimonunication of system level policy information is via standard USB data line communSicyasttieomn.P Tohliicsy i Ms aa nseapgaerratSeP mMechanism to the USB PProowviedre DrelivCeornys umer protoFcigoul re 9w.3h,i c\"hU sies oufs eSdP Mto i nm tahnea PgDe System\". When is used, status information and control requests are passed directly between the ( ) on the host and the or. See. Figure 9.3 Use of SPM in the PD System AC/Battery Power Host (SPM) PD Communication USB Communication Hub AC/Battery Device Device Device Provider Consumer SPM Status information comes from a or to the so it can better manage the resources on the host and provide feedback to the end user. [USB 2.0] [USB 3.2] [USB4] [USB Type-C 2.4] [USBBC 1.2] Real systems will be a mixture of devices which in terms of power managemeSnPtM support might have implemented PD,,,, or or they might even just be non-compliant “power sucking devices”. The level of communication of system status to the will therefore not necessarily be comprehensive. The aim of the status mechanisms described here is to provide a mechanism whereby each connected entity in the system provides as much information as poSsPsMible on the status of itself. Info- rmation describUedSB in T tyhpies- sCection that is communicated to the is as follows: ® - Versions of Provider,/ PCDo nasnudm BeCr supported. - Capabilities as a Por.t USB Type-C Negotiated Current operational state of each e.g. Standard, Current, BC, PD and power - level. Battery PDUSB Device SPMStatuNs eogf oAtCia oter Pro Pvoidweerr forC eoancshu mer in the system. Local Policy Provider Consumer Local Policy The can with s or s in the system in order to request a different, or to request the amount of power to be delivered by the to the. Any change in could", "tables": [], "figures": ["Figure 9.1", "Figure 9.1", "Figure 9.2", "Figure 9.2"], "page_range": [975, 978]}
{"section_path": "9.1.1 PDUSB Device and Hub Requirements", "start_heading": "9.1.1 PDUSB Device and Hub Requirements", "content": "Re-negotiation Explicit Contract Provider Consumer Re-negotiation trigger a of the, using USB Power Delivery protocols, between a directly connected PDUSB Device Shall PDUSB Hub Shall [UCSI] All s return all relevant descriptors mentioned in this chapter. s also support a PD bridge as defined in.", "tables": [], "figures": [], "page_range": [979, 979]}
{"section_path": "9.1.2 Mapping to USB Device States", "start_heading": "9.1.2 Mapping to USB Device States", "content": "Section 9.1, \"Overview\" PDUSB Device Shall USB Attached State USB Powered State Figure 9.4, A\"UsS mBe Antttiaocnheedd i tno USB Powered State Tra an sition\" Figure r9e.p5,o \"rAtsn yit sUeSlBf a Sst aa tsee tlfo- pUoSwB eArtetda cdheevdi cSet.a Hteo Twreavnesri,t itohne (dWevhiecne opera tdinetge arms ain Ceo wnshuemtheerr)\" or noFt iigt uisr ein 9 t.6h,e \" Any USB State to US Bor A ttached State Transs iatiso dne (sWcrhibene do pine rating as a Provider)\" PDUSB Dev, iceShall [USB 2.0] [USB 3.2] and Figure 9.4, A\"UllS oBt hAettra UcShBed s ttoat UesS Bo fP tohwe ered State Tran sition b\"e as describedP iDnU CShBa pDteevri c9e of and. USB Attached State USB Powered State USB Type-CDead Battery Attach shows hHoawrd a R eset deUtSeBrm Dienveicse whenS itnok transition from the to the. operation does not require special handling siFnicgeu trhee 9 d.4ef UauSlBt sAtatttaec aht ed to U SoBr aPftoewr ear ed State T risa tnhsaitt itohne is a. Negotiate enough No Yes Power? Hard Reset No USB VBUS Yes Can Yes USB Attached Present enumerate? Powered Device in Sink Mode No Device in Source Mode (5V) Device is a Yes Attached Yes Source? Sink? No No Figure 9.5, \"Any USB State to USB Attached State Transition (When operating as a Consumer)\" PDUSB Device USB Powered State USB Attached State Consumer PDUSB Device Power Role Swap shSoewctsio hno 8w.3 a.3.19.3, \"Policy dEentgeirnme iinne Sso wurhceen t oto S tirnakn Psoitwioenr fRroolme Stwhea p State Diagram\" to Sthecet ion 8.3.3.19.4, \"Polic wy hEenng itnhee i dn eSvinicke tios a Source Pow. Ae r Role Swap Sta dteet Deriamgirnaems \"that itS iesc ptieornf o7r.1m.5in, \"gR ae sponse to Hard Re saest sd\"escribed in Hard Reset and. See for additional information on device behavior during s. Figure 9.5 Any USB State to USB Attached State Transition (When operating as a Consumer) Hard Reset Hard Reset and and Can Operate Can’t Operate Swapping Any USB VBUS No No USB Power State Present Attached Roles? Yes Yes Hard Reset and Bus Powered Figure 9.6, \"Any USB State to USB Attached State Transition (When operating as a Provider)\" PDUSB Device USB Powered State USB Attached State Provider shows how a determines when to transition from the to the when the device is a F. igure 9.6 Any USB State to USB Attached State Transition (When operating as a Provider) Local Power Source Lost Hard Reset Any USB Lack of PD Yes USB State comms? Attached No Figure 9.7, \"Any USB State to USB Attached State Transition (After a USB Type-C Data Role Swap)\" PDUSB Device USB Type-C USB Powered State USB Attached State Data Role Swap shows howPD aU SB Host using thPeD USB Device conneDcatotar dReotlee rSmwianpes when to transSiteicotnio fnro 6m.3.t9h, e\" DR_Swap Message\" to Hthaerd Reset afteSr ian k PDU hSaBs Hbeoestn pePrDfoUrSmBe Dde iv.eic.,e it has just changed from opSeercattiioonn 6a.s8.a3, \"Hard Reset t\"o opeSraectitoionn a 7s. 1a.5, \"Response to. T Hhaer d Resets\" is described in H. aAr d Reset will also return a acting as a to operation as described in. See for additional information on device behavior during s. Figure 9.7 Any USB State to USB Attached State Transition (After a USB Type-C Data Role Swap) Hard Reset Changes Data No Role Swapping Any USB VBUS Yes Yes USB Data State Present Attached Roles?", "tables": [], "figures": ["Figure 9.4", "Figure 9.5", "Figure 9.5", "Figure 9.6", "Figure 9.7", "Figure 9.7"], "page_range": [980, 982]}
{"section_path": "9.1.3 PD Software Stack", "start_heading": "9.1.3 PD Software Stack", "content": "Figure 9.8, \"Software stack on a PD aware OS\" May May Not gives an example of the software stack on a PD aware OS. In this stack we are using the example of a system with an xHCI based controller. The USB Power Delivery hardware or be a part of the xHC. Figure 9.8 Software stack on a PD aware OS Client Drivers Client Drivers USB Driver Interface Client Drivers Composite Class Driver Client Drivers USB Driver Interface Hub Driver Internal Hub/Host Interface Host Controller Driver xHC Interface Host Controller PD xface System Policy Manager Power Delivery", "tables": [], "figures": ["Figure 9.8"], "page_range": [983, 983]}
{"section_path": "9.1.4 PDUSB Device Enumeration", "start_heading": "9.1.4 PDUSB Device Enumeration", "content": "PDUSB Device USB Attached State USB Powered State Figure 9.9, \"Enumeration of a PDUSB Device\" As described earlier, a acts as a self-powered device with somPDe UcaSvBe Datesv iwceith respect to how it transitions from the to Local Policy. gives a high-level overview of the enumeration steps involved due to this change. A will first (Step1) interact with the Power Delivery hardware and the manager to determine whether or not it can get sufficient power to enumerate/operate. Explicit Contract SPM Negotiation PDUSB Device PD is likely to have established a Explicit Contract prior to enumeration. The will be notified (Step 2) of the result of this between the Power Delivery hardware and the. After successfully nPeDgUoStBia Dtienvgi cae mutually agreeable the device will signal a connect to the xHC. The standard USB enumeration process (Steps 3, 4 and 5) is then followed to load the appropriate driver for the function(s) that the exposes. Figure 9.9 Enumeration of a PDUSB Device Client Drivers Client Drivers USB Driver Interface Client Drivers Composite Class Driver Client Drivers USB Driver Interface Hub Driver Internal Hub/Host Interface Host Controller Driver xHC Interface Host Controller PDUSB Device Port Should If a cannot perform its intended functioShna wllith the amount of power that it canS egcetti ofrno 8m.2.t5h.e2.1, \"L oitc aisl dcoenvinceec htaedn dtloin, tgh oefn m thisem haotscth s\"ystem display a notification (on a PD aware OS) about the failure to provide sufficient power to the device. In addition, the device follow the requirements listed in. PD xface System Manager Power Delivery", "tables": [], "figures": [], "page_range": [984, 984]}
{"section_path": "9.2 PD Specific Descriptors", "start_heading": "9.2 PD Specific Descriptors", "content": "PDUSB DeviceShall A Shal l return all relevant descriptors mentioned in this section. Table9.1, \"USB Power Delivery Type Codes\" The device return its capability descriptors as part of the device's Binary Object Store (BOS) descriptor set. Table9. 1li s UtsS tBh Pe otywpeer o Df PelDiv deervyi cTey cpaep aCboidlietises. Capability Code Value Description POWER_DELIVERY_CAPABILITY BATTERY_INFO_CAPABILITY 06H Defines the various PD CapabiB lita it et se r oy f this device PD_CONSUMER_PORT_CAPABILITY 07H ProvC ido en ss u inm foer rmation on each Port supported by the device PD_PROVIDER_PORT_CAPABILITY 08H The Provider characteristics of aP ort on the device 09H The characteristics of a on the device", "tables": ["Table 9.1", "Table 9"], "figures": [], "page_range": [985, 985]}
{"section_path": "9.2.1 USB Power Delivery Capability Descriptor", "start_heading": "9.2.1 USB Power Delivery Capability Descriptor", "content": "Table9.2, \"USB Power Delivery Capability Descriptor\" POWER_DELIVERY_CAPABILITY details the fields in the USB Descriptor. Table9.2 USB Power Delivery Capability Descriptor Offset Field Size Value Description a bit location indicates a feature is supported; a value of zero Bit Description indicates it is not supported. Encodings are: Reserved Shall Shall [USBBC 1.2] device supports as per the value reported in Shall the bcdBCVersion field. this device supports the USB Power Delivery Specification Provider Shall as per the value reported in the bcdPDVersion field. Valid is capable of providing power. This field is only if Bit Consumer Shall Valid device is a consumer of power. This field is only if Bit Shall tNhoet fee:ature CHARGING_POLICY. Supporting the CHARGING_POLICY feature does not bmAttributes USB Typ re e- qC uire a BC or PD meS ch ha al nl ism to be implemented. [USB this device supports power capabilities defined in as per the value reported in the Reserved Shall bcdUSBTypeCVersion field Shall 15:8 bmPowerSource. At least one of the following bits 8, 9 and Bit Description supported. AC Supply Battery Shall Valid Shall 13:11 NumBatteries. This field only be when the Battery field is set to one and be used to reporV t BtUhSe number of batteries in the device. RUeseses rved Shall Re 1s 5erved Shall and be set to zero. 13:16. be set to zero.", "tables": ["Table 9.2"], "figures": [], "page_range": [986, 986]}
{"section_path": "9.2.2 Battery Info Capability Descriptor", "start_heading": "9.2.2 Battery Info Capability Descriptor", "content": "Table9.2 USB Power Delivery Capability Descriptor Offset Field Size Value Description Shall Valid [USBBC 1.2] Decimal (e.g., V1.20 is 120H). This field only be if the bcdBCVersion device indicates that it supports in the bmAttributes field. Shall Valid bcdPDVersion Decimal. This field only be if the device indicates that it sUuSpBp Toyrptse -PCD in the bmAttributes field. Shall Valid USB Type-C bcdUSBTypeCVersion This field only be if the device indicates that it supports in the bmAttributes field. PDUSB DeviceShall Table9.3, \"Battery Info Capability Descriptor\" Battery A Sh all support tBheA TcaTpEaRbYil_iItNy FdOes_cCrAipPtAoBr IsLhIoTwYn in Battery if it reported that one of its power sources was a in the bmPowerSource field in its Power Deliver Capability Descriptor. It return one Table9.3 Battery Info Cap Daebsiclirtiyp tDoer spcerri ptor it supports. Offset Field Size Value Description Shall Battery name for this. Battery Number String for this. Battery Manufacturer for this. sRteasteursv MedessageSsh.all Battery dwChargedThreshold is considered to be fully charged but not Snhecaellssarily “topped off.” Battery [USBBC such that above this threshold, a device can be assured dwWeakThreshold 1.2] of being able to power up successfully (see Shal)l. Battery dwBatteryLastFullchargeCapacity when fully charged.", "tables": ["Table 9.2"], "figures": [], "page_range": [987, 987]}
{"section_path": "9.2.3 PD Consumer Port Capability Descriptor", "start_heading": "9.2.3 PD Consumer Port Capability Descriptor", "content": "PDUSB DeviceShall PD_CONSUMER_PORT_CAPABILITY Table9.4, \"PD Consumer Port Descriptor\" Consumer A support the descriptor shown in if it is a Table9.4. PD Consumer Port Descriptor Offset Field Size Value Description Shall ConsumerPort Bit Description will operate under. bmCapabilities 0 Battery Charging (BC) USB Type-C Reserved CuSrrheanltl Shall 15:3 and be set to zero. Consumer is capable of operating at. Consumer is capable of operating at. S hall Consumer can draw when it is in a steady state operating mode. Consumer dwMaxPeakPower can draw for a short duration of time Shall Consumer ) before it falls back into a steady state. draw peaSkh caulrlrent. dwMaxPeakPowerTime A device set this field to 0xFFFF if this value is unknown.", "tables": [], "figures": [], "page_range": [988, 988]}
{"section_path": "9.2.4 PD Provider Port Capability Descriptor", "start_heading": "9.2.4 PD Provider Port Capability Descriptor", "content": "PDUSB DeviceShall PD_PROVIDER_PORT_CAPABILITY Table9.5, \"PD Provider Port Descriptor\" Provider A support the descriptor shown in if it is a. Table9.5 PD Provider Port Descriptor Offset Field Size Value Description bRDeesveCravpeadbilityType CRaepsaebrivleitdy typeS: hall Shall ProviderPort Bit Description will operate under. bmCapabilities 0 Battery Charging (BC) USB Type-C Reserved CuSrrheanltl Sha 1l 5l :3 and Pow be er sD ea tt ta o O zb ej re oc.t S hall Power Data Object ProviderPort Section 6.4.1, \"Capabilities Message\" wPowerDataObject1. See for details of the s. Shall Power Data Object ProviderPort Section 6.4.1, \"Capabilities 4*(N+1) 4 Bitmap Messa cgoen\"tain the 2nd and sPuobwseerq uDeantat Object s wPowerDataObjectN supported by this. See for details of the s.", "tables": [], "figures": [], "page_range": [989, 989]}
{"section_path": "9.3 PD Specific Requests and Events", "start_heading": "9.3 PD Specific Requests and Events", "content": "PDUSB Device Shall Battery Battery A PDUSB Hub that is compliant to this specificatioSnh all support the related requests if i[tU hCaSsI ]a. PDUSB Hub Provider Consumer A that is compliant to this specification support a USB PD Bridge as described in i9rr.e3sp.1ective of w h ePthDer Sthpe ecific Re isq a uests, a, or both. PDUSB Device Shall Table9.6, \"PD Requests\" Valid Table9.6, \"PD Requests\"Shall PDUSB Device PD defines requests to which s respond as outlined in. All requests in be Timabplleem9e.6n t PedD bRye quests s. Request bmRequestType bRequest wValue wIndex wLength Data GET_BATTERY_STATUS GetBatteryStatus10000000B Zero Battery ID Eight Battery Status SetPDFeature 00000000B set_feature Feature SelectorFeature Specific Zero None Table9.7, \"PD Request Codes\" Command [USB 2.0] [USB 3.2] gives the bRequest values for s that are not listed in the hub/device framework chapters of, Ta.ble9.7 PD Request Codes bRequest Value GET_BATTERY_STATUS Table9.8, \"PD Feature Selectors\" Valid Section 9.4.2.1, \"BATTERY_WAKE_MASK Feature Selector\" Section 9.4.2.2, \"CHARGING_POLICY Feature Selector\" gives the feature selectors for the PD class. Refer to, and for a description of the features. Table9.8 PD Feature Selectors Feature Selector Recipient Value BATTERY_WAKE_MASK Device CHARGING_POLICY Device 40", "tables": ["Table 9.6", "Table 9.7", "Table 9.8"], "figures": [], "page_range": [990, 990]}
{"section_path": "9.3.1 PD Specific Requests", "start_heading": "9.3.1 PD Specific Requests", "content": "PDUSB Device Shall Battery Battery A PDUSB Hub that is compliant to this specificatioSnh all support the related requests if i[tU hCaSsI ]a. PDUSB Hub Provider Consumer A that is compliant to this specification support a USB PD Bridge as described in i9rr.e3sp.1ective of w h ePthDer Sthpe ecific Re isq a uests, a, or both. PDUSB Device Shall Table9.6, \"PD Requests\" Valid Table9.6, \"PD Requests\"Shall PDUSB Device PD defines requests to which s respond as outlined in. All requests in be Timabplleem9e.6n t PedD bRye quests s. Request bmRequestType bRequest wValue wIndex wLength Data GET_BATTERY_STATUS GetBatteryStatus10000000B Zero Battery ID Eight Battery Status SetPDFeature 00000000B set_feature Feature SelectorFeature Specific Zero None Table9.7, \"PD Request Codes\" Command [USB 2.0] [USB 3.2] gives the bRequest values for s that are not listed in the hub/device framework chapters of, Ta.ble9.7 PD Request Codes bRequest Value GET_BATTERY_STATUS Table9.8, \"PD Feature Selectors\" Valid Section 9.4.2.1, \"BATTERY_WAKE_MASK Feature Selector\" Section 9.4.2.2, \"CHARGING_POLICY Feature Selector\" gives the feature selectors for the PD class. Refer to, and for a description of the features. Table9.8 PD Feature Selectors Feature Selector Recipient Value BATTERY_WAKE_MASK Device CHARGING_POLICY Device 40", "tables": ["Table 9.6", "Table 9.7", "Table 9.8"], "figures": [], "page_range": [990, 990]}
{"section_path": "9.4 PDUSB Hub and PDUSB Peripheral Device Requests", "start_heading": "9.4 PDUSB Hub and PDUSB Peripheral Device Requests", "content": "Table9.9, \"Get Battery Status Request\" Battery PDUSB Hub Battery Table9.10, \"Battery Status Structure\" The request shown in returns the current status of the in a /Peripheral, with Status iTnafobrlmea9t.i9o n G aest sBhaotwtenr yin S tatus Request. bmRequestType bRequest wValue wIndex wLength Data GET_BATTERY_STATUS 10000000B Zero Battery ID Eight Battery Status Table9.10 Battery Status Structure Offset Field Size Value Description Shall Battery Value Description whether this is charging or discharging. Battery Battery bBatteryAttributes Battery Battery Sh2a5l5l 4 and be used bBatterySOC perBceanttteargye value from SBhaattlelry Remaining Capacity. Battery Value Description of the. Battery Battery bBatteryStatus Battery URensseprevceifdied erSrohrall Not 255 8 and be used", "tables": ["Table 9.9", "Table 9.10"], "figures": [], "page_range": [991, 991]}
{"section_path": "9.4.1 GetBatteryStatus", "start_heading": "9.4.1 GetBatteryStatus", "content": "Table9.9, \"Get Battery Status Request\" Battery PDUSB Hub Battery Table9.10, \"Battery Status Structure\" The request shown in returns the current status of the in a /Peripheral, with Status iTnafobrlmea9t.i9o n G aest sBhaotwtenr yin S tatus Request. bmRequestType bRequest wValue wIndex wLength Data GET_BATTERY_STATUS 10000000B Zero Battery ID Eight Battery Status Table9.10 Battery Status Structure Offset Field Size Value Description Shall Battery Value Description whether this is charging or discharging. Battery Battery bBatteryAttributes Battery Battery Sh2a5l5l 4 and be used bBatterySOC perBceanttteargye value from SBhaattlelry Remaining Capacity. Battery Value Description of the. Battery Battery bBatteryStatus Battery URensseprevceifdied erSrohrall Not 255 8 and be used", "tables": ["Table 9.9", "Table 9.10"], "figures": [], "page_range": [991, 991]}
{"section_path": "9.4.2 SetPDFeature", "start_heading": "9.4.2 SetPDFeature", "content": "Table9.10 Battery Status Structure Offset Field Size Value Description Shall Shall support Battery Remote wake events. The default value for the Remote wake events be Shall turned off (set to zero) and can be enable/disabled by the host as required. If set to one the device Section 9.4.2, \"SetPDFeature\" generate a wake event when a change of status occurs. See for more bRemoteWakeCapStatus Value Description details. BRaetsteerrvye edrror Shall Sha7l:l3 and be set to zero Weak Battery threshold is reached, based on Present Battery Strength and the device's present operational Note: Shall power needs. wRemainingOperatingTime This value exclude any additional power received from charging. Shall A Battery that is not capable of returning this information Shall return a value of 0xFFFF. Charged Battery threshold is reached based on Present Shall Valid Battery Strength, charging power and the device's present wRemainingChargeTime operational power needs. Value only be if the Charging Flow is \"Charging\". Shall A Battery that is not capable of returning this information return a value of 0xFFFF. PDUSB Device If wValue or wLength are not as specified above, then theP bDeUhSaBvi Dore voifc tehSeh all is not specified. If wInPdDexU rSeBf eDresv tioce a Battery that does notP eDxUisSt,B t hHeunb the respond with a Request Error. If the PDUSB Hub is not configured, thPeD USB Hub 's response to this request is undefined. 9If t.h4e. 2 iSs neottP coDnfFigeuraedt,u three 's response to this request is undefined. Table9.11, \"Set PD Feature\" PDUSB Hub The request shown in Table9 s.1et1s tSheet vPaDlu Fee raetquureested in the /Peripheral. bmRequestType bRequest wValue wIndex wLength Data 00000000B set_ feature Feature Selector Feature Specific Zero None Table9.8, \"PD Feature Selectors\" May Setting a feature enables that feature or starts a process associated with that feature; see - for the feature selector definitions. Features that be set with this request are: - BATTERY_WAKE_MASK. CHARGING_POLICY. Table9.12, \"Battery Wake Mask\" When the feature selector is set to BATTERY_WAKE_MASK, then the wIndex field is structured as shown in. Table9.12 Battery Wake Mask Bit Description Battery Present PDUSB DeviceShall the generate a wake event if it detects that a Battery has been Charging Flow inserted. PDUSB DeviceShall generate a wake event if it detects that a Battery switched from Battery Error charging to discharging or vice versa. PDUSB DeviceShall generate a wake event if thRee sBeartvteerdy has Sdheatellc tNeodt an error condition. 15:3 and be used SPMMay The Enable or Disable the wake events associated with one or more of the above events by using this featurPeD. USB Hub PDUSB Hub If the is not configured, the 's response to this request is undefined. Shall Table9.13, \"Charging Policy Encoding\" USB Type-C When the feature selector is set to CHARGING_POLICY, the wIndex field be set to on[Ue SoBf tThyep vea-lCu e2s.4 d]efined in Shall. If the device is using Current above the default value or is using PD then this feature setting has no effect and the rules for power levels specified in the or USB PD specifications apply. Table9.13 Charging Policy Encoding Value Description Shall 00H The device follow the default current limits as defined in the USB 2.0 or USB 3.1 specification, or as negotiated through other USB mechanisms such as BC. DeviceMay This is the default value. 01H The draw additional power during the unconfigured and suspend states for the purposes of charging. Shall For charging the device itself, the device limit its current draw to the higher of these two values: ICCHPF as defined in the USB 2.0 or USB 3.1 specification, regardless of its USB state. DeviceMay Current limit as negotiated through other USB mechanisms such as BC. 02H The draw additional power during the unconfigured and suspend states for the purposes of charging. Shall For charging the device itself, the device limit its current draw to the higher of these two values: ICCLPF as defined in the USB 2.0 or USB 3.1 specification, regardless of its USB state. Shall Not Current limit as negotiated through other USB mechanisms such as BC. 03H TRhees edrevveicde Shall Ncoontsume any current for charging the device itself regardless of its USB state. 04H-FFFFH and be used ValidCommand PDUSB Hub Valid This is a for the /Peripheral in the Address or Configured USB states. Further, it is only if the device reports a USB PD capability descriptor in its BOS descriptor and Bit 5 of the bmAttributes in that descriptor is set to 1. The device will go back to the wIndex default value of 0 whenever it is reset.", "tables": ["Table 9.10", "Table 9.11", "Table 9.8", "Table 9.12", "Table 9.13"], "figures": [], "page_range": [992, 994]}
{"section_path": "10.1 Introduction", "start_heading": "10.1 Introduction", "content": "USB Type-C ® The flexibility of power provision on is expected to lead to power adapter re-use and the increasingly widespread provision of USBS poouwrceer outlets inSi ndkomestic and public places and in transport of all kinds. Environmental considerations could result in unbundled poweSro audracpeters. RSuinleks aSrhea nlleeded to avoid incompatibility between the s and the s they are used to power, in order to avoid user confusion and to meet user expectations. This section specifies a set of rules that s and s follow. These rules provide a simPpDlPe aRnadti ncognsistent user experience. Charger Charger PDP PDPShall The is a manufacturer declared valuPeD pPlaced on packaging to help PthDeP uSshear lulnderstand the capabilities of a or the size of required to power their device. For values of 10W and above the be declared as an integer number of Watts. For values less than 10W, the be declared in increments of 0.5SoWu.rcePower Rules PDP PDP Rating The define a to provide a simple way to tell the user about the capabilities of their power adapStienrk oPro dweevri cReu. les P isD aPkin to the wattage rating of a light bulb - biggerS nouumrcbeers mean more capability. Sink The define a to provide a simple way to tell the user which s will provide adequate p1o0we.2r for the i rS ou. rce Power Rules SourcePower Rules Normative Optional Source Port Maximum PDP Port PTrhees ent PD P Port defined in this section include both and rules. For all of the defined rules, the capabilities a exposes are based on the, or if power constrained, the Guarant oefe dth Cea pabi.lity Port SourceShall Source_Capabilities EPR_Source_CapabilitiesMessage Sink (A)PDO Normative Optional For a, the Port Por ta Mlwaaxyism inucmlu PdDe Pin eveMryo de SoPrR Mode EPR Mode sent to a all the s that are defined by the (and when implemented) rules based on the ’s and of operation (i.e., or )M.anaged Capability Port First Explicit Contract Explicit Contract Port Present PDP Shared Capacity ChargerPort SourceShall FSoour rac e_Capabilities EPR_S,o euxrcceep_tC baepfoarbei ltihtiee sMessage Si nokr before (tAh)eP DO after the Normative chaOngpetiso onna la, the Po rt P oarlwt Payres sienncltu PdDe Pin eveMryo de SPR Mode EPR o Mr ode First Explic it Contra cstent to a all the s that are defined Sbiyn kthe (and when implemented) rules based on the ’s Source and of operation (i.e., or ). After the, this requirement assures that the attached will always know what voltages (or voltage modes) are presently available from the Source. Capabilities APDO Source PDP Rating Shall In order to meet the expectations of the user, the Maximum Current/Power in the PDO or for - s with a Nofo xr mWaattitvse Obpe taiso nfoallloFwixse:d Supply Variable Supply Shall Maximum current for and / PDOs be either - RoundUp(x/voltage) or RoundDown(x/voltage) to the nAeParDeOst S1h0amllA. Table10.10, \"SPR Programmable Power Supply PDOs and APDOs based on the Port Maximum PDP\" Maximum current for SPR Programmable Power Supply s be as defined in Note: APDO. Table10.10, \"SPR Programmable Power Supply PDOs and APDOs based on the Port Maximum PWDhPe\"n the Constant Power bit is set in the, the programmable power supply's output current is as defined in PDP however the programmable power supply will limit its output current so that the product of its - actual output voltage times the output current does not exceedA PthDeO A.dvertise Table10.10, \"SPR Programmable Power Supply PDOs and APDOs based on the Port Maximum PDP\" If a 9V Prog, 15V Prog or 20VSh Parlolg Programmable Power Supply is d when not required by SourceShall Maximum Voltage, then the maximum current be RoundDown (x/Prog Voltage) to the nearest 50mA. When the PPS - Power Limited bit is cOlepatrio tnhae lBatter y Supp plyrovide tShhisa cllurrent at. Maximum power for PDOs be ≤ x.", "tables": ["Table 10.10", "Table 10.10"], "figures": [], "page_range": [995, 995]}
{"section_path": "10.2 Source Power Rules", "start_heading": "10.2 Source Power Rules", "content": "USB Type-C ® The flexibility of power provision on is expected to lead to power adapter re-use and the increasingly widespread provision of USBS poouwrceer outlets inSi ndkomestic and public places and in transport of all kinds. Environmental considerations could result in unbundled poweSro audracpeters. RSuinleks aSrhea nlleeded to avoid incompatibility between the s and the s they are used to power, in order to avoid user confusion and to meet user expectations. This section specifies a set of rules that s and s follow. These rules provide a simPpDlPe aRnadti ncognsistent user experience. Charger Charger PDP PDPShall The is a manufacturer declared valuPeD pPlaced on packaging to help PthDeP uSshear lulnderstand the capabilities of a or the size of required to power their device. For values of 10W and above the be declared as an integer number of Watts. For values less than 10W, the be declared in increments of 0.5SoWu.rcePower Rules PDP PDP Rating The define a to provide a simple way to tell the user about the capabilities of their power adapStienrk oPro dweevri cReu. les P isD aPkin to the wattage rating of a light bulb - biggerS nouumrcbeers mean more capability. Sink The define a to provide a simple way to tell the user which s will provide adequate p1o0we.2r for the i rS ou. rce Power Rules SourcePower Rules Normative Optional Source Port Maximum PDP Port PTrhees ent PD P Port defined in this section include both and rules. For all of the defined rules, the capabilities a exposes are based on the, or if power constrained, the Guarant oefe dth Cea pabi.lity Port SourceShall Source_Capabilities EPR_Source_CapabilitiesMessage Sink (A)PDO Normative Optional For a, the Port Por ta Mlwaaxyism inucmlu PdDe Pin eveMryo de SoPrR Mode EPR Mode sent to a all the s that are defined by the (and when implemented) rules based on the ’s and of operation (i.e., or )M.anaged Capability Port First Explicit Contract Explicit Contract Port Present PDP Shared Capacity ChargerPort SourceShall FSoour rac e_Capabilities EPR_S,o euxrcceep_tC baepfoarbei ltihtiee sMessage Si nokr before (tAh)eP DO after the Normative chaOngpetiso onna la, the Po rt P oarlwt Payres sienncltu PdDe Pin eveMryo de SPR Mode EPR o Mr ode First Explic it Contra cstent to a all the s that are defined Sbiyn kthe (and when implemented) rules based on the ’s Source and of operation (i.e., or ). After the, this requirement assures that the attached will always know what voltages (or voltage modes) are presently available from the Source. Capabilities APDO Source PDP Rating Shall In order to meet the expectations of the user, the Maximum Current/Power in the PDO or for - s with a Nofo xr mWaattitvse Obpe taiso nfoallloFwixse:d Supply Variable Supply Shall Maximum current for and / PDOs be either - RoundUp(x/voltage) or RoundDown(x/voltage) to the nAeParDeOst S1h0amllA. Table10.10, \"SPR Programmable Power Supply PDOs and APDOs based on the Port Maximum PDP\" Maximum current for SPR Programmable Power Supply s be as defined in Note: APDO. Table10.10, \"SPR Programmable Power Supply PDOs and APDOs based on the Port Maximum PWDhPe\"n the Constant Power bit is set in the, the programmable power supply's output current is as defined in PDP however the programmable power supply will limit its output current so that the product of its - actual output voltage times the output current does not exceedA PthDeO A.dvertise Table10.10, \"SPR Programmable Power Supply PDOs and APDOs based on the Port Maximum PDP\" If a 9V Prog, 15V Prog or 20VSh Parlolg Programmable Power Supply is d when not required by SourceShall Maximum Voltage, then the maximum current be RoundDown (x/Prog Voltage) to the nearest 50mA. When the PPS - Power Limited bit is cOlepatrio tnhae lBatter y Supp plyrovide tShhisa cllurrent at. Maximum power for PDOs be ≤ x.", "tables": ["Table 10.10", "Table 10.10"], "figures": [], "page_range": [995, 995]}
{"section_path": "10.2.1 Source Power Rule Considerations", "start_heading": "10.2.1 Source Power Rule Considerations", "content": "SourcePower Rules The- PDP Raraet idnegsigPnDePd to: Ensure the ( ) of an adapter specified in watts explicitly defines the voltages and - currents at each voltage the adaptPerD sPu Rpaptoinrtgs. PDP Rating Ensure that adapters with a large s are always capable of providing the power to devices - designed for use with adapters with a smaller. Enable an ecosystem of adaSpotuerrcse tPhoawt aerre R iunlteesr-operable with the devices inT tahbel eec1o0s.1y,s \"tCemon.siderations for Sources\" The considerations that lead to the are based are summarized in. Table10.1 Considerations for Sources Considerations Rationale Consequence A user going into an electronics retailer Cannot have a complex identification Simple to identSiofyu rccaepability Source knows what they need scheme Higher power s are a superset of Bigger is always better in user’s eyes – don’t Higher power s do everything smaller Source smaller ones want a degradation in performance ones do Source s with the same power rating but To avoid user confusion, any given power Unambiguous definitions different VI combinations might not interrating has a single definition operate Source Fixed profiles at specific power levels don’t Users and companies will want freedom to A range of power ratings provide adequate flexibility, e.g., profiles as USB Type-CSource pick appropriate ratings USB Type-CSource defined in previous versions of PD. [USB Type-C 2.4] 5V@3A is defined by All > 15W adapters must support 5V@3A or 5V@3A is considered superset consideration is violated Increase to maximum voltage (20V) before Maximize 3A cable utilization 3A cables will be ubiquitous Source increasing current beyond 3A More rails are a higher burden for s, 5V is a basic USB requirement. 48V provides Optimize voltage rail count Battery Source particularly in terms of testing the maximum capability. Source Some s are not able to provide S mo om be il es m dea vll i ces, are - ao bp le er ta oBt e pad rt t oe vr iy de ms oe r.g e., IA nd ave dr dt ii ts ie on to the Bmainttiemryal 5A Vd vertise ments are able to more significant power power directly from their than from Source power from their aH urebgulated 5V supplyCharger Hub Port Section 10.3, \"Sink Power Rules\" SCohmareg er s share power between s and multi-port s have to be multiple Ports ( s and multi- See supported s)", "tables": [], "figures": [], "page_range": [996, 996]}
{"section_path": "10.2.2 Normative Voltages and Currents", "start_heading": "10.2.2 Normative Voltages and Currents", "content": "SPR Source PDP Rating Shall Table10.2, \"SPR Normative Voltages and Minimum Currents\" The voltages and currents an with a of x Watts support are as defined in Table10.2 SPR Norma.tive Voltages and Minimum Currents Port Maximum 5V Fixed 9V Fixed 15V Fixed 20V Fixed SPR AVS PDP Rating (W) PDP PDP - Fixed Supply (15V Max Current) A - Fixed Supply PDP (9V – 15V): (15V – 20V): (20V Max Current) A - Fixed Supply PDP (9V – 15V): 4, 5 (15V – 20V): 1, 5 (20V Max Current) A Fixed Supply ShallAdvertise MayAdvertise PDP 1) Requires a 5A cable. Advertise 2) The PDOs Maximum Current field at least 3A, but up to RoundUp ( /voltage) to the Fixed Supply ShallAdvertise PDP PDP nearest 10mA. Requires a 5A cable if over 3A is d. 3) The PDOs Maximum Current field either RoundDown ( /voltage) or RoundUp ( /voltage) to the SPR AVS Advertise Fixed Supply nearest 10mA. Note 2 Advertise 4) current for this voltage range is the maximum current as d by the 15V PDO. This current can be higher Sink Fixed Supply than 3A (refer to ). Requires a 5A cable if over 3A is d. 5) The is allowed to request up to the 20V Max Current when the requested voltage is 15.0V. Managed Capability Port Valid(A)PDO Port Maximum PDP Table10.2, \"SPR Normative Voltages and Minimum Currents\" Port Present PDP SPR Table10.3, \"SPR Sourcse w Chaepna pbiolwitieers cWonhsetnr aPionretd P arerese dnetf PinDePd itso l eosfsfe trh an Po rt Maxims ubmas ePdD oPn\" the port's (as per Managed Capability Port ) at lower (as per ) because these voltagesT wabolueld1 o0t.3he SrwPRis eS obue racvea iClaabplaeb ifi ltihtiee s When Port Present PD pPo wise lre hssa dthna'tn b Peeonr tc oMnasxtrimainuemd.PDP Port Present 5V Fixed 9V Fixed 15V Fixed 20V Fixed SPR AVS with Max Voltage of 15V or PDP (W) 20V per Table10.2 - Fixed Supply PDP PDP PDP PDP (9V – 15V): 4, 6, 8 (15V – 20V): 6,8 PDP PDP (20V Max Current) A PDP 3,7 (15V Max Current) A (20V Max Current) A - Fixed Supply PDP (9V – 15V): (15V – 20V): (20V Max Current) A - Fixed Supply PDP (9V – 15V): 4, 5 (15V – 20V): 1, 5 (20V Max Current) A Fixed Supply ShallAdvertise MayAdvertise PDP 1) Requires a 5A cable. Advertise 2) The PDOs Maximum Current field at least 3A, but up to RoundUp ( /voltage) to the Fixed Supply ShallAdvertise PDP PDP nearest 10mA. Requires a 5A cable if over 3A is d. 3) The PDOs Maximum Current field either RoundDown ( /voltage) or RoundUp ( /voltage) to the SPR AVS Advertise Fixed Supply nearest 10mA. Note 2 Advertise 4) current for this voltage range is the maximum current as d by the 15V PDO. This current can be higher Sink Fixed Supply than 3A (refer to ). Requires a 5A cable if over 3A is d. SPR AVS Table10.2, \"SPR Normative Voltages and Minimum Currents\" 5) The is allowed to request up to the 20V Max Current when the requested voltage is 15.0V. Port Maximum PDP 6) The Max Voltage for is what is allowed by based on the port's Fixed Supply Table10.2, \"SPR Normative Voltages and Minimum Currents\". Port Maximum PDP 7) This SPR voltage is only available if allowed by based on the SPR Source May (A)PDO Port Present PDP port's. 8) s offer s at this Table10.3, \"SPR Source Capabilities When Port Present PDP is less than Port Maximum PDP\" Table10.4, \"SPR Source Port Present PDP less than Port Maximum PDP Examples\" In reference to Advertise Port Present PDP Managed Capability Port Port Max, imum PDP gives examples of which SPR capabilities are d based on on a and the port's and cableT'sa bculerr1e0n.t4 r aStPinRg S. ource Port Present PDP less than Port Maximum PDP Examples Port Maximum PDP Port Present Offers and Cable Rating PDP 5V Fixed 9V Fixed 15V Fixed 20V Fixed SPR AVS 80W / 5A 65W 3A 3A 3A 3.25A 15V – 20V: 3.25A 80W / 5A 40W 3A 3A 2.67A 2A 15V – 20V: 2A 80W / 3A 40W 3A 3A 2.67A 2A 15V – 20V: 2A 40W / 5A 40W 3A 3A 2.67A Not Offered 9V – 15V: 2.67A 40W / 3A 40W 3A 3A 2.67A Not Offered 9V – 15V: 2.67A 80W / 5A 20W 3A 2.22A 1.33A 1A 15V – 20V: 1A 80W / 3A 20W 3A 2.22A 1.33A 1A 15V – 20V: 1A 40W / 5A 20W 3A 2.22A 1.33A Not Offered 9V – 15V: 1.33A 40W / 3A 20W 3A 2.22A 1.33A Not Offered 9V – 15V: 1.33A 80W/3A 15W 3A 1.67A 1A 0.75A 2 15V - 20V: 0.75A 40W/3FAixed Supply 15W 3A Adve 1rt.6is 7e A2 M 1Aa2yAdvertise Not offered PDP 9V - 15V: 1A2 1) The PDO Maximum Current field will at least 3A but up to RoundUp ( /voltage) to the Capabilities Port Present PDP nearest 10mA. 2) These are not required but may be offered at this. Figure 10.1, \"SPR Source Power Rule Illustration for Fixed Supply PDOs\" SPR SourceShall PDP Rating Fixed Supply illustrates the minimum current that an Note: support at each voltage for a given for PDOs. Source SourcePDP Rating Not illustrated are that currents higher than 3A are allowed to be offered up to a limit of 5A given that a 5A cable iFsi gduetreec t1e0d. 1b yS PthRe Source aPnodw tehre Rvoulltea gIlel utismtreast ciounrr feonrt Freixmeadi nSsu pwpitlhyi nP DthOes. 9V 15V 2 0 V V Figure 10.2, \"SPR Source Power Rule Example For Fixed Supply PDOs\" shows an example of an adapter with a rating at 50W. The adapter is required to support 20V at 2.5A, 15V at 3A, 9V at 3A and 5V at 3A. W5.7 W51 W72 W54 Source PDP Rating (W) )A( tnerruC RP1 RP2 Figure 10.2 SPR Source Power Rule Example For Fixed Supply PDOs 9V 15V 2 0 V V Table10.5, \"Fixed Supply PDO - Source 5V\" Table10.6, \"Fixed Supply PDO - Source 9V\" Table10.7, \"Fixed Supply PDO - Source 15V\" Table10.8, \"Fixed Supply PDO - Source 20V\" Fixed Supply Shall Normative, Table10.2, \"SPR Normative Voltages a, nd Minimum Currents\" and show the PDOs that be supported for each of the voltagesT daebfilnee1d0 i.n5 Fixed Supply PDO - Source 5V. Bit(s) Description Fixed Supply Dual-Role Power B31…30 USB Suspend Supported B29 Unconstrained Power B28 USB Communications Capable B27 Dual-Role Data B26 Unchunked Extended Messages Supported B25 EPR Capable B24 B23 Reserved Shall B22 Peak Current – be set to zero. B21…20 PDP B19…10 5V PDP Rating (x) Current (A) Current based on B9 0 0.5 ≤ x ≤ 15 x ÷ 5 W5.7 W51 W72 W54 Source PDP Rating (W) )A( tnerruC RP1 RP2 W05 Table10.6 Fixed Supply PDO - Source 9V Bit(s) Description Fixed Supply Reserved Shall B31…30 Peak Current B29 22 – be set to zero. B21…20 PDP B19…10 9V PDP Rating (x) Current (A) Current based on B9 Table10.7 Fixed Supply PDO - Source 15V Bit(s) Description Fixed Supply Reserved Shall B31…30 Peak Current B29 22 – be set to zero. B21…20 PDP B19…10 15V PDP Rating (x) Current (A) Current based on B9 Table10.8 Fixed Supply PDO - Source 20V Bit(s) Description Fixed Supply Reserved Shall B31…30 Peak Current B29 22 – be set to zero. B21…20 PDP B19…10 20V PDP Rating (x) Current (A) Current based on B9 May Optional Section 10.2.3, \"Optional Voltages/Currents\" More current be offered in the PDOs when voltages/currents are supported and a 5A cable is being used (see ). SPR AVS Figure 10.3, \"Valid SPR AVS Operating Region for a Source advertising in the range of 27W < PDP ≤ 45W\" Figure 10.4, \"Valid SPR AVS Operating Region for a Source advertising in the range of 45W < PDP ≤ 60W\" Figure F1o0r.5, \"Valid,S PR AVS Operating Region for a Source advertising in the range of 60W < PDP ≤ 100W\", SPR AVSRDO PDP PDP and PDP illustrate the valid operating region for requests in the ranges of 27W < ≤ 45W, 45W < ≤ 60W and 60W < ≤ 10F0iWgu,r ree s1p0e.c3t iVvaelliyd. SPR AVS Operating Region for a Source advertising in the range of 27W < PDP ≤ 45W Figure 10.4 Valid SPR AVS Operating Region for a Source advertising in the range of 45W < PDP ≤ 60W )A( tnerruC ODR Valid RDO Requests 9V 15V 20V Invalid Requests (Crosshatched Area) 15V Fixed PDO Max Current Valid Operating Region for SPR AVS Sink Requests for 27W < PDP (cid:1095)(cid:3)(cid:1008)(cid:1009)(cid:116) RDO Voltage (V) )A( tnerruC ODR Valid RDO Requests 9V 15V 20V Invalid Requests (Crosshatched Area) 15V Fixed PDO Max Current (Minimum of 3A) 20V Fixed PDO Max Current Valid Operating Region for SPR AVS Sink Requests for 27W < PDP (cid:1095)(cid:3)(cid:1008)(cid:1009)(cid:116) RDO Voltage (V) Figure 10.5 Valid SPR AVS Operating Region for a Source advertising in the range of 60W < PDP ≤ 100W Table10.12, \"EPR Source Capabilities based on the Port Maximum PDP and using an EPR Capable Cable\" SPR AVS shows the Minimum and MaximuTma bVloelt1a0ge.9 f o SrP tRhe A djustab rlaen Vgeoslt.age Supply (AVS) Voltage Ranges AVS Voltage Range 15V AVS 20V AVS Maximum Voltage 15V 20V Minimum Voltage 9V 9V Source Shall The voltage output at the 's connector be +/-5% for both the Maximum Voltage and the Minimum Voltage. )A( tnerruC ODR Valid RDO Requests 9V 15V* 20V Invalid Requests (Crosshatched Area) 20V Fixed PDO Max Current 15V Fixed PDO Max Current Valid Operating Region for SPR AVS Sink Requests for 27W < PDP (cid:1095)(cid:3)(cid:1008)(cid:1009)(cid:116) * At 15.0V, up to the (20V Fixed PDO Current)A is allowed RDO Voltage (V)", "tables": ["Table 10.2", "Table 10.3", "Table 10.4", "Table 10.5", "Table 10.6", "Table 10.7", "Table 10.8", "Table 10.12"], "figures": ["Figure 10.1", "Figure 10.2", "Figure 10.2", "Figure 10.4", "Figure 10.4", "Figure 10.5"], "page_range": [997, 1004]}
{"section_path": "10.2.3 Optional Voltages/Currents", "start_heading": "10.2.3 Optional Voltages/Currents", "content": "Section 10.2.2, \"Normative Voltages and Currents\" SPR Source Sink Sink MayOptionally In addition to the voltages and currents specifieOdp itnio nal Shall Not, an that is optimized for use with a specific or a specific class of s supply additional vOoplttiaogneas land increaSsheadl lc Nurortents. However, the EPR Sou vrcoeltages exceSePdR 9MVo.de EPR Mode EPR Variable Supply Battery SupplyPDO Shall Not SvPoRltaVgaersia ble Supply be imBpaletmteeryn tSeudp opnly PDO includingE fPorR bMoothd e and s of operation. versions of and s are not defined and be implemented, however Opt iaonnda l s are allowed in. Source PDP Rating Optional While allowed, the use of voltages and currents is not recommended as two s with the same Sec btiuotn n 1o0t. 2s,u \"pSpoourrtcien Pg otwhee rs aRmulee s\" voltages aSnhda cllurrents caOnp bteiohnaavle differently thus confusing the user. PDP Rating Normative See for the rules that apply to PDOs in order to be consistent with 1th0e d.2ec.l3ar.e2d Op atnido thnea l Norma vtoiltvaege sS aPnRd c Purrreongtsr.ammable Power Supply PDP Rating Shall Table10.10, \"SPR Programmable Power Supply PDOs and APDOs based on the Port Maximum PDP\" The voltages and currents a Programmable Power Supply with a of x Watts support are as defined Optional APDO Sha.ll Wh- en Source ProgrAamdvmeratbislee POopwteiorn Saulpply s are offered, the follAoPwDinOg rSehqaulilrAedmveenrttiss e apply: APDO Table10.10, \"SPR Programmable Power Supply PDOs and APDOs based on the Port AM aximum t hPaDtP \" s Programmable Power Supply s the PDOs and s shown in - SourceShallA.dvertiseOptional APDO Table10.11, \"SPR Programmable Power Supply AVo ltage R anges \" Programmable Power Supply s with Maximum Voltage and Minimum Voltages for nominal voltage as defined in - SourceShall N.o tAdvertise APDO Table10.11, \"SPR Programmable Power Supply Voltage ARa nges\" a Programmable Power Supply that does not follow the Minimum Voltage and Maximum Voltage defined in -. Shall SourceAdvertise Attached - In no case aS hall No t a current thaSt PeRxc Meeoddse the cable's current rating. TabTlehe1 0M.1ax0 V SoPltRag Per ogramma ebxlcee Pedo w21eVr Swuhpilpel yin P DOs and. APDOs based on the Port Maximum PDP PDP Maximum PDP SPR Fixed and AVS 9V Prog 15V Prog 20V Prog (W) x < 15W - - - 15W PDP- - - Table10.2, \"SPR Normative Voltages 27W and Minimum Currents\" Table10.3, \"SPR 3A PDP- - SRoeuqruciree Cd appear bilities When Port Present PDP is less 45W - 3A PDP - when applicable) PDP 60W - - 3A SPR PPSAPDO ShallAdvertise PDP 100W - - 5A SPR PPSAPDO ShallAdvertise MayAdvertise PDP 1) The s Maximum Current field RoundDown ( /Prog Voltage) to the nearest 50mA. 2) The s Maximum Current field at least 3A, but up to RoundDown( /Prog Voltage) APDO to the nearest 50mA. 3) Applies to s regardless of value of the PPS Power Limited bit. SPR PPS Fixed Supply SPR PPSAPDO Table10.11, \"SPR Programmable Power Supply Voltage Ranges\" The Voltage ranges map to the Voltages. For each fixed voltage there is a defined voltage range for the matching. shows the Minimum and Maximum Voltage for the Programmable Power Supply that corresponds to the Fixed nominal voltage. Table10.11 SPR Programmable Power Supply Voltage Ranges Fixed Nominal Voltage 9V Prog 15V Prog 20V Prog Maximum Voltage 11V 16V 21V Minimum Voltage 5V 5V 5V Source Shall The voltage output at the 's connector be +/-5% for both the Maximum Voltage and the Minimum V1o0lt.a2g.e3..2.2 Examples of the use of SPR Programmable Power Supplies Advertise PDP RatingMay The folloPwDiPng examples illustrate what a power adapter that s a particular offer: 1)  27W implementation includes:  5V @ 3A,  9V @ 3A, and PDP9V Prog @ 3A. 2)  36W implementation includes:  5V @ 3A,  9V @ 3A,  1SP5R @ AV 2S.4A,  with 9V - 15V @ 2.4A,  9V Prog @ 3 A, and PDP15V Prog @ 2.4A. Optionally 3)  36W implementation that includes higher current in the 9V Prog PPS:  5V @ 3A,  9V @ 3A,  1SP5R @ AV 2S.4A,  with 9V - 15V @ 2.4A,  9V Prog @ >3A up to 4A (with a 5A cable) and 15V PDPProg @ 2.4A. 4)  50W implementation includes:  5V @ 3A,  9V @ 3A,  15 @ 3A, 20V @ 2.5A,  SPR AVS  with 9V - 15V @ 3A & 15V - 20V @ 2.5A,  15V Prog @ 3A, and PDP20V Prog @ 2.5A. 5)  80W implementation includes:  5V @ 3A,  9V @ 3A,  15 @ 3A,  2SP0RV A @VS 4A,  with 9V - 15V @ 3A & 15V - 20V @ 4A,  15V Prog @ 3A, and 20V Prog @ 4A. The first example illustrates a basic example of aP sDuPp Rpalyti tnhgat can only support 5V and 9V. Power Rules SPR AVS Power Rules The second and thirSdP eRx Mamodpeles illustrates as the goes higShPeRr (thAe)PreD aOre morAeP pDoOssible combinations that meet the. These examples also add. Although there are multiple ways to meet the, while operating in no more than a combination of seven s and s can be offered. Advertise SPR AVS The fourth and fifth example show that the 15SVPR P AroVgS @AP 3DAO fully covers the 9V Prog @3A range so it is not necessary to both. These examples also illustrate being extended up to 20V with separate current limits for the 9V - 15V and 15V - 20V ranges - a single covers advertising both ranges. EPR Mode Optional EPR Capable PDP Rating EPR Capable Source Port EPR Source Port May SPR Mode EPR Mode Support of is. An port has a that is >100W and ≤240W. An EPR Sou r(ce Port ) SP Ro pMeoradteeM ina eyither or when operating at 100W or less. EPR Mode EPR Source PortShall An operating in offer less than 100W to avoid violating safety regulations. When operating in, an offer 100W in Fixed 20V when not constrained by multi- port shaEriPnRg Sliomuirtcse. May Shared Capacity Charger Assured Capacity Charger [USB Type-C 2.4] An include multiple ports and these ports can be functionally implemented as or EPR Source Ppoorrtts P arse dseenfitn PedD Pin Sh.all Normative SPR Source Port Shall SPR Mode EPR Source Any port oEnP aRn C apableSha tllhat has a SPR Mode of E1P0R0 WSo uorrc leess follow the SPR Mode requirements fMoar y s and operate only in. Any port on an that is operating with a cable that is not Should operate only in. An, when operating in with a 5A cable, offer less than 5A due to design tolerances in order to meet applicable safety standards. For best user Texapbeleri1e0n.c1e2,i t\" EPR Sou brcee a Csa cploasbeil titoi e1s0 b0aWse da so pno tshsei bPloer.t Maximum PDP and using an EPR Capable Cable\" Table10.13, \"EPR Source Capabilities when Port Present PDP is less than Port Maximum PDP and using an EPRcapable cable\" Normative EPR Source Port and EPR Source Port SPR PPSShall APDO defineP DthPe requirements s.P WDhPile not included in EthPeRs Me toadbeles, any that also supports offer the SPR Fixed 20V PDO and PPS 20V Prog at 100W (or the max- imum availabEleP R So uwrchee nP otrhte port is operating at an EquPiDvPa lRenatt ing <S1h0a0lWl ) when in : Table10.12, \"EPR Source Capabilities based on the Port Maximum PDP and using an EPR WCahpeanb laen C able\" is PcDapPa Rbalet ionfg supplying its, it adhere to the requirements defined in - Source Pboarsted on itEs PRCharger of x Watts. Port Maximum PDP Shall Table10.13, \"EPR Source Capabilities when Port Present PDP is less than WPohrte nM aa ximum PDP aonnd a uns ing a n EPR-ca isp aubnlaeb claeb tloe \"provide its Port Present PDP, it adhere to the requirements defined in based on a of x Watts. Some exampElePsR: Source PortMay PDP Rating Negotiation An be unable to provide its because it is thermally constrained at  the time of power.EPRCharger - A SharEePdR pCohrta orgne ar multi-poArdtj usta ble Volta gthea Stu ips plilmy iAteVdS byE xthplei criet mCoanintrinagc tavailable power. WhenS ahna ll is in an ( ) Table1:0.15, \"EPR Adjustable Voltage Supply (AVS) Voltage Ranges\" It Reject all Requests outsidAed ovfe trhties edefPinDePd voltage range (see ) or for a requested voltage and Current that results in a power  level that iSsh maollre Stohuarnc tehAed Pvoerrtt'isse d. Sink Attached In no case a a Current or accept a Current requested by a that exceeds the cable's current rating. - EPR SourceShall Not TableT1h0e.1 M2a xE PVRol tSaoguer ocfef eCraepda bbyi lainti es based on the Port eMxcaexeidm 4u8mV.PDP and using an EPR Capable Cable Port SPR Fixed and AVS 28V Fixed 36V 48V Fixed EPR AVS, Maximum Fixed PDP (W) PDP - PDP N/A N/A (15V – /5A): PDP (> /5A – 28V): Table10.2, \"SPR PDP Normative Voltages and Minimum ( / voltage) A CC au prR are ben iq lt ius t\"i ir ee s d W pT hea erb n l e Po1 r0 t. 3 P, r \" eS sP eR nt S Po Du Prc ie s PDP N/A (15 P- V D P– /5A): less than P(oorr t Maximum PDP\" ( / 1 5A 36)A (> /5A – 36V): when PDP applicable) ( / voltage) A - PDP (15V – /5A): PDP (> /5A – 48V): EPR Source Fixed Supply PDP ( / voltage) A PDP 1) s are disallowed from offerin Sg h allAdvertise voltages that are abov Pe D t Phe defined voltages for a P g Div Pen, e.g., 36V is disallowed for any of 140W or lower. 2) The Fixed PDOs Maximum Current field either RoundDown ( /voltage) or RoundUp ( /voltage) to the EPR Source Shall Advertise PDP nearest 10mA. SinkRDO AVS Advertise PDP RDO 3) s reject any requ Ae Vs St for more than the d, i.e., when output voltage and operating current requested in the is outside of the defined voltage and current range represented by the d, the will be rejected. Valid Figure 10.6, \"Valid EPR AVS Operating Region\" AVSAPDO 4) The current available for a given voltage is as indicated in this column. TheP cDuPrrent defined here is describing the top edge of the Operating Region as illustrated in. The does not have a Maximum Current field, so the maximum current has to be calculated from the. Table10.13 EPR Source Capabilities when Port Present PDP is less than Port Maximum PDP and using an EPR-capable cable Port Present SPR Fixed and AVS 28V Fixed 36V Fixed 48V Fixed EPR AVS with Max Voltage of 28V, 36V or 48V PDP (W) per 28V 36V 2, 5, 6 48V Table10.12 Table10.2, \"SPR - Normative Voltages and PDP Present PDP is less than Port ( /48) A when A  PDP PDP Above 75W: Capabilities When Port ( /AVS voltage) A Maximum PDP\" Port ( / 148)  Present PDP A (15V – /5A): (> /5A – max voltage): Fixed Supply ShallAdvertise PDP PDP ( /AVS voltage) A 1) The PDOs Maximum Current field either RoundDown ( /voltage) or RoundUp ( /voltage) to the EPR Source Shall Advertise PDP nearest 10mA. SinkRDO AVS Advertise PDP RDO 2) EPR Sources May reject an (Ay )R Pe Dq Ouest for m Po or re t t Ph ra en s t eh ne t PDP d, i.e., when F o ixu et dp Su ut pv po ll yta Pg De O an Md o ap xe imra uti mng C c uu rr rr ee nn tt reque Ss ht ae ld l in the is outside of the defined voltage and current range represented by the d, the will be rejected. Advertise PDP PDP 3) EPRFixse d Sup o pf lf yer an s at this T. a W bh leen 1 0o.f 1fe 2r,e \"d E, Pth Re S ource Capa bilits ie s based on the Por f ti e Mld a ximu m either RoundDown ( /Voltage) or RoundUp ( /Voltage) to the nearest 10mA. PDP and using an EPR Capable Cable\" PDP Rating 4) This voltage is only available if allowed by AVS Table10.12, \"EPR Source Capabilities based on the Port Maximum PDP and based on the port’s. using an EPR Capable Cable\" Port Maximum PDP 5) The Max Voltage for is what is allowed by T AVS based on the port’s. Valid Figure 10.6, \"Valid EPR AVS Operating Region\" AVSAPDO 6) The current available based on voltage is as indicated in this colPumDPn. The current defined here is describing the top edge of the Operating Region as illustrated in. does not have a Maximum Current field so the maximum current has to be calculated from the. Note: EPRManaged Capability Port Port Present PDP Table10.13, \"EPR Source Capabilities when Port Present PDP is less than Port Max imum PDP and using an EsP wR-hceanp apbolwe ecra bcolen\"strained are definPeodr tt oM oaffxeirm huigmh ePrD vPoltages atT laobwleer1 0.12, \"EPR Source C (aapsa pbeilrit ies based on the Port Maximum PDP and using an EPR Capable Cable\" Ma) nthaganed t hCea ppaobrti'lsit y Port (as per Managed Capability Port ) becauPseo trht ese Mvoaltxaigmeus mw oPuDldP otherwise be available if the power hadn't been constrained. s are required to be properly identified to the user based on the port's Table10.1.3, \"EPR Source Capabilities when Port Present PDP is less than Port Maximum PDP and using an EPR-capable cable\" Table10.14, \"EPR Source Examples when Port Present PDP is less than Port Maximum IPnD rPe\"ference to EPR Capabilities SPRFixed Supply SPR AVS APDO Advertise, Port Present PDP Port Maximum PDP gives examples of which, in addition to the required PDOs and, arTea ble10.1d4 b EaPseRd S oonu rce Examples wh eann dP othret Pporerts'es nt PDP is less than P.ort Maximum PDP Port Maximum Port Present Offers PDP PDP 28V Fixed 36V Fixed 48V Fixed AVS 200W 108W 3.86A 3A 2.25A 48V@108W 160W 108W 3.86A 3A Not offered 36V@108W 120W 108W 3.86A Not offered Not offered 28V@108W 200W 72W 2.57A 2A 1.5A 48V@72W 160W 72W 2.57A 2A Not offered 36V@72W 120W 72W 2.57A Not offered Not offered 28V@72W 200WCapabilities 36W 1.29A 1AP1ort Present 0 P.7D 5P A1 48V@36W1 1) These are not required but may be offered at this. Table10.14 EPR Source Examples when Port Present PDP is less than Port Maximum PDP Port Maximum Port Present Offers PDP PDP 28V Fixed 36V Fixed 48V Fixed AVS 160W 36W 1.29A 1A Not offered 36V@36W Capabilities Port Present PDP 120W 36W 1.29A Not offered Not offered 28V@36W 1) These are not required but may be offered at this. EPR Source AVSExplicit Contract PDP Shall PDP RejectMessage Figure 10.6, \"Valid EPR AVS Operating Region\" s when operating in an Valid are requiredE tPoR s tSaoyu wrciethin their as AsVucShE txhpeliyc it Creosnptorancdt to any requesAtd (vVeArt)i sfeor mPDoPre than the with a. illustrates the definition of the operating range for an operating in an based on its d Figu.re 10.6 Valid EPR AVS Operating Region Figure 10.7, \"EPR Source Power Rule Illustration for Fixed PDOs\" EPR Source Shall PDP Rating illustrates the minimum current that an Note: support at each voltage for a given. Source SourcePDP Rating Not illustrated are that currents higher than 3A are allowed to be offered up to a limit of 5A given that a 5A cable is detected by the and the voltage times current remains within the. )A( tnerruC ODR Valid RDO Requests Advertised Voltage = Voltage = 15V PDP/5A 28, 36 or 48V 5A Current = Advertised PDP/Advertised Voltage Valid Operating Region Invalid Requests (Crosshatched Area) for EPR AVS Sink Requests RDO Voltage (V) Figure 10.7 EPR Source Power Rule Illustration for Fixed PDOs Source PDP Rating (W) Table10.15, \"EPR Adjustable Voltage Supply (AVS) Voltage Ranges\" EPR AVS shows the Minimum and Maximum Voltage for the ranges. Table10.15 EPR Adjustable Voltage Supply (AVS) Voltage Ranges AVS Voltage Ranges 28V AVS 36V AVS 48V AVS Maximum Voltage 28V 36V 48V Minimum Voltage 15V 15V 15V Source Shall The voltage output at the 's connector be +/-5% for both the Maximum Voltage and the Minimum Voltage. )A( tnerruC 5V 20V V RP1RP2 W5.7 W51 W72 W54 W001 W041 W081 20V 20+28V 20+28+36V 28V V 20 V 9", "tables": ["Table 10.10", "Table 10.11", "Table 10.11", "Table 10.2", "Table 10.13", "Table 10.12", "Table 10.13", "Table 10.2", "Table 10.13", "Table 10.12", "Table 10.2", "Table 10.1.3", "Table 10.14", "Table 10.15"], "figures": ["Figure 10.7", "Figure 10.7"], "page_range": [1005, 1012]}
{"section_path": "10.3 Sink Power Rules", "start_heading": "10.3 Sink Power Rules", "content": "SinkPower Rules Sink Source Normative The are designed to ensure the best possible user experience when a given used with a compSilniaknPto wer Ru olef sarbitrary Output Power Rating that only supplies the voltages and currents. The- S oaurerc beased on the following considerations: Sink PDP Low power s (e.g., 5V) are expected to be very common and will be used with s designed for - a higher. Source PDP Rating Sink - Optimizing Sthinek user experience when s with a higher Optional are used with low power s. 10.3.2Preventin gN orsm thaat toinvlye fu Sncitniokn wRelul (loer sat all) when using voltages and currents. Sink Source PDP Rating Shall - s designed to use s with a Source of x W PD:P Rating - Either operate or charge from Cas pthaabtil hitaievse M a ismatch ≥S xe cWtio.n 6.4.2.3, \"Capability Mismatch\" Source PDP Rating Either operate, charge or indicate a (see ) Sink from s Sthoautr cheave a Optional < x W and ≥ 0.5W. Section 10.2.3, \"Optional Voltages/Currents\" PDP Rating Shall Source A oPpDtiPm Rizaetidn fgor a with voltageNso arnmda ctuivrreents or power as described in Section 10.2.2, \"Normative Voltage sw aitnhd a C urrents\" of x W proviSdoeu ar cseimilar user experience when powered from a with a of ≥ x W that supplies onlyT athbele 10.10, \"SPR v Porlotaggreasm amnadb clue rProewntesr aSsu spppelyc iPfiDeOd si na nd APDOs based on the Port Maximum PDP\". For example, a 60W might not offer 9V Prog or 15V Prog since 20V Prog is a suitable substitute for both (as shown in ). Sink Capabilities Sink PDP Shall The Operational Current/Power in the PDO for s with an Operational of x Watts be as f- ollows: Fixed Supply Variable Supply Operational current for / PDOs: RoundDown(x/voltage) to the nearest - 10mA. Battery Supply - Operational power for PDOs: ≤ x. APDO Table10.10, \"SPR Programmable Power Supply PDOs and APDOs based on the Port Maximum PDP\" Operational current for Programmable Power Supply s as defined in : RoundDown (x/Prog Voltage) to the nearest 50mAS.inkRDO Sink PDP PDP Shall The Maximum Current/Power in the for s with an Operational of x Watts and Maximum of y Wat- ts be as follows: Fixed Supply Variable SupplyRDO Sink Battery Maximum current for / s from s without a : RoundDown(x/ - voltage) to the nearestF 1ix0emd ASu.pply Variable SupplyRDO Sink Battery Maximum current for / s from s with a : RoundDown(y/ - Voltage) to the nearesBta 1tt0emryA S.upplyRDO Sink Battery - Maximum power for Battery Supply RDOs from Sinks withouBt aat tery : ≤ x. - Maximum power for RD O s fromSo urces with a : ≤ y.Table10.10, \"SPR Programmable Power Supply PDOs and APDOs based on the Port Maximum PDP\" Table10.14, \"EPR MSoauxricme uEmxa cmuprlreesn wt hfoern P PPoSr tS Purpepsleyn t PDPs ifsr olemss than P oPrDt OMsa axsim duemfin PeDdP in\" or : RoundDown (y/Prog Voltage) to the nearest 50mA.Shall Advertise Sink Capabilities The following requirements apply to the d :", "tables": [], "figures": [], "page_range": [1013, 1013]}
{"section_path": "10.3.1 Sink Power Rule Considerations", "start_heading": "10.3.1 Sink Power Rule Considerations", "content": "SinkPower Rules Sink Source Normative The are designed to ensure the best possible user experience when a given used with a compSilniaknPto wer Ru olef sarbitrary Output Power Rating that only supplies the voltages and currents. The- S oaurerc beased on the following considerations: Sink PDP Low power s (e.g., 5V) are expected to be very common and will be used with s designed for - a higher. Source PDP Rating Sink - Optimizing Sthinek user experience when s with a higher Optional are used with low power s. 10.3.2Preventin gN orsm thaat toinvlye fu Sncitniokn wRelul (loer sat all) when using voltages and currents. Sink Source PDP Rating Shall - s designed to use s with a Source of x W PD:P Rating - Either operate or charge from Cas pthaabtil hitaievse M a ismatch ≥S xe cWtio.n 6.4.2.3, \"Capability Mismatch\" Source PDP Rating Either operate, charge or indicate a (see ) Sink from s Sthoautr cheave a Optional < x W and ≥ 0.5W. Section 10.2.3, \"Optional Voltages/Currents\" PDP Rating Shall Source A oPpDtiPm Rizaetidn fgor a with voltageNso arnmda ctuivrreents or power as described in Section 10.2.2, \"Normative Voltage sw aitnhd a C urrents\" of x W proviSdoeu ar cseimilar user experience when powered from a with a of ≥ x W that supplies onlyT athbele 10.10, \"SPR v Porlotaggreasm amnadb clue rProewntesr aSsu spppelyc iPfiDeOd si na nd APDOs based on the Port Maximum PDP\". For example, a 60W might not offer 9V Prog or 15V Prog since 20V Prog is a suitable substitute for both (as shown in ). Sink Capabilities Sink PDP Shall The Operational Current/Power in the PDO for s with an Operational of x Watts be as f- ollows: Fixed Supply Variable Supply Operational current for / PDOs: RoundDown(x/voltage) to the nearest - 10mA. Battery Supply - Operational power for PDOs: ≤ x. APDO Table10.10, \"SPR Programmable Power Supply PDOs and APDOs based on the Port Maximum PDP\" Operational current for Programmable Power Supply s as defined in : RoundDown (x/Prog Voltage) to the nearest 50mAS.inkRDO Sink PDP PDP Shall The Maximum Current/Power in the for s with an Operational of x Watts and Maximum of y Wat- ts be as follows: Fixed Supply Variable SupplyRDO Sink Battery Maximum current for / s from s without a : RoundDown(x/ - voltage) to the nearestF 1ix0emd ASu.pply Variable SupplyRDO Sink Battery Maximum current for / s from s with a : RoundDown(y/ - Voltage) to the nearesBta 1tt0emryA S.upplyRDO Sink Battery - Maximum power for Battery Supply RDOs from Sinks withouBt aat tery : ≤ x. - Maximum power for RD O s fromSo urces with a : ≤ y.Table10.10, \"SPR Programmable Power Supply PDOs and APDOs based on the Port Maximum PDP\" Table10.14, \"EPR MSoauxricme uEmxa cmuprlreesn wt hfoern P PPoSr tS Purpepsleyn t PDPs ifsr olemss than P oPrDt OMsa axsim duemfin PeDdP in\" or : RoundDown (y/Prog Voltage) to the nearest 50mA.Shall Advertise Sink Capabilities The following requirements apply to the d :", "tables": [], "figures": [], "page_range": [1013, 1013]}
{"section_path": "10.3.2 Normative Sink Rules", "start_heading": "10.3.2 Normative Sink Rules", "content": "SinkPower Rules Sink Source Normative The are designed to ensure the best possible user experience when a given used with a compSilniaknPto wer Ru olef sarbitrary Output Power Rating that only supplies the voltages and currents. The- S oaurerc beased on the following considerations: Sink PDP Low power s (e.g., 5V) are expected to be very common and will be used with s designed for - a higher. Source PDP Rating Sink - Optimizing Sthinek user experience when s with a higher Optional are used with low power s. 10.3.2Preventin gN orsm thaat toinvlye fu Sncitniokn wRelul (loer sat all) when using voltages and currents. Sink Source PDP Rating Shall - s designed to use s with a Source of x W PD:P Rating - Either operate or charge from Cas pthaabtil hitaievse M a ismatch ≥S xe cWtio.n 6.4.2.3, \"Capability Mismatch\" Source PDP Rating Either operate, charge or indicate a (see ) Sink from s Sthoautr cheave a Optional < x W and ≥ 0.5W. Section 10.2.3, \"Optional Voltages/Currents\" PDP Rating Shall Source A oPpDtiPm Rizaetidn fgor a with voltageNso arnmda ctuivrreents or power as described in Section 10.2.2, \"Normative Voltage sw aitnhd a C urrents\" of x W proviSdoeu ar cseimilar user experience when powered from a with a of ≥ x W that supplies onlyT athbele 10.10, \"SPR v Porlotaggreasm amnadb clue rProewntesr aSsu spppelyc iPfiDeOd si na nd APDOs based on the Port Maximum PDP\". For example, a 60W might not offer 9V Prog or 15V Prog since 20V Prog is a suitable substitute for both (as shown in ). Sink Capabilities Sink PDP Shall The Operational Current/Power in the PDO for s with an Operational of x Watts be as f- ollows: Fixed Supply Variable Supply Operational current for / PDOs: RoundDown(x/voltage) to the nearest - 10mA. Battery Supply - Operational power for PDOs: ≤ x. APDO Table10.10, \"SPR Programmable Power Supply PDOs and APDOs based on the Port Maximum PDP\" Operational current for Programmable Power Supply s as defined in : RoundDown (x/Prog Voltage) to the nearest 50mAS.inkRDO Sink PDP PDP Shall The Maximum Current/Power in the for s with an Operational of x Watts and Maximum of y Wat- ts be as follows: Fixed Supply Variable SupplyRDO Sink Battery Maximum current for / s from s without a : RoundDown(x/ - voltage) to the nearestF 1ix0emd ASu.pply Variable SupplyRDO Sink Battery Maximum current for / s from s with a : RoundDown(y/ - Voltage) to the nearesBta 1tt0emryA S.upplyRDO Sink Battery - Maximum power for Battery Supply RDOs from Sinks withouBt aat tery : ≤ x. - Maximum power for RD O s fromSo urces with a : ≤ y.Table10.10, \"SPR Programmable Power Supply PDOs and APDOs based on the Port Maximum PDP\" Table10.14, \"EPR MSoauxricme uEmxa cmuprlreesn wt hfoern P PPoSr tS Purpepsleyn t PDPs ifsr olemss than P oPrDt OMsa axsim duemfin PeDdP in\" or : RoundDown (y/Prog Voltage) to the nearest 50mA.Shall Advertise Sink Capabilities The following requirements apply to the d : - SinkShall NotAdvertiseFixed Supply PDP Rating A PDO maximum voltages and currents that exceed the - thSeiyn kwSehrae ldl eNsoigtnAeddv etort uisseeV. ariable Supply PDP Rating A PDO maximum voltages and currents that exceed the - SinkS thhaelyl NwoetrAe ddveesritginseed Btoa tutseer.y Supply PDP Rating A a PDO maximum allowable power that exceeds the - thSeiyn kwSehrae ldl eNsoigtnAeddv etort uissee. APDO PDP Rating A a PPS maximum allowable power that exceeds the they - weSrinek dSehsaiglnl Nedo ttoA duvseer.tise AVSAPDO PDP Rating A an maximum allowable power that exceeds the they were designed to use. A CRC calculation A.1 C code example // // USB PD CRC Demo Code. // #include <stdio.h> int crc; //----------------------------------------------------------------------------void crcBits(int x, int len) { const int poly = 0x04C11DB6; //spec 04C1 1DB7h int newbit, newword, rl_crc; for(int i=0; i<len; i++) { newbit = ((crc>>31) ^ ((x>>i)&1)) & 1; if(newbit) newword=poly; else newword=0; rl_crc = (crc<<1) | newbit; crc = rl_crc ^ newword; printf(\"%2d newbit=%d, x>>i=0x%x, crc=0x%x\\n\", i, newbit,(x>>i),crc); } } int crcWrap(int c){ int ret = 0; int j, bit; c = ~c; printf(\"~crc=0x%x\\n\", c); for(int i=0;i<32;i++) { j = 31-i; bit = (c>>i) & 1; ret |= bit<<j; } return ret; } //----------------------------------------------------------------------------int main(){ int txCrc=0,rxCrc=0,residue=0,data; printf(\"using packet data 0x%x\\n\", data=0x0101); crc = 0xffffffff; crcBits(data,16); txCrc = crcWrap(crc); printf(\"crc=0x%x, txCrc=0x%x\\n\", crc, txCrc); printf(\"received packet after decode= 0x%x, 0x%x\\n\", data, txCrc); crc = 0xffffffff; crcBits(data,16); rxCrc = crcWrap(crc); printf(\"Crc of the received packet data is (of course) =0x%x\\n\", rxCrc); printf(\"continue by running the transmit crc through the crc\\n\"); crcBits(rxCrc,32); printf(\"Now the crc residue is 0x%x\\n\", crc); printf(\"should be 0xc704dd7b\\n\"); } B Message Sequence Examples (Deprecated) Deprecated This appendix has been. C VDM Command Examples C.1 Discover Identity Example C.1.1 Discover Identity Command request TableC.1, \"Discover Identity Command request from Initiator Example\" Message Header VDM Header Initiator Discover IdentityCommand below shows the contents of the key fields in the Tab alnedC.1 Discover fIodre annt ity Comm saennddi nreg qau est from Initiato r Example request. Bit(s) Field Value Message Header Reserved MessageID 14…12 1 ( ) Port Power Role 11…9 0…7 Specification Revision Revision 3.x Reserved 7…6 10b ( ) 5…4 Message Type Vendor D0efined Message VDM Header 3…0 1111b ( ) Standard or Vendor ID (SVID) PD SID B31…16 VDM Type 0xSFtrFu0c0tu (red VDM) Structured VDM Version (Major) B15 1 ( ) Structured VDM Version (Minor) B14…13 01b (Version 2.0) Object Position B12…11 01b (Version 2.1) B10…8 Command Type 0I0n0itbiator Reserved B7…6 00b ( ) B5 Command Discove0r Identity B4…0 1 ( ) C.1.2 Discover Identity Command response - Active Cable. TableC.2, \"Discover Identity Command response from Active Cable Responder Example\" Message Header VDM Header Responder VDO Discover IdentityCommand Responder shows the contMenotdsa ol f the kOepye rfaietlidosn in the and for a returning s in response to a request. In this illustration, the is an active Gen2 cable which supports.TableC.2 Discover Identity Command response from Active Cable Responder Example Bit(s) Field Value Message Header Reserved Product VDO Cable VDO 14…12 5 ( + + + MessageID + ) Cable Plug 11…9 0…7 Specification Revision Revision 3.x Reserved 7…6 10b ( ) 5…4 Message Type Vendor D0efined Message VDM Header 3…0 1111b ( ) Standard or Vendor ID (SVID) PD SID B31…16 VDM Type 0xSFtrFu0c0tu (red VDM) Structured VDM Version (Major) B15 1 ( ) Structured VDM Version (Minor) B14…13 01b (Version 2.0) Object Position B12…11 01b (Version 2.1) B10…8 Command Type Res0p0o0nbderACK Reserved B7…6 01b ( ) B5 Command Discove0r Identity ID Header VDO B4…0 2 ( ) USB Communication USB USB Communications Capable as USB Host Host B31 0 (not s capable as a USB Communications Capable as a USB Device ) B30 SOP’ Product Type (Cable Plug/VPD) 0 (not data caApcatibvlee Caasb al eDevice) Modal Operation Supported B29…27 100b ( ) Reserved Shall B26 1 (supports Modes) B25…16. be set toU zSeBro V.endor ID VID0 Cert Stat VDO B15…0 16-bit unsigned integer. USB-IF assigned for this cable vendor Product VDO B31…0 32-bit unsigned integer USB-IF assigned XID for this cable B31…16 16-bit unsigned integer. USB Product ID Product ID assigned by the cable vendor Cable VDO1 (returned for Product Type “Active Cable”) B15…0 16-bit unsigned integer. bcdDevice Device version assigned by the cable vendor HW Version Firmware Version B31…28 Cable HW version number (vendor defined) VDO Version B27…24 Cable FW version number (vendor defined) B23…21 010b (Version 1.2) TableC.2 Discover Identity Command response from Active Cable Responder Example Bit(s) Field Value Reserved B20 USB Type-C plug to USB Type-C/Captive USB0 Type-C B19…18 EPR Capable (Active Cable) 10b ( EPR Capab® le) Cable Latency B17 0 (not ) B16…13 Cable Termination Type (Active Cable) 0001b (<10ns V(~CO1NmN)) B12…11 Maximum VBUS Voltage (Active Cable) 11b (Both ends Active, required) SBU Supported B10…9 00b (20V) SBU Type B8 0 (SBUs connections supported) VBUS Current Handling Capability (Active Cable) B7 0 (SBU is passive) VBUS Through Cable B6…5 01b (3A) B4 SOP’’ Controller Present SOP’’ 1 (Yes) Reserved B3 1 ( controller present) Cable VDO2 (returned for Product Type “Active Cable”) B2…0 0 Maximum Operating Temperature Shutdown Temperature B31…24 70 Reserved B23…16 80 U3/CLd Power B15 0 U3 to U0 transition mode B14…12 010b (1-5mW) Physical connection B11 00b (U3 to U0 direct) Active element B10 0 (Copper) USB4 Supported B9 0 (Active Re-driver) USB 2.0 Hub Hops Consumed B8 0 (USB4 Supported) B7…6 USB 2.0 Supported [USB 2.02] B5 USB 3.2 Supported [USB0 (3.2] supported) USB Lanes Supported B4 0 ( SuperSpeed supported) Optically Isolated Active Cable B3 1b (Two lanes) USB4 Asymmetric Mode Supported B2 0 (Not supported) USB Gen B1 0 (Not Supported) B0 1b (Gen 2 or higher) C.1.3 Discover Identity Command response - Hub. TableC.3, \"Discover Identity Command response from Hub Responder Example\" Message Header VDM Header Responder Discover SVIDsCommand Responder Hub shows the contents of the key fields in the and for a returning VDOs in response to a request. In thisT iallbulsetrCa.t3io nD,i tshceo ver Identi tiys aC omm. and response from Hub Responder Example Bit(s) Field Value Message Header Reserved Product VDO 14…12 4 ( + + + MessageID ) Port Power Role 11…9 0…7 Specification Revision Revision 3.x Reserved 7…6 10b ( ) 5…4 Message Type Vendor D0efined Message VDM Header 3…0 1111b ( ) Standard or Vendor ID (SVID) PD SID B31…16 VDM Type 0xSFtrFu0c0tu (red VDM) Structured VDM Version (Major) B15 1 ( ) Structured VDM Version (Minor) B14…13 01b (Version 2.0) Object Position B12…11 01b (Version 2.1) B10…8 Command Type Res0p0o0nbderACK Reserved B7…6 01b ( ) B5 Command Discove0r Identity ID Header VDO B4…0 2 ( ) USB Communications Capable as USB Host USB Communication USB Host USB Communications Capable as a USB Device B31 0 (not s capable as a ) B30 SOP’ Product Type (Cable Plug/VPD) 1 (data capableH ausb a Device) Modal Operation Supported B29…27 001b ( ) Reserved Shall B26 0 (doesn’t support Modes) B25…16. be set toU zSeBro V.endor ID VID0 Hub Cert Stat VDO B15…0 16-bit unsigned integer. USB-IF assigned for this vendor Hub Product VDO B31…0 32-bit unsigned integer USB-IF assigned XID for this Hub B31…16 16-bit unsigned integer. USB Product ID Product ID assigned by the Hu vbendor B15…0 16-bit unsigned integer. bcdDevice Device version assigned by the vendor C.2 Discover SVIDs Example C.2.1 Discover SVIDs Command request TableC.4, \"Discover SVIDs Command request from Initiator Example\" Message Header VDM Header Initiator Discover SVIDsCommand below shows the contents of the key fields in the aTnadb leC.4 Disco vfoerr aSnV IDs Com smenadnidn gr eaq uest from Initi ator Exam rpelqeuest. Bit(s) Field Value Message Header Reserved MessageID 14…12 1 ( ) Port Power Role 11…9 0…7 Specification Revision Revision 3.x Reserved 7…6 10b ( ) 5…4 Message Type Vendor D0efined Message VDM Header 3…0 1111b ( ) Standard or Vendor ID (SVID) PD SID B31…16 VDM Type 0xSFtrFu0c0tu (red VDM) Structured VDM Version (Major) B15 1 ( ) Structured VDM Version (Minor) B14…13 01b (Version 2.0) Object Position B12…11 01b (Version 2.1) B10…8 Command Type 0I0n0itbiator Reserved B7…6 00b ( ) B5 Command Discov0er SVIDs B4…0 2 ( ) C.2.2 Discover SVIDs Command response TableC.5, \"Discover SVIDs Command response from Responder Example\" Message Header VDM Header Responder Discover SVIDsCommand Number o fs Dhoawtas O thbeje ccotnstents of the key fields in the and for a returning VDOs in response to a request. In this illustration, the value 3 in the Message Header field indicates that one VDO cNoonttea:ining the supported SVIDs would be returned followed by a terminating VDO. The last VDO returned (the terminator of the transmission) contains zero value SVIDs. If a SVID value is zero, it isT naobtl eusCe.5d. Discover SVIDs Command response from Responder Example Bit(s) Field Value Message Header Reserved MessageID 14…12 3 ( + 2*VDO) Port Power Role 11…9 0…7 Specification Revision Revision 3.x Reserved 7…6 10b ( ) 5…4 Message Type Vendor D0efined Message VDM Header 3…0 1111b ( ) Standard or Vendor ID (SVID) PD SID B31…16 VDM Type 0xSFtrFu0c0tu (red VDM) Structured VDM Version (Major) B15 1 ( ) Structured VDM Version (Minor) B14…13 01b (Version 2.0) Object Position B12…11 01b (Version 2.1) B10…8 Command Type Res0p0o0nbderACK Reserved B7…6 01b ( ) B5 Command Discov0er SVIDs VDO 1 B4…0 2 ( ) B31…16 SVID 0 SVID value VDO 2 B15…0 SVID 1 SVID value B31…16 SVID 2 0x0000 B15…0 SVID 3 0x0000 C.3 Discover Modes Example C.3.1 Discover Modes Command request TableC.6, \"Discover Modes Command request from Initiator Example\" Message Header VDM Header Initiator Discover ModesCommand Initiator Discover ModesCommandAMS Nu smhboewrs o tfh De actoan tOebnjtesc otsf the key fields in the VDM Heade rand Comma fnord aTny pe sending a Command request. ThIen itiator of the Command sends a Message Header with the field set to 1 followed by a with the (B7…6) set to zero indicating the is from an and the (B4…0) iTs asebtl etoC 3.6 i n Ddiisccaotivnegr M Moodde edsi sCcoomvemrya.nd request from Initiator Example Bit(s) Field Value Message Header Reserved MessageID 14…12 1 ( ) Port Power Role 11…9 0…7 Specification Revision Revision 3.x Reserved 7…6 10b ( ) 5…4 Message Type Vendor D0efined Message VDM Header 3…0 1111b ( ) Standard or Vendor ID (SVID) B31…16 VDM Type SVID for whichS tMruocdteusr eadre V bDeMing requested Structured VDM Version (Major) B15 1 ( ) Structured VDM Version (Minor) B14…13 01b (Version 2.0) Object Position B12…11 01b (Version 2.1) B10…8 Command Type 0I0n0itbiator Reserved B7…6 00b ( ) B5 Command Discov0er Modes B4…0 3 ( ) C.3.2 Discover Modes Command response Responder Discover ModesCommand Number of Data Objects VDM THheae der toC tohme mand Type request returnsC oam Mmesasnadge Header Rweistpho tnhdee r Command field set to a value of 1 to 7 (the actual value is the number of Mode objects plus one) followedV IbDy a with the (B7…6) set to 1 indicating the is from a and the (B4…0) set to 3 indicating the following objects describe the Modes the device supports. If the ID is a, the structure and content of the VDO is left to the vendor. If the ID is a SID, the structure and content of the VDO is dTeafbinleeCd. 7b,y \" Dthisec Sotvaenr dMaordde. s Command response from Responder Example\" Message Header VDM Header Responder Discover ModesCommand Number oshf oDwatsa t hOeb cjoencttsents of the key fields in the and for a returning VDOs in response toR ae sponder request. In this illustration, the value 2 in the Message Header field indicates that the device is returning one VDO describing the Mode it supports. It is possible for a to report up to six different Modes. TableC.7 Discover Modes Command response from Responder Example Bit(s) Field Value Message Header Reserved MessageID 14…12 2 ( + 1 Mode VDO) Port Power Role 11…9 0…7 Specification Revision Revision 3.x Reserved 7…6 10b ( ) 5…4 Message Type Vendor D0efined Message VDM Header 3…0 1111b ( ) Standard or Vendor ID (SVID) B31…16 VDM Type SVID for whiScthr uMctoudreesd w VeDrMe requested Structured VDM Version (Major) B15 1 ( ) Structured VDM Version (Minor) B14…13 01b (Version 2.0) Object Position B12…11 01b (Version 2.1) B10…8 Command Type Res0p0o0nbderACK Reserved B7…6 01b ( ) B5 Command Discov0er Modes Mode VDO B4…0 3 ( ) B31…0 Mode 1 Standard or Vendor defined Mode value C.4 Enter Mode Example C.4.1 Enter Mode Command request Initiator Enter ModeCommand Number of Data Objects VDM Header Command Type Command TInhitei ator of thCeo mmand request sends a MReesspsaogned eHreader with the field set to 1 followed by a with the (B7…6) set to 0 indicating the is from an and the (B4…0) set to 4 to request the to enter its mode of operation and sets the OTabbjelectC P.8o, s\"iEtinotne rf iMelodd teo Ctohme dmeasnirde rde fquunecstti ofrnoaml VInDiOti abtaosre Edx oanm iptsle o\"ffset as received during Discovery. Message Header VDM Header Initiator Enter ModeCommand shows the contents of the key fields in the and TableC.8 Efonrt earn Mode Co msemndainngd arne quest from I nitiator E xreaqmupeslet. Bit(s) Field Value Message Header Reserved MessageID 14…12 1 ( ) Port Power Role 11…9 0…7 Specification Revision Revision 3.x Reserved 7…6 10b ( ) 5…4 Message Type Vendor D0efined Message VDM Header 3…0 1111b ( ) Standard or Vendor ID (SVID) B31…16 VDM Type SVID for tShter uMcotudree db eViDngM entered Structured VDM Version (Major) B15 1 ( ) Structured VDM Version (Minor) B14…13 01b (Version 2.0) B12…11 Object Position 01b (Version 2.1) Discover Modes B10…8 001b (a one in this field indicates a request to enter Command Type the first Mode in list retIunrintieadto bry ) Reserved B7…6 00b ( ) B5 Command Ente0r Mode B4…0 4 ( ) C.4.2 Enter Mode Command response Responder Enter ModeCommand Number of Data Objects VDM Header Command Type TheC ommand that is thRee tsaprognedt eorf the Comma nd request sends a MessagRe eHsepaodnedre rwith the field set to a value of 1 followed by a with the (B7…6) set to 1 indicating the is from a and the (B4…0) set to 4 indicating the has entered the MTaobdlee Ca.n9d, \"iEs nrteeard My otod eo pCoermamtea.nd response from Responder Example\" Message Header VDM Header Responder Enter ModeCommand ACK shows the contents of the key fields in the andT ableC.9 En ftoerr aM ode Comm seannddi nrge sapno nse from R esponder Erexsapmonpslee with an. Bit(s) Field Value Message Header Reserved MessageID 14…12 1 ( ) Port Power Role 11…9 0…7 Specification Revision Revision 3.x Reserved 7…6 10b ( ) 5…4 Message Type Vendor D0efined Message VDM Header 3…0 1111b ( ) Standard or Vendor ID (SVID) B31…16 VDM Type SVID foSrtr tuhcet uMreodd eV DenMtered Structured VDM Version (Major) B15 1 ( ) Structured VDM Version (Minor) B14…13 01b (Version 2.0) Object Position B12…11 01b (Version 2.1) B10…8 Command Type 001b (offsetR oefs pthoen dMeordAeC Kentered) Reserved B7…6 01b ( ) B5 Command Ente0r Mode B4…0 4 ( ) C.4.3 Enter Mode Command request with additional VDO. Initiator Enter ModeCommand Number of Data Objects VDM Header Command Type The ofC tohme mand Initiato rrequest senCdosm am Maensdsage Header with the Responder field set to 2 indicating an additional VDO followed by a with the (B7…6) set to zero indicating the is from an and the (B4…0) set to 4 to request the to enter its mode of operation and sets the Object Position field to the desired functional VDO based on its offset as received dTuarbilnegC D.1i0s,c \"oEvnetreyr. Mode Command request with additional VDO Example\" Message Header VDM Header Initiator Enter ModeCommand shows the contents of the key fields in the anTda bleC.10 En ftoerr aMno de Com smenadnidn gr eaqnu est with ad ditional V rDeOqu Eexsat mwipthle an additional VDO. Bit(s) Field Value Message Header Reserved MessageID 14…12 1 ( ) Port Power Role 11…9 0…7 Specification Revision Revision 3.x Reserved 7…6 10b ( ) 5…4 Message Type Vendor D0efined Message VDM Header 3…0 1111b ( ) Standard or Vendor ID (SVID) B31…16 VDM Type SVID for tShter uMcotudree db eViDngM entered Structured VDM Version (Major) B15 1 ( ) Structured VDM Version (Minor) B14…13 01b (Version 2.0) B12…11 Object Position 01b (Version 2.1) Discover Modes B10…8 001b (a one in this field indicates a request to enter Command Type the first Mode in list retIunrintieadto bry ) Reserved B7…6 00b ( ) B5 Command Ente0r Mode B4…0 Optional 4 ( ) Including Mode specific VDO B31…0 Mode specific C.5 Exit Mode Example C.5.1 Exit Mode Command request Initiator Exit ModeCommand Number of Data Objects VDM Header Command Type Command TInhitei ator of thCeo mmand request sends a MResessapgoen dHeerader with the field set to 1 followed by a with the (B7…6) set to zero indicating the is from an TableC.1 a1n, \"dE txhite M ode Comm (aBn4d… re0q)u seestt t foro 5m t oIn rietiqautoesr tE txhaem ple\" to exit its Mode of operation. Message Header VDM Header Initiator Exit ModeCommand shows the contents of the key fields in the and Ta fbolre aCn. 11 Exit M seonddei nCgo amnm and requ est from I rneiqtiuaetsotr. Example Bit(s) Field Value Message Header Reserved MessageID 14…12 1 ( ) Port Power Role 11…9 0…7 Specification Revision Revision 3.x Reserved 7…6 10b ( ) 5…4 Message Type Vendor D0efined Message VDM Header 3…0 1111b ( ) Standard or Vendor ID (SVID) B31…16 VDM Type SVID for Sthtreu Mctuordeed b VeDinMg exited Structured VDM Version (Major) B15 1 ( ) Structured VDM Version (Minor) B14…13 01b (Version 2.0) B12…11 Object Position 01b (Version 2.1) B10…8 001b (identifies the previously entered Mode by its Command Type Object Position Itnhiattia isto tro be exited) Reserved B7…6 00b ( ) B5 Command Exit0 Mode B4…0 5 ( ) C.5.2 Exit Mode Command response Responder Exit ModeCommand Number of Data Objects VDM Header Command Type TCohme mand that Rreescpeoivnedse rthe Comm and request sends a Message RHeesapdoenrd werith the field set to a value of 1 followed by a with the (B7…6) set to 1 indicating the is from a and the (B4…0) set to 5 indicating the has exited the Mode and hTaasb lreeCtu.1r2n,e \"dE txoit nMoordmea Cl oUmSBm oapnedr raetsiopnon.se from Responder Example\" Message Header VDM Header Responder Exit ModeCommandACK shows the contents of the key fields in the and TableC.12 E fxoirt aM ode Comm seannddi nrge sapno nse from Responde r Exa rmespploense. Bit(s) Field Value Message Header Reserved MessageID 14…12 1 ( ) Port Power Role 11…9 0…7 Specification Revision Revision 3.x Reserved 7…6 10b ( ) 5…4 Message Type Vendor D0efined Message VDM Header 3…0 1111b ( ) Standard or Vendor ID (SVID) B31…16 VDM Type SVID fSotrr utchteu Mreodd VeD eMxited Structured VDM Version (Major) B15 1 ( ) Structured VDM Version (Minor) B14…13 01b (Version 2.0) Object Position B12…11 01b (Version 2.1) B10…8 Command Type 001b (offset oRf etshpeo MndoedreA tCoK be exited) Reserved B7…6 01b ( ) B5 Command Exit0 Mode B4…0 5 ( ) C.6 Attention Example C.6.1 Attention Command request Initiator AttentionCommand Number of Data Objects VDM Header Command Type Command TInhitei ator of thCeo mmand request sends a Message Header wReitshp othned er field set to 1 followed by a with the (B7…6) set to zero indicating the is from an TableC.1 a3n, \"dA tthteen tion Comm a(Bnd4 …re0q)u seestt tforo 6m t oIn riteiqautoers tE axtatmenptlieo\"n from the. Message Header VDM Header Initiator AttentionCommand shows the contents of the key fields in the and Ta fbolre aCn. 13 Atten steinodni nCgo manm and requ est from I rneiqtiuaetsotr. Example Bit(s) Field Value Message Header Reserved MessageID 14…12 1 ( ) Port Power Role 11…9 0…7 Specification Revision Revision 3.x Reserved 7…6 10b ( ) 5…4 Message Type Vendor D0efined Message VDM Header 3…0 1111b ( ) Standard or Vendor ID (SVID) B31…16 VDM Type SVID for whichS attrtuecnttuiroend i sV DbeMing requested Structured VDM Version (Major) B15 1 ( ) Structured VDM Version (Minor) B14…13 01b (Version 2.0) Object Position B12…11 01b (Version 2.1) B10…8 Command Type 001b (offset of the MoIndiet iraetqouresting attention) Reserved B7…6 00b ( ) B5 Command Atte0ntion B4…0 6 ( ) C.6.2 Attention Command request with additional VDO. Initiator AttentionCommand Number of Data Objects VDM Header Command Type The oCf othmem and Respo nrdeeqruest sendCso am Mmeassnadge Header with the field sReets ptoo n2d ienrdicating an additional VDO followed by a with the (B7…6) set to zero indicating the is from a and the (B4…0) set to 6 to request attention from the TableC.14,. \"Attention Command request from Initiator with additional VDO Example\" Message Header VDM Header Initiator AttentionCommand shows the contents of the key fields in the and for an sending an request with an additional VTDaOb.leC.14 Attention Command request from Initiator with additional VDO Example Bit(s) Field Value Message Header Reserved MessageID 14…12 2 ( + VDO) Port Power Role 11…9 0…7 Specification Revision Revision 3.x Reserved 7…6 10b ( ) 5…4 Message Type Vendor D0efined Message VDM Header 3…0 1111b ( ) Standard or Vendor ID (SVID) B31…16 VDM Type SVID for whichS attrtuecnttuiroend i sV DbeMing requested Structured VDM Version (Major) B15 1 ( ) Structured VDM Version (Minor) B14…13 01b (Version 2.0) Object Position B12…11 01b (Version 2.1) B10…8 Command Type 001b (offset of the MoIdnei triaeqtouresting attention) Reserved B7…6 000b ( ) B5 Command Atte0ntion Including Optional Mode specific VDO B4…0 6 ( ) B31…0 Mode specific D BMC Receiver Design Examples BMC IR Drop BMC Sink VBUS TheB MC signal is DC-coupled so that the voltage leveSl iinsk affected by the ground. The DC offset of the signal at Power Source aBnMdC Power are in the opposite directions. When the current is increased from 0A, the signal waveform shifts downward at Power Sink and shifts upward at Power Source. This section introduces two sample receiver circuit implementations, which are immune from DC offset and high current Dloa.d1 step. The y F cainn biet uese Dd iinf Pfoewreer Snoucrece,S Pcowheer me and inside cables. D.1.1 Sample Circuitry BMC Figure D.1, \"Circuit Block of BMC Finite Difference Receiver\" tRxFilter The sample Finite Difference receiver shown in consists of the Rx bandwidth limiting filter with the time constant, a sampler with the sampling step ΔtS, 50ns, a Finite Difference Calculator which calculates the voltage difference between the time interval of ΔtFD, 300ns, an edge detector controlled by two voltage thresholds, Vth, H and Vth, L and a logic block for bit recognition. Figure D.1 Circuit Block of BMC Finite Difference Receiver D.1.2 Theory BMC Figure D.1, \"Circuit Block of BMC Finite TDhififse rseencctieo Rne dceesivcerrib\"es the fundamental theory of Finite Difference Scheme toV r Be Uc Sover the received signal with the input and output signal waveforms Soinf kthe circuiFt ibgluorcek sD s.2h, o\"wBMn Cin A C and DC noise from VBUS at Power Sink\". To illustrVa Bt Ue S the robustness of the implementSaitnikon, the current load step rate is intentionally increased to 2A/µs at the loadV. I Bn U S USB Type-C (a), Sthinek red curve represents the current measured at the Power when the current i ®s increased at 9 µs from 0iOAv teor 5shAo aontdF tihgeu brelu De. 2d,a \"sBhM cuC rAvCe arenpdr DeCse nnotiss eth freo m VB c Uu Sr arte Pnot wmeera Ssiunrke\"d at the BcMoCnnector of the poSwinekr. In this exVa Bm Up Sle, the peak current overshoot[ UwSiBth T layrpgee-rC l2o.a4d] step rate is increased to 518 mA which exceeds. tRxFilter (b) shows the total noise at Power, coupled from and D+/D- through the woVr Bs Ut S compliant cable, after the Rx bandwidth limiting filter with the time constanSt ink is applied. The noise can be decomposed into 3 components. The firstV is B Uth Se DC offset, IVBUS(t)*RGND, while IVBUS is the current and RGND is Vth Be U SgrounCdC DC resistance of the cable. The offset is negative in Power and positive at P[oUwSBer 2 S.0ou]rce. The second noise component is the inductive noise, M*d IVBUS(t)/dt, while M is the mutual inductance between the and wires in the cable and d IVBUS(t)/ dt is the load BsMteCp rate[.U TShBe 2th.0ir]d componenFitg ius re D.3, \"Sa mFupllle SBpMeeCd S SigEn0a clso (uap)l iwnigt hnoouist eU wSBh i2c.h0 wSEo0u lNdo nisoer (mba) lwlyi th oUcScBu 2r.r0a SnEd0o mNolyis be\"ut was assumed to occur periodicallyB iMn Cthe simulation to accountV f Bo Ur S the crosstalk in any phase between the andB MC signals. In VBUS Figure D.2, \"BMC AC and DC noise from VBUS at Power Sink,\" the blue dash curve represents the s[iUgSnBal 2 w.0h]en there is no current, and the red solid curve represents the tR sxiFginltaelr affected by the coupling noise shown in (b). The green solid curve is the sample noise, after the Rx bandwidth limiting filter with the time constant is applied. Figure D.2 BMC AC and DC noise from VBUS at Power Sink Figure D.3 Sample BMC Signals (a) without USB 2.0 SE0 Noise (b) with USB 2.0 SE0 Noise BMC Figure D.3, \"Sample BMC Signals (a) without USB 2.0 SE0 Noise (b) with USB 2.0 SE0 Noise\" [USB 2.0] The signals shoFwignu irne D.4, \"Scaled BMC Signal Derivative with 50ns Sampling Rate (a) without USB 2.0 Noise (b) awrieth s aUmSBp l2e.d0 eNvoeirsey\" 50ns and the scaled derivativFeig wuraev eDf.o4r, m\"Ssc,a Vlecdc( Bt)M -C V Scicg (nta -l 5D0enrisv)a, wtiviteh wouitth a 5n0dn ws Sitahm pling Rat e n(ao)i swei athroe usth UowSBn 2 in.0 Noise (b) with USB 2.0 Noise\" [USB 2.0] (a) and (b), respeVct Bi Uv Sely. In BMC (a), if there is no noise, the derivative waveform just changes slightly before and afte[rU tShBe 2.0] current transition. That means, the slope Foifg tuhree D.4, w\"Sacvaelefodr BmM iCs Sniogtn al sDeenrsivitaitviev eto w tihteh D50Cn osf fSsaemt apnlidn gis Rvaetrey (uas)e wfuilt htoo bute UuSseBd 2 t.o0 dNeosiisgen ( ab )r owbituhs tU rSeBc e2i.v0e Nr oagisaei\"nst a large DC offset. However, the derivative waveforms with noise have large perturbation as shown in (b). Figure D.4 Scaled BMC Signal Derivative with 50ns Sampling Rate (a) without USB 2.0 Noise (b) with USB [USB 2.0] BMC [USB 2.0] Figure D.3, \"Sample BMC Signals (a) without USB T2.o0 rSeEm0 oNvoei steh e(b h)i gwhit fhr eUqSuBe 2n.c0y S cEo0n tNeonits eo\"f the noise, Finite Difference technique with the proper time iFnigteurrvea Dl i.5s,a \"pBpMliCe dS itgon tahle a nd F iwniatve eDfoifrfemre wnciteh O utput wit hn oViasrei oinu s Time Steps\". Using Backward Finite Difference Calculator, ΔVcc = Vcc (t) - Vcc(t- Δt), BsMhoCws the Finite Difference Output while Δt = 500ns. The larger the time interval Δt is, the larger the peak-to-peak magnitude of the Finite Difference Output will be. However, the time interval is bounded by the rise time of the signal so that 300ns to 500ns is a good range of tFhige utirme eD i.n5t eBrMvaCl.Signal and Finite Difference Output with Various Time Steps D.1.3 Data Recovery The edge detection is followed by the Finite Difference Calculation. At the input of the edge detector, if the voltage is larger than Vth, H at the rising edge, Fthigeu orue tDp.u6t, \"wOiullt bpeuct oomf Fei nhiitgeh D vioffletraegnec lee ivne dl, aVsHh, liifn teh aen vdo Eltdaggee Dise stmecatollre rin t hsoalnid Vlinthe, \"L at the falling edge, the output will become low voltage level, VL. In this example, Vth, H and Vth, L are 0.2V and -0.2V, respectively. The solid curve in represents the output of the edge detector, where VH is 0.5V and VL is -0.5V. Figure D.6 Output of Finite Difference in dash line and Edge Detector in solid line TheB dMuCty cycle of the output signal from the edge detector varies depending on the thresholds, Vth, H and Vth, L, as well as jitter and noise from silicon and channel. The techniques such as integrating receiver can be used to recover Dthe.1.4 signal. Noise Zone and Detection Zone Figure D.7, \"Noise Zone and Detect Zone of BMC Receiver\" shows the output of Finite Difference when the time interval of Finite Difference is set to 300ns. The noise Zone is defined in between +Vnoise and -Vnoise, in which the noise glitches occur. The detect zone is defined in between +Vdetect and -Vdetect, excluding the noise zone. The thresholds of the edge detectors, Vth, H and Vth, L, must be properly set within the detect zone so that the data can be recovered successfully. In this example, Vdetect is 250mV and Vnoise is 50mV. It is highly recommended that the product implemented with the similar techniques indicates the performance with the range of Vnoise and Vdetect in the electrical specification. Figure D.7 Noise Zone and Detect Zone of BMC Receiver D.2 Subtraction Scheme D.2.1 Sample Circuitry BMC Figure D.8, \"Circuit Block of BMC Subtraction Receiver\" The sample Subtraction receiver shown in consists of the two Low Pass Filters (LPF1 and LPF2), a Subtractor, an Edge Detector and a logic block for bit recognition. The time constant of the first and second LPF are 200ns and 300ns, respectively. The Subtractor subtracts the LPF1 output from the LPF2 output. The Edge Detector controlled by two voltage thresholds, Vth, H and Vth, L to recover the data. Figure D.8 Circuit Block of BMC Subtraction Receiver D.2.2 Output of Each Circuit Block Figure D.9, \"(a) Output of LPF1 and LPF2 (b) Subtraction of LPF1 and LPF2 Output\" [USB 2.0] Figure D.9, \"(a) Output of LPF1 and LPF2 (b) Subtraction of LPF1 and LPF2 Output\" (a) shows the output of LPF1 as the red solid line and LPF2 as the blue dash line as well as the noise in green solid line. Figure D.6, \"Output of Finite D (ibff)e srhenocwes i nth dea vsho lltiangee a dnidf fEedregne cDee bteecttwoere inn stohleid ltiwneo\" output filters, Vdiff = Vcc_afterLPF1 - Vcc_afterLPF2. The Vdiff waveform looks very simiSlaerc ttioo nth De. 1F.i3n,i \"teD ata RDeifcfoevreernyc\"e output waveform shown in so that the data recovery method through the edge detector is the same as described in. Figure D.9 (a) Output of LPF1 and LPF2 (b) Subtraction of LPF1 and LPF2 Output D.2.3 Subtractor Output at Power Source and Power Sink VBUS Sink FTihgeu froel Dlo.w10in, \"gO fuigtpuuret so fs hthoew BsM thCe L ePxFa1m inp lbel uweh deans hth ceu rve a cnudr trheen St uinbctrraeactsoers ifnr ormed 0soAl itdo c5uAr vaen (da t)h aetn P doewcerre aSsoeusr ctoe (0bA) wati tPho whiegrh S lionakd\" step rate. The output of the LPF1 and tBhMe CSubtractor at Power Source and PowSeirn k are shown in Sink (a) and (b), respectively. Although the signals at Power Source and Power shift toward the opposite direction, the Subtractor outputs at Power Source and Power are almost identical disregard of the opposite direction of the DC offset. Figure D.10 Output of the BMC LPF1 in blue dash curve and the Subtractor in red solid curve (a) at Power Source (b) at Power Sink D.2.4 Noise Zone and Detection Zone Section D.1.4, \"Noise Zone and Detection Zone\" The zone definition is the same as defined in. The sizes of the noise zone and detection zone of the Subtraction Scheme are dependent on the filter time constant. When the time constant of the first and second LPF are 200ns and 300ns, respectively, Vdetect is 250mV and Vnoise is 50mV. It is highly recommended that the product implemented with the similar techniques indicates the performance with the range of Vnoise and Vdetect in the electrical specification. E FRS System Level Example E.1 Overview Appendix E, \"FRS System Level Example\" Fast Role Swap FRS is intended to clarify ( ) functionality at the system level tFhigrouureg hE.1th, e\"E uxsaem opf laen F RexSa Cmappaleb liem Spylsetmemen\"tation. Hub Fast Role Swap Figure 7.16, \"VBUS Power during Fast Role Swap\" Hub is an example of a and laptop implementation that supports Fast Role Swap (see ). It is not the only possible or laptop architecture. However, it is intended to provide an example system whose functionality is used here to illustrate how works. Figure E.1 Example FRS Capable System Notebook Hub (cid:87)(cid:381)(cid:396)(cid:410)(cid:3)(cid:1005)(cid:3) (cid:87)(cid:381)(cid:396)(cid:410)(cid:3)(cid:1006)(cid:3) Power (cid:18)(cid:381)(cid:374)(cid:410)(cid:396)(cid:381)(cid:367)(cid:367)(cid:286)(cid:396) (cid:18)(cid:18) (cid:18)(cid:18) (cid:18)(cid:381)(cid:374)(cid:410)(cid:396)(cid:381)(cid:367)(cid:367)(cid:286)(cid:396) Adapter (cid:24)(cid:18)(cid:24)(cid:18) VHubVB H4 V1 B V2 B (cid:18)(cid:346)(cid:258)(cid:396)(cid:336)(cid:286)(cid:396) (cid:4)(cid:18) F F (cid:69)(cid:1006) (cid:1095)(cid:3)(cid:3)(cid:1013)(cid:1004)(cid:3)F (cid:44)(cid:1005) H3 (cid:44)(cid:1006) (cid:1095)(cid:3)(cid:3)(cid:1005)(cid:1004)(cid:3)F (cid:282)(cid:286)(cid:410)(cid:286)(cid:272)(cid:410) (cid:373)(cid:381)(cid:374)(cid:349)(cid:410)(cid:381)(cid:396) FRS (cid:94) (cid:381) (cid:437) (cid:396) (cid:272) (cid:286) (cid:3) (cid:381) (cid:296) (cid:296) (cid:400)(cid:349)(cid:336)(cid:374)(cid:258)(cid:367) VNbVB (cid:1009)(cid:115)(cid:3)(cid:24)(cid:18) Peripheral (cid:346)(cid:381)(cid:367)(cid:282) (cid:410)(cid:349)(cid:373)(cid:286)(cid:396) N4 F H6 (cid:18)(cid:18) (cid:18)(cid:18) (cid:69)(cid:1005) N3 (cid:1095)(cid:3)(cid:3)(cid:1005)(cid:1004)(cid:3)F 3 4 (cid:1009)(cid:115)(cid:3)(cid:24)(cid:18) (cid:17)(cid:258)(cid:410)(cid:410)(cid:286)(cid:396)(cid:455) VB VB F (cid:1095)(cid:3)(cid:3)(cid:1005)(cid:1004)(cid:3)F (cid:282)(cid:286)(cid:410)(cid:286)(cid:272)(cid:410) (cid:373)(cid:381)(cid:374)(cid:349)(cid:410)(cid:381)(cid:396) FRS (cid:94)(cid:349)(cid:374)(cid:364)(cid:3)(cid:381)(cid:296)(cid:296) (cid:94)(cid:381)(cid:437)(cid:396)(cid:272)(cid:286)(cid:3)(cid:381)(cid:374) H5 (cid:44)(cid:381)(cid:367)(cid:282)(cid:882)(cid:104)(cid:393)(cid:3)(cid:18)(cid:258)(cid:393)(cid:3)(cid:3)(cid:3)(cid:3) This- appendixV BdUeSscribes two cases tVhBaUt Scover a varietHy uobf behaviors that might be seen in practicteF.R SwapInit vSafe5V FR_SwapMessage SVl Bo Uw S Discharge whevrSea fe5V between theF igur ae nEd.2 t,h \"eS lloawpt oVp BU t Sa kDeissc mhaorrgee t\"han 15ms ( ) to discharge below 5.5 V ( (max)). In this case the is sent by the laptop while - VisB UstSill greater than VBUS (max). See Hub. Fast Role Swap Request Figure E.3, \"Fast VBUS Discharge\" Fast Discharge where between the and the laptop discharges very quickly, perhaps before the Hub is even complete. See VBUS. AC Supply Hub However, neither the nor the laptop can anticipate how quickly will discharge until the power adapter is discoFnanste Rctoelde Sfrwoamp aRne quest or it is unplugged from the H.ub CC TFihgeu re E.2, \"Slow VBUS Disch iasr tghee\" momFeignutarrey E l.o3w, \" Fdarisvte VnB bUyS Dthisec harg oen\" the wire which is detectVeBdU bSy the laptop. Fast Role Swap Request Hub VBUS and VBUS show the voltage seen on in relationship to the They also show the transition between when the stops supplying and when the laptop starts supplying. Figure E.2 Slow VBUS Discharge VBUS voltage when it discharges slowly (assume very small cable IR drop prior to FR swap) H1 OOld Source detects power loss and Old Voltage VBUSat Hub& signals Fast Role Swap Notebook New Source may turn on at any time (cid:1091) after VBUSfalls below vSafe5V(max) vSafe5V(max) VBUSat Notebook vSafe5V(min) Cable IR VBUSat drop tFRSwapTx Hub CC 0V N1 tSrcFRSwap H2 N3 N4 Current from Notebook to Hub tSnkFRSwap +3A N2 <iSnkStdby 0A In this example the Notebook is drawing little current prior to the FRS signaling. In other cases it may be drawing more current. Figure E.3 Fast VBUS Discharge VBUS voltage when it discharges quickly vSafe5V(max) N4 VBUSat Hub Cable IR vSafe5V(min) Cable IR drop drop Old Voltage VBUSat Notebook tFRSwapRx CC 0V Old Source sends Fast H2 tSrcFRSwap Role Swap signal N1 Current from Notebook to Hub tSnkFRSwap +3A <iSnkStdby N2 0A -5A In this example the Notebook is drawing 5A prior to the FRS signaling. In other cases it may be drawing less current. E.2 FRS Initial Setup Fast Role Swap Fast Role Swap Hub Hub Fast Role Swap Before a can occur, some initial setup steps are required. They require the laptop to discoveVr CONN whether is sFuRpSpoTratbelde bEy.1 t, h\"See quen, tchee f oarm soetuunpt ooff ac uFrarsetn Rto tlhee S wap r(Hequubi rceosn naeftcetre da to Power Adapte, r fainrsdt )w\"hethTera bthlee Ela.2p,t \"oSpe qisu aebnlcee afonrd s wetiullpin ogf tao F parsot vRiodlee tShwaat pa m(Houubn ct.o Tnhneeyct aelds oto e lnasputroep tbheafto trhee P loawpetor pA sduappptelire)s\" before, during and after an. Fast Role Swap and below show twoT taybpliecaEl. 1se qSueqenuceensc teh afot rm siegthut pb eo fu ase Fda tsot pRroelpea Srwe aa pla (pHtoupb tcoo snunpepcotretd to Power Ada.pter first) Step # Hub Laptop Hub Laptop sources 5 V to Active Cable VCONN carrying capability and/or if it is an requiring C.apabilitiesMessage Hub Hub Source_CapabilitiesMessage determine how much power the can provide. Dual-Role Power Unconstrained Power Maximum Current bit set, and bit set, and > 0. Hub PR_SwapMessage Hub AcceptMessage VBUS Get_Sink_CapMessage Hub FRS Hub FRS determine the current required by the to support an. If the does not support or Ignores Fast Role Swap Request the laptop cannot supply the required current, the laptop any s it Hub might see. VCONN Swap VCONN Source to make to make itself the and reads the cable to check its current carrying cHaupbability. Sink_CapabilitiesMessage TableE.1 Sequence for setup of a Fast Role Swap (Hub connected to Power Adapter first) Step # Hub Laptop Active Cable Alternate Mode FRS an (or one that supports VCONN Swap VCONN s) and/or that it can support an, it Source Hub initiates a to make itself the VCONN FRS. This removes a requirement that the to hold up during the. TableE.2 Sequence for setup of a Fast Role Swap (Hub connected to laptop before Power Adapter) Step # Hub Laptop Hub Laptop sources 5 V to Active Cable VCONN capability and/or if it is an requiring. Source_CapabilitiesMessage Hub Hub Source_CapabilitiesMessage determine how much power the can provide Dual-Role Power Unconstrained Power Maximum Current bit set, and bit cleared, and = 0. Hub PR_SwapMessage Hub not send a Swap VCONN Source Hub to become the. cHuurbrent carryinPgo cwaepra bRioliltey S.wap Source Unconstrained Power bit set and Maximum Current > 0H.ub Explicit Contract Hub Hub FRS Hub FRS the current required by the to support an. If Ignores the does not support or the laptop cannot Fast Role Swap Request supply the required current, the laptop any s it might see. TableE.2 Sequence for setup of a Fast Role Swap (Hub connected to laptop before Power Adapter) Step # Hub Laptop Active Cable Alternate Mode FRS VCONN (or one that supports s) Swap VCONN Source and/or that it can support an, it initiates a Hub VCONN to make itself the. This removes FRS a requirement that the also hold up Hub Fast Role Swapduring the. E.3 FRS Process Hub FRS FRS After the initial setup is completed and the laptop has deteFramsti nReodle b Sowtha pthat the can request and that the laptop is able and willinDg etovi cseu pPpollyic tyh Me arenqaugeersted current, the system is ready to support. This section describes the sequence of events that take place during a. The following figures and tables do not cover the actions of the or the Policy Engine. Those actions occur orthogonally to the electrical events shown in this appendix. However, the diagrams do indicate the inputs/outputs where the DPM and- Policy Engine interact wiFthR _tShwe aelpecMtreiscsaalg eevents: FRSAMS Figure 7.43, \"Transition Diagram for Fast Role Swap\" Fast Role Swap Request CC The laptop sends the to initiate the (see - ) within 15PmSs_ RaDftYerM theses laagpetop deteFcRtSs AthMe S oVnB US. The laptop sendFsi tghuer fein Ea.4l Slow VB US disch ianr tghee a fter FR_ Sownlayp a mfteers ista igs es oisu rsceinntg. Hub: Notebook: H2 Send FRS Initiates FRS Hub: signal message sequence VBUS>vSafe5V (min) and sinking Signals to/ Hub: Notebook: Notebook: from DPM & H1 Adapter FRS signal N1 Sourcing 5V Policy Mains Loss detected Engine Detected Hub Power Path Source Waiting to Sink Sink Power Path Interaction Notebook Sink Wait to Source Turning on Source Source vSafe5V Power Path VBUSVoltage Adapter discharging to vSafe5V(max) Source N3 N4 New Source = vSafe5V V BUSVoltage VBUSCurrent Old Sink (old current) New Sink (0.5A, 0.9A, 1.5A, or 3.0A) Sink V Current BUS TableE.3 Sequence for slow VBUS discharge (it discharges after FR_Swap message is sent) Step # Hub Laptop AC Supply qHuuibckly as pFoassst iRbolel.e Swap Request CC Hub tSnkFRSwap starts monitoring VHubVB (H3). also starts a VBUS vSafe5V timer after the FRS signal begins and has fallen below (min). Fast Role Swap Request CC FR_SwapMessage that triggers sending of the. This tFRSwapInit can happen at any point in the following steps so long as it is within 15 ms ( ). Hub Fast Role Swap Request possible to minimize power drained from after the V.BUS Source to turn the laptop into a Hub. Fast Role Swap Request 5.5V (after the is sent). However, the sourcing switch (H4) must be kept Hub closed until VHubVB is as close to 5.5V as possible. It is important for the to open its sourcing switch (H4) before the laptop’s sourcing switch (N4) gets closed to mHuinbimize inrush current. VBUS capacitor to supply to the peripheral(s). Hub Systems with a holding cap permanently in place do iSnkStdby VBUS tSnkFRSwap not need the switch (H5). does not draw more than from, until the timer expires. VBUS VBUS sourcing switch (N4) when VNbVB is as close as possible to 5.5V. This minimizes the time when is not sourced. Hub VBUS  cSnkBulk occurs the ’s input capacitance on will be Hub tSnkFRSwap less than 10 F ( ). Role Swap required USB Type-C Current Sink_CapabilitiesMessage field of its Hub. Up capacitor. Figure E.5 VBUS discharges quickly before FR_Swap message is sent after adapter disconnected Hub: Start Fast H2 Hub: Signals to/ Swap Signal VBUS>vSafe5V from DPM & Hub: Hub: N FRo Ste sb igo no ak l: and sinking policy Adapter VBUS< detected Notebook: engine H1 Detached vSafe5V Sourcing 5V Detected (max) Source Port H4 Interaction Source Waiting to Sink Sink Sink Port Device Policy Mgr Sink Port N1 Interaction Sink Port Turning On Power Path Sink Source Source vSafe5V Source Port Adapter Voltage Source vSafe5V (max) N3 N4 New Source = vSafe5V V Voltage BUS Sink Port Old Sink Current New Sink (0.5A, 0.9A, 1.5A, or 3.0A) Sink N2 V Current BUS TableE.4 VBUS discharges quickly after adapter disconnected Step # Hub Laptop Detached Hub Hub Fast Role Swap Request CC VHubVB to drop below 5.5V very rapidly. Hub monitoring VHubVB (H3). opens sourcing switch (HHu4b). also starts a timer. VBUS capacitor to supply to the peripheral(s). Hub Systems with a holding cap permanently in place do iSnkStdby VBUS tSnkFRSwap not need the switch (H5). does not draw more than from, until the timer expires. Fast Role Swap Request CC FR_SwapMessage that triggers sending of the. This tFRSwapInit can happen at any point in the following steps so long as it is within 15 ms ( ). Hub Fast Role Swap Request possible to minimize power drained from after the V.BUS Source to turn the laptop into a. TableE.4 VBUS discharges quickly after adapter disconnected Step # Hub Laptop VBUS Hub VBUS  cSnkBulk occurs the ’s input capacitance on will be Hub tSnkFRSwap less than 10 F ( ). Role Swap required USB Type-C Current Sink_Capabilities Message field of its Hub. Up capacitor.", "tables": ["Table C.1", "Table C.2", "Table C.2", "Table C.3", "Table C.4", "Table C.5", "Table C.6", "Table C.1", "Table C.1", "Table C.14", "Table E.1", "Table E.2", "Table E.2", "Table E.3", "Table E.4", "Table E.4"], "figures": ["Figure D.1", "Figure D.2", "Figure D.3", "Figure D.4", "Figure D.6", "Figure D.7", "Figure D.9", "Figure D.6", "Figure D.10", "Figure E.2", "Figure E.3", "Figure E.5"], "page_range": [1013, 1047]}
